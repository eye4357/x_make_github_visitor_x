{
    "x_0_make_all_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/__main__.data.json",
            ".mypy_cache/3.13/__main__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_imp.data.json",
            ".mypy_cache/3.13/_imp.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_operator.data.json",
            ".mypy_cache/3.13/_operator.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_socket.data.json",
            ".mypy_cache/3.13/_socket.meta.json",
            ".mypy_cache/3.13/_ssl.data.json",
            ".mypy_cache/3.13/_ssl.meta.json",
            ".mypy_cache/3.13/_stat.data.json",
            ".mypy_cache/3.13/_stat.meta.json",
            ".mypy_cache/3.13/_struct.data.json",
            ".mypy_cache/3.13/_struct.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/datetime.data.json",
            ".mypy_cache/3.13/datetime.meta.json",
            ".mypy_cache/3.13/dis.data.json",
            ".mypy_cache/3.13/dis.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/feedparser.data.json",
            ".mypy_cache/3.13/email/feedparser.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/parser.data.json",
            ".mypy_cache/3.13/email/parser.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/errno.data.json",
            ".mypy_cache/3.13/errno.meta.json",
            ".mypy_cache/3.13/filecmp.data.json",
            ".mypy_cache/3.13/filecmp.meta.json",
            ".mypy_cache/3.13/functools.data.json",
            ".mypy_cache/3.13/functools.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/http/__init__.data.json",
            ".mypy_cache/3.13/http/__init__.meta.json",
            ".mypy_cache/3.13/http/client.data.json",
            ".mypy_cache/3.13/http/client.meta.json",
            ".mypy_cache/3.13/http/cookiejar.data.json",
            ".mypy_cache/3.13/http/cookiejar.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/importlib/util.data.json",
            ".mypy_cache/3.13/importlib/util.meta.json",
            ".mypy_cache/3.13/inspect.data.json",
            ".mypy_cache/3.13/inspect.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/itertools.data.json",
            ".mypy_cache/3.13/itertools.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/linecache.data.json",
            ".mypy_cache/3.13/linecache.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/nturl2path.data.json",
            ".mypy_cache/3.13/nturl2path.meta.json",
            ".mypy_cache/3.13/opcode.data.json",
            ".mypy_cache/3.13/opcode.meta.json",
            ".mypy_cache/3.13/operator.data.json",
            ".mypy_cache/3.13/operator.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/packaging/__init__.data.json",
            ".mypy_cache/3.13/packaging/__init__.meta.json",
            ".mypy_cache/3.13/packaging/_elffile.data.json",
            ".mypy_cache/3.13/packaging/_elffile.meta.json",
            ".mypy_cache/3.13/packaging/_manylinux.data.json",
            ".mypy_cache/3.13/packaging/_manylinux.meta.json",
            ".mypy_cache/3.13/packaging/_musllinux.data.json",
            ".mypy_cache/3.13/packaging/_musllinux.meta.json",
            ".mypy_cache/3.13/packaging/_parser.data.json",
            ".mypy_cache/3.13/packaging/_parser.meta.json",
            ".mypy_cache/3.13/packaging/_structures.data.json",
            ".mypy_cache/3.13/packaging/_structures.meta.json",
            ".mypy_cache/3.13/packaging/_tokenizer.data.json",
            ".mypy_cache/3.13/packaging/_tokenizer.meta.json",
            ".mypy_cache/3.13/packaging/markers.data.json",
            ".mypy_cache/3.13/packaging/markers.meta.json",
            ".mypy_cache/3.13/packaging/requirements.data.json",
            ".mypy_cache/3.13/packaging/requirements.meta.json",
            ".mypy_cache/3.13/packaging/specifiers.data.json",
            ".mypy_cache/3.13/packaging/specifiers.meta.json",
            ".mypy_cache/3.13/packaging/tags.data.json",
            ".mypy_cache/3.13/packaging/tags.meta.json",
            ".mypy_cache/3.13/packaging/utils.data.json",
            ".mypy_cache/3.13/packaging/utils.meta.json",
            ".mypy_cache/3.13/packaging/version.data.json",
            ".mypy_cache/3.13/packaging/version.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/pkg_resources/__init__.data.json",
            ".mypy_cache/3.13/pkg_resources/__init__.meta.json",
            ".mypy_cache/3.13/pkgutil.data.json",
            ".mypy_cache/3.13/pkgutil.meta.json",
            ".mypy_cache/3.13/platform.data.json",
            ".mypy_cache/3.13/platform.meta.json",
            ".mypy_cache/3.13/platformdirs/__init__.data.json",
            ".mypy_cache/3.13/platformdirs/__init__.meta.json",
            ".mypy_cache/3.13/platformdirs/api.data.json",
            ".mypy_cache/3.13/platformdirs/api.meta.json",
            ".mypy_cache/3.13/platformdirs/version.data.json",
            ".mypy_cache/3.13/platformdirs/version.meta.json",
            ".mypy_cache/3.13/platformdirs/windows.data.json",
            ".mypy_cache/3.13/platformdirs/windows.meta.json",
            ".mypy_cache/3.13/plistlib.data.json",
            ".mypy_cache/3.13/plistlib.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/site.data.json",
            ".mypy_cache/3.13/site.meta.json",
            ".mypy_cache/3.13/socket.data.json",
            ".mypy_cache/3.13/socket.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/ssl.data.json",
            ".mypy_cache/3.13/ssl.meta.json",
            ".mypy_cache/3.13/stat.data.json",
            ".mypy_cache/3.13/stat.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/struct.data.json",
            ".mypy_cache/3.13/struct.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/sysconfig.data.json",
            ".mypy_cache/3.13/sysconfig.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/tempfile.data.json",
            ".mypy_cache/3.13/tempfile.meta.json",
            ".mypy_cache/3.13/textwrap.data.json",
            ".mypy_cache/3.13/textwrap.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/urllib/__init__.data.json",
            ".mypy_cache/3.13/urllib/__init__.meta.json",
            ".mypy_cache/3.13/urllib/error.data.json",
            ".mypy_cache/3.13/urllib/error.meta.json",
            ".mypy_cache/3.13/urllib/request.data.json",
            ".mypy_cache/3.13/urllib/request.meta.json",
            ".mypy_cache/3.13/urllib/response.data.json",
            ".mypy_cache/3.13/urllib/response.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/x_4357_make_github_clones_x/__init__.data.json",
            ".mypy_cache/3.13/x_4357_make_github_clones_x/__init__.meta.json",
            ".mypy_cache/3.13/x_4357_make_github_clones_x/x_cls_make_github_clones_x.data.json",
            ".mypy_cache/3.13/x_4357_make_github_clones_x/x_cls_make_github_clones_x.meta.json",
            ".mypy_cache/3.13/x_4357_make_github_visitor_x/__init__.data.json",
            ".mypy_cache/3.13/x_4357_make_github_visitor_x/__init__.meta.json",
            ".mypy_cache/3.13/x_4357_make_github_visitor_x/x_cls_make_github_visitor_x.data.json",
            ".mypy_cache/3.13/x_4357_make_github_visitor_x/x_cls_make_github_visitor_x.meta.json",
            ".mypy_cache/3.13/x_4357_make_pip_updates_x/__init__.data.json",
            ".mypy_cache/3.13/x_4357_make_pip_updates_x/__init__.meta.json",
            ".mypy_cache/3.13/x_4357_make_pip_updates_x/x_cls_make_pip_updates_x.data.json",
            ".mypy_cache/3.13/x_4357_make_pip_updates_x/x_cls_make_pip_updates_x.meta.json",
            ".mypy_cache/3.13/x_4357_make_pypi_x/__init__.data.json",
            ".mypy_cache/3.13/x_4357_make_pypi_x/__init__.meta.json",
            ".mypy_cache/3.13/x_4357_make_pypi_x/x_cls_make_pypi_x.data.json",
            ".mypy_cache/3.13/x_4357_make_pypi_x/x_cls_make_pypi_x.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.0/977495585364692330",
            ".ruff_cache/0.13.3/12726438620117871226",
            ".ruff_cache/0.13.3/6273725486479869230",
            ".ruff_cache/CACHEDIR.TAG",
            "bootstrap.py.bak",
            "enginering proposal oct 6, 2025.md",
            "forceit.py",
            "microservice catalog oct 6 2025.md",
            "plannedupgrade.md",
            "publish_manifest.json",
            "x_cls_make_all_x.py"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/__main__.data.json",
            ".mypy_cache/3.13/__main__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_imp.data.json",
            ".mypy_cache/3.13/_imp.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_operator.data.json",
            ".mypy_cache/3.13/_operator.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_socket.data.json",
            ".mypy_cache/3.13/_socket.meta.json",
            ".mypy_cache/3.13/_ssl.data.json",
            ".mypy_cache/3.13/_ssl.meta.json",
            ".mypy_cache/3.13/_stat.data.json",
            ".mypy_cache/3.13/_stat.meta.json",
            ".mypy_cache/3.13/_struct.data.json",
            ".mypy_cache/3.13/_struct.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/datetime.data.json",
            ".mypy_cache/3.13/datetime.meta.json",
            ".mypy_cache/3.13/dis.data.json",
            ".mypy_cache/3.13/dis.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/feedparser.data.json",
            ".mypy_cache/3.13/email/feedparser.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/parser.data.json",
            ".mypy_cache/3.13/email/parser.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/errno.data.json",
            ".mypy_cache/3.13/errno.meta.json",
            ".mypy_cache/3.13/filecmp.data.json",
            ".mypy_cache/3.13/filecmp.meta.json",
            ".mypy_cache/3.13/functools.data.json",
            ".mypy_cache/3.13/functools.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/http/__init__.data.json",
            ".mypy_cache/3.13/http/__init__.meta.json",
            ".mypy_cache/3.13/http/client.data.json",
            ".mypy_cache/3.13/http/client.meta.json",
            ".mypy_cache/3.13/http/cookiejar.data.json",
            ".mypy_cache/3.13/http/cookiejar.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/importlib/util.data.json",
            ".mypy_cache/3.13/importlib/util.meta.json",
            ".mypy_cache/3.13/inspect.data.json",
            ".mypy_cache/3.13/inspect.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/itertools.data.json",
            ".mypy_cache/3.13/itertools.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/linecache.data.json",
            ".mypy_cache/3.13/linecache.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/nturl2path.data.json",
            ".mypy_cache/3.13/nturl2path.meta.json",
            ".mypy_cache/3.13/opcode.data.json",
            ".mypy_cache/3.13/opcode.meta.json",
            ".mypy_cache/3.13/operator.data.json",
            ".mypy_cache/3.13/operator.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/packaging/__init__.data.json",
            ".mypy_cache/3.13/packaging/__init__.meta.json",
            ".mypy_cache/3.13/packaging/_elffile.data.json",
            ".mypy_cache/3.13/packaging/_elffile.meta.json",
            ".mypy_cache/3.13/packaging/_manylinux.data.json",
            ".mypy_cache/3.13/packaging/_manylinux.meta.json",
            ".mypy_cache/3.13/packaging/_musllinux.data.json",
            ".mypy_cache/3.13/packaging/_musllinux.meta.json",
            ".mypy_cache/3.13/packaging/_parser.data.json",
            ".mypy_cache/3.13/packaging/_parser.meta.json",
            ".mypy_cache/3.13/packaging/_structures.data.json",
            ".mypy_cache/3.13/packaging/_structures.meta.json",
            ".mypy_cache/3.13/packaging/_tokenizer.data.json",
            ".mypy_cache/3.13/packaging/_tokenizer.meta.json",
            ".mypy_cache/3.13/packaging/markers.data.json",
            ".mypy_cache/3.13/packaging/markers.meta.json",
            ".mypy_cache/3.13/packaging/requirements.data.json",
            ".mypy_cache/3.13/packaging/requirements.meta.json",
            ".mypy_cache/3.13/packaging/specifiers.data.json",
            ".mypy_cache/3.13/packaging/specifiers.meta.json",
            ".mypy_cache/3.13/packaging/tags.data.json",
            ".mypy_cache/3.13/packaging/tags.meta.json",
            ".mypy_cache/3.13/packaging/utils.data.json",
            ".mypy_cache/3.13/packaging/utils.meta.json",
            ".mypy_cache/3.13/packaging/version.data.json",
            ".mypy_cache/3.13/packaging/version.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/pkg_resources/__init__.data.json",
            ".mypy_cache/3.13/pkg_resources/__init__.meta.json",
            ".mypy_cache/3.13/pkgutil.data.json",
            ".mypy_cache/3.13/pkgutil.meta.json",
            ".mypy_cache/3.13/platform.data.json",
            ".mypy_cache/3.13/platform.meta.json",
            ".mypy_cache/3.13/platformdirs/__init__.data.json",
            ".mypy_cache/3.13/platformdirs/__init__.meta.json",
            ".mypy_cache/3.13/platformdirs/api.data.json",
            ".mypy_cache/3.13/platformdirs/api.meta.json",
            ".mypy_cache/3.13/platformdirs/version.data.json",
            ".mypy_cache/3.13/platformdirs/version.meta.json",
            ".mypy_cache/3.13/platformdirs/windows.data.json",
            ".mypy_cache/3.13/platformdirs/windows.meta.json",
            ".mypy_cache/3.13/plistlib.data.json",
            ".mypy_cache/3.13/plistlib.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/site.data.json",
            ".mypy_cache/3.13/site.meta.json",
            ".mypy_cache/3.13/socket.data.json",
            ".mypy_cache/3.13/socket.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/ssl.data.json",
            ".mypy_cache/3.13/ssl.meta.json",
            ".mypy_cache/3.13/stat.data.json",
            ".mypy_cache/3.13/stat.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/struct.data.json",
            ".mypy_cache/3.13/struct.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/sysconfig.data.json",
            ".mypy_cache/3.13/sysconfig.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/tempfile.data.json",
            ".mypy_cache/3.13/tempfile.meta.json",
            ".mypy_cache/3.13/textwrap.data.json",
            ".mypy_cache/3.13/textwrap.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/urllib/__init__.data.json",
            ".mypy_cache/3.13/urllib/__init__.meta.json",
            ".mypy_cache/3.13/urllib/error.data.json",
            ".mypy_cache/3.13/urllib/error.meta.json",
            ".mypy_cache/3.13/urllib/request.data.json",
            ".mypy_cache/3.13/urllib/request.meta.json",
            ".mypy_cache/3.13/urllib/response.data.json",
            ".mypy_cache/3.13/urllib/response.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/x_4357_make_github_clones_x/__init__.data.json",
            ".mypy_cache/3.13/x_4357_make_github_clones_x/__init__.meta.json",
            ".mypy_cache/3.13/x_4357_make_github_clones_x/x_cls_make_github_clones_x.data.json",
            ".mypy_cache/3.13/x_4357_make_github_clones_x/x_cls_make_github_clones_x.meta.json",
            ".mypy_cache/3.13/x_4357_make_github_visitor_x/__init__.data.json",
            ".mypy_cache/3.13/x_4357_make_github_visitor_x/__init__.meta.json",
            ".mypy_cache/3.13/x_4357_make_github_visitor_x/x_cls_make_github_visitor_x.data.json",
            ".mypy_cache/3.13/x_4357_make_github_visitor_x/x_cls_make_github_visitor_x.meta.json",
            ".mypy_cache/3.13/x_4357_make_pip_updates_x/__init__.data.json",
            ".mypy_cache/3.13/x_4357_make_pip_updates_x/__init__.meta.json",
            ".mypy_cache/3.13/x_4357_make_pip_updates_x/x_cls_make_pip_updates_x.data.json",
            ".mypy_cache/3.13/x_4357_make_pip_updates_x/x_cls_make_pip_updates_x.meta.json",
            ".mypy_cache/3.13/x_4357_make_pypi_x/__init__.data.json",
            ".mypy_cache/3.13/x_4357_make_pypi_x/__init__.meta.json",
            ".mypy_cache/3.13/x_4357_make_pypi_x/x_cls_make_pypi_x.data.json",
            ".mypy_cache/3.13/x_4357_make_pypi_x/x_cls_make_pypi_x.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.0/977495585364692330",
            ".ruff_cache/0.13.3/12726438620117871226",
            ".ruff_cache/0.13.3/6273725486479869230",
            ".ruff_cache/CACHEDIR.TAG",
            "bootstrap.py.bak",
            "enginering proposal oct 6, 2025.md",
            "forceit.py",
            "microservice catalog oct 6 2025.md",
            "plannedupgrade.md",
            "publish_manifest.json",
            "x_cls_make_all_x.py"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_0_make_all_x\\forceit.py\nwould reformat C:\\x_runner_x\\x_0_make_all_x\\x_cls_make_all_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n2 files would be reformatted.\n",
                "stdout": "--- C:\\x_runner_x\\x_0_make_all_x\\forceit.py\t2025-10-07 07:11:45.063885+00:00\n+++ C:\\x_runner_x\\x_0_make_all_x\\forceit.py\t2025-10-07 07:50:53.948827+00:00\n@@ -99,13 +99,11 @@\n             except Exception as e:\n                 print(f\"ERROR copying {s} -> {d}: {e}\", file=sys.stderr)\n \n     print(\"\\nSummary:\")\n     print(f\"  Source files scanned: {total}\")\n-    print(\n-        f\"  Source files with at least one match in site-packages: {matched}\"\n-    )\n+    print(f\"  Source files with at least one match in site-packages: {matched}\")\n     print(f\"  Identical matches (no copy): {identical}\")\n     print(f\"  Files copied: {copied}\")\n \n     # Long summary details\n     if copied_pairs:\n@@ -125,16 +123,12 @@\n         print(\"\\nPer destination package copy counts (top 20):\")\n         for pkg, cnt in pkg_counter.most_common(20):\n             print(f\"  {pkg}: {cnt}\")\n \n     if multi_sources:\n-        print(\n-            f\"\\nSources with multiple matches in site-packages: {len(multi_sources)}\"\n-        )\n-        for s, n in sorted(multi_sources, key=lambda t: (-t[1], str(t[0])))[\n-            :20\n-        ]:\n+        print(f\"\\nSources with multiple matches in site-packages: {len(multi_sources)}\")\n+        for s, n in sorted(multi_sources, key=lambda t: (-t[1], str(t[0])))[:20]:\n             ex = \", \".join(_rel(p, DEST) for p in multi_examples.get(s, []))\n             print(f\"  {_rel(s, src_root)} -> {n} matches (e.g., {ex})\")\n \n     return 0\n \n--- C:\\x_runner_x\\x_0_make_all_x\\x_cls_make_all_x.py\t2025-10-07 07:11:45.063885+00:00\n+++ C:\\x_runner_x\\x_0_make_all_x\\x_cls_make_all_x.py\t2025-10-07 07:50:55.044041+00:00\n@@ -11,13 +11,11 @@\n import sys\n import time\n import urllib.request\n from typing import TYPE_CHECKING, Any, ClassVar, TypeAlias, cast\n \n-_WORKSPACE_ROOT = os.path.abspath(\n-    os.path.join(os.path.dirname(__file__), \"..\")\n-)\n+_WORKSPACE_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n \n \n def _ensure_workspace_on_syspath() -> None:\n     if _WORKSPACE_ROOT not in sys.path:\n         sys.path.insert(0, _WORKSPACE_ROOT)\n@@ -187,13 +185,11 @@\n \n     Invalid entries are ignored and an error is logged.\n     \"\"\"\n     valid: list[ManifestEntry] = []\n     if not isinstance(data, list):\n-        _error(\n-            f\"publish_manifest.json: expected top-level list, got {type(data)!r}\"\n-        )\n+        _error(f\"publish_manifest.json: expected top-level list, got {type(data)!r}\")\n         return valid\n     seq = cast(\"list[object]\", data)\n     for i, raw in enumerate(seq):\n         try:\n             # Normalize raw entry into its 4 components\n@@ -210,25 +206,21 @@\n                     raise TypeError(\n                         f\"entry must be a 4-tuple/list, got tuple with len {len(tpl)}\"\n                     )\n                 name, version, anc, opts = tpl\n             else:\n-                raise TypeError(\n-                    f\"entry must be a 4-tuple/list, got {type(raw)!r}\"\n-                )\n+                raise TypeError(f\"entry must be a 4-tuple/list, got {type(raw)!r}\")\n \n             if not isinstance(name, str) or not name:\n                 raise TypeError(\"name must be non-empty string\")\n             if not isinstance(version, str) or not version:\n                 raise TypeError(\"version must be non-empty string\")\n \n             anc_list: list[str] | None\n             if anc is not None:\n                 if not isinstance(anc, list):\n-                    raise TypeError(\n-                        \"ancillaries must be null or list of strings\"\n-                    )\n+                    raise TypeError(\"ancillaries must be null or list of strings\")\n                 anc_seq = cast(\"list[object]\", anc)\n                 if not all(isinstance(x, str) for x in anc_seq):\n                     raise TypeError(\"ancillaries must be list[str]\")\n                 anc_list = [cast(\"str\", x) for x in anc_seq]\n             else:\n@@ -247,13 +239,11 @@\n             continue\n     return valid\n \n \n try:\n-    _manifest_path = os.path.join(\n-        os.path.dirname(__file__), \"publish_manifest.json\"\n-    )\n+    _manifest_path = os.path.join(os.path.dirname(__file__), \"publish_manifest.json\")\n     if os.path.exists(_manifest_path):\n         with open(_manifest_path, encoding=\"utf-8\") as _mf:\n             _loaded = json.load(_mf)\n             if isinstance(_loaded, list):\n                 _publish_manifest = validate_publish_manifest(_loaded)\n@@ -351,14 +341,11 @@\n                 include_forks=include_forks,\n                 force_reclone=False,\n             )\n         except TypeError as e:\n             msg = str(e)\n-            if (\n-                \"unexpected keyword\" in msg\n-                or \"got an unexpected keyword\" in msg\n-            ):\n+            if \"unexpected keyword\" in msg or \"got an unexpected keyword\" in msg:\n                 cloner = Cls(\n                     username=username,\n                     target_dir=target_dir,\n                     shallow=shallow,\n                     include_forks=include_forks,\n@@ -400,13 +387,11 @@\n         except Exception as e:\n             _error(\"Cloner run failed:\", e)\n         return cloner\n \n     # Step 4: run visitor (moved logic from _run_visitor)\n-    def run_visitor(\n-        self, cloner: Any, ctx: OrchestratorContext | None\n-    ) -> None:\n+    def run_visitor(self, cloner: Any, ctx: OrchestratorContext | None) -> None:\n         root = None\n         try:\n             root = getattr(cloner, \"target_dir\", None)\n         except Exception:\n             root = None\n@@ -415,13 +400,11 @@\n             parent = os.path.dirname(root.rstrip(\"/\\\\\"))\n             for entry in os.listdir(parent):\n                 if os.path.isdir(os.path.join(parent, entry, \".git\")):\n                     root = parent\n                     break\n-        _info(\n-            f\"Running x_make_github_visitor against cloned repos root={root} ...\"\n-        )\n+        _info(f\"Running x_make_github_visitor against cloned repos root={root} ...\")\n         try:\n             vis = self._instantiate_visitor(ctx, root_dir=root)\n         except Exception as e:\n             raise AssertionError(\n                 f\"x_make_github_visitor instantiate failed: {e}\"\n@@ -433,31 +416,25 @@\n             if \"no child git repositories found\" in msg:\n                 _info(\n                     \"Visitor skipped: no child git repositories present at root; continuing orchestrator flow\"\n                 )\n                 return\n-            raise AssertionError(\n-                f\"x_make_github_visitor run failed: {e}\"\n-            ) from e\n+            raise AssertionError(f\"x_make_github_visitor run failed: {e}\") from e\n \n     # Step 5: publish and update installations (moved logic from _process_publishes_and_updates)\n     def process_publishes_and_updates(\n         self, cloner: Any, ctx: OrchestratorContext | None\n     ) -> None:\n         published_versions, published_artifacts = self.publish_all(cloner, ctx)\n         for pkg_name, pkg_ver in published_versions.items():\n             if not (pkg_name and pkg_ver):\n                 continue\n             self.wait_for_pypi(pkg_name, pkg_ver, timeout=120)\n-        self.run_pip_updates(\n-            cloner, published_versions, published_artifacts, ctx\n-        )\n+        self.run_pip_updates(cloner, published_versions, published_artifacts, ctx)\n \n     # Utility: wait for PyPI availability (moved into class)\n-    def wait_for_pypi(\n-        self, name: str, version: str, timeout: int = 120\n-    ) -> bool:\n+    def wait_for_pypi(self, name: str, version: str, timeout: int = 120) -> bool:\n         deadline = time.time() + timeout\n         candidates = [name, name.replace(\"_\", \"-\")]\n         try:\n             time.sleep(5)\n         except Exception:\n@@ -511,24 +488,20 @@\n             if token:\n                 req.add_header(\"Authorization\", f\"token {token}\")\n             with urllib.request.urlopen(req, timeout=10) as resp:\n                 status = getattr(resp, \"status\", None)\n                 if status is not None and status >= 400:\n-                    raise AssertionError(\n-                        f\"test.pypi.org returned status {status}\"\n-                    )\n+                    raise AssertionError(f\"test.pypi.org returned status {status}\")\n         except AssertionError:\n             raise\n         except Exception as exc:\n             raise AssertionError(f\"test.pypi.org check failed: {exc}\") from exc\n \n     def _to_posix_rel(self, rel: str) -> str:\n         \"\"\"Return a normalized, POSIX-style relative path (no leading ../).\"\"\"\n         try:\n-            rel = rel.strip().lstrip(\n-                \"\\\\/\"\n-            )  # avoid accidental leading separators\n+            rel = rel.strip().lstrip(\"\\\\/\")  # avoid accidental leading separators\n             rel = rel.replace(\"\\\\\", \"/\")\n         except Exception:\n             pass\n         return rel\n \n@@ -547,13 +520,11 @@\n                 return None\n             return self._to_posix_rel(rel_native)\n         except Exception:\n             return None\n \n-    def _load_ancillary_allowlist(\n-        self, list_file: str, pkg_dir: str\n-    ) -> list[str]:\n+    def _load_ancillary_allowlist(self, list_file: str, pkg_dir: str) -> list[str]:\n         \"\"\"Load an allowlist of ancillary files; return clean relative paths under pkg_dir.\"\"\"\n         out: list[str] = []\n         try:\n             if not os.path.isfile(list_file):\n                 _info(f\"Ancillary allowlist not found: {list_file}\")\n@@ -573,13 +544,11 @@\n                 try:\n                     common = os.path.commonpath(\n                         [os.path.abspath(abs_path), os.path.abspath(pkg_dir)]\n                     )\n                     if common != os.path.abspath(pkg_dir):\n-                        _info(\n-                            f\"Skipping ancillary outside package dir: {line}\"\n-                        )\n+                        _info(f\"Skipping ancillary outside package dir: {line}\")\n                         continue\n                 except Exception:\n                     continue\n                 if not os.path.isfile(abs_path):\n                     _info(f\"Skipping non-file ancillary entry: {line}\")\n@@ -647,13 +616,11 @@\n                     continue\n                 # Normalize any leading separators from manifest entries\n                 safe_name = name.lstrip(\"/\\\\\")\n                 candidate = os.path.join(pkg_dir, safe_name)\n                 if os.path.isfile(candidate):\n-                    rel_path: str | None = self._safe_rel_from_abs(\n-                        candidate, pkg_dir\n-                    )\n+                    rel_path: str | None = self._safe_rel_from_abs(candidate, pkg_dir)\n                     if rel_path and rel_path not in seen:\n                         seen.add(rel_path)\n                         anc_rel.append(rel_path)\n                 elif os.path.isdir(candidate):\n                     # No auto-expansion (security). Require allowlist.\n@@ -671,13 +638,11 @@\n         version: str,\n         ctx: OrchestratorContext | None,\n         safe_kwargs: dict[str, Any],\n     ) -> Any:\n         try:\n-            return PublisherCls(\n-                name=name, version=version, ctx=ctx, **safe_kwargs\n-            )\n+            return PublisherCls(name=name, version=version, ctx=ctx, **safe_kwargs)\n         except TypeError:\n             pass\n         try:\n             return PublisherCls(\n                 name=name, version=version, **dict(safe_kwargs, ctx=ctx)\n@@ -747,13 +712,13 @@\n             if a.startswith(\"@\"):\n                 continue\n             _add_file_rel(a)\n \n         # 2) Files coming from opts-based allowlists (string or list[str])\n-        allow_spec = local_kwargs.get(\n-            \"ancillary_allowlist\"\n-        ) or local_kwargs.get(\"ancillary_list\")\n+        allow_spec = local_kwargs.get(\"ancillary_allowlist\") or local_kwargs.get(\n+            \"ancillary_list\"\n+        )\n         allow_files: list[str] = []\n         if isinstance(allow_spec, str):\n             allow_files = [allow_spec]\n         elif isinstance(allow_spec, list):\n             allow_files = [str(x) for x in allow_spec]\n@@ -790,14 +755,11 @@\n             msg = \" \".join(\n                 str(x)\n                 for x in (\n                     [str(exc)]\n                     + [str(a) for a in getattr(exc, \"args\", ())]\n-                    + [\n-                        str(getattr(exc, a, \"\"))\n-                        for a in (\"stdout\", \"stderr\", \"output\")\n-                    ]\n+                    + [str(getattr(exc, a, \"\")) for a in (\"stdout\", \"stderr\", \"output\")]\n                 )\n                 if x\n             )\n             low = msg.lower()\n             if (\n@@ -1009,13 +971,11 @@\n                 ]\n                 if r.startswith(\"x_\")\n             ]\n         return packages, pip_updates_script, use_user_flag\n \n-    def _get_installed_versions(\n-        self, packages: list[str]\n-    ) -> dict[str, str | None]:\n+    def _get_installed_versions(self, packages: list[str]) -> dict[str, str | None]:\n         import importlib.metadata\n \n         initial_installed: dict[str, str | None] = {}\n         _info(\"\\nInstalled package versions after first update attempt:\")\n         for pkg in packages:\n@@ -1082,13 +1042,11 @@\n             if not batch:\n                 continue\n             cmd = base_cmd + batch\n             _info(\"Fallback pip install:\", \" \".join(cmd))\n             try:\n-                proc = subprocess.run(\n-                    cmd, capture_output=True, text=True, check=False\n-                )\n+                proc = subprocess.run(cmd, capture_output=True, text=True, check=False)\n                 if proc.stdout:\n                     _info(proc.stdout.strip())\n                 if proc.stderr:\n                     _error(proc.stderr.strip())\n             except Exception as e:\n@@ -1099,26 +1057,22 @@\n         cloner: Any,\n         published_versions: dict[str, str | None],\n         published_artifacts: dict[str, dict[str, Any]],\n         ctx: Any | None = None,\n     ) -> None:\n-        packages, pip_updates_script, use_user_flag = (\n-            self._locate_and_choose_packages(cloner, published_versions)\n+        packages, pip_updates_script, use_user_flag = self._locate_and_choose_packages(\n+            cloner, published_versions\n         )\n         try:\n             if ctx and getattr(ctx, \"publish_opts\", None):\n-                use_user_flag = bool(\n-                    ctx.publish_opts.get(\"use_user\", use_user_flag)\n-                )\n+                use_user_flag = bool(ctx.publish_opts.get(\"use_user\", use_user_flag))\n         except Exception:\n             pass\n         if not packages:\n             _info(\"No published packages to update; skipping pip-updates step\")\n             return\n-        script_exists = bool(\n-            pip_updates_script and os.path.exists(pip_updates_script)\n-        )\n+        script_exists = bool(pip_updates_script and os.path.exists(pip_updates_script))\n         used_fallback = False\n         if script_exists:\n             try:\n                 inst = self._instantiate_pipupdates(\n                     x_cls_make_pip_updates_x, ctx, use_user_flag\n@@ -1138,13 +1092,11 @@\n             _info(\n                 \"pip-updates script not found; using direct pip fallback installation\"\n             )\n             used_fallback = True\n         if used_fallback:\n-            self._fallback_pip_install(\n-                packages, published_versions, use_user_flag\n-            )\n+            self._fallback_pip_install(packages, published_versions, use_user_flag)\n         initial_installed = self._get_installed_versions(packages)\n         initial_mismatches: list[tuple[str, str, str | None]] = []\n         for pkg, expected in published_versions.items():\n             if not expected:\n                 continue\n@@ -1193,13 +1145,11 @@\n         repo_main: str | None = None,\n     ) -> int:\n         \"\"\"Compare installed main file with repo copy.\"\"\"\n         try:\n             if not os.path.isfile(installed_main):\n-                _error(\n-                    f\"Installed main file not found for {pkg}: {installed_main}\"\n-                )\n+                _error(f\"Installed main file not found for {pkg}: {installed_main}\")\n                 return 1\n             # Prefer explicit repo_main (from manifest), else fall back to basename match\n             if repo_main is None:\n                 main_name = os.path.basename(installed_main)\n                 repo_main_candidate = os.path.join(repo_pkg_dir, main_name)\n@@ -1216,13 +1166,11 @@\n                 if f1.read() != f2.read():\n                     _error(\n                         f\"Main file content mismatch for {pkg}: installed={installed_main} repo={repo_main_candidate}\"\n                     )\n                     return 1\n-            _info(\n-                f\"Main file OK for {pkg}: {os.path.basename(installed_main)}\"\n-            )\n+            _info(f\"Main file OK for {pkg}: {os.path.basename(installed_main)}\")\n             return 0\n         except Exception as e:\n             _error(f\"Error comparing main file for {pkg}: {e}\")\n             return 1\n \n@@ -1239,24 +1187,18 @@\n                 _error(f\"Installed ancillary file not found: {installed_path}\")\n                 return 1\n             if not os.path.isfile(repo_path):\n                 _error(f\"Repo ancillary file not found: {repo_path}\")\n                 return 1\n-            with open(installed_path, \"rb\") as f_inst, open(\n-                repo_path, \"rb\"\n-            ) as f_repo:\n+            with open(installed_path, \"rb\") as f_inst, open(repo_path, \"rb\") as f_repo:\n                 if f_inst.read() != f_repo.read():\n-                    _error(\n-                        f\"Ancillary file content mismatch for {pkg}: {anc_name}\"\n-                    )\n+                    _error(f\"Ancillary file content mismatch for {pkg}: {anc_name}\")\n                     return 1\n             _info(f\"Ancillary file OK for {pkg}: {anc_name}\")\n             return 0\n         except Exception as e:\n-            _error(\n-                f\"Error comparing ancillary file for {pkg}: {anc_name}: {e}\"\n-            )\n+            _error(f\"Error comparing ancillary file for {pkg}: {anc_name}: {e}\")\n             return 1\n \n     def _compare_ancillary_dir(\n         self,\n         installed_dir: str,\n@@ -1266,13 +1208,11 @@\n     ) -> int:\n         # Non-recursive: compare only top-level files\n         mismatches = 0\n         try:\n             if not os.path.isdir(installed_dir):\n-                _error(\n-                    f\"Installed ancillary directory not found: {installed_dir}\"\n-                )\n+                _error(f\"Installed ancillary directory not found: {installed_dir}\")\n                 return 1\n             if not os.path.isdir(repo_dir):\n                 _error(f\"Repo ancillary directory not found: {repo_dir}\")\n                 return 1\n \n@@ -1302,13 +1242,11 @@\n                 repo_path = os.path.join(repo_dir, rel)\n                 mismatches += self._compare_ancillary_file(\n                     inst_path, repo_path, pkg, f\"{anc_name}/{rel}\"\n                 )\n         except Exception as e:\n-            _error(\n-                f\"Error comparing ancillary directory for {pkg}: {anc_name}: {e}\"\n-            )\n+            _error(f\"Error comparing ancillary directory for {pkg}: {anc_name}: {e}\")\n             mismatches += 1\n         return mismatches\n \n     def _compare_ancillaries(\n         self,\n@@ -1349,13 +1287,11 @@\n                 mismatches += self._compare_ancillary_file(\n                     installed_path, repo_path, pkg, anc_name\n                 )\n         return mismatches\n \n-    def _find_installed_path(\n-        self, rel_path: str, target_is_dir: bool\n-    ) -> str | None:\n+    def _find_installed_path(self, rel_path: str, target_is_dir: bool) -> str | None:\n         import site\n \n         for base in site.getsitepackages():\n             candidate = os.path.join(base, rel_path)\n             if target_is_dir and os.path.isdir(candidate):\n@@ -1395,18 +1331,14 @@\n                 return locs[0]\n             if spec.origin:\n                 return os.path.dirname(spec.origin)\n         path = self._find_installed_path(pkg_name, True)\n         if not path:\n-            raise FileNotFoundError(\n-                f\"Package directory not found for {pkg_name}\"\n-            )\n+            raise FileNotFoundError(f\"Package directory not found for {pkg_name}\")\n         return path\n \n-    def _find_main_and_ancillaries_in_dir(\n-        self, pkg_dir: str\n-    ) -> tuple[str, list[str]]:\n+    def _find_main_and_ancillaries_in_dir(self, pkg_dir: str) -> tuple[str, list[str]]:\n         main_path = \"\"\n         try:\n             for fn in os.listdir(pkg_dir):\n                 if fn.startswith(\"x_cls_make_\") and fn.endswith(\".py\"):\n                     main_path = os.path.join(pkg_dir, fn)\n@@ -1476,13 +1408,11 @@\n                 if art and isinstance(art.get(\"main\"), str):\n                     main_rel = cast(\"str\", art[\"main\"])\n                     installed_main = os.path.join(pkg_dir, main_rel)\n                     repo_main_path = os.path.join(repo_pkg_dir, main_rel)\n                 else:\n-                    installed_main, _ = self._find_main_and_ancillaries_in_dir(\n-                        pkg_dir\n-                    )\n+                    installed_main, _ = self._find_main_and_ancillaries_in_dir(pkg_dir)\n             except Exception as e:\n                 _error(f\"Skipping {pkg}: error determining main file: {e}\")\n                 continue\n \n             if not os.path.isdir(repo_pkg_dir):\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_all_x.py:29: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:36: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:47: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:48: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:49: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:50: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:93: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:139: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:139: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:150: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:177: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:191: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:193: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\nx_cls_make_all_x.py:193: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:239: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:239: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:240: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:240: error: Expression type contains \"Any\" (has type \"Any | list[Never]\")  [misc]\nx_cls_make_all_x.py:240: error: Need type annotation for \"deps\"  [var-annotated]\nx_cls_make_all_x.py:241: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\nx_cls_make_all_x.py:244: error: Expression type contains \"Any\" (has type \"tuple[str, str, list[str] | None, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:244: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:257: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:258: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:281: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:289: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:291: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:312: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:317: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:319: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:333: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:334: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:335: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:338: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:339: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\nx_cls_make_all_x.py:340: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:343: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:344: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:345: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:347: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:348: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:349: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:350: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:351: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:360: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:361: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:362: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:363: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:364: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:367: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:373: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:374: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:379: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:379: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:380: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:382: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:382: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:384: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:384: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:387: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:389: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:389: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:391: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:394: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:402: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:405: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:410: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:410: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:413: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:414: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:415: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:421: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:424: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:424: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:430: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:443: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:446: error: Expression type contains \"Any\" (has type \"tuple[dict[str, str | None], dict[str, dict[str, Any]]]\")  [misc]\nx_cls_make_all_x.py:446: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:446: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:452: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:452: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:473: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:474: error: Expression type contains \"Any\" (has type \"Any | int\")  [misc]\nx_cls_make_all_x.py:474: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:474: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:483: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:484: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:485: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:513: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:514: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:514: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:515: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:515: error: Expression type contains \"Any\" (has type \"Literal[False] | Any\")  [misc]\nx_cls_make_all_x.py:515: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:517: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:602: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:611: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:611: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:612: error: Expression type contains \"Any\" (has type \"Literal[False] | Any\")  [misc]\nx_cls_make_all_x.py:612: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:617: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:667: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:676: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:677: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:682: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:683: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:688: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:691: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:691: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:693: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:707: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\nx_cls_make_all_x.py:708: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_all_x.py:708: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:708: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:709: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:710: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:710: error: Expression type contains \"Any\" (has type \"dict_items[str, Any]\")  [misc]\nx_cls_make_all_x.py:752: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:752: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:754: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:754: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:756: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:758: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:774: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:775: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\nx_cls_make_all_x.py:775: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:782: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:794: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:794: error: Expression type contains \"Any\" (has type \"Any | tuple[()]\")  [misc]\nx_cls_make_all_x.py:796: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:815: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:820: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:820: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:821: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:826: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:840: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:841: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:845: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:845: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:846: error: Expression type contains \"Any\" (has type \"Literal[False] | Any\")  [misc]\nx_cls_make_all_x.py:846: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:856: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:857: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:859: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:861: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:868: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:872: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:880: error: Expression type contains \"Any\" (has type \"Any | list[Never]\")  [misc]\nx_cls_make_all_x.py:880: error: Need type annotation for \"to_publish\"  [var-annotated]\nx_cls_make_all_x.py:881: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:881: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\nx_cls_make_all_x.py:882: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:883: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:883: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:884: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:887: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:888: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:890: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:893: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:894: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:897: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:900: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:901: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:901: error: Expression type contains \"Any\" (has type \"Any | dict[Any, Any]\")  [misc]\nx_cls_make_all_x.py:901: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_all_x.py:903: error: Expression type contains \"Any\" (has type \"tuple[dict[str, str | None], dict[str, dict[str, Any]]]\")  [misc]\nx_cls_make_all_x.py:903: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:906: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:910: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:910: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:913: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:914: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:914: error: Expression type contains \"Any\" (has type \"tuple[str, Any | None]\")  [misc]\nx_cls_make_all_x.py:914: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:915: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:915: error: Expression type contains \"Any\" (has type \"tuple[str, Any | None]\")  [misc]\nx_cls_make_all_x.py:915: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:916: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:917: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:919: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:919: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:921: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:921: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:924: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:953: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:958: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:958: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:959: error: Expression type contains \"Any\" (has type \"Literal[False] | Any\")  [misc]\nx_cls_make_all_x.py:959: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:965: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:970: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:991: error: Expression type contains \"Any\" (has type \"Any | list[Never]\")  [misc]\nx_cls_make_all_x.py:991: error: Need type annotation for \"manifest\"  [var-annotated]\nx_cls_make_all_x.py:993: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\nx_cls_make_all_x.py:994: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:994: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\nx_cls_make_all_x.py:995: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:996: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:996: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:997: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:999: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1097: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:1105: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1108: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:1108: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1110: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1123: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1124: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\nx_cls_make_all_x.py:1124: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:1126: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1127: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1129: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1177: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1177: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:1324: error: Expression type contains \"Any\" (has type \"dict[str, Any | None]\")  [misc]\nx_cls_make_all_x.py:1392: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:1393: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1393: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:1431: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:1439: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1439: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:1440: error: Expression type contains \"Any\" (has type \"Literal[False] | Any\")  [misc]\nx_cls_make_all_x.py:1440: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1451: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:1456: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:1468: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:1468: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_all_x.py:1469: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_all_x.py:1470: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:1471: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_all_x.py:1476: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_all_x.py:1476: error: Expression type contains \"Any\" (has type \"dict[str, Any] | bool | None\")  [misc]\nx_cls_make_all_x.py:1476: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:1476: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:1477: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:1503: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_all_x.py:1504: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:1504: error: Expression type contains \"Any\" (has type \"Any | list[Never]\")  [misc]\nx_cls_make_all_x.py:1504: error: Need type annotation for \"anc_val\"  [var-annotated]\nx_cls_make_all_x.py:1505: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\nx_cls_make_all_x.py:1531: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:1531: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:1532: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:1534: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:1538: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:1539: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1542: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:1545: error: Expression type contains \"Any\" (has type \"tuple[dict[str, str | None], dict[str, dict[str, Any]]]\")  [misc]\nx_cls_make_all_x.py:1545: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1548: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:1555: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1555: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_all_x.py:1555: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:1563: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:1564: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:1567: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:1570: error: Expression has type \"Any\"  [misc]\nforceit.py:133: error: Expression type contains \"Any\" (has type \"Callable[[Any], tuple[Any, str]]\")  [misc]\nforceit.py:133: error: Expression type contains \"Any\" (has type \"tuple[Any, str]\")  [misc]\nforceit.py:133: error: Expression has type \"Any\"  [misc]\nFound 260 errors in 2 files (checked 2 source files)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "0 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": true,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_legatus_acta_schedae_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/__main__.data.json",
            ".mypy_cache/3.13/__main__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_asyncio.data.json",
            ".mypy_cache/3.13/_asyncio.meta.json",
            ".mypy_cache/3.13/_bisect.data.json",
            ".mypy_cache/3.13/_bisect.meta.json",
            ".mypy_cache/3.13/_blake2.data.json",
            ".mypy_cache/3.13/_blake2.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_ctypes.data.json",
            ".mypy_cache/3.13/_ctypes.meta.json",
            ".mypy_cache/3.13/_decimal.data.json",
            ".mypy_cache/3.13/_decimal.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_hashlib.data.json",
            ".mypy_cache/3.13/_hashlib.meta.json",
            ".mypy_cache/3.13/_imp.data.json",
            ".mypy_cache/3.13/_imp.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_locale.data.json",
            ".mypy_cache/3.13/_locale.meta.json",
            ".mypy_cache/3.13/_operator.data.json",
            ".mypy_cache/3.13/_operator.meta.json",
            ".mypy_cache/3.13/_pickle.data.json",
            ".mypy_cache/3.13/_pickle.meta.json",
            ".mypy_cache/3.13/_pytest/__init__.data.json",
            ".mypy_cache/3.13/_pytest/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/_argcomplete.data.json",
            ".mypy_cache/3.13/_pytest/_argcomplete.meta.json",
            ".mypy_cache/3.13/_pytest/_code/__init__.data.json",
            ".mypy_cache/3.13/_pytest/_code/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/_code/code.data.json",
            ".mypy_cache/3.13/_pytest/_code/code.meta.json",
            ".mypy_cache/3.13/_pytest/_code/source.data.json",
            ".mypy_cache/3.13/_pytest/_code/source.meta.json",
            ".mypy_cache/3.13/_pytest/_io/__init__.data.json",
            ".mypy_cache/3.13/_pytest/_io/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/_io/pprint.data.json",
            ".mypy_cache/3.13/_pytest/_io/pprint.meta.json",
            ".mypy_cache/3.13/_pytest/_io/saferepr.data.json",
            ".mypy_cache/3.13/_pytest/_io/saferepr.meta.json",
            ".mypy_cache/3.13/_pytest/_io/terminalwriter.data.json",
            ".mypy_cache/3.13/_pytest/_io/terminalwriter.meta.json",
            ".mypy_cache/3.13/_pytest/_io/wcwidth.data.json",
            ".mypy_cache/3.13/_pytest/_io/wcwidth.meta.json",
            ".mypy_cache/3.13/_pytest/_version.data.json",
            ".mypy_cache/3.13/_pytest/_version.meta.json",
            ".mypy_cache/3.13/_pytest/assertion/__init__.data.json",
            ".mypy_cache/3.13/_pytest/assertion/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/assertion/rewrite.data.json",
            ".mypy_cache/3.13/_pytest/assertion/rewrite.meta.json",
            ".mypy_cache/3.13/_pytest/assertion/truncate.data.json",
            ".mypy_cache/3.13/_pytest/assertion/truncate.meta.json",
            ".mypy_cache/3.13/_pytest/assertion/util.data.json",
            ".mypy_cache/3.13/_pytest/assertion/util.meta.json",
            ".mypy_cache/3.13/_pytest/cacheprovider.data.json",
            ".mypy_cache/3.13/_pytest/cacheprovider.meta.json",
            ".mypy_cache/3.13/_pytest/capture.data.json",
            ".mypy_cache/3.13/_pytest/capture.meta.json",
            ".mypy_cache/3.13/_pytest/compat.data.json",
            ".mypy_cache/3.13/_pytest/compat.meta.json",
            ".mypy_cache/3.13/_pytest/config/__init__.data.json",
            ".mypy_cache/3.13/_pytest/config/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/config/argparsing.data.json",
            ".mypy_cache/3.13/_pytest/config/argparsing.meta.json",
            ".mypy_cache/3.13/_pytest/config/compat.data.json",
            ".mypy_cache/3.13/_pytest/config/compat.meta.json",
            ".mypy_cache/3.13/_pytest/config/exceptions.data.json",
            ".mypy_cache/3.13/_pytest/config/exceptions.meta.json",
            ".mypy_cache/3.13/_pytest/config/findpaths.data.json",
            ".mypy_cache/3.13/_pytest/config/findpaths.meta.json",
            ".mypy_cache/3.13/_pytest/debugging.data.json",
            ".mypy_cache/3.13/_pytest/debugging.meta.json",
            ".mypy_cache/3.13/_pytest/deprecated.data.json",
            ".mypy_cache/3.13/_pytest/deprecated.meta.json",
            ".mypy_cache/3.13/_pytest/doctest.data.json",
            ".mypy_cache/3.13/_pytest/doctest.meta.json",
            ".mypy_cache/3.13/_pytest/fixtures.data.json",
            ".mypy_cache/3.13/_pytest/fixtures.meta.json",
            ".mypy_cache/3.13/_pytest/freeze_support.data.json",
            ".mypy_cache/3.13/_pytest/freeze_support.meta.json",
            ".mypy_cache/3.13/_pytest/helpconfig.data.json",
            ".mypy_cache/3.13/_pytest/helpconfig.meta.json",
            ".mypy_cache/3.13/_pytest/hookspec.data.json",
            ".mypy_cache/3.13/_pytest/hookspec.meta.json",
            ".mypy_cache/3.13/_pytest/legacypath.data.json",
            ".mypy_cache/3.13/_pytest/legacypath.meta.json",
            ".mypy_cache/3.13/_pytest/logging.data.json",
            ".mypy_cache/3.13/_pytest/logging.meta.json",
            ".mypy_cache/3.13/_pytest/main.data.json",
            ".mypy_cache/3.13/_pytest/main.meta.json",
            ".mypy_cache/3.13/_pytest/mark/__init__.data.json",
            ".mypy_cache/3.13/_pytest/mark/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/mark/expression.data.json",
            ".mypy_cache/3.13/_pytest/mark/expression.meta.json",
            ".mypy_cache/3.13/_pytest/mark/structures.data.json",
            ".mypy_cache/3.13/_pytest/mark/structures.meta.json",
            ".mypy_cache/3.13/_pytest/monkeypatch.data.json",
            ".mypy_cache/3.13/_pytest/monkeypatch.meta.json",
            ".mypy_cache/3.13/_pytest/nodes.data.json",
            ".mypy_cache/3.13/_pytest/nodes.meta.json",
            ".mypy_cache/3.13/_pytest/outcomes.data.json",
            ".mypy_cache/3.13/_pytest/outcomes.meta.json",
            ".mypy_cache/3.13/_pytest/pathlib.data.json",
            ".mypy_cache/3.13/_pytest/pathlib.meta.json",
            ".mypy_cache/3.13/_pytest/pytester.data.json",
            ".mypy_cache/3.13/_pytest/pytester.meta.json",
            ".mypy_cache/3.13/_pytest/pytester_assertions.data.json",
            ".mypy_cache/3.13/_pytest/pytester_assertions.meta.json",
            ".mypy_cache/3.13/_pytest/python.data.json",
            ".mypy_cache/3.13/_pytest/python.meta.json",
            ".mypy_cache/3.13/_pytest/python_api.data.json",
            ".mypy_cache/3.13/_pytest/python_api.meta.json",
            ".mypy_cache/3.13/_pytest/raises.data.json",
            ".mypy_cache/3.13/_pytest/raises.meta.json",
            ".mypy_cache/3.13/_pytest/recwarn.data.json",
            ".mypy_cache/3.13/_pytest/recwarn.meta.json",
            ".mypy_cache/3.13/_pytest/reports.data.json",
            ".mypy_cache/3.13/_pytest/reports.meta.json",
            ".mypy_cache/3.13/_pytest/runner.data.json",
            ".mypy_cache/3.13/_pytest/runner.meta.json",
            ".mypy_cache/3.13/_pytest/scope.data.json",
            ".mypy_cache/3.13/_pytest/scope.meta.json",
            ".mypy_cache/3.13/_pytest/stash.data.json",
            ".mypy_cache/3.13/_pytest/stash.meta.json",
            ".mypy_cache/3.13/_pytest/terminal.data.json",
            ".mypy_cache/3.13/_pytest/terminal.meta.json",
            ".mypy_cache/3.13/_pytest/timing.data.json",
            ".mypy_cache/3.13/_pytest/timing.meta.json",
            ".mypy_cache/3.13/_pytest/tmpdir.data.json",
            ".mypy_cache/3.13/_pytest/tmpdir.meta.json",
            ".mypy_cache/3.13/_pytest/tracemalloc.data.json",
            ".mypy_cache/3.13/_pytest/tracemalloc.meta.json",
            ".mypy_cache/3.13/_pytest/unraisableexception.data.json",
            ".mypy_cache/3.13/_pytest/unraisableexception.meta.json",
            ".mypy_cache/3.13/_pytest/warning_types.data.json",
            ".mypy_cache/3.13/_pytest/warning_types.meta.json",
            ".mypy_cache/3.13/_pytest/warnings.data.json",
            ".mypy_cache/3.13/_pytest/warnings.meta.json",
            ".mypy_cache/3.13/_queue.data.json",
            ".mypy_cache/3.13/_queue.meta.json",
            ".mypy_cache/3.13/_random.data.json",
            ".mypy_cache/3.13/_random.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_socket.data.json",
            ".mypy_cache/3.13/_socket.meta.json",
            ".mypy_cache/3.13/_sqlite3.data.json",
            ".mypy_cache/3.13/_sqlite3.meta.json",
            ".mypy_cache/3.13/_ssl.data.json",
            ".mypy_cache/3.13/_ssl.meta.json",
            ".mypy_cache/3.13/_stat.data.json",
            ".mypy_cache/3.13/_stat.meta.json",
            ".mypy_cache/3.13/_struct.data.json",
            ".mypy_cache/3.13/_struct.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_typeshed/wsgi.data.json",
            ".mypy_cache/3.13/_typeshed/wsgi.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_weakref.data.json",
            ".mypy_cache/3.13/_weakref.meta.json",
            ".mypy_cache/3.13/_weakrefset.data.json",
            ".mypy_cache/3.13/_weakrefset.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/annotated_types/__init__.data.json",
            ".mypy_cache/3.13/annotated_types/__init__.meta.json",
            ".mypy_cache/3.13/anyio/__init__.data.json",
            ".mypy_cache/3.13/anyio/__init__.meta.json",
            ".mypy_cache/3.13/anyio/_core/__init__.data.json",
            ".mypy_cache/3.13/anyio/_core/__init__.meta.json",
            ".mypy_cache/3.13/anyio/_core/_contextmanagers.data.json",
            ".mypy_cache/3.13/anyio/_core/_contextmanagers.meta.json",
            ".mypy_cache/3.13/anyio/_core/_eventloop.data.json",
            ".mypy_cache/3.13/anyio/_core/_eventloop.meta.json",
            ".mypy_cache/3.13/anyio/_core/_exceptions.data.json",
            ".mypy_cache/3.13/anyio/_core/_exceptions.meta.json",
            ".mypy_cache/3.13/anyio/_core/_fileio.data.json",
            ".mypy_cache/3.13/anyio/_core/_fileio.meta.json",
            ".mypy_cache/3.13/anyio/_core/_resources.data.json",
            ".mypy_cache/3.13/anyio/_core/_resources.meta.json",
            ".mypy_cache/3.13/anyio/_core/_signals.data.json",
            ".mypy_cache/3.13/anyio/_core/_signals.meta.json",
            ".mypy_cache/3.13/anyio/_core/_sockets.data.json",
            ".mypy_cache/3.13/anyio/_core/_sockets.meta.json",
            ".mypy_cache/3.13/anyio/_core/_streams.data.json",
            ".mypy_cache/3.13/anyio/_core/_streams.meta.json",
            ".mypy_cache/3.13/anyio/_core/_subprocesses.data.json",
            ".mypy_cache/3.13/anyio/_core/_subprocesses.meta.json",
            ".mypy_cache/3.13/anyio/_core/_synchronization.data.json",
            ".mypy_cache/3.13/anyio/_core/_synchronization.meta.json",
            ".mypy_cache/3.13/anyio/_core/_tasks.data.json",
            ".mypy_cache/3.13/anyio/_core/_tasks.meta.json",
            ".mypy_cache/3.13/anyio/_core/_tempfile.data.json",
            ".mypy_cache/3.13/anyio/_core/_tempfile.meta.json",
            ".mypy_cache/3.13/anyio/_core/_testing.data.json",
            ".mypy_cache/3.13/anyio/_core/_testing.meta.json",
            ".mypy_cache/3.13/anyio/_core/_typedattr.data.json",
            ".mypy_cache/3.13/anyio/_core/_typedattr.meta.json",
            ".mypy_cache/3.13/anyio/abc/__init__.data.json",
            ".mypy_cache/3.13/anyio/abc/__init__.meta.json",
            ".mypy_cache/3.13/anyio/abc/_eventloop.data.json",
            ".mypy_cache/3.13/anyio/abc/_eventloop.meta.json",
            ".mypy_cache/3.13/anyio/abc/_resources.data.json",
            ".mypy_cache/3.13/anyio/abc/_resources.meta.json",
            ".mypy_cache/3.13/anyio/abc/_sockets.data.json",
            ".mypy_cache/3.13/anyio/abc/_sockets.meta.json",
            ".mypy_cache/3.13/anyio/abc/_streams.data.json",
            ".mypy_cache/3.13/anyio/abc/_streams.meta.json",
            ".mypy_cache/3.13/anyio/abc/_subprocesses.data.json",
            ".mypy_cache/3.13/anyio/abc/_subprocesses.meta.json",
            ".mypy_cache/3.13/anyio/abc/_tasks.data.json",
            ".mypy_cache/3.13/anyio/abc/_tasks.meta.json",
            ".mypy_cache/3.13/anyio/abc/_testing.data.json",
            ".mypy_cache/3.13/anyio/abc/_testing.meta.json",
            ".mypy_cache/3.13/anyio/from_thread.data.json",
            ".mypy_cache/3.13/anyio/from_thread.meta.json",
            ".mypy_cache/3.13/anyio/lowlevel.data.json",
            ".mypy_cache/3.13/anyio/lowlevel.meta.json",
            ".mypy_cache/3.13/anyio/streams/__init__.data.json",
            ".mypy_cache/3.13/anyio/streams/__init__.meta.json",
            ".mypy_cache/3.13/anyio/streams/memory.data.json",
            ".mypy_cache/3.13/anyio/streams/memory.meta.json",
            ".mypy_cache/3.13/anyio/streams/stapled.data.json",
            ".mypy_cache/3.13/anyio/streams/stapled.meta.json",
            ".mypy_cache/3.13/anyio/streams/tls.data.json",
            ".mypy_cache/3.13/anyio/streams/tls.meta.json",
            ".mypy_cache/3.13/anyio/to_thread.data.json",
            ".mypy_cache/3.13/anyio/to_thread.meta.json",
            ".mypy_cache/3.13/argparse.data.json",
            ".mypy_cache/3.13/argparse.meta.json",
            ".mypy_cache/3.13/array.data.json",
            ".mypy_cache/3.13/array.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/asyncio/__init__.data.json",
            ".mypy_cache/3.13/asyncio/__init__.meta.json",
            ".mypy_cache/3.13/asyncio/base_events.data.json",
            ".mypy_cache/3.13/asyncio/base_events.meta.json",
            ".mypy_cache/3.13/asyncio/base_futures.data.json",
            ".mypy_cache/3.13/asyncio/base_futures.meta.json",
            ".mypy_cache/3.13/asyncio/constants.data.json",
            ".mypy_cache/3.13/asyncio/constants.meta.json",
            ".mypy_cache/3.13/asyncio/coroutines.data.json",
            ".mypy_cache/3.13/asyncio/coroutines.meta.json",
            ".mypy_cache/3.13/asyncio/events.data.json",
            ".mypy_cache/3.13/asyncio/events.meta.json",
            ".mypy_cache/3.13/asyncio/exceptions.data.json",
            ".mypy_cache/3.13/asyncio/exceptions.meta.json",
            ".mypy_cache/3.13/asyncio/futures.data.json",
            ".mypy_cache/3.13/asyncio/futures.meta.json",
            ".mypy_cache/3.13/asyncio/locks.data.json",
            ".mypy_cache/3.13/asyncio/locks.meta.json",
            ".mypy_cache/3.13/asyncio/mixins.data.json",
            ".mypy_cache/3.13/asyncio/mixins.meta.json",
            ".mypy_cache/3.13/asyncio/proactor_events.data.json",
            ".mypy_cache/3.13/asyncio/proactor_events.meta.json",
            ".mypy_cache/3.13/asyncio/protocols.data.json",
            ".mypy_cache/3.13/asyncio/protocols.meta.json",
            ".mypy_cache/3.13/asyncio/queues.data.json",
            ".mypy_cache/3.13/asyncio/queues.meta.json",
            ".mypy_cache/3.13/asyncio/runners.data.json",
            ".mypy_cache/3.13/asyncio/runners.meta.json",
            ".mypy_cache/3.13/asyncio/selector_events.data.json",
            ".mypy_cache/3.13/asyncio/selector_events.meta.json",
            ".mypy_cache/3.13/asyncio/streams.data.json",
            ".mypy_cache/3.13/asyncio/streams.meta.json",
            ".mypy_cache/3.13/asyncio/subprocess.data.json",
            ".mypy_cache/3.13/asyncio/subprocess.meta.json",
            ".mypy_cache/3.13/asyncio/taskgroups.data.json",
            ".mypy_cache/3.13/asyncio/taskgroups.meta.json",
            ".mypy_cache/3.13/asyncio/tasks.data.json",
            ".mypy_cache/3.13/asyncio/tasks.meta.json",
            ".mypy_cache/3.13/asyncio/threads.data.json",
            ".mypy_cache/3.13/asyncio/threads.meta.json",
            ".mypy_cache/3.13/asyncio/timeouts.data.json",
            ".mypy_cache/3.13/asyncio/timeouts.meta.json",
            ".mypy_cache/3.13/asyncio/transports.data.json",
            ".mypy_cache/3.13/asyncio/transports.meta.json",
            ".mypy_cache/3.13/asyncio/unix_events.data.json",
            ".mypy_cache/3.13/asyncio/unix_events.meta.json",
            ".mypy_cache/3.13/asyncio/windows_events.data.json",
            ".mypy_cache/3.13/asyncio/windows_events.meta.json",
            ".mypy_cache/3.13/asyncio/windows_utils.data.json",
            ".mypy_cache/3.13/asyncio/windows_utils.meta.json",
            ".mypy_cache/3.13/atexit.data.json",
            ".mypy_cache/3.13/atexit.meta.json",
            ".mypy_cache/3.13/base64.data.json",
            ".mypy_cache/3.13/base64.meta.json",
            ".mypy_cache/3.13/bdb.data.json",
            ".mypy_cache/3.13/bdb.meta.json",
            ".mypy_cache/3.13/binascii.data.json",
            ".mypy_cache/3.13/binascii.meta.json",
            ".mypy_cache/3.13/bisect.data.json",
            ".mypy_cache/3.13/bisect.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/certifi/__init__.data.json",
            ".mypy_cache/3.13/certifi/__init__.meta.json",
            ".mypy_cache/3.13/certifi/core.data.json",
            ".mypy_cache/3.13/certifi/core.meta.json",
            ".mypy_cache/3.13/click/__init__.data.json",
            ".mypy_cache/3.13/click/__init__.meta.json",
            ".mypy_cache/3.13/click/_compat.data.json",
            ".mypy_cache/3.13/click/_compat.meta.json",
            ".mypy_cache/3.13/click/_termui_impl.data.json",
            ".mypy_cache/3.13/click/_termui_impl.meta.json",
            ".mypy_cache/3.13/click/_utils.data.json",
            ".mypy_cache/3.13/click/_utils.meta.json",
            ".mypy_cache/3.13/click/_winconsole.data.json",
            ".mypy_cache/3.13/click/_winconsole.meta.json",
            ".mypy_cache/3.13/click/core.data.json",
            ".mypy_cache/3.13/click/core.meta.json",
            ".mypy_cache/3.13/click/decorators.data.json",
            ".mypy_cache/3.13/click/decorators.meta.json",
            ".mypy_cache/3.13/click/exceptions.data.json",
            ".mypy_cache/3.13/click/exceptions.meta.json",
            ".mypy_cache/3.13/click/formatting.data.json",
            ".mypy_cache/3.13/click/formatting.meta.json",
            ".mypy_cache/3.13/click/globals.data.json",
            ".mypy_cache/3.13/click/globals.meta.json",
            ".mypy_cache/3.13/click/parser.data.json",
            ".mypy_cache/3.13/click/parser.meta.json",
            ".mypy_cache/3.13/click/shell_completion.data.json",
            ".mypy_cache/3.13/click/shell_completion.meta.json",
            ".mypy_cache/3.13/click/termui.data.json",
            ".mypy_cache/3.13/click/termui.meta.json",
            ".mypy_cache/3.13/click/testing.data.json",
            ".mypy_cache/3.13/click/testing.meta.json",
            ".mypy_cache/3.13/click/types.data.json",
            ".mypy_cache/3.13/click/types.meta.json",
            ".mypy_cache/3.13/click/utils.data.json",
            ".mypy_cache/3.13/click/utils.meta.json",
            ".mypy_cache/3.13/cmd.data.json",
            ".mypy_cache/3.13/cmd.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/colorsys.data.json",
            ".mypy_cache/3.13/colorsys.meta.json",
            ".mypy_cache/3.13/concurrent/__init__.data.json",
            ".mypy_cache/3.13/concurrent/__init__.meta.json",
            ".mypy_cache/3.13/concurrent/futures/__init__.data.json",
            ".mypy_cache/3.13/concurrent/futures/__init__.meta.json",
            ".mypy_cache/3.13/concurrent/futures/_base.data.json",
            ".mypy_cache/3.13/concurrent/futures/_base.meta.json",
            ".mypy_cache/3.13/concurrent/futures/process.data.json",
            ".mypy_cache/3.13/concurrent/futures/process.meta.json",
            ".mypy_cache/3.13/concurrent/futures/thread.data.json",
            ".mypy_cache/3.13/concurrent/futures/thread.meta.json",
            ".mypy_cache/3.13/configparser.data.json",
            ".mypy_cache/3.13/configparser.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/copy.data.json",
            ".mypy_cache/3.13/copy.meta.json",
            ".mypy_cache/3.13/copyreg.data.json",
            ".mypy_cache/3.13/copyreg.meta.json",
            ".mypy_cache/3.13/cryptography/__about__.data.json",
            ".mypy_cache/3.13/cryptography/__about__.meta.json",
            ".mypy_cache/3.13/cryptography/__init__.data.json",
            ".mypy_cache/3.13/cryptography/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/exceptions.data.json",
            ".mypy_cache/3.13/cryptography/exceptions.meta.json",
            ".mypy_cache/3.13/cryptography/fernet.data.json",
            ".mypy_cache/3.13/cryptography/fernet.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/_oid.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/_oid.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/openssl/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/openssl/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/openssl/backend.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/openssl/backend.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/_openssl.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/_openssl.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/asn1.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/asn1.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/exceptions.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/exceptions.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/aead.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/aead.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ciphers.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ciphers.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/cmac.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/cmac.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/dh.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/dh.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/dsa.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/dsa.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ec.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ec.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ed25519.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ed25519.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ed448.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ed448.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/hashes.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/hashes.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/hmac.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/hmac.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/kdf.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/kdf.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/keys.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/keys.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/poly1305.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/poly1305.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/rsa.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/rsa.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/x25519.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/x25519.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/x448.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/x448.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/_conditional.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/_conditional.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/binding.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/binding.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/ciphers/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/ciphers/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/ciphers/algorithms.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/ciphers/algorithms.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_asymmetric.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_asymmetric.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_cipheralgorithm.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_cipheralgorithm.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_serialization.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_serialization.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/dh.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/dh.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/dsa.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/dsa.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ec.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ec.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ed25519.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ed25519.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ed448.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ed448.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/padding.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/padding.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/rsa.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/rsa.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/types.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/types.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/utils.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/utils.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/x25519.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/x25519.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/x448.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/x448.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/algorithms.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/algorithms.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/base.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/base.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/modes.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/modes.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/constant_time.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/constant_time.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/hashes.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/hashes.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/hmac.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/hmac.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/kdf/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/kdf/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/kdf/pbkdf2.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/kdf/pbkdf2.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/padding.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/padding.meta.json",
            ".mypy_cache/3.13/cryptography/utils.data.json",
            ".mypy_cache/3.13/cryptography/utils.meta.json",
            ".mypy_cache/3.13/ctypes/__init__.data.json",
            ".mypy_cache/3.13/ctypes/__init__.meta.json",
            ".mypy_cache/3.13/ctypes/_endian.data.json",
            ".mypy_cache/3.13/ctypes/_endian.meta.json",
            ".mypy_cache/3.13/ctypes/wintypes.data.json",
            ".mypy_cache/3.13/ctypes/wintypes.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/datetime.data.json",
            ".mypy_cache/3.13/datetime.meta.json",
            ".mypy_cache/3.13/decimal.data.json",
            ".mypy_cache/3.13/decimal.meta.json",
            ".mypy_cache/3.13/difflib.data.json",
            ".mypy_cache/3.13/difflib.meta.json",
            ".mypy_cache/3.13/dis.data.json",
            ".mypy_cache/3.13/dis.meta.json",
            ".mypy_cache/3.13/doctest.data.json",
            ".mypy_cache/3.13/doctest.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/feedparser.data.json",
            ".mypy_cache/3.13/email/feedparser.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/parser.data.json",
            ".mypy_cache/3.13/email/parser.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/email/utils.data.json",
            ".mypy_cache/3.13/email/utils.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/errno.data.json",
            ".mypy_cache/3.13/errno.meta.json",
            ".mypy_cache/3.13/fastapi/__init__.data.json",
            ".mypy_cache/3.13/fastapi/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/_compat.data.json",
            ".mypy_cache/3.13/fastapi/_compat.meta.json",
            ".mypy_cache/3.13/fastapi/applications.data.json",
            ".mypy_cache/3.13/fastapi/applications.meta.json",
            ".mypy_cache/3.13/fastapi/background.data.json",
            ".mypy_cache/3.13/fastapi/background.meta.json",
            ".mypy_cache/3.13/fastapi/concurrency.data.json",
            ".mypy_cache/3.13/fastapi/concurrency.meta.json",
            ".mypy_cache/3.13/fastapi/datastructures.data.json",
            ".mypy_cache/3.13/fastapi/datastructures.meta.json",
            ".mypy_cache/3.13/fastapi/dependencies/__init__.data.json",
            ".mypy_cache/3.13/fastapi/dependencies/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/dependencies/models.data.json",
            ".mypy_cache/3.13/fastapi/dependencies/models.meta.json",
            ".mypy_cache/3.13/fastapi/dependencies/utils.data.json",
            ".mypy_cache/3.13/fastapi/dependencies/utils.meta.json",
            ".mypy_cache/3.13/fastapi/encoders.data.json",
            ".mypy_cache/3.13/fastapi/encoders.meta.json",
            ".mypy_cache/3.13/fastapi/exception_handlers.data.json",
            ".mypy_cache/3.13/fastapi/exception_handlers.meta.json",
            ".mypy_cache/3.13/fastapi/exceptions.data.json",
            ".mypy_cache/3.13/fastapi/exceptions.meta.json",
            ".mypy_cache/3.13/fastapi/logger.data.json",
            ".mypy_cache/3.13/fastapi/logger.meta.json",
            ".mypy_cache/3.13/fastapi/middleware/__init__.data.json",
            ".mypy_cache/3.13/fastapi/middleware/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/middleware/asyncexitstack.data.json",
            ".mypy_cache/3.13/fastapi/middleware/asyncexitstack.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/__init__.data.json",
            ".mypy_cache/3.13/fastapi/openapi/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/constants.data.json",
            ".mypy_cache/3.13/fastapi/openapi/constants.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/docs.data.json",
            ".mypy_cache/3.13/fastapi/openapi/docs.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/models.data.json",
            ".mypy_cache/3.13/fastapi/openapi/models.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/utils.data.json",
            ".mypy_cache/3.13/fastapi/openapi/utils.meta.json",
            ".mypy_cache/3.13/fastapi/param_functions.data.json",
            ".mypy_cache/3.13/fastapi/param_functions.meta.json",
            ".mypy_cache/3.13/fastapi/params.data.json",
            ".mypy_cache/3.13/fastapi/params.meta.json",
            ".mypy_cache/3.13/fastapi/requests.data.json",
            ".mypy_cache/3.13/fastapi/requests.meta.json",
            ".mypy_cache/3.13/fastapi/responses.data.json",
            ".mypy_cache/3.13/fastapi/responses.meta.json",
            ".mypy_cache/3.13/fastapi/routing.data.json",
            ".mypy_cache/3.13/fastapi/routing.meta.json",
            ".mypy_cache/3.13/fastapi/security/__init__.data.json",
            ".mypy_cache/3.13/fastapi/security/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/security/api_key.data.json",
            ".mypy_cache/3.13/fastapi/security/api_key.meta.json",
            ".mypy_cache/3.13/fastapi/security/base.data.json",
            ".mypy_cache/3.13/fastapi/security/base.meta.json",
            ".mypy_cache/3.13/fastapi/security/http.data.json",
            ".mypy_cache/3.13/fastapi/security/http.meta.json",
            ".mypy_cache/3.13/fastapi/security/oauth2.data.json",
            ".mypy_cache/3.13/fastapi/security/oauth2.meta.json",
            ".mypy_cache/3.13/fastapi/security/open_id_connect_url.data.json",
            ".mypy_cache/3.13/fastapi/security/open_id_connect_url.meta.json",
            ".mypy_cache/3.13/fastapi/security/utils.data.json",
            ".mypy_cache/3.13/fastapi/security/utils.meta.json",
            ".mypy_cache/3.13/fastapi/testclient.data.json",
            ".mypy_cache/3.13/fastapi/testclient.meta.json",
            ".mypy_cache/3.13/fastapi/types.data.json",
            ".mypy_cache/3.13/fastapi/types.meta.json",
            ".mypy_cache/3.13/fastapi/utils.data.json",
            ".mypy_cache/3.13/fastapi/utils.meta.json",
            ".mypy_cache/3.13/fastapi/websockets.data.json",
            ".mypy_cache/3.13/fastapi/websockets.meta.json",
            ".mypy_cache/3.13/fnmatch.data.json",
            ".mypy_cache/3.13/fnmatch.meta.json",
            ".mypy_cache/3.13/fractions.data.json",
            ".mypy_cache/3.13/fractions.meta.json",
            ".mypy_cache/3.13/functools.data.json",
            ".mypy_cache/3.13/functools.meta.json",
            ".mypy_cache/3.13/gc.data.json",
            ".mypy_cache/3.13/gc.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/getpass.data.json",
            ".mypy_cache/3.13/getpass.meta.json",
            ".mypy_cache/3.13/gettext.data.json",
            ".mypy_cache/3.13/gettext.meta.json",
            ".mypy_cache/3.13/glob.data.json",
            ".mypy_cache/3.13/glob.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/h11/__init__.data.json",
            ".mypy_cache/3.13/h11/__init__.meta.json",
            ".mypy_cache/3.13/h11/_abnf.data.json",
            ".mypy_cache/3.13/h11/_abnf.meta.json",
            ".mypy_cache/3.13/h11/_connection.data.json",
            ".mypy_cache/3.13/h11/_connection.meta.json",
            ".mypy_cache/3.13/h11/_events.data.json",
            ".mypy_cache/3.13/h11/_events.meta.json",
            ".mypy_cache/3.13/h11/_headers.data.json",
            ".mypy_cache/3.13/h11/_headers.meta.json",
            ".mypy_cache/3.13/h11/_readers.data.json",
            ".mypy_cache/3.13/h11/_readers.meta.json",
            ".mypy_cache/3.13/h11/_receivebuffer.data.json",
            ".mypy_cache/3.13/h11/_receivebuffer.meta.json",
            ".mypy_cache/3.13/h11/_state.data.json",
            ".mypy_cache/3.13/h11/_state.meta.json",
            ".mypy_cache/3.13/h11/_util.data.json",
            ".mypy_cache/3.13/h11/_util.meta.json",
            ".mypy_cache/3.13/h11/_version.data.json",
            ".mypy_cache/3.13/h11/_version.meta.json",
            ".mypy_cache/3.13/h11/_writers.data.json",
            ".mypy_cache/3.13/h11/_writers.meta.json",
            ".mypy_cache/3.13/hashlib.data.json",
            ".mypy_cache/3.13/hashlib.meta.json",
            ".mypy_cache/3.13/hmac.data.json",
            ".mypy_cache/3.13/hmac.meta.json",
            ".mypy_cache/3.13/html/__init__.data.json",
            ".mypy_cache/3.13/html/__init__.meta.json",
            ".mypy_cache/3.13/html/entities.data.json",
            ".mypy_cache/3.13/html/entities.meta.json",
            ".mypy_cache/3.13/http/__init__.data.json",
            ".mypy_cache/3.13/http/__init__.meta.json",
            ".mypy_cache/3.13/http/client.data.json",
            ".mypy_cache/3.13/http/client.meta.json",
            ".mypy_cache/3.13/http/cookiejar.data.json",
            ".mypy_cache/3.13/http/cookiejar.meta.json",
            ".mypy_cache/3.13/http/cookies.data.json",
            ".mypy_cache/3.13/http/cookies.meta.json",
            ".mypy_cache/3.13/httpcore/__init__.data.json",
            ".mypy_cache/3.13/httpcore/__init__.meta.json",
            ".mypy_cache/3.13/httpcore/_api.data.json",
            ".mypy_cache/3.13/httpcore/_api.meta.json",
            ".mypy_cache/3.13/httpcore/_async/__init__.data.json",
            ".mypy_cache/3.13/httpcore/_async/__init__.meta.json",
            ".mypy_cache/3.13/httpcore/_async/connection.data.json",
            ".mypy_cache/3.13/httpcore/_async/connection.meta.json",
            ".mypy_cache/3.13/httpcore/_async/connection_pool.data.json",
            ".mypy_cache/3.13/httpcore/_async/connection_pool.meta.json",
            ".mypy_cache/3.13/httpcore/_async/http11.data.json",
            ".mypy_cache/3.13/httpcore/_async/http11.meta.json",
            ".mypy_cache/3.13/httpcore/_async/http2.data.json",
            ".mypy_cache/3.13/httpcore/_async/http2.meta.json",
            ".mypy_cache/3.13/httpcore/_async/http_proxy.data.json",
            ".mypy_cache/3.13/httpcore/_async/http_proxy.meta.json",
            ".mypy_cache/3.13/httpcore/_async/interfaces.data.json",
            ".mypy_cache/3.13/httpcore/_async/interfaces.meta.json",
            ".mypy_cache/3.13/httpcore/_async/socks_proxy.data.json",
            ".mypy_cache/3.13/httpcore/_async/socks_proxy.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/__init__.data.json",
            ".mypy_cache/3.13/httpcore/_backends/__init__.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/anyio.data.json",
            ".mypy_cache/3.13/httpcore/_backends/anyio.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/auto.data.json",
            ".mypy_cache/3.13/httpcore/_backends/auto.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/base.data.json",
            ".mypy_cache/3.13/httpcore/_backends/base.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/mock.data.json",
            ".mypy_cache/3.13/httpcore/_backends/mock.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/sync.data.json",
            ".mypy_cache/3.13/httpcore/_backends/sync.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/trio.data.json",
            ".mypy_cache/3.13/httpcore/_backends/trio.meta.json",
            ".mypy_cache/3.13/httpcore/_exceptions.data.json",
            ".mypy_cache/3.13/httpcore/_exceptions.meta.json",
            ".mypy_cache/3.13/httpcore/_models.data.json",
            ".mypy_cache/3.13/httpcore/_models.meta.json",
            ".mypy_cache/3.13/httpcore/_ssl.data.json",
            ".mypy_cache/3.13/httpcore/_ssl.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/__init__.data.json",
            ".mypy_cache/3.13/httpcore/_sync/__init__.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/connection.data.json",
            ".mypy_cache/3.13/httpcore/_sync/connection.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/connection_pool.data.json",
            ".mypy_cache/3.13/httpcore/_sync/connection_pool.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/http11.data.json",
            ".mypy_cache/3.13/httpcore/_sync/http11.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/http2.data.json",
            ".mypy_cache/3.13/httpcore/_sync/http2.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/http_proxy.data.json",
            ".mypy_cache/3.13/httpcore/_sync/http_proxy.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/interfaces.data.json",
            ".mypy_cache/3.13/httpcore/_sync/interfaces.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/socks_proxy.data.json",
            ".mypy_cache/3.13/httpcore/_sync/socks_proxy.meta.json",
            ".mypy_cache/3.13/httpcore/_synchronization.data.json",
            ".mypy_cache/3.13/httpcore/_synchronization.meta.json",
            ".mypy_cache/3.13/httpcore/_trace.data.json",
            ".mypy_cache/3.13/httpcore/_trace.meta.json",
            ".mypy_cache/3.13/httpcore/_utils.data.json",
            ".mypy_cache/3.13/httpcore/_utils.meta.json",
            ".mypy_cache/3.13/httpx/__init__.data.json",
            ".mypy_cache/3.13/httpx/__init__.meta.json",
            ".mypy_cache/3.13/httpx/__version__.data.json",
            ".mypy_cache/3.13/httpx/__version__.meta.json",
            ".mypy_cache/3.13/httpx/_api.data.json",
            ".mypy_cache/3.13/httpx/_api.meta.json",
            ".mypy_cache/3.13/httpx/_auth.data.json",
            ".mypy_cache/3.13/httpx/_auth.meta.json",
            ".mypy_cache/3.13/httpx/_client.data.json",
            ".mypy_cache/3.13/httpx/_client.meta.json",
            ".mypy_cache/3.13/httpx/_config.data.json",
            ".mypy_cache/3.13/httpx/_config.meta.json",
            ".mypy_cache/3.13/httpx/_content.data.json",
            ".mypy_cache/3.13/httpx/_content.meta.json",
            ".mypy_cache/3.13/httpx/_decoders.data.json",
            ".mypy_cache/3.13/httpx/_decoders.meta.json",
            ".mypy_cache/3.13/httpx/_exceptions.data.json",
            ".mypy_cache/3.13/httpx/_exceptions.meta.json",
            ".mypy_cache/3.13/httpx/_main.data.json",
            ".mypy_cache/3.13/httpx/_main.meta.json",
            ".mypy_cache/3.13/httpx/_models.data.json",
            ".mypy_cache/3.13/httpx/_models.meta.json",
            ".mypy_cache/3.13/httpx/_multipart.data.json",
            ".mypy_cache/3.13/httpx/_multipart.meta.json",
            ".mypy_cache/3.13/httpx/_status_codes.data.json",
            ".mypy_cache/3.13/httpx/_status_codes.meta.json",
            ".mypy_cache/3.13/httpx/_transports/__init__.data.json",
            ".mypy_cache/3.13/httpx/_transports/__init__.meta.json",
            ".mypy_cache/3.13/httpx/_transports/asgi.data.json",
            ".mypy_cache/3.13/httpx/_transports/asgi.meta.json",
            ".mypy_cache/3.13/httpx/_transports/base.data.json",
            ".mypy_cache/3.13/httpx/_transports/base.meta.json",
            ".mypy_cache/3.13/httpx/_transports/default.data.json",
            ".mypy_cache/3.13/httpx/_transports/default.meta.json",
            ".mypy_cache/3.13/httpx/_transports/mock.data.json",
            ".mypy_cache/3.13/httpx/_transports/mock.meta.json",
            ".mypy_cache/3.13/httpx/_transports/wsgi.data.json",
            ".mypy_cache/3.13/httpx/_transports/wsgi.meta.json",
            ".mypy_cache/3.13/httpx/_types.data.json",
            ".mypy_cache/3.13/httpx/_types.meta.json",
            ".mypy_cache/3.13/httpx/_urlparse.data.json",
            ".mypy_cache/3.13/httpx/_urlparse.meta.json",
            ".mypy_cache/3.13/httpx/_urls.data.json",
            ".mypy_cache/3.13/httpx/_urls.meta.json",
            ".mypy_cache/3.13/httpx/_utils.data.json",
            ".mypy_cache/3.13/httpx/_utils.meta.json",
            ".mypy_cache/3.13/idna/__init__.data.json",
            ".mypy_cache/3.13/idna/__init__.meta.json",
            ".mypy_cache/3.13/idna/core.data.json",
            ".mypy_cache/3.13/idna/core.meta.json",
            ".mypy_cache/3.13/idna/idnadata.data.json",
            ".mypy_cache/3.13/idna/idnadata.meta.json",
            ".mypy_cache/3.13/idna/intranges.data.json",
            ".mypy_cache/3.13/idna/intranges.meta.json",
            ".mypy_cache/3.13/idna/package_data.data.json",
            ".mypy_cache/3.13/idna/package_data.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/importlib/resources/readers.data.json",
            ".mypy_cache/3.13/importlib/resources/readers.meta.json",
            ".mypy_cache/3.13/importlib/util.data.json",
            ".mypy_cache/3.13/importlib/util.meta.json",
            ".mypy_cache/3.13/iniconfig/__init__.data.json",
            ".mypy_cache/3.13/iniconfig/__init__.meta.json",
            ".mypy_cache/3.13/iniconfig/_parse.data.json",
            ".mypy_cache/3.13/iniconfig/_parse.meta.json",
            ".mypy_cache/3.13/iniconfig/exceptions.data.json",
            ".mypy_cache/3.13/iniconfig/exceptions.meta.json",
            ".mypy_cache/3.13/inspect.data.json",
            ".mypy_cache/3.13/inspect.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/ipaddress.data.json",
            ".mypy_cache/3.13/ipaddress.meta.json",
            ".mypy_cache/3.13/itertools.data.json",
            ".mypy_cache/3.13/itertools.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/keyword.data.json",
            ".mypy_cache/3.13/keyword.meta.json",
            ".mypy_cache/3.13/linecache.data.json",
            ".mypy_cache/3.13/linecache.meta.json",
            ".mypy_cache/3.13/locale.data.json",
            ".mypy_cache/3.13/locale.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/_punycode.data.json",
            ".mypy_cache/3.13/markdown_it/_punycode.meta.json",
            ".mypy_cache/3.13/markdown_it/common/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/common/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/common/entities.data.json",
            ".mypy_cache/3.13/markdown_it/common/entities.meta.json",
            ".mypy_cache/3.13/markdown_it/common/html_blocks.data.json",
            ".mypy_cache/3.13/markdown_it/common/html_blocks.meta.json",
            ".mypy_cache/3.13/markdown_it/common/html_re.data.json",
            ".mypy_cache/3.13/markdown_it/common/html_re.meta.json",
            ".mypy_cache/3.13/markdown_it/common/normalize_url.data.json",
            ".mypy_cache/3.13/markdown_it/common/normalize_url.meta.json",
            ".mypy_cache/3.13/markdown_it/common/utils.data.json",
            ".mypy_cache/3.13/markdown_it/common/utils.meta.json",
            ".mypy_cache/3.13/markdown_it/helpers/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/helpers/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_destination.data.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_destination.meta.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_label.data.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_label.meta.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_title.data.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_title.meta.json",
            ".mypy_cache/3.13/markdown_it/main.data.json",
            ".mypy_cache/3.13/markdown_it/main.meta.json",
            ".mypy_cache/3.13/markdown_it/parser_block.data.json",
            ".mypy_cache/3.13/markdown_it/parser_block.meta.json",
            ".mypy_cache/3.13/markdown_it/parser_core.data.json",
            ".mypy_cache/3.13/markdown_it/parser_core.meta.json",
            ".mypy_cache/3.13/markdown_it/parser_inline.data.json",
            ".mypy_cache/3.13/markdown_it/parser_inline.meta.json",
            ".mypy_cache/3.13/markdown_it/presets/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/presets/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/presets/commonmark.data.json",
            ".mypy_cache/3.13/markdown_it/presets/commonmark.meta.json",
            ".mypy_cache/3.13/markdown_it/presets/default.data.json",
            ".mypy_cache/3.13/markdown_it/presets/default.meta.json",
            ".mypy_cache/3.13/markdown_it/presets/zero.data.json",
            ".mypy_cache/3.13/markdown_it/presets/zero.meta.json",
            ".mypy_cache/3.13/markdown_it/renderer.data.json",
            ".mypy_cache/3.13/markdown_it/renderer.meta.json",
            ".mypy_cache/3.13/markdown_it/ruler.data.json",
            ".mypy_cache/3.13/markdown_it/ruler.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/blockquote.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/blockquote.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/code.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/code.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/fence.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/fence.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/heading.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/heading.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/hr.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/hr.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/html_block.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/html_block.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/lheading.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/lheading.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/list.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/list.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/paragraph.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/paragraph.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/reference.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/reference.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/state_block.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/state_block.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/table.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/table.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/block.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/block.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/inline.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/inline.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/linkify.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/linkify.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/normalize.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/normalize.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/replacements.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/replacements.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/smartquotes.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/smartquotes.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/state_core.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/state_core.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/text_join.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/text_join.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/autolink.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/autolink.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/backticks.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/backticks.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/balance_pairs.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/balance_pairs.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/emphasis.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/emphasis.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/entity.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/entity.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/escape.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/escape.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/fragments_join.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/fragments_join.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/html_inline.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/html_inline.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/image.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/image.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/link.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/link.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/linkify.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/linkify.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/newline.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/newline.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/state_inline.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/state_inline.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/strikethrough.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/strikethrough.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/text.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/text.meta.json",
            ".mypy_cache/3.13/markdown_it/token.data.json",
            ".mypy_cache/3.13/markdown_it/token.meta.json",
            ".mypy_cache/3.13/markdown_it/utils.data.json",
            ".mypy_cache/3.13/markdown_it/utils.meta.json",
            ".mypy_cache/3.13/marshal.data.json",
            ".mypy_cache/3.13/marshal.meta.json",
            ".mypy_cache/3.13/math.data.json",
            ".mypy_cache/3.13/math.meta.json",
            ".mypy_cache/3.13/mdurl/__init__.data.json",
            ".mypy_cache/3.13/mdurl/__init__.meta.json",
            ".mypy_cache/3.13/mdurl/_decode.data.json",
            ".mypy_cache/3.13/mdurl/_decode.meta.json",
            ".mypy_cache/3.13/mdurl/_encode.data.json",
            ".mypy_cache/3.13/mdurl/_encode.meta.json",
            ".mypy_cache/3.13/mdurl/_format.data.json",
            ".mypy_cache/3.13/mdurl/_format.meta.json",
            ".mypy_cache/3.13/mdurl/_parse.data.json",
            ".mypy_cache/3.13/mdurl/_parse.meta.json",
            ".mypy_cache/3.13/mdurl/_url.data.json",
            ".mypy_cache/3.13/mdurl/_url.meta.json",
            ".mypy_cache/3.13/mimetypes.data.json",
            ".mypy_cache/3.13/mimetypes.meta.json",
            ".mypy_cache/3.13/mmap.data.json",
            ".mypy_cache/3.13/mmap.meta.json",
            ".mypy_cache/3.13/msvcrt.data.json",
            ".mypy_cache/3.13/msvcrt.meta.json",
            ".mypy_cache/3.13/multiprocessing/__init__.data.json",
            ".mypy_cache/3.13/multiprocessing/__init__.meta.json",
            ".mypy_cache/3.13/multiprocessing/connection.data.json",
            ".mypy_cache/3.13/multiprocessing/connection.meta.json",
            ".mypy_cache/3.13/multiprocessing/context.data.json",
            ".mypy_cache/3.13/multiprocessing/context.meta.json",
            ".mypy_cache/3.13/multiprocessing/managers.data.json",
            ".mypy_cache/3.13/multiprocessing/managers.meta.json",
            ".mypy_cache/3.13/multiprocessing/pool.data.json",
            ".mypy_cache/3.13/multiprocessing/pool.meta.json",
            ".mypy_cache/3.13/multiprocessing/popen_fork.data.json",
            ".mypy_cache/3.13/multiprocessing/popen_fork.meta.json",
            ".mypy_cache/3.13/multiprocessing/popen_forkserver.data.json",
            ".mypy_cache/3.13/multiprocessing/popen_forkserver.meta.json",
            ".mypy_cache/3.13/multiprocessing/popen_spawn_posix.data.json",
            ".mypy_cache/3.13/multiprocessing/popen_spawn_posix.meta.json",
            ".mypy_cache/3.13/multiprocessing/popen_spawn_win32.data.json",
            ".mypy_cache/3.13/multiprocessing/popen_spawn_win32.meta.json",
            ".mypy_cache/3.13/multiprocessing/process.data.json",
            ".mypy_cache/3.13/multiprocessing/process.meta.json",
            ".mypy_cache/3.13/multiprocessing/queues.data.json",
            ".mypy_cache/3.13/multiprocessing/queues.meta.json",
            ".mypy_cache/3.13/multiprocessing/reduction.data.json",
            ".mypy_cache/3.13/multiprocessing/reduction.meta.json",
            ".mypy_cache/3.13/multiprocessing/shared_memory.data.json",
            ".mypy_cache/3.13/multiprocessing/shared_memory.meta.json",
            ".mypy_cache/3.13/multiprocessing/sharedctypes.data.json",
            ".mypy_cache/3.13/multiprocessing/sharedctypes.meta.json",
            ".mypy_cache/3.13/multiprocessing/spawn.data.json",
            ".mypy_cache/3.13/multiprocessing/spawn.meta.json",
            ".mypy_cache/3.13/multiprocessing/synchronize.data.json",
            ".mypy_cache/3.13/multiprocessing/synchronize.meta.json",
            ".mypy_cache/3.13/multiprocessing/util.data.json",
            ".mypy_cache/3.13/multiprocessing/util.meta.json",
            ".mypy_cache/3.13/netrc.data.json",
            ".mypy_cache/3.13/netrc.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/nturl2path.data.json",
            ".mypy_cache/3.13/nturl2path.meta.json",
            ".mypy_cache/3.13/numbers.data.json",
            ".mypy_cache/3.13/numbers.meta.json",
            ".mypy_cache/3.13/opcode.data.json",
            ".mypy_cache/3.13/opcode.meta.json",
            ".mypy_cache/3.13/operator.data.json",
            ".mypy_cache/3.13/operator.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/packaging/__init__.data.json",
            ".mypy_cache/3.13/packaging/__init__.meta.json",
            ".mypy_cache/3.13/packaging/_elffile.data.json",
            ".mypy_cache/3.13/packaging/_elffile.meta.json",
            ".mypy_cache/3.13/packaging/_manylinux.data.json",
            ".mypy_cache/3.13/packaging/_manylinux.meta.json",
            ".mypy_cache/3.13/packaging/_musllinux.data.json",
            ".mypy_cache/3.13/packaging/_musllinux.meta.json",
            ".mypy_cache/3.13/packaging/_parser.data.json",
            ".mypy_cache/3.13/packaging/_parser.meta.json",
            ".mypy_cache/3.13/packaging/_structures.data.json",
            ".mypy_cache/3.13/packaging/_structures.meta.json",
            ".mypy_cache/3.13/packaging/_tokenizer.data.json",
            ".mypy_cache/3.13/packaging/_tokenizer.meta.json",
            ".mypy_cache/3.13/packaging/markers.data.json",
            ".mypy_cache/3.13/packaging/markers.meta.json",
            ".mypy_cache/3.13/packaging/requirements.data.json",
            ".mypy_cache/3.13/packaging/requirements.meta.json",
            ".mypy_cache/3.13/packaging/specifiers.data.json",
            ".mypy_cache/3.13/packaging/specifiers.meta.json",
            ".mypy_cache/3.13/packaging/tags.data.json",
            ".mypy_cache/3.13/packaging/tags.meta.json",
            ".mypy_cache/3.13/packaging/utils.data.json",
            ".mypy_cache/3.13/packaging/utils.meta.json",
            ".mypy_cache/3.13/packaging/version.data.json",
            ".mypy_cache/3.13/packaging/version.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/pdb.data.json",
            ".mypy_cache/3.13/pdb.meta.json",
            ".mypy_cache/3.13/pickle.data.json",
            ".mypy_cache/3.13/pickle.meta.json",
            ".mypy_cache/3.13/pkg_resources/__init__.data.json",
            ".mypy_cache/3.13/pkg_resources/__init__.meta.json",
            ".mypy_cache/3.13/pkgutil.data.json",
            ".mypy_cache/3.13/pkgutil.meta.json",
            ".mypy_cache/3.13/platform.data.json",
            ".mypy_cache/3.13/platform.meta.json",
            ".mypy_cache/3.13/platformdirs/__init__.data.json",
            ".mypy_cache/3.13/platformdirs/__init__.meta.json",
            ".mypy_cache/3.13/platformdirs/api.data.json",
            ".mypy_cache/3.13/platformdirs/api.meta.json",
            ".mypy_cache/3.13/platformdirs/version.data.json",
            ".mypy_cache/3.13/platformdirs/version.meta.json",
            ".mypy_cache/3.13/platformdirs/windows.data.json",
            ".mypy_cache/3.13/platformdirs/windows.meta.json",
            ".mypy_cache/3.13/plistlib.data.json",
            ".mypy_cache/3.13/plistlib.meta.json",
            ".mypy_cache/3.13/pluggy/__init__.data.json",
            ".mypy_cache/3.13/pluggy/__init__.meta.json",
            ".mypy_cache/3.13/pluggy/_callers.data.json",
            ".mypy_cache/3.13/pluggy/_callers.meta.json",
            ".mypy_cache/3.13/pluggy/_hooks.data.json",
            ".mypy_cache/3.13/pluggy/_hooks.meta.json",
            ".mypy_cache/3.13/pluggy/_manager.data.json",
            ".mypy_cache/3.13/pluggy/_manager.meta.json",
            ".mypy_cache/3.13/pluggy/_result.data.json",
            ".mypy_cache/3.13/pluggy/_result.meta.json",
            ".mypy_cache/3.13/pluggy/_tracing.data.json",
            ".mypy_cache/3.13/pluggy/_tracing.meta.json",
            ".mypy_cache/3.13/pluggy/_version.data.json",
            ".mypy_cache/3.13/pluggy/_version.meta.json",
            ".mypy_cache/3.13/pluggy/_warnings.data.json",
            ".mypy_cache/3.13/pluggy/_warnings.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/pprint.data.json",
            ".mypy_cache/3.13/pprint.meta.json",
            ".mypy_cache/3.13/pydantic/__init__.data.json",
            ".mypy_cache/3.13/pydantic/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/__init__.data.json",
            ".mypy_cache/3.13/pydantic/_internal/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_config.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_config.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_core_metadata.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_core_metadata.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_core_utils.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_core_utils.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_dataclasses.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_dataclasses.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_decorators.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_decorators.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_decorators_v1.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_decorators_v1.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_discriminated_union.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_discriminated_union.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_docs_extraction.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_docs_extraction.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_fields.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_fields.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_forward_ref.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_forward_ref.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_generate_schema.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_generate_schema.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_generics.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_generics.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_import_utils.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_import_utils.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_internal_dataclass.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_internal_dataclass.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_known_annotated_metadata.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_known_annotated_metadata.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_mock_val_ser.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_mock_val_ser.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_model_construction.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_model_construction.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_namespace_utils.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_namespace_utils.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_repr.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_repr.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_schema_gather.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_schema_gather.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_schema_generation_shared.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_schema_generation_shared.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_serializers.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_serializers.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_signature.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_signature.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_typing_extra.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_typing_extra.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_utils.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_utils.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_validate_call.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_validate_call.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_validators.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_validators.meta.json",
            ".mypy_cache/3.13/pydantic/_migration.data.json",
            ".mypy_cache/3.13/pydantic/_migration.meta.json",
            ".mypy_cache/3.13/pydantic/aliases.data.json",
            ".mypy_cache/3.13/pydantic/aliases.meta.json",
            ".mypy_cache/3.13/pydantic/annotated_handlers.data.json",
            ".mypy_cache/3.13/pydantic/annotated_handlers.meta.json",
            ".mypy_cache/3.13/pydantic/class_validators.data.json",
            ".mypy_cache/3.13/pydantic/class_validators.meta.json",
            ".mypy_cache/3.13/pydantic/color.data.json",
            ".mypy_cache/3.13/pydantic/color.meta.json",
            ".mypy_cache/3.13/pydantic/config.data.json",
            ".mypy_cache/3.13/pydantic/config.meta.json",
            ".mypy_cache/3.13/pydantic/dataclasses.data.json",
            ".mypy_cache/3.13/pydantic/dataclasses.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/__init__.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/class_validators.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/class_validators.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/config.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/config.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/copy_internals.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/copy_internals.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/json.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/json.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/parse.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/parse.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/tools.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/tools.meta.json",
            ".mypy_cache/3.13/pydantic/error_wrappers.data.json",
            ".mypy_cache/3.13/pydantic/error_wrappers.meta.json",
            ".mypy_cache/3.13/pydantic/errors.data.json",
            ".mypy_cache/3.13/pydantic/errors.meta.json",
            ".mypy_cache/3.13/pydantic/fields.data.json",
            ".mypy_cache/3.13/pydantic/fields.meta.json",
            ".mypy_cache/3.13/pydantic/functional_serializers.data.json",
            ".mypy_cache/3.13/pydantic/functional_serializers.meta.json",
            ".mypy_cache/3.13/pydantic/functional_validators.data.json",
            ".mypy_cache/3.13/pydantic/functional_validators.meta.json",
            ".mypy_cache/3.13/pydantic/json_schema.data.json",
            ".mypy_cache/3.13/pydantic/json_schema.meta.json",
            ".mypy_cache/3.13/pydantic/main.data.json",
            ".mypy_cache/3.13/pydantic/main.meta.json",
            ".mypy_cache/3.13/pydantic/networks.data.json",
            ".mypy_cache/3.13/pydantic/networks.meta.json",
            ".mypy_cache/3.13/pydantic/plugin/__init__.data.json",
            ".mypy_cache/3.13/pydantic/plugin/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/plugin/_schema_validator.data.json",
            ".mypy_cache/3.13/pydantic/plugin/_schema_validator.meta.json",
            ".mypy_cache/3.13/pydantic/root_model.data.json",
            ".mypy_cache/3.13/pydantic/root_model.meta.json",
            ".mypy_cache/3.13/pydantic/schema.data.json",
            ".mypy_cache/3.13/pydantic/schema.meta.json",
            ".mypy_cache/3.13/pydantic/type_adapter.data.json",
            ".mypy_cache/3.13/pydantic/type_adapter.meta.json",
            ".mypy_cache/3.13/pydantic/types.data.json",
            ".mypy_cache/3.13/pydantic/types.meta.json",
            ".mypy_cache/3.13/pydantic/typing.data.json",
            ".mypy_cache/3.13/pydantic/typing.meta.json",
            ".mypy_cache/3.13/pydantic/utils.data.json",
            ".mypy_cache/3.13/pydantic/utils.meta.json",
            ".mypy_cache/3.13/pydantic/v1/__init__.data.json",
            ".mypy_cache/3.13/pydantic/v1/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/v1/annotated_types.data.json",
            ".mypy_cache/3.13/pydantic/v1/annotated_types.meta.json",
            ".mypy_cache/3.13/pydantic/v1/class_validators.data.json",
            ".mypy_cache/3.13/pydantic/v1/class_validators.meta.json",
            ".mypy_cache/3.13/pydantic/v1/color.data.json",
            ".mypy_cache/3.13/pydantic/v1/color.meta.json",
            ".mypy_cache/3.13/pydantic/v1/config.data.json",
            ".mypy_cache/3.13/pydantic/v1/config.meta.json",
            ".mypy_cache/3.13/pydantic/v1/dataclasses.data.json",
            ".mypy_cache/3.13/pydantic/v1/dataclasses.meta.json",
            ".mypy_cache/3.13/pydantic/v1/datetime_parse.data.json",
            ".mypy_cache/3.13/pydantic/v1/datetime_parse.meta.json",
            ".mypy_cache/3.13/pydantic/v1/decorator.data.json",
            ".mypy_cache/3.13/pydantic/v1/decorator.meta.json",
            ".mypy_cache/3.13/pydantic/v1/env_settings.data.json",
            ".mypy_cache/3.13/pydantic/v1/env_settings.meta.json",
            ".mypy_cache/3.13/pydantic/v1/error_wrappers.data.json",
            ".mypy_cache/3.13/pydantic/v1/error_wrappers.meta.json",
            ".mypy_cache/3.13/pydantic/v1/errors.data.json",
            ".mypy_cache/3.13/pydantic/v1/errors.meta.json",
            ".mypy_cache/3.13/pydantic/v1/fields.data.json",
            ".mypy_cache/3.13/pydantic/v1/fields.meta.json",
            ".mypy_cache/3.13/pydantic/v1/json.data.json",
            ".mypy_cache/3.13/pydantic/v1/json.meta.json",
            ".mypy_cache/3.13/pydantic/v1/main.data.json",
            ".mypy_cache/3.13/pydantic/v1/main.meta.json",
            ".mypy_cache/3.13/pydantic/v1/networks.data.json",
            ".mypy_cache/3.13/pydantic/v1/networks.meta.json",
            ".mypy_cache/3.13/pydantic/v1/parse.data.json",
            ".mypy_cache/3.13/pydantic/v1/parse.meta.json",
            ".mypy_cache/3.13/pydantic/v1/schema.data.json",
            ".mypy_cache/3.13/pydantic/v1/schema.meta.json",
            ".mypy_cache/3.13/pydantic/v1/tools.data.json",
            ".mypy_cache/3.13/pydantic/v1/tools.meta.json",
            ".mypy_cache/3.13/pydantic/v1/types.data.json",
            ".mypy_cache/3.13/pydantic/v1/types.meta.json",
            ".mypy_cache/3.13/pydantic/v1/typing.data.json",
            ".mypy_cache/3.13/pydantic/v1/typing.meta.json",
            ".mypy_cache/3.13/pydantic/v1/utils.data.json",
            ".mypy_cache/3.13/pydantic/v1/utils.meta.json",
            ".mypy_cache/3.13/pydantic/v1/validators.data.json",
            ".mypy_cache/3.13/pydantic/v1/validators.meta.json",
            ".mypy_cache/3.13/pydantic/v1/version.data.json",
            ".mypy_cache/3.13/pydantic/v1/version.meta.json",
            ".mypy_cache/3.13/pydantic/validate_call_decorator.data.json",
            ".mypy_cache/3.13/pydantic/validate_call_decorator.meta.json",
            ".mypy_cache/3.13/pydantic/version.data.json",
            ".mypy_cache/3.13/pydantic/version.meta.json",
            ".mypy_cache/3.13/pydantic/warnings.data.json",
            ".mypy_cache/3.13/pydantic/warnings.meta.json",
            ".mypy_cache/3.13/pydantic_core/__init__.data.json",
            ".mypy_cache/3.13/pydantic_core/__init__.meta.json",
            ".mypy_cache/3.13/pydantic_core/_pydantic_core.data.json",
            ".mypy_cache/3.13/pydantic_core/_pydantic_core.meta.json",
            ".mypy_cache/3.13/pydantic_core/core_schema.data.json",
            ".mypy_cache/3.13/pydantic_core/core_schema.meta.json",
            ".mypy_cache/3.13/pydoc.data.json",
            ".mypy_cache/3.13/pydoc.meta.json",
            ".mypy_cache/3.13/pytest/__init__.data.json",
            ".mypy_cache/3.13/pytest/__init__.meta.json",
            ".mypy_cache/3.13/queue.data.json",
            ".mypy_cache/3.13/queue.meta.json",
            ".mypy_cache/3.13/random.data.json",
            ".mypy_cache/3.13/random.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/reprlib.data.json",
            ".mypy_cache/3.13/reprlib.meta.json",
            ".mypy_cache/3.13/rich/__init__.data.json",
            ".mypy_cache/3.13/rich/__init__.meta.json",
            ".mypy_cache/3.13/rich/__main__.data.json",
            ".mypy_cache/3.13/rich/__main__.meta.json",
            ".mypy_cache/3.13/rich/_cell_widths.data.json",
            ".mypy_cache/3.13/rich/_cell_widths.meta.json",
            ".mypy_cache/3.13/rich/_emoji_codes.data.json",
            ".mypy_cache/3.13/rich/_emoji_codes.meta.json",
            ".mypy_cache/3.13/rich/_emoji_replace.data.json",
            ".mypy_cache/3.13/rich/_emoji_replace.meta.json",
            ".mypy_cache/3.13/rich/_export_format.data.json",
            ".mypy_cache/3.13/rich/_export_format.meta.json",
            ".mypy_cache/3.13/rich/_extension.data.json",
            ".mypy_cache/3.13/rich/_extension.meta.json",
            ".mypy_cache/3.13/rich/_fileno.data.json",
            ".mypy_cache/3.13/rich/_fileno.meta.json",
            ".mypy_cache/3.13/rich/_log_render.data.json",
            ".mypy_cache/3.13/rich/_log_render.meta.json",
            ".mypy_cache/3.13/rich/_loop.data.json",
            ".mypy_cache/3.13/rich/_loop.meta.json",
            ".mypy_cache/3.13/rich/_null_file.data.json",
            ".mypy_cache/3.13/rich/_null_file.meta.json",
            ".mypy_cache/3.13/rich/_palettes.data.json",
            ".mypy_cache/3.13/rich/_palettes.meta.json",
            ".mypy_cache/3.13/rich/_pick.data.json",
            ".mypy_cache/3.13/rich/_pick.meta.json",
            ".mypy_cache/3.13/rich/_ratio.data.json",
            ".mypy_cache/3.13/rich/_ratio.meta.json",
            ".mypy_cache/3.13/rich/_spinners.data.json",
            ".mypy_cache/3.13/rich/_spinners.meta.json",
            ".mypy_cache/3.13/rich/_stack.data.json",
            ".mypy_cache/3.13/rich/_stack.meta.json",
            ".mypy_cache/3.13/rich/_timer.data.json",
            ".mypy_cache/3.13/rich/_timer.meta.json",
            ".mypy_cache/3.13/rich/_win32_console.data.json",
            ".mypy_cache/3.13/rich/_win32_console.meta.json",
            ".mypy_cache/3.13/rich/_windows.data.json",
            ".mypy_cache/3.13/rich/_windows.meta.json",
            ".mypy_cache/3.13/rich/_windows_renderer.data.json",
            ".mypy_cache/3.13/rich/_windows_renderer.meta.json",
            ".mypy_cache/3.13/rich/_wrap.data.json",
            ".mypy_cache/3.13/rich/_wrap.meta.json",
            ".mypy_cache/3.13/rich/abc.data.json",
            ".mypy_cache/3.13/rich/abc.meta.json",
            ".mypy_cache/3.13/rich/align.data.json",
            ".mypy_cache/3.13/rich/align.meta.json",
            ".mypy_cache/3.13/rich/ansi.data.json",
            ".mypy_cache/3.13/rich/ansi.meta.json",
            ".mypy_cache/3.13/rich/box.data.json",
            ".mypy_cache/3.13/rich/box.meta.json",
            ".mypy_cache/3.13/rich/cells.data.json",
            ".mypy_cache/3.13/rich/cells.meta.json",
            ".mypy_cache/3.13/rich/color.data.json",
            ".mypy_cache/3.13/rich/color.meta.json",
            ".mypy_cache/3.13/rich/color_triplet.data.json",
            ".mypy_cache/3.13/rich/color_triplet.meta.json",
            ".mypy_cache/3.13/rich/columns.data.json",
            ".mypy_cache/3.13/rich/columns.meta.json",
            ".mypy_cache/3.13/rich/console.data.json",
            ".mypy_cache/3.13/rich/console.meta.json",
            ".mypy_cache/3.13/rich/constrain.data.json",
            ".mypy_cache/3.13/rich/constrain.meta.json",
            ".mypy_cache/3.13/rich/containers.data.json",
            ".mypy_cache/3.13/rich/containers.meta.json",
            ".mypy_cache/3.13/rich/control.data.json",
            ".mypy_cache/3.13/rich/control.meta.json",
            ".mypy_cache/3.13/rich/default_styles.data.json",
            ".mypy_cache/3.13/rich/default_styles.meta.json",
            ".mypy_cache/3.13/rich/emoji.data.json",
            ".mypy_cache/3.13/rich/emoji.meta.json",
            ".mypy_cache/3.13/rich/errors.data.json",
            ".mypy_cache/3.13/rich/errors.meta.json",
            ".mypy_cache/3.13/rich/file_proxy.data.json",
            ".mypy_cache/3.13/rich/file_proxy.meta.json",
            ".mypy_cache/3.13/rich/filesize.data.json",
            ".mypy_cache/3.13/rich/filesize.meta.json",
            ".mypy_cache/3.13/rich/highlighter.data.json",
            ".mypy_cache/3.13/rich/highlighter.meta.json",
            ".mypy_cache/3.13/rich/json.data.json",
            ".mypy_cache/3.13/rich/json.meta.json",
            ".mypy_cache/3.13/rich/jupyter.data.json",
            ".mypy_cache/3.13/rich/jupyter.meta.json",
            ".mypy_cache/3.13/rich/live.data.json",
            ".mypy_cache/3.13/rich/live.meta.json",
            ".mypy_cache/3.13/rich/live_render.data.json",
            ".mypy_cache/3.13/rich/live_render.meta.json",
            ".mypy_cache/3.13/rich/markdown.data.json",
            ".mypy_cache/3.13/rich/markdown.meta.json",
            ".mypy_cache/3.13/rich/markup.data.json",
            ".mypy_cache/3.13/rich/markup.meta.json",
            ".mypy_cache/3.13/rich/measure.data.json",
            ".mypy_cache/3.13/rich/measure.meta.json",
            ".mypy_cache/3.13/rich/padding.data.json",
            ".mypy_cache/3.13/rich/padding.meta.json",
            ".mypy_cache/3.13/rich/pager.data.json",
            ".mypy_cache/3.13/rich/pager.meta.json",
            ".mypy_cache/3.13/rich/palette.data.json",
            ".mypy_cache/3.13/rich/palette.meta.json",
            ".mypy_cache/3.13/rich/panel.data.json",
            ".mypy_cache/3.13/rich/panel.meta.json",
            ".mypy_cache/3.13/rich/pretty.data.json",
            ".mypy_cache/3.13/rich/pretty.meta.json",
            ".mypy_cache/3.13/rich/progress.data.json",
            ".mypy_cache/3.13/rich/progress.meta.json",
            ".mypy_cache/3.13/rich/progress_bar.data.json",
            ".mypy_cache/3.13/rich/progress_bar.meta.json",
            ".mypy_cache/3.13/rich/protocol.data.json",
            ".mypy_cache/3.13/rich/protocol.meta.json",
            ".mypy_cache/3.13/rich/region.data.json",
            ".mypy_cache/3.13/rich/region.meta.json",
            ".mypy_cache/3.13/rich/repr.data.json",
            ".mypy_cache/3.13/rich/repr.meta.json",
            ".mypy_cache/3.13/rich/rule.data.json",
            ".mypy_cache/3.13/rich/rule.meta.json",
            ".mypy_cache/3.13/rich/scope.data.json",
            ".mypy_cache/3.13/rich/scope.meta.json",
            ".mypy_cache/3.13/rich/screen.data.json",
            ".mypy_cache/3.13/rich/screen.meta.json",
            ".mypy_cache/3.13/rich/segment.data.json",
            ".mypy_cache/3.13/rich/segment.meta.json",
            ".mypy_cache/3.13/rich/spinner.data.json",
            ".mypy_cache/3.13/rich/spinner.meta.json",
            ".mypy_cache/3.13/rich/status.data.json",
            ".mypy_cache/3.13/rich/status.meta.json",
            ".mypy_cache/3.13/rich/style.data.json",
            ".mypy_cache/3.13/rich/style.meta.json",
            ".mypy_cache/3.13/rich/styled.data.json",
            ".mypy_cache/3.13/rich/styled.meta.json",
            ".mypy_cache/3.13/rich/syntax.data.json",
            ".mypy_cache/3.13/rich/syntax.meta.json",
            ".mypy_cache/3.13/rich/table.data.json",
            ".mypy_cache/3.13/rich/table.meta.json",
            ".mypy_cache/3.13/rich/terminal_theme.data.json",
            ".mypy_cache/3.13/rich/terminal_theme.meta.json",
            ".mypy_cache/3.13/rich/text.data.json",
            ".mypy_cache/3.13/rich/text.meta.json",
            ".mypy_cache/3.13/rich/theme.data.json",
            ".mypy_cache/3.13/rich/theme.meta.json",
            ".mypy_cache/3.13/rich/themes.data.json",
            ".mypy_cache/3.13/rich/themes.meta.json",
            ".mypy_cache/3.13/rich/traceback.data.json",
            ".mypy_cache/3.13/rich/traceback.meta.json",
            ".mypy_cache/3.13/secrets.data.json",
            ".mypy_cache/3.13/secrets.meta.json",
            ".mypy_cache/3.13/select.data.json",
            ".mypy_cache/3.13/select.meta.json",
            ".mypy_cache/3.13/selectors.data.json",
            ".mypy_cache/3.13/selectors.meta.json",
            ".mypy_cache/3.13/shlex.data.json",
            ".mypy_cache/3.13/shlex.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sniffio/__init__.data.json",
            ".mypy_cache/3.13/sniffio/__init__.meta.json",
            ".mypy_cache/3.13/sniffio/_impl.data.json",
            ".mypy_cache/3.13/sniffio/_impl.meta.json",
            ".mypy_cache/3.13/sniffio/_version.data.json",
            ".mypy_cache/3.13/sniffio/_version.meta.json",
            ".mypy_cache/3.13/socket.data.json",
            ".mypy_cache/3.13/socket.meta.json",
            ".mypy_cache/3.13/sqlite3/__init__.data.json",
            ".mypy_cache/3.13/sqlite3/__init__.meta.json",
            ".mypy_cache/3.13/sqlite3/dbapi2.data.json",
            ".mypy_cache/3.13/sqlite3/dbapi2.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/ssl.data.json",
            ".mypy_cache/3.13/ssl.meta.json",
            ".mypy_cache/3.13/starlette/__init__.data.json",
            ".mypy_cache/3.13/starlette/__init__.meta.json",
            ".mypy_cache/3.13/starlette/_exception_handler.data.json",
            ".mypy_cache/3.13/starlette/_exception_handler.meta.json",
            ".mypy_cache/3.13/starlette/_utils.data.json",
            ".mypy_cache/3.13/starlette/_utils.meta.json",
            ".mypy_cache/3.13/starlette/applications.data.json",
            ".mypy_cache/3.13/starlette/applications.meta.json",
            ".mypy_cache/3.13/starlette/background.data.json",
            ".mypy_cache/3.13/starlette/background.meta.json",
            ".mypy_cache/3.13/starlette/concurrency.data.json",
            ".mypy_cache/3.13/starlette/concurrency.meta.json",
            ".mypy_cache/3.13/starlette/convertors.data.json",
            ".mypy_cache/3.13/starlette/convertors.meta.json",
            ".mypy_cache/3.13/starlette/datastructures.data.json",
            ".mypy_cache/3.13/starlette/datastructures.meta.json",
            ".mypy_cache/3.13/starlette/exceptions.data.json",
            ".mypy_cache/3.13/starlette/exceptions.meta.json",
            ".mypy_cache/3.13/starlette/formparsers.data.json",
            ".mypy_cache/3.13/starlette/formparsers.meta.json",
            ".mypy_cache/3.13/starlette/middleware/__init__.data.json",
            ".mypy_cache/3.13/starlette/middleware/__init__.meta.json",
            ".mypy_cache/3.13/starlette/middleware/base.data.json",
            ".mypy_cache/3.13/starlette/middleware/base.meta.json",
            ".mypy_cache/3.13/starlette/middleware/errors.data.json",
            ".mypy_cache/3.13/starlette/middleware/errors.meta.json",
            ".mypy_cache/3.13/starlette/middleware/exceptions.data.json",
            ".mypy_cache/3.13/starlette/middleware/exceptions.meta.json",
            ".mypy_cache/3.13/starlette/requests.data.json",
            ".mypy_cache/3.13/starlette/requests.meta.json",
            ".mypy_cache/3.13/starlette/responses.data.json",
            ".mypy_cache/3.13/starlette/responses.meta.json",
            ".mypy_cache/3.13/starlette/routing.data.json",
            ".mypy_cache/3.13/starlette/routing.meta.json",
            ".mypy_cache/3.13/starlette/status.data.json",
            ".mypy_cache/3.13/starlette/status.meta.json",
            ".mypy_cache/3.13/starlette/testclient.data.json",
            ".mypy_cache/3.13/starlette/testclient.meta.json",
            ".mypy_cache/3.13/starlette/types.data.json",
            ".mypy_cache/3.13/starlette/types.meta.json",
            ".mypy_cache/3.13/starlette/websockets.data.json",
            ".mypy_cache/3.13/starlette/websockets.meta.json",
            ".mypy_cache/3.13/stat.data.json",
            ".mypy_cache/3.13/stat.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/struct.data.json",
            ".mypy_cache/3.13/struct.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/sysconfig.data.json",
            ".mypy_cache/3.13/sysconfig.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/tempfile.data.json",
            ".mypy_cache/3.13/tempfile.meta.json",
            ".mypy_cache/3.13/textwrap.data.json",
            ".mypy_cache/3.13/textwrap.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/token.data.json",
            ".mypy_cache/3.13/token.meta.json",
            ".mypy_cache/3.13/tokenize.data.json",
            ".mypy_cache/3.13/tokenize.meta.json",
            ".mypy_cache/3.13/traceback.data.json",
            ".mypy_cache/3.13/traceback.meta.json",
            ".mypy_cache/3.13/typer/__init__.data.json",
            ".mypy_cache/3.13/typer/__init__.meta.json",
            ".mypy_cache/3.13/typer/_completion_classes.data.json",
            ".mypy_cache/3.13/typer/_completion_classes.meta.json",
            ".mypy_cache/3.13/typer/_completion_shared.data.json",
            ".mypy_cache/3.13/typer/_completion_shared.meta.json",
            ".mypy_cache/3.13/typer/_types.data.json",
            ".mypy_cache/3.13/typer/_types.meta.json",
            ".mypy_cache/3.13/typer/_typing.data.json",
            ".mypy_cache/3.13/typer/_typing.meta.json",
            ".mypy_cache/3.13/typer/colors.data.json",
            ".mypy_cache/3.13/typer/colors.meta.json",
            ".mypy_cache/3.13/typer/completion.data.json",
            ".mypy_cache/3.13/typer/completion.meta.json",
            ".mypy_cache/3.13/typer/core.data.json",
            ".mypy_cache/3.13/typer/core.meta.json",
            ".mypy_cache/3.13/typer/main.data.json",
            ".mypy_cache/3.13/typer/main.meta.json",
            ".mypy_cache/3.13/typer/models.data.json",
            ".mypy_cache/3.13/typer/models.meta.json",
            ".mypy_cache/3.13/typer/params.data.json",
            ".mypy_cache/3.13/typer/params.meta.json",
            ".mypy_cache/3.13/typer/rich_utils.data.json",
            ".mypy_cache/3.13/typer/rich_utils.meta.json",
            ".mypy_cache/3.13/typer/testing.data.json",
            ".mypy_cache/3.13/typer/testing.meta.json",
            ".mypy_cache/3.13/typer/utils.data.json",
            ".mypy_cache/3.13/typer/utils.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/typing_inspection/__init__.data.json",
            ".mypy_cache/3.13/typing_inspection/__init__.meta.json",
            ".mypy_cache/3.13/typing_inspection/introspection.data.json",
            ".mypy_cache/3.13/typing_inspection/introspection.meta.json",
            ".mypy_cache/3.13/typing_inspection/typing_objects.data.json",
            ".mypy_cache/3.13/typing_inspection/typing_objects.meta.json",
            ".mypy_cache/3.13/unicodedata.data.json",
            ".mypy_cache/3.13/unicodedata.meta.json",
            ".mypy_cache/3.13/unittest/__init__.data.json",
            ".mypy_cache/3.13/unittest/__init__.meta.json",
            ".mypy_cache/3.13/unittest/_log.data.json",
            ".mypy_cache/3.13/unittest/_log.meta.json",
            ".mypy_cache/3.13/unittest/async_case.data.json",
            ".mypy_cache/3.13/unittest/async_case.meta.json",
            ".mypy_cache/3.13/unittest/case.data.json",
            ".mypy_cache/3.13/unittest/case.meta.json",
            ".mypy_cache/3.13/unittest/loader.data.json",
            ".mypy_cache/3.13/unittest/loader.meta.json",
            ".mypy_cache/3.13/unittest/main.data.json",
            ".mypy_cache/3.13/unittest/main.meta.json",
            ".mypy_cache/3.13/unittest/result.data.json",
            ".mypy_cache/3.13/unittest/result.meta.json",
            ".mypy_cache/3.13/unittest/runner.data.json",
            ".mypy_cache/3.13/unittest/runner.meta.json",
            ".mypy_cache/3.13/unittest/signals.data.json",
            ".mypy_cache/3.13/unittest/signals.meta.json",
            ".mypy_cache/3.13/unittest/suite.data.json",
            ".mypy_cache/3.13/unittest/suite.meta.json",
            ".mypy_cache/3.13/urllib/__init__.data.json",
            ".mypy_cache/3.13/urllib/__init__.meta.json",
            ".mypy_cache/3.13/urllib/error.data.json",
            ".mypy_cache/3.13/urllib/error.meta.json",
            ".mypy_cache/3.13/urllib/parse.data.json",
            ".mypy_cache/3.13/urllib/parse.meta.json",
            ".mypy_cache/3.13/urllib/request.data.json",
            ".mypy_cache/3.13/urllib/request.meta.json",
            ".mypy_cache/3.13/urllib/response.data.json",
            ".mypy_cache/3.13/urllib/response.meta.json",
            ".mypy_cache/3.13/uuid.data.json",
            ".mypy_cache/3.13/uuid.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/weakref.data.json",
            ".mypy_cache/3.13/weakref.meta.json",
            ".mypy_cache/3.13/wsgiref/__init__.data.json",
            ".mypy_cache/3.13/wsgiref/__init__.meta.json",
            ".mypy_cache/3.13/wsgiref/types.data.json",
            ".mypy_cache/3.13/wsgiref/types.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/adapters/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/adapters/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/adapters/taskwarrior/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/adapters/taskwarrior/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/domain/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/domain/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/ports/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/ports/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/services/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/services/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/collaboration.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/collaboration.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/collaboration/store.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/collaboration/store.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/config.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/config.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/review/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/review/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/api/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/api/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/cli/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/cli/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/tui.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/tui.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/save.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/save.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/tests.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/tests.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/x_cls_legatus_acta_schedae_x.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/x_cls_legatus_acta_schedae_x.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/3.13/zoneinfo/__init__.data.json",
            ".mypy_cache/3.13/zoneinfo/__init__.meta.json",
            ".mypy_cache/3.13/zoneinfo/_common.data.json",
            ".mypy_cache/3.13/zoneinfo/_common.meta.json",
            ".mypy_cache/3.13/zoneinfo/_tzpath.data.json",
            ".mypy_cache/3.13/zoneinfo/_tzpath.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".mypy_cache/missing_stubs",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/11404241193410421452",
            ".ruff_cache/0.13.3/13784399517821074769",
            ".ruff_cache/0.13.3/17666352920968047950",
            ".ruff_cache/0.13.3/2872853158608187930",
            ".ruff_cache/CACHEDIR.TAG",
            "README.md",
            "__init__.py",
            "__main__.py",
            "adapters/__init__.py",
            "adapters/taskwarrior/__init__.py",
            "adapters/taskwarrior/tw_repository.py",
            "app.py",
            "architecture-readme.me",
            "core/__init__.py",
            "core/domain/__init__.py",
            "core/domain/events.py",
            "core/domain/review.py",
            "core/domain/task.py",
            "core/ports/__init__.py",
            "core/ports/review_repo.py",
            "core/ports/scheduler.py",
            "core/ports/search_index.py",
            "core/ports/task_repo.py",
            "core/services/__init__.py",
            "core/services/ai_briefing_service.py",
            "core/services/ai_service.py",
            "core/services/automation_service.py",
            "core/services/card_action_service.py",
            "core/services/collaboration_service.py",
            "core/services/plugin_bus.py",
            "core/services/review_guidance_service.py",
            "core/services/review_service.py",
            "core/services/scheduler_service.py",
            "core/services/search_service.py",
            "core/services/task_service.py",
            "data/ai_suggestions.jsonl",
            "data/cards.db",
            "data/cards.jsonl",
            "data/reviews.json",
            "engineering-change-proposal.md",
            "engineering-proposal-phase4.md",
            "firsttestnotes.md",
            "infrastructure/__init__.py",
            "infrastructure/automation/__init__.py",
            "infrastructure/automation/webhook_client.py",
            "infrastructure/collaboration/hub_client.py",
            "infrastructure/collaboration/store.py",
            "infrastructure/config.py",
            "infrastructure/di.py",
            "infrastructure/logging.py",
            "infrastructure/review/__init__.py",
            "infrastructure/review/json_repository.py",
            "infrastructure/scheduler/__init__.py",
            "infrastructure/scheduler/apscheduler_adapter.py",
            "infrastructure/scheduler/null_scheduler.py",
            "infrastructure/search/__init__.py",
            "infrastructure/search/memory_index.py",
            "infrastructure/telemetry.py",
            "interface/__init__.py",
            "interface/api/__init__.py",
            "interface/api/server.py",
            "interface/cli/__init__.py",
            "interface/cli/main.py",
            "interface/tui/app.py",
            "interface/tui/controller.py",
            "mypy.ini",
            "out/appointments_health_01_89DFB646.html",
            "out/appointments_health_01_C6D6CEC0.html",
            "out/appointments_health_01_E626D9B2.html",
            "out/daily-tasks_work_01_8D41D48F.html",
            "out/daily-tasks_work_01_A649DFB1.html",
            "out/daily-tasks_work_01_DE38E5A3.html",
            "out/duplex_3x5_fronts.html",
            "out/duplex_3x5_fronts.pdf",
            "out/duplex_4x6_backs.html",
            "out/duplex_4x6_backs.pdf",
            "out/duplex_4x6_fronts.html",
            "out/duplex_4x6_fronts.pdf",
            "out/general-knowledge-s1_flash-demo_01_9CE224E0.html",
            "out/general-knowledge-s1_flash-demo_01_CF8EECE4.html",
            "out/general-knowledge-s1_flash-demo_01_FECB91DC.html",
            "out/general-knowledge-s1_flash-demo_02_ABECEEE4.html",
            "out/general-knowledge-s1_flash-demo_02_AE653A9B.html",
            "out/general-knowledge-s1_flash-demo_02_B5AB4E2E.html",
            "plugins/__init__.py",
            "plugins/ai_assistant.py",
            "plugins/calendar_sync.py",
            "plugins/task_scoring.py",
            "requirements.txt",
            "save.py",
            "tests/test_ai_briefing_service.py",
            "tests/test_ai_service.py",
            "tests/test_api.py",
            "tests/test_automation_service.py",
            "tests/test_card_action_service.py",
            "tests/test_cli_ai_briefing.py",
            "tests/test_cli_collab.py",
            "tests/test_collaboration_hub.py",
            "tests/test_collaboration_service.py",
            "tests/test_plugin_ai_assistant.py",
            "tests/test_plugin_calendar_sync.py",
            "tests/test_review_guidance_service.py",
            "tests/test_review_service.py",
            "tests/test_scheduler_service.py",
            "tests/test_search_service.py",
            "tests/test_task_service.py",
            "tests/test_tui_controller.py",
            "tui/__init__.py",
            "tui/__main__.py",
            "x_cls_legatus_acta_schedae_x.py",
            "x_legatus_acta_schedae_x.md"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/__main__.data.json",
            ".mypy_cache/3.13/__main__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_asyncio.data.json",
            ".mypy_cache/3.13/_asyncio.meta.json",
            ".mypy_cache/3.13/_bisect.data.json",
            ".mypy_cache/3.13/_bisect.meta.json",
            ".mypy_cache/3.13/_blake2.data.json",
            ".mypy_cache/3.13/_blake2.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_ctypes.data.json",
            ".mypy_cache/3.13/_ctypes.meta.json",
            ".mypy_cache/3.13/_decimal.data.json",
            ".mypy_cache/3.13/_decimal.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_hashlib.data.json",
            ".mypy_cache/3.13/_hashlib.meta.json",
            ".mypy_cache/3.13/_imp.data.json",
            ".mypy_cache/3.13/_imp.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_locale.data.json",
            ".mypy_cache/3.13/_locale.meta.json",
            ".mypy_cache/3.13/_operator.data.json",
            ".mypy_cache/3.13/_operator.meta.json",
            ".mypy_cache/3.13/_pickle.data.json",
            ".mypy_cache/3.13/_pickle.meta.json",
            ".mypy_cache/3.13/_pytest/__init__.data.json",
            ".mypy_cache/3.13/_pytest/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/_argcomplete.data.json",
            ".mypy_cache/3.13/_pytest/_argcomplete.meta.json",
            ".mypy_cache/3.13/_pytest/_code/__init__.data.json",
            ".mypy_cache/3.13/_pytest/_code/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/_code/code.data.json",
            ".mypy_cache/3.13/_pytest/_code/code.meta.json",
            ".mypy_cache/3.13/_pytest/_code/source.data.json",
            ".mypy_cache/3.13/_pytest/_code/source.meta.json",
            ".mypy_cache/3.13/_pytest/_io/__init__.data.json",
            ".mypy_cache/3.13/_pytest/_io/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/_io/pprint.data.json",
            ".mypy_cache/3.13/_pytest/_io/pprint.meta.json",
            ".mypy_cache/3.13/_pytest/_io/saferepr.data.json",
            ".mypy_cache/3.13/_pytest/_io/saferepr.meta.json",
            ".mypy_cache/3.13/_pytest/_io/terminalwriter.data.json",
            ".mypy_cache/3.13/_pytest/_io/terminalwriter.meta.json",
            ".mypy_cache/3.13/_pytest/_io/wcwidth.data.json",
            ".mypy_cache/3.13/_pytest/_io/wcwidth.meta.json",
            ".mypy_cache/3.13/_pytest/_version.data.json",
            ".mypy_cache/3.13/_pytest/_version.meta.json",
            ".mypy_cache/3.13/_pytest/assertion/__init__.data.json",
            ".mypy_cache/3.13/_pytest/assertion/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/assertion/rewrite.data.json",
            ".mypy_cache/3.13/_pytest/assertion/rewrite.meta.json",
            ".mypy_cache/3.13/_pytest/assertion/truncate.data.json",
            ".mypy_cache/3.13/_pytest/assertion/truncate.meta.json",
            ".mypy_cache/3.13/_pytest/assertion/util.data.json",
            ".mypy_cache/3.13/_pytest/assertion/util.meta.json",
            ".mypy_cache/3.13/_pytest/cacheprovider.data.json",
            ".mypy_cache/3.13/_pytest/cacheprovider.meta.json",
            ".mypy_cache/3.13/_pytest/capture.data.json",
            ".mypy_cache/3.13/_pytest/capture.meta.json",
            ".mypy_cache/3.13/_pytest/compat.data.json",
            ".mypy_cache/3.13/_pytest/compat.meta.json",
            ".mypy_cache/3.13/_pytest/config/__init__.data.json",
            ".mypy_cache/3.13/_pytest/config/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/config/argparsing.data.json",
            ".mypy_cache/3.13/_pytest/config/argparsing.meta.json",
            ".mypy_cache/3.13/_pytest/config/compat.data.json",
            ".mypy_cache/3.13/_pytest/config/compat.meta.json",
            ".mypy_cache/3.13/_pytest/config/exceptions.data.json",
            ".mypy_cache/3.13/_pytest/config/exceptions.meta.json",
            ".mypy_cache/3.13/_pytest/config/findpaths.data.json",
            ".mypy_cache/3.13/_pytest/config/findpaths.meta.json",
            ".mypy_cache/3.13/_pytest/debugging.data.json",
            ".mypy_cache/3.13/_pytest/debugging.meta.json",
            ".mypy_cache/3.13/_pytest/deprecated.data.json",
            ".mypy_cache/3.13/_pytest/deprecated.meta.json",
            ".mypy_cache/3.13/_pytest/doctest.data.json",
            ".mypy_cache/3.13/_pytest/doctest.meta.json",
            ".mypy_cache/3.13/_pytest/fixtures.data.json",
            ".mypy_cache/3.13/_pytest/fixtures.meta.json",
            ".mypy_cache/3.13/_pytest/freeze_support.data.json",
            ".mypy_cache/3.13/_pytest/freeze_support.meta.json",
            ".mypy_cache/3.13/_pytest/helpconfig.data.json",
            ".mypy_cache/3.13/_pytest/helpconfig.meta.json",
            ".mypy_cache/3.13/_pytest/hookspec.data.json",
            ".mypy_cache/3.13/_pytest/hookspec.meta.json",
            ".mypy_cache/3.13/_pytest/legacypath.data.json",
            ".mypy_cache/3.13/_pytest/legacypath.meta.json",
            ".mypy_cache/3.13/_pytest/logging.data.json",
            ".mypy_cache/3.13/_pytest/logging.meta.json",
            ".mypy_cache/3.13/_pytest/main.data.json",
            ".mypy_cache/3.13/_pytest/main.meta.json",
            ".mypy_cache/3.13/_pytest/mark/__init__.data.json",
            ".mypy_cache/3.13/_pytest/mark/__init__.meta.json",
            ".mypy_cache/3.13/_pytest/mark/expression.data.json",
            ".mypy_cache/3.13/_pytest/mark/expression.meta.json",
            ".mypy_cache/3.13/_pytest/mark/structures.data.json",
            ".mypy_cache/3.13/_pytest/mark/structures.meta.json",
            ".mypy_cache/3.13/_pytest/monkeypatch.data.json",
            ".mypy_cache/3.13/_pytest/monkeypatch.meta.json",
            ".mypy_cache/3.13/_pytest/nodes.data.json",
            ".mypy_cache/3.13/_pytest/nodes.meta.json",
            ".mypy_cache/3.13/_pytest/outcomes.data.json",
            ".mypy_cache/3.13/_pytest/outcomes.meta.json",
            ".mypy_cache/3.13/_pytest/pathlib.data.json",
            ".mypy_cache/3.13/_pytest/pathlib.meta.json",
            ".mypy_cache/3.13/_pytest/pytester.data.json",
            ".mypy_cache/3.13/_pytest/pytester.meta.json",
            ".mypy_cache/3.13/_pytest/pytester_assertions.data.json",
            ".mypy_cache/3.13/_pytest/pytester_assertions.meta.json",
            ".mypy_cache/3.13/_pytest/python.data.json",
            ".mypy_cache/3.13/_pytest/python.meta.json",
            ".mypy_cache/3.13/_pytest/python_api.data.json",
            ".mypy_cache/3.13/_pytest/python_api.meta.json",
            ".mypy_cache/3.13/_pytest/raises.data.json",
            ".mypy_cache/3.13/_pytest/raises.meta.json",
            ".mypy_cache/3.13/_pytest/recwarn.data.json",
            ".mypy_cache/3.13/_pytest/recwarn.meta.json",
            ".mypy_cache/3.13/_pytest/reports.data.json",
            ".mypy_cache/3.13/_pytest/reports.meta.json",
            ".mypy_cache/3.13/_pytest/runner.data.json",
            ".mypy_cache/3.13/_pytest/runner.meta.json",
            ".mypy_cache/3.13/_pytest/scope.data.json",
            ".mypy_cache/3.13/_pytest/scope.meta.json",
            ".mypy_cache/3.13/_pytest/stash.data.json",
            ".mypy_cache/3.13/_pytest/stash.meta.json",
            ".mypy_cache/3.13/_pytest/terminal.data.json",
            ".mypy_cache/3.13/_pytest/terminal.meta.json",
            ".mypy_cache/3.13/_pytest/timing.data.json",
            ".mypy_cache/3.13/_pytest/timing.meta.json",
            ".mypy_cache/3.13/_pytest/tmpdir.data.json",
            ".mypy_cache/3.13/_pytest/tmpdir.meta.json",
            ".mypy_cache/3.13/_pytest/tracemalloc.data.json",
            ".mypy_cache/3.13/_pytest/tracemalloc.meta.json",
            ".mypy_cache/3.13/_pytest/unraisableexception.data.json",
            ".mypy_cache/3.13/_pytest/unraisableexception.meta.json",
            ".mypy_cache/3.13/_pytest/warning_types.data.json",
            ".mypy_cache/3.13/_pytest/warning_types.meta.json",
            ".mypy_cache/3.13/_pytest/warnings.data.json",
            ".mypy_cache/3.13/_pytest/warnings.meta.json",
            ".mypy_cache/3.13/_queue.data.json",
            ".mypy_cache/3.13/_queue.meta.json",
            ".mypy_cache/3.13/_random.data.json",
            ".mypy_cache/3.13/_random.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_socket.data.json",
            ".mypy_cache/3.13/_socket.meta.json",
            ".mypy_cache/3.13/_sqlite3.data.json",
            ".mypy_cache/3.13/_sqlite3.meta.json",
            ".mypy_cache/3.13/_ssl.data.json",
            ".mypy_cache/3.13/_ssl.meta.json",
            ".mypy_cache/3.13/_stat.data.json",
            ".mypy_cache/3.13/_stat.meta.json",
            ".mypy_cache/3.13/_struct.data.json",
            ".mypy_cache/3.13/_struct.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_typeshed/wsgi.data.json",
            ".mypy_cache/3.13/_typeshed/wsgi.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_weakref.data.json",
            ".mypy_cache/3.13/_weakref.meta.json",
            ".mypy_cache/3.13/_weakrefset.data.json",
            ".mypy_cache/3.13/_weakrefset.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/annotated_types/__init__.data.json",
            ".mypy_cache/3.13/annotated_types/__init__.meta.json",
            ".mypy_cache/3.13/anyio/__init__.data.json",
            ".mypy_cache/3.13/anyio/__init__.meta.json",
            ".mypy_cache/3.13/anyio/_core/__init__.data.json",
            ".mypy_cache/3.13/anyio/_core/__init__.meta.json",
            ".mypy_cache/3.13/anyio/_core/_contextmanagers.data.json",
            ".mypy_cache/3.13/anyio/_core/_contextmanagers.meta.json",
            ".mypy_cache/3.13/anyio/_core/_eventloop.data.json",
            ".mypy_cache/3.13/anyio/_core/_eventloop.meta.json",
            ".mypy_cache/3.13/anyio/_core/_exceptions.data.json",
            ".mypy_cache/3.13/anyio/_core/_exceptions.meta.json",
            ".mypy_cache/3.13/anyio/_core/_fileio.data.json",
            ".mypy_cache/3.13/anyio/_core/_fileio.meta.json",
            ".mypy_cache/3.13/anyio/_core/_resources.data.json",
            ".mypy_cache/3.13/anyio/_core/_resources.meta.json",
            ".mypy_cache/3.13/anyio/_core/_signals.data.json",
            ".mypy_cache/3.13/anyio/_core/_signals.meta.json",
            ".mypy_cache/3.13/anyio/_core/_sockets.data.json",
            ".mypy_cache/3.13/anyio/_core/_sockets.meta.json",
            ".mypy_cache/3.13/anyio/_core/_streams.data.json",
            ".mypy_cache/3.13/anyio/_core/_streams.meta.json",
            ".mypy_cache/3.13/anyio/_core/_subprocesses.data.json",
            ".mypy_cache/3.13/anyio/_core/_subprocesses.meta.json",
            ".mypy_cache/3.13/anyio/_core/_synchronization.data.json",
            ".mypy_cache/3.13/anyio/_core/_synchronization.meta.json",
            ".mypy_cache/3.13/anyio/_core/_tasks.data.json",
            ".mypy_cache/3.13/anyio/_core/_tasks.meta.json",
            ".mypy_cache/3.13/anyio/_core/_tempfile.data.json",
            ".mypy_cache/3.13/anyio/_core/_tempfile.meta.json",
            ".mypy_cache/3.13/anyio/_core/_testing.data.json",
            ".mypy_cache/3.13/anyio/_core/_testing.meta.json",
            ".mypy_cache/3.13/anyio/_core/_typedattr.data.json",
            ".mypy_cache/3.13/anyio/_core/_typedattr.meta.json",
            ".mypy_cache/3.13/anyio/abc/__init__.data.json",
            ".mypy_cache/3.13/anyio/abc/__init__.meta.json",
            ".mypy_cache/3.13/anyio/abc/_eventloop.data.json",
            ".mypy_cache/3.13/anyio/abc/_eventloop.meta.json",
            ".mypy_cache/3.13/anyio/abc/_resources.data.json",
            ".mypy_cache/3.13/anyio/abc/_resources.meta.json",
            ".mypy_cache/3.13/anyio/abc/_sockets.data.json",
            ".mypy_cache/3.13/anyio/abc/_sockets.meta.json",
            ".mypy_cache/3.13/anyio/abc/_streams.data.json",
            ".mypy_cache/3.13/anyio/abc/_streams.meta.json",
            ".mypy_cache/3.13/anyio/abc/_subprocesses.data.json",
            ".mypy_cache/3.13/anyio/abc/_subprocesses.meta.json",
            ".mypy_cache/3.13/anyio/abc/_tasks.data.json",
            ".mypy_cache/3.13/anyio/abc/_tasks.meta.json",
            ".mypy_cache/3.13/anyio/abc/_testing.data.json",
            ".mypy_cache/3.13/anyio/abc/_testing.meta.json",
            ".mypy_cache/3.13/anyio/from_thread.data.json",
            ".mypy_cache/3.13/anyio/from_thread.meta.json",
            ".mypy_cache/3.13/anyio/lowlevel.data.json",
            ".mypy_cache/3.13/anyio/lowlevel.meta.json",
            ".mypy_cache/3.13/anyio/streams/__init__.data.json",
            ".mypy_cache/3.13/anyio/streams/__init__.meta.json",
            ".mypy_cache/3.13/anyio/streams/memory.data.json",
            ".mypy_cache/3.13/anyio/streams/memory.meta.json",
            ".mypy_cache/3.13/anyio/streams/stapled.data.json",
            ".mypy_cache/3.13/anyio/streams/stapled.meta.json",
            ".mypy_cache/3.13/anyio/streams/tls.data.json",
            ".mypy_cache/3.13/anyio/streams/tls.meta.json",
            ".mypy_cache/3.13/anyio/to_thread.data.json",
            ".mypy_cache/3.13/anyio/to_thread.meta.json",
            ".mypy_cache/3.13/argparse.data.json",
            ".mypy_cache/3.13/argparse.meta.json",
            ".mypy_cache/3.13/array.data.json",
            ".mypy_cache/3.13/array.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/asyncio/__init__.data.json",
            ".mypy_cache/3.13/asyncio/__init__.meta.json",
            ".mypy_cache/3.13/asyncio/base_events.data.json",
            ".mypy_cache/3.13/asyncio/base_events.meta.json",
            ".mypy_cache/3.13/asyncio/base_futures.data.json",
            ".mypy_cache/3.13/asyncio/base_futures.meta.json",
            ".mypy_cache/3.13/asyncio/constants.data.json",
            ".mypy_cache/3.13/asyncio/constants.meta.json",
            ".mypy_cache/3.13/asyncio/coroutines.data.json",
            ".mypy_cache/3.13/asyncio/coroutines.meta.json",
            ".mypy_cache/3.13/asyncio/events.data.json",
            ".mypy_cache/3.13/asyncio/events.meta.json",
            ".mypy_cache/3.13/asyncio/exceptions.data.json",
            ".mypy_cache/3.13/asyncio/exceptions.meta.json",
            ".mypy_cache/3.13/asyncio/futures.data.json",
            ".mypy_cache/3.13/asyncio/futures.meta.json",
            ".mypy_cache/3.13/asyncio/locks.data.json",
            ".mypy_cache/3.13/asyncio/locks.meta.json",
            ".mypy_cache/3.13/asyncio/mixins.data.json",
            ".mypy_cache/3.13/asyncio/mixins.meta.json",
            ".mypy_cache/3.13/asyncio/proactor_events.data.json",
            ".mypy_cache/3.13/asyncio/proactor_events.meta.json",
            ".mypy_cache/3.13/asyncio/protocols.data.json",
            ".mypy_cache/3.13/asyncio/protocols.meta.json",
            ".mypy_cache/3.13/asyncio/queues.data.json",
            ".mypy_cache/3.13/asyncio/queues.meta.json",
            ".mypy_cache/3.13/asyncio/runners.data.json",
            ".mypy_cache/3.13/asyncio/runners.meta.json",
            ".mypy_cache/3.13/asyncio/selector_events.data.json",
            ".mypy_cache/3.13/asyncio/selector_events.meta.json",
            ".mypy_cache/3.13/asyncio/streams.data.json",
            ".mypy_cache/3.13/asyncio/streams.meta.json",
            ".mypy_cache/3.13/asyncio/subprocess.data.json",
            ".mypy_cache/3.13/asyncio/subprocess.meta.json",
            ".mypy_cache/3.13/asyncio/taskgroups.data.json",
            ".mypy_cache/3.13/asyncio/taskgroups.meta.json",
            ".mypy_cache/3.13/asyncio/tasks.data.json",
            ".mypy_cache/3.13/asyncio/tasks.meta.json",
            ".mypy_cache/3.13/asyncio/threads.data.json",
            ".mypy_cache/3.13/asyncio/threads.meta.json",
            ".mypy_cache/3.13/asyncio/timeouts.data.json",
            ".mypy_cache/3.13/asyncio/timeouts.meta.json",
            ".mypy_cache/3.13/asyncio/transports.data.json",
            ".mypy_cache/3.13/asyncio/transports.meta.json",
            ".mypy_cache/3.13/asyncio/unix_events.data.json",
            ".mypy_cache/3.13/asyncio/unix_events.meta.json",
            ".mypy_cache/3.13/asyncio/windows_events.data.json",
            ".mypy_cache/3.13/asyncio/windows_events.meta.json",
            ".mypy_cache/3.13/asyncio/windows_utils.data.json",
            ".mypy_cache/3.13/asyncio/windows_utils.meta.json",
            ".mypy_cache/3.13/atexit.data.json",
            ".mypy_cache/3.13/atexit.meta.json",
            ".mypy_cache/3.13/base64.data.json",
            ".mypy_cache/3.13/base64.meta.json",
            ".mypy_cache/3.13/bdb.data.json",
            ".mypy_cache/3.13/bdb.meta.json",
            ".mypy_cache/3.13/binascii.data.json",
            ".mypy_cache/3.13/binascii.meta.json",
            ".mypy_cache/3.13/bisect.data.json",
            ".mypy_cache/3.13/bisect.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/certifi/__init__.data.json",
            ".mypy_cache/3.13/certifi/__init__.meta.json",
            ".mypy_cache/3.13/certifi/core.data.json",
            ".mypy_cache/3.13/certifi/core.meta.json",
            ".mypy_cache/3.13/click/__init__.data.json",
            ".mypy_cache/3.13/click/__init__.meta.json",
            ".mypy_cache/3.13/click/_compat.data.json",
            ".mypy_cache/3.13/click/_compat.meta.json",
            ".mypy_cache/3.13/click/_termui_impl.data.json",
            ".mypy_cache/3.13/click/_termui_impl.meta.json",
            ".mypy_cache/3.13/click/_utils.data.json",
            ".mypy_cache/3.13/click/_utils.meta.json",
            ".mypy_cache/3.13/click/_winconsole.data.json",
            ".mypy_cache/3.13/click/_winconsole.meta.json",
            ".mypy_cache/3.13/click/core.data.json",
            ".mypy_cache/3.13/click/core.meta.json",
            ".mypy_cache/3.13/click/decorators.data.json",
            ".mypy_cache/3.13/click/decorators.meta.json",
            ".mypy_cache/3.13/click/exceptions.data.json",
            ".mypy_cache/3.13/click/exceptions.meta.json",
            ".mypy_cache/3.13/click/formatting.data.json",
            ".mypy_cache/3.13/click/formatting.meta.json",
            ".mypy_cache/3.13/click/globals.data.json",
            ".mypy_cache/3.13/click/globals.meta.json",
            ".mypy_cache/3.13/click/parser.data.json",
            ".mypy_cache/3.13/click/parser.meta.json",
            ".mypy_cache/3.13/click/shell_completion.data.json",
            ".mypy_cache/3.13/click/shell_completion.meta.json",
            ".mypy_cache/3.13/click/termui.data.json",
            ".mypy_cache/3.13/click/termui.meta.json",
            ".mypy_cache/3.13/click/testing.data.json",
            ".mypy_cache/3.13/click/testing.meta.json",
            ".mypy_cache/3.13/click/types.data.json",
            ".mypy_cache/3.13/click/types.meta.json",
            ".mypy_cache/3.13/click/utils.data.json",
            ".mypy_cache/3.13/click/utils.meta.json",
            ".mypy_cache/3.13/cmd.data.json",
            ".mypy_cache/3.13/cmd.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/colorsys.data.json",
            ".mypy_cache/3.13/colorsys.meta.json",
            ".mypy_cache/3.13/concurrent/__init__.data.json",
            ".mypy_cache/3.13/concurrent/__init__.meta.json",
            ".mypy_cache/3.13/concurrent/futures/__init__.data.json",
            ".mypy_cache/3.13/concurrent/futures/__init__.meta.json",
            ".mypy_cache/3.13/concurrent/futures/_base.data.json",
            ".mypy_cache/3.13/concurrent/futures/_base.meta.json",
            ".mypy_cache/3.13/concurrent/futures/process.data.json",
            ".mypy_cache/3.13/concurrent/futures/process.meta.json",
            ".mypy_cache/3.13/concurrent/futures/thread.data.json",
            ".mypy_cache/3.13/concurrent/futures/thread.meta.json",
            ".mypy_cache/3.13/configparser.data.json",
            ".mypy_cache/3.13/configparser.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/copy.data.json",
            ".mypy_cache/3.13/copy.meta.json",
            ".mypy_cache/3.13/copyreg.data.json",
            ".mypy_cache/3.13/copyreg.meta.json",
            ".mypy_cache/3.13/cryptography/__about__.data.json",
            ".mypy_cache/3.13/cryptography/__about__.meta.json",
            ".mypy_cache/3.13/cryptography/__init__.data.json",
            ".mypy_cache/3.13/cryptography/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/exceptions.data.json",
            ".mypy_cache/3.13/cryptography/exceptions.meta.json",
            ".mypy_cache/3.13/cryptography/fernet.data.json",
            ".mypy_cache/3.13/cryptography/fernet.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/_oid.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/_oid.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/openssl/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/openssl/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/openssl/backend.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/backends/openssl/backend.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/_openssl.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/_openssl.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/asn1.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/asn1.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/exceptions.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/exceptions.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/aead.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/aead.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ciphers.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ciphers.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/cmac.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/cmac.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/dh.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/dh.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/dsa.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/dsa.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ec.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ec.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ed25519.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ed25519.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ed448.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/ed448.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/hashes.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/hashes.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/hmac.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/hmac.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/kdf.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/kdf.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/keys.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/keys.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/poly1305.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/poly1305.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/rsa.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/rsa.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/x25519.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/x25519.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/x448.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/_rust/openssl/x448.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/_conditional.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/_conditional.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/binding.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/bindings/openssl/binding.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/ciphers/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/ciphers/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/ciphers/algorithms.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/decrepit/ciphers/algorithms.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_asymmetric.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_asymmetric.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_cipheralgorithm.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_cipheralgorithm.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_serialization.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/_serialization.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/dh.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/dh.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/dsa.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/dsa.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ec.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ec.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ed25519.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ed25519.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ed448.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/ed448.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/padding.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/padding.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/rsa.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/rsa.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/types.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/types.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/utils.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/utils.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/x25519.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/x25519.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/x448.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/asymmetric/x448.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/algorithms.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/algorithms.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/base.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/base.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/modes.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/ciphers/modes.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/constant_time.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/constant_time.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/hashes.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/hashes.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/hmac.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/hmac.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/kdf/__init__.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/kdf/__init__.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/kdf/pbkdf2.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/kdf/pbkdf2.meta.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/padding.data.json",
            ".mypy_cache/3.13/cryptography/hazmat/primitives/padding.meta.json",
            ".mypy_cache/3.13/cryptography/utils.data.json",
            ".mypy_cache/3.13/cryptography/utils.meta.json",
            ".mypy_cache/3.13/ctypes/__init__.data.json",
            ".mypy_cache/3.13/ctypes/__init__.meta.json",
            ".mypy_cache/3.13/ctypes/_endian.data.json",
            ".mypy_cache/3.13/ctypes/_endian.meta.json",
            ".mypy_cache/3.13/ctypes/wintypes.data.json",
            ".mypy_cache/3.13/ctypes/wintypes.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/datetime.data.json",
            ".mypy_cache/3.13/datetime.meta.json",
            ".mypy_cache/3.13/decimal.data.json",
            ".mypy_cache/3.13/decimal.meta.json",
            ".mypy_cache/3.13/difflib.data.json",
            ".mypy_cache/3.13/difflib.meta.json",
            ".mypy_cache/3.13/dis.data.json",
            ".mypy_cache/3.13/dis.meta.json",
            ".mypy_cache/3.13/doctest.data.json",
            ".mypy_cache/3.13/doctest.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/feedparser.data.json",
            ".mypy_cache/3.13/email/feedparser.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/parser.data.json",
            ".mypy_cache/3.13/email/parser.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/email/utils.data.json",
            ".mypy_cache/3.13/email/utils.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/errno.data.json",
            ".mypy_cache/3.13/errno.meta.json",
            ".mypy_cache/3.13/fastapi/__init__.data.json",
            ".mypy_cache/3.13/fastapi/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/_compat.data.json",
            ".mypy_cache/3.13/fastapi/_compat.meta.json",
            ".mypy_cache/3.13/fastapi/applications.data.json",
            ".mypy_cache/3.13/fastapi/applications.meta.json",
            ".mypy_cache/3.13/fastapi/background.data.json",
            ".mypy_cache/3.13/fastapi/background.meta.json",
            ".mypy_cache/3.13/fastapi/concurrency.data.json",
            ".mypy_cache/3.13/fastapi/concurrency.meta.json",
            ".mypy_cache/3.13/fastapi/datastructures.data.json",
            ".mypy_cache/3.13/fastapi/datastructures.meta.json",
            ".mypy_cache/3.13/fastapi/dependencies/__init__.data.json",
            ".mypy_cache/3.13/fastapi/dependencies/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/dependencies/models.data.json",
            ".mypy_cache/3.13/fastapi/dependencies/models.meta.json",
            ".mypy_cache/3.13/fastapi/dependencies/utils.data.json",
            ".mypy_cache/3.13/fastapi/dependencies/utils.meta.json",
            ".mypy_cache/3.13/fastapi/encoders.data.json",
            ".mypy_cache/3.13/fastapi/encoders.meta.json",
            ".mypy_cache/3.13/fastapi/exception_handlers.data.json",
            ".mypy_cache/3.13/fastapi/exception_handlers.meta.json",
            ".mypy_cache/3.13/fastapi/exceptions.data.json",
            ".mypy_cache/3.13/fastapi/exceptions.meta.json",
            ".mypy_cache/3.13/fastapi/logger.data.json",
            ".mypy_cache/3.13/fastapi/logger.meta.json",
            ".mypy_cache/3.13/fastapi/middleware/__init__.data.json",
            ".mypy_cache/3.13/fastapi/middleware/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/middleware/asyncexitstack.data.json",
            ".mypy_cache/3.13/fastapi/middleware/asyncexitstack.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/__init__.data.json",
            ".mypy_cache/3.13/fastapi/openapi/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/constants.data.json",
            ".mypy_cache/3.13/fastapi/openapi/constants.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/docs.data.json",
            ".mypy_cache/3.13/fastapi/openapi/docs.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/models.data.json",
            ".mypy_cache/3.13/fastapi/openapi/models.meta.json",
            ".mypy_cache/3.13/fastapi/openapi/utils.data.json",
            ".mypy_cache/3.13/fastapi/openapi/utils.meta.json",
            ".mypy_cache/3.13/fastapi/param_functions.data.json",
            ".mypy_cache/3.13/fastapi/param_functions.meta.json",
            ".mypy_cache/3.13/fastapi/params.data.json",
            ".mypy_cache/3.13/fastapi/params.meta.json",
            ".mypy_cache/3.13/fastapi/requests.data.json",
            ".mypy_cache/3.13/fastapi/requests.meta.json",
            ".mypy_cache/3.13/fastapi/responses.data.json",
            ".mypy_cache/3.13/fastapi/responses.meta.json",
            ".mypy_cache/3.13/fastapi/routing.data.json",
            ".mypy_cache/3.13/fastapi/routing.meta.json",
            ".mypy_cache/3.13/fastapi/security/__init__.data.json",
            ".mypy_cache/3.13/fastapi/security/__init__.meta.json",
            ".mypy_cache/3.13/fastapi/security/api_key.data.json",
            ".mypy_cache/3.13/fastapi/security/api_key.meta.json",
            ".mypy_cache/3.13/fastapi/security/base.data.json",
            ".mypy_cache/3.13/fastapi/security/base.meta.json",
            ".mypy_cache/3.13/fastapi/security/http.data.json",
            ".mypy_cache/3.13/fastapi/security/http.meta.json",
            ".mypy_cache/3.13/fastapi/security/oauth2.data.json",
            ".mypy_cache/3.13/fastapi/security/oauth2.meta.json",
            ".mypy_cache/3.13/fastapi/security/open_id_connect_url.data.json",
            ".mypy_cache/3.13/fastapi/security/open_id_connect_url.meta.json",
            ".mypy_cache/3.13/fastapi/security/utils.data.json",
            ".mypy_cache/3.13/fastapi/security/utils.meta.json",
            ".mypy_cache/3.13/fastapi/testclient.data.json",
            ".mypy_cache/3.13/fastapi/testclient.meta.json",
            ".mypy_cache/3.13/fastapi/types.data.json",
            ".mypy_cache/3.13/fastapi/types.meta.json",
            ".mypy_cache/3.13/fastapi/utils.data.json",
            ".mypy_cache/3.13/fastapi/utils.meta.json",
            ".mypy_cache/3.13/fastapi/websockets.data.json",
            ".mypy_cache/3.13/fastapi/websockets.meta.json",
            ".mypy_cache/3.13/fnmatch.data.json",
            ".mypy_cache/3.13/fnmatch.meta.json",
            ".mypy_cache/3.13/fractions.data.json",
            ".mypy_cache/3.13/fractions.meta.json",
            ".mypy_cache/3.13/functools.data.json",
            ".mypy_cache/3.13/functools.meta.json",
            ".mypy_cache/3.13/gc.data.json",
            ".mypy_cache/3.13/gc.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/getpass.data.json",
            ".mypy_cache/3.13/getpass.meta.json",
            ".mypy_cache/3.13/gettext.data.json",
            ".mypy_cache/3.13/gettext.meta.json",
            ".mypy_cache/3.13/glob.data.json",
            ".mypy_cache/3.13/glob.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/h11/__init__.data.json",
            ".mypy_cache/3.13/h11/__init__.meta.json",
            ".mypy_cache/3.13/h11/_abnf.data.json",
            ".mypy_cache/3.13/h11/_abnf.meta.json",
            ".mypy_cache/3.13/h11/_connection.data.json",
            ".mypy_cache/3.13/h11/_connection.meta.json",
            ".mypy_cache/3.13/h11/_events.data.json",
            ".mypy_cache/3.13/h11/_events.meta.json",
            ".mypy_cache/3.13/h11/_headers.data.json",
            ".mypy_cache/3.13/h11/_headers.meta.json",
            ".mypy_cache/3.13/h11/_readers.data.json",
            ".mypy_cache/3.13/h11/_readers.meta.json",
            ".mypy_cache/3.13/h11/_receivebuffer.data.json",
            ".mypy_cache/3.13/h11/_receivebuffer.meta.json",
            ".mypy_cache/3.13/h11/_state.data.json",
            ".mypy_cache/3.13/h11/_state.meta.json",
            ".mypy_cache/3.13/h11/_util.data.json",
            ".mypy_cache/3.13/h11/_util.meta.json",
            ".mypy_cache/3.13/h11/_version.data.json",
            ".mypy_cache/3.13/h11/_version.meta.json",
            ".mypy_cache/3.13/h11/_writers.data.json",
            ".mypy_cache/3.13/h11/_writers.meta.json",
            ".mypy_cache/3.13/hashlib.data.json",
            ".mypy_cache/3.13/hashlib.meta.json",
            ".mypy_cache/3.13/hmac.data.json",
            ".mypy_cache/3.13/hmac.meta.json",
            ".mypy_cache/3.13/html/__init__.data.json",
            ".mypy_cache/3.13/html/__init__.meta.json",
            ".mypy_cache/3.13/html/entities.data.json",
            ".mypy_cache/3.13/html/entities.meta.json",
            ".mypy_cache/3.13/http/__init__.data.json",
            ".mypy_cache/3.13/http/__init__.meta.json",
            ".mypy_cache/3.13/http/client.data.json",
            ".mypy_cache/3.13/http/client.meta.json",
            ".mypy_cache/3.13/http/cookiejar.data.json",
            ".mypy_cache/3.13/http/cookiejar.meta.json",
            ".mypy_cache/3.13/http/cookies.data.json",
            ".mypy_cache/3.13/http/cookies.meta.json",
            ".mypy_cache/3.13/httpcore/__init__.data.json",
            ".mypy_cache/3.13/httpcore/__init__.meta.json",
            ".mypy_cache/3.13/httpcore/_api.data.json",
            ".mypy_cache/3.13/httpcore/_api.meta.json",
            ".mypy_cache/3.13/httpcore/_async/__init__.data.json",
            ".mypy_cache/3.13/httpcore/_async/__init__.meta.json",
            ".mypy_cache/3.13/httpcore/_async/connection.data.json",
            ".mypy_cache/3.13/httpcore/_async/connection.meta.json",
            ".mypy_cache/3.13/httpcore/_async/connection_pool.data.json",
            ".mypy_cache/3.13/httpcore/_async/connection_pool.meta.json",
            ".mypy_cache/3.13/httpcore/_async/http11.data.json",
            ".mypy_cache/3.13/httpcore/_async/http11.meta.json",
            ".mypy_cache/3.13/httpcore/_async/http2.data.json",
            ".mypy_cache/3.13/httpcore/_async/http2.meta.json",
            ".mypy_cache/3.13/httpcore/_async/http_proxy.data.json",
            ".mypy_cache/3.13/httpcore/_async/http_proxy.meta.json",
            ".mypy_cache/3.13/httpcore/_async/interfaces.data.json",
            ".mypy_cache/3.13/httpcore/_async/interfaces.meta.json",
            ".mypy_cache/3.13/httpcore/_async/socks_proxy.data.json",
            ".mypy_cache/3.13/httpcore/_async/socks_proxy.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/__init__.data.json",
            ".mypy_cache/3.13/httpcore/_backends/__init__.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/anyio.data.json",
            ".mypy_cache/3.13/httpcore/_backends/anyio.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/auto.data.json",
            ".mypy_cache/3.13/httpcore/_backends/auto.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/base.data.json",
            ".mypy_cache/3.13/httpcore/_backends/base.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/mock.data.json",
            ".mypy_cache/3.13/httpcore/_backends/mock.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/sync.data.json",
            ".mypy_cache/3.13/httpcore/_backends/sync.meta.json",
            ".mypy_cache/3.13/httpcore/_backends/trio.data.json",
            ".mypy_cache/3.13/httpcore/_backends/trio.meta.json",
            ".mypy_cache/3.13/httpcore/_exceptions.data.json",
            ".mypy_cache/3.13/httpcore/_exceptions.meta.json",
            ".mypy_cache/3.13/httpcore/_models.data.json",
            ".mypy_cache/3.13/httpcore/_models.meta.json",
            ".mypy_cache/3.13/httpcore/_ssl.data.json",
            ".mypy_cache/3.13/httpcore/_ssl.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/__init__.data.json",
            ".mypy_cache/3.13/httpcore/_sync/__init__.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/connection.data.json",
            ".mypy_cache/3.13/httpcore/_sync/connection.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/connection_pool.data.json",
            ".mypy_cache/3.13/httpcore/_sync/connection_pool.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/http11.data.json",
            ".mypy_cache/3.13/httpcore/_sync/http11.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/http2.data.json",
            ".mypy_cache/3.13/httpcore/_sync/http2.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/http_proxy.data.json",
            ".mypy_cache/3.13/httpcore/_sync/http_proxy.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/interfaces.data.json",
            ".mypy_cache/3.13/httpcore/_sync/interfaces.meta.json",
            ".mypy_cache/3.13/httpcore/_sync/socks_proxy.data.json",
            ".mypy_cache/3.13/httpcore/_sync/socks_proxy.meta.json",
            ".mypy_cache/3.13/httpcore/_synchronization.data.json",
            ".mypy_cache/3.13/httpcore/_synchronization.meta.json",
            ".mypy_cache/3.13/httpcore/_trace.data.json",
            ".mypy_cache/3.13/httpcore/_trace.meta.json",
            ".mypy_cache/3.13/httpcore/_utils.data.json",
            ".mypy_cache/3.13/httpcore/_utils.meta.json",
            ".mypy_cache/3.13/httpx/__init__.data.json",
            ".mypy_cache/3.13/httpx/__init__.meta.json",
            ".mypy_cache/3.13/httpx/__version__.data.json",
            ".mypy_cache/3.13/httpx/__version__.meta.json",
            ".mypy_cache/3.13/httpx/_api.data.json",
            ".mypy_cache/3.13/httpx/_api.meta.json",
            ".mypy_cache/3.13/httpx/_auth.data.json",
            ".mypy_cache/3.13/httpx/_auth.meta.json",
            ".mypy_cache/3.13/httpx/_client.data.json",
            ".mypy_cache/3.13/httpx/_client.meta.json",
            ".mypy_cache/3.13/httpx/_config.data.json",
            ".mypy_cache/3.13/httpx/_config.meta.json",
            ".mypy_cache/3.13/httpx/_content.data.json",
            ".mypy_cache/3.13/httpx/_content.meta.json",
            ".mypy_cache/3.13/httpx/_decoders.data.json",
            ".mypy_cache/3.13/httpx/_decoders.meta.json",
            ".mypy_cache/3.13/httpx/_exceptions.data.json",
            ".mypy_cache/3.13/httpx/_exceptions.meta.json",
            ".mypy_cache/3.13/httpx/_main.data.json",
            ".mypy_cache/3.13/httpx/_main.meta.json",
            ".mypy_cache/3.13/httpx/_models.data.json",
            ".mypy_cache/3.13/httpx/_models.meta.json",
            ".mypy_cache/3.13/httpx/_multipart.data.json",
            ".mypy_cache/3.13/httpx/_multipart.meta.json",
            ".mypy_cache/3.13/httpx/_status_codes.data.json",
            ".mypy_cache/3.13/httpx/_status_codes.meta.json",
            ".mypy_cache/3.13/httpx/_transports/__init__.data.json",
            ".mypy_cache/3.13/httpx/_transports/__init__.meta.json",
            ".mypy_cache/3.13/httpx/_transports/asgi.data.json",
            ".mypy_cache/3.13/httpx/_transports/asgi.meta.json",
            ".mypy_cache/3.13/httpx/_transports/base.data.json",
            ".mypy_cache/3.13/httpx/_transports/base.meta.json",
            ".mypy_cache/3.13/httpx/_transports/default.data.json",
            ".mypy_cache/3.13/httpx/_transports/default.meta.json",
            ".mypy_cache/3.13/httpx/_transports/mock.data.json",
            ".mypy_cache/3.13/httpx/_transports/mock.meta.json",
            ".mypy_cache/3.13/httpx/_transports/wsgi.data.json",
            ".mypy_cache/3.13/httpx/_transports/wsgi.meta.json",
            ".mypy_cache/3.13/httpx/_types.data.json",
            ".mypy_cache/3.13/httpx/_types.meta.json",
            ".mypy_cache/3.13/httpx/_urlparse.data.json",
            ".mypy_cache/3.13/httpx/_urlparse.meta.json",
            ".mypy_cache/3.13/httpx/_urls.data.json",
            ".mypy_cache/3.13/httpx/_urls.meta.json",
            ".mypy_cache/3.13/httpx/_utils.data.json",
            ".mypy_cache/3.13/httpx/_utils.meta.json",
            ".mypy_cache/3.13/idna/__init__.data.json",
            ".mypy_cache/3.13/idna/__init__.meta.json",
            ".mypy_cache/3.13/idna/core.data.json",
            ".mypy_cache/3.13/idna/core.meta.json",
            ".mypy_cache/3.13/idna/idnadata.data.json",
            ".mypy_cache/3.13/idna/idnadata.meta.json",
            ".mypy_cache/3.13/idna/intranges.data.json",
            ".mypy_cache/3.13/idna/intranges.meta.json",
            ".mypy_cache/3.13/idna/package_data.data.json",
            ".mypy_cache/3.13/idna/package_data.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/importlib/resources/readers.data.json",
            ".mypy_cache/3.13/importlib/resources/readers.meta.json",
            ".mypy_cache/3.13/importlib/util.data.json",
            ".mypy_cache/3.13/importlib/util.meta.json",
            ".mypy_cache/3.13/iniconfig/__init__.data.json",
            ".mypy_cache/3.13/iniconfig/__init__.meta.json",
            ".mypy_cache/3.13/iniconfig/_parse.data.json",
            ".mypy_cache/3.13/iniconfig/_parse.meta.json",
            ".mypy_cache/3.13/iniconfig/exceptions.data.json",
            ".mypy_cache/3.13/iniconfig/exceptions.meta.json",
            ".mypy_cache/3.13/inspect.data.json",
            ".mypy_cache/3.13/inspect.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/ipaddress.data.json",
            ".mypy_cache/3.13/ipaddress.meta.json",
            ".mypy_cache/3.13/itertools.data.json",
            ".mypy_cache/3.13/itertools.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/keyword.data.json",
            ".mypy_cache/3.13/keyword.meta.json",
            ".mypy_cache/3.13/linecache.data.json",
            ".mypy_cache/3.13/linecache.meta.json",
            ".mypy_cache/3.13/locale.data.json",
            ".mypy_cache/3.13/locale.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/_punycode.data.json",
            ".mypy_cache/3.13/markdown_it/_punycode.meta.json",
            ".mypy_cache/3.13/markdown_it/common/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/common/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/common/entities.data.json",
            ".mypy_cache/3.13/markdown_it/common/entities.meta.json",
            ".mypy_cache/3.13/markdown_it/common/html_blocks.data.json",
            ".mypy_cache/3.13/markdown_it/common/html_blocks.meta.json",
            ".mypy_cache/3.13/markdown_it/common/html_re.data.json",
            ".mypy_cache/3.13/markdown_it/common/html_re.meta.json",
            ".mypy_cache/3.13/markdown_it/common/normalize_url.data.json",
            ".mypy_cache/3.13/markdown_it/common/normalize_url.meta.json",
            ".mypy_cache/3.13/markdown_it/common/utils.data.json",
            ".mypy_cache/3.13/markdown_it/common/utils.meta.json",
            ".mypy_cache/3.13/markdown_it/helpers/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/helpers/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_destination.data.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_destination.meta.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_label.data.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_label.meta.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_title.data.json",
            ".mypy_cache/3.13/markdown_it/helpers/parse_link_title.meta.json",
            ".mypy_cache/3.13/markdown_it/main.data.json",
            ".mypy_cache/3.13/markdown_it/main.meta.json",
            ".mypy_cache/3.13/markdown_it/parser_block.data.json",
            ".mypy_cache/3.13/markdown_it/parser_block.meta.json",
            ".mypy_cache/3.13/markdown_it/parser_core.data.json",
            ".mypy_cache/3.13/markdown_it/parser_core.meta.json",
            ".mypy_cache/3.13/markdown_it/parser_inline.data.json",
            ".mypy_cache/3.13/markdown_it/parser_inline.meta.json",
            ".mypy_cache/3.13/markdown_it/presets/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/presets/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/presets/commonmark.data.json",
            ".mypy_cache/3.13/markdown_it/presets/commonmark.meta.json",
            ".mypy_cache/3.13/markdown_it/presets/default.data.json",
            ".mypy_cache/3.13/markdown_it/presets/default.meta.json",
            ".mypy_cache/3.13/markdown_it/presets/zero.data.json",
            ".mypy_cache/3.13/markdown_it/presets/zero.meta.json",
            ".mypy_cache/3.13/markdown_it/renderer.data.json",
            ".mypy_cache/3.13/markdown_it/renderer.meta.json",
            ".mypy_cache/3.13/markdown_it/ruler.data.json",
            ".mypy_cache/3.13/markdown_it/ruler.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/blockquote.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/blockquote.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/code.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/code.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/fence.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/fence.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/heading.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/heading.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/hr.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/hr.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/html_block.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/html_block.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/lheading.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/lheading.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/list.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/list.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/paragraph.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/paragraph.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/reference.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/reference.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/state_block.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/state_block.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_block/table.data.json",
            ".mypy_cache/3.13/markdown_it/rules_block/table.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/block.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/block.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/inline.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/inline.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/linkify.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/linkify.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/normalize.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/normalize.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/replacements.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/replacements.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/smartquotes.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/smartquotes.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/state_core.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/state_core.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_core/text_join.data.json",
            ".mypy_cache/3.13/markdown_it/rules_core/text_join.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/__init__.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/__init__.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/autolink.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/autolink.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/backticks.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/backticks.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/balance_pairs.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/balance_pairs.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/emphasis.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/emphasis.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/entity.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/entity.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/escape.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/escape.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/fragments_join.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/fragments_join.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/html_inline.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/html_inline.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/image.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/image.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/link.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/link.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/linkify.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/linkify.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/newline.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/newline.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/state_inline.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/state_inline.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/strikethrough.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/strikethrough.meta.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/text.data.json",
            ".mypy_cache/3.13/markdown_it/rules_inline/text.meta.json",
            ".mypy_cache/3.13/markdown_it/token.data.json",
            ".mypy_cache/3.13/markdown_it/token.meta.json",
            ".mypy_cache/3.13/markdown_it/utils.data.json",
            ".mypy_cache/3.13/markdown_it/utils.meta.json",
            ".mypy_cache/3.13/marshal.data.json",
            ".mypy_cache/3.13/marshal.meta.json",
            ".mypy_cache/3.13/math.data.json",
            ".mypy_cache/3.13/math.meta.json",
            ".mypy_cache/3.13/mdurl/__init__.data.json",
            ".mypy_cache/3.13/mdurl/__init__.meta.json",
            ".mypy_cache/3.13/mdurl/_decode.data.json",
            ".mypy_cache/3.13/mdurl/_decode.meta.json",
            ".mypy_cache/3.13/mdurl/_encode.data.json",
            ".mypy_cache/3.13/mdurl/_encode.meta.json",
            ".mypy_cache/3.13/mdurl/_format.data.json",
            ".mypy_cache/3.13/mdurl/_format.meta.json",
            ".mypy_cache/3.13/mdurl/_parse.data.json",
            ".mypy_cache/3.13/mdurl/_parse.meta.json",
            ".mypy_cache/3.13/mdurl/_url.data.json",
            ".mypy_cache/3.13/mdurl/_url.meta.json",
            ".mypy_cache/3.13/mimetypes.data.json",
            ".mypy_cache/3.13/mimetypes.meta.json",
            ".mypy_cache/3.13/mmap.data.json",
            ".mypy_cache/3.13/mmap.meta.json",
            ".mypy_cache/3.13/msvcrt.data.json",
            ".mypy_cache/3.13/msvcrt.meta.json",
            ".mypy_cache/3.13/multiprocessing/__init__.data.json",
            ".mypy_cache/3.13/multiprocessing/__init__.meta.json",
            ".mypy_cache/3.13/multiprocessing/connection.data.json",
            ".mypy_cache/3.13/multiprocessing/connection.meta.json",
            ".mypy_cache/3.13/multiprocessing/context.data.json",
            ".mypy_cache/3.13/multiprocessing/context.meta.json",
            ".mypy_cache/3.13/multiprocessing/managers.data.json",
            ".mypy_cache/3.13/multiprocessing/managers.meta.json",
            ".mypy_cache/3.13/multiprocessing/pool.data.json",
            ".mypy_cache/3.13/multiprocessing/pool.meta.json",
            ".mypy_cache/3.13/multiprocessing/popen_fork.data.json",
            ".mypy_cache/3.13/multiprocessing/popen_fork.meta.json",
            ".mypy_cache/3.13/multiprocessing/popen_forkserver.data.json",
            ".mypy_cache/3.13/multiprocessing/popen_forkserver.meta.json",
            ".mypy_cache/3.13/multiprocessing/popen_spawn_posix.data.json",
            ".mypy_cache/3.13/multiprocessing/popen_spawn_posix.meta.json",
            ".mypy_cache/3.13/multiprocessing/popen_spawn_win32.data.json",
            ".mypy_cache/3.13/multiprocessing/popen_spawn_win32.meta.json",
            ".mypy_cache/3.13/multiprocessing/process.data.json",
            ".mypy_cache/3.13/multiprocessing/process.meta.json",
            ".mypy_cache/3.13/multiprocessing/queues.data.json",
            ".mypy_cache/3.13/multiprocessing/queues.meta.json",
            ".mypy_cache/3.13/multiprocessing/reduction.data.json",
            ".mypy_cache/3.13/multiprocessing/reduction.meta.json",
            ".mypy_cache/3.13/multiprocessing/shared_memory.data.json",
            ".mypy_cache/3.13/multiprocessing/shared_memory.meta.json",
            ".mypy_cache/3.13/multiprocessing/sharedctypes.data.json",
            ".mypy_cache/3.13/multiprocessing/sharedctypes.meta.json",
            ".mypy_cache/3.13/multiprocessing/spawn.data.json",
            ".mypy_cache/3.13/multiprocessing/spawn.meta.json",
            ".mypy_cache/3.13/multiprocessing/synchronize.data.json",
            ".mypy_cache/3.13/multiprocessing/synchronize.meta.json",
            ".mypy_cache/3.13/multiprocessing/util.data.json",
            ".mypy_cache/3.13/multiprocessing/util.meta.json",
            ".mypy_cache/3.13/netrc.data.json",
            ".mypy_cache/3.13/netrc.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/nturl2path.data.json",
            ".mypy_cache/3.13/nturl2path.meta.json",
            ".mypy_cache/3.13/numbers.data.json",
            ".mypy_cache/3.13/numbers.meta.json",
            ".mypy_cache/3.13/opcode.data.json",
            ".mypy_cache/3.13/opcode.meta.json",
            ".mypy_cache/3.13/operator.data.json",
            ".mypy_cache/3.13/operator.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/packaging/__init__.data.json",
            ".mypy_cache/3.13/packaging/__init__.meta.json",
            ".mypy_cache/3.13/packaging/_elffile.data.json",
            ".mypy_cache/3.13/packaging/_elffile.meta.json",
            ".mypy_cache/3.13/packaging/_manylinux.data.json",
            ".mypy_cache/3.13/packaging/_manylinux.meta.json",
            ".mypy_cache/3.13/packaging/_musllinux.data.json",
            ".mypy_cache/3.13/packaging/_musllinux.meta.json",
            ".mypy_cache/3.13/packaging/_parser.data.json",
            ".mypy_cache/3.13/packaging/_parser.meta.json",
            ".mypy_cache/3.13/packaging/_structures.data.json",
            ".mypy_cache/3.13/packaging/_structures.meta.json",
            ".mypy_cache/3.13/packaging/_tokenizer.data.json",
            ".mypy_cache/3.13/packaging/_tokenizer.meta.json",
            ".mypy_cache/3.13/packaging/markers.data.json",
            ".mypy_cache/3.13/packaging/markers.meta.json",
            ".mypy_cache/3.13/packaging/requirements.data.json",
            ".mypy_cache/3.13/packaging/requirements.meta.json",
            ".mypy_cache/3.13/packaging/specifiers.data.json",
            ".mypy_cache/3.13/packaging/specifiers.meta.json",
            ".mypy_cache/3.13/packaging/tags.data.json",
            ".mypy_cache/3.13/packaging/tags.meta.json",
            ".mypy_cache/3.13/packaging/utils.data.json",
            ".mypy_cache/3.13/packaging/utils.meta.json",
            ".mypy_cache/3.13/packaging/version.data.json",
            ".mypy_cache/3.13/packaging/version.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/pdb.data.json",
            ".mypy_cache/3.13/pdb.meta.json",
            ".mypy_cache/3.13/pickle.data.json",
            ".mypy_cache/3.13/pickle.meta.json",
            ".mypy_cache/3.13/pkg_resources/__init__.data.json",
            ".mypy_cache/3.13/pkg_resources/__init__.meta.json",
            ".mypy_cache/3.13/pkgutil.data.json",
            ".mypy_cache/3.13/pkgutil.meta.json",
            ".mypy_cache/3.13/platform.data.json",
            ".mypy_cache/3.13/platform.meta.json",
            ".mypy_cache/3.13/platformdirs/__init__.data.json",
            ".mypy_cache/3.13/platformdirs/__init__.meta.json",
            ".mypy_cache/3.13/platformdirs/api.data.json",
            ".mypy_cache/3.13/platformdirs/api.meta.json",
            ".mypy_cache/3.13/platformdirs/version.data.json",
            ".mypy_cache/3.13/platformdirs/version.meta.json",
            ".mypy_cache/3.13/platformdirs/windows.data.json",
            ".mypy_cache/3.13/platformdirs/windows.meta.json",
            ".mypy_cache/3.13/plistlib.data.json",
            ".mypy_cache/3.13/plistlib.meta.json",
            ".mypy_cache/3.13/pluggy/__init__.data.json",
            ".mypy_cache/3.13/pluggy/__init__.meta.json",
            ".mypy_cache/3.13/pluggy/_callers.data.json",
            ".mypy_cache/3.13/pluggy/_callers.meta.json",
            ".mypy_cache/3.13/pluggy/_hooks.data.json",
            ".mypy_cache/3.13/pluggy/_hooks.meta.json",
            ".mypy_cache/3.13/pluggy/_manager.data.json",
            ".mypy_cache/3.13/pluggy/_manager.meta.json",
            ".mypy_cache/3.13/pluggy/_result.data.json",
            ".mypy_cache/3.13/pluggy/_result.meta.json",
            ".mypy_cache/3.13/pluggy/_tracing.data.json",
            ".mypy_cache/3.13/pluggy/_tracing.meta.json",
            ".mypy_cache/3.13/pluggy/_version.data.json",
            ".mypy_cache/3.13/pluggy/_version.meta.json",
            ".mypy_cache/3.13/pluggy/_warnings.data.json",
            ".mypy_cache/3.13/pluggy/_warnings.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/pprint.data.json",
            ".mypy_cache/3.13/pprint.meta.json",
            ".mypy_cache/3.13/pydantic/__init__.data.json",
            ".mypy_cache/3.13/pydantic/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/__init__.data.json",
            ".mypy_cache/3.13/pydantic/_internal/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_config.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_config.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_core_metadata.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_core_metadata.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_core_utils.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_core_utils.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_dataclasses.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_dataclasses.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_decorators.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_decorators.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_decorators_v1.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_decorators_v1.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_discriminated_union.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_discriminated_union.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_docs_extraction.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_docs_extraction.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_fields.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_fields.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_forward_ref.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_forward_ref.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_generate_schema.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_generate_schema.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_generics.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_generics.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_import_utils.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_import_utils.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_internal_dataclass.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_internal_dataclass.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_known_annotated_metadata.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_known_annotated_metadata.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_mock_val_ser.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_mock_val_ser.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_model_construction.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_model_construction.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_namespace_utils.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_namespace_utils.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_repr.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_repr.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_schema_gather.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_schema_gather.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_schema_generation_shared.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_schema_generation_shared.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_serializers.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_serializers.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_signature.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_signature.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_typing_extra.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_typing_extra.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_utils.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_utils.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_validate_call.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_validate_call.meta.json",
            ".mypy_cache/3.13/pydantic/_internal/_validators.data.json",
            ".mypy_cache/3.13/pydantic/_internal/_validators.meta.json",
            ".mypy_cache/3.13/pydantic/_migration.data.json",
            ".mypy_cache/3.13/pydantic/_migration.meta.json",
            ".mypy_cache/3.13/pydantic/aliases.data.json",
            ".mypy_cache/3.13/pydantic/aliases.meta.json",
            ".mypy_cache/3.13/pydantic/annotated_handlers.data.json",
            ".mypy_cache/3.13/pydantic/annotated_handlers.meta.json",
            ".mypy_cache/3.13/pydantic/class_validators.data.json",
            ".mypy_cache/3.13/pydantic/class_validators.meta.json",
            ".mypy_cache/3.13/pydantic/color.data.json",
            ".mypy_cache/3.13/pydantic/color.meta.json",
            ".mypy_cache/3.13/pydantic/config.data.json",
            ".mypy_cache/3.13/pydantic/config.meta.json",
            ".mypy_cache/3.13/pydantic/dataclasses.data.json",
            ".mypy_cache/3.13/pydantic/dataclasses.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/__init__.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/class_validators.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/class_validators.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/config.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/config.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/copy_internals.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/copy_internals.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/json.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/json.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/parse.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/parse.meta.json",
            ".mypy_cache/3.13/pydantic/deprecated/tools.data.json",
            ".mypy_cache/3.13/pydantic/deprecated/tools.meta.json",
            ".mypy_cache/3.13/pydantic/error_wrappers.data.json",
            ".mypy_cache/3.13/pydantic/error_wrappers.meta.json",
            ".mypy_cache/3.13/pydantic/errors.data.json",
            ".mypy_cache/3.13/pydantic/errors.meta.json",
            ".mypy_cache/3.13/pydantic/fields.data.json",
            ".mypy_cache/3.13/pydantic/fields.meta.json",
            ".mypy_cache/3.13/pydantic/functional_serializers.data.json",
            ".mypy_cache/3.13/pydantic/functional_serializers.meta.json",
            ".mypy_cache/3.13/pydantic/functional_validators.data.json",
            ".mypy_cache/3.13/pydantic/functional_validators.meta.json",
            ".mypy_cache/3.13/pydantic/json_schema.data.json",
            ".mypy_cache/3.13/pydantic/json_schema.meta.json",
            ".mypy_cache/3.13/pydantic/main.data.json",
            ".mypy_cache/3.13/pydantic/main.meta.json",
            ".mypy_cache/3.13/pydantic/networks.data.json",
            ".mypy_cache/3.13/pydantic/networks.meta.json",
            ".mypy_cache/3.13/pydantic/plugin/__init__.data.json",
            ".mypy_cache/3.13/pydantic/plugin/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/plugin/_schema_validator.data.json",
            ".mypy_cache/3.13/pydantic/plugin/_schema_validator.meta.json",
            ".mypy_cache/3.13/pydantic/root_model.data.json",
            ".mypy_cache/3.13/pydantic/root_model.meta.json",
            ".mypy_cache/3.13/pydantic/schema.data.json",
            ".mypy_cache/3.13/pydantic/schema.meta.json",
            ".mypy_cache/3.13/pydantic/type_adapter.data.json",
            ".mypy_cache/3.13/pydantic/type_adapter.meta.json",
            ".mypy_cache/3.13/pydantic/types.data.json",
            ".mypy_cache/3.13/pydantic/types.meta.json",
            ".mypy_cache/3.13/pydantic/typing.data.json",
            ".mypy_cache/3.13/pydantic/typing.meta.json",
            ".mypy_cache/3.13/pydantic/utils.data.json",
            ".mypy_cache/3.13/pydantic/utils.meta.json",
            ".mypy_cache/3.13/pydantic/v1/__init__.data.json",
            ".mypy_cache/3.13/pydantic/v1/__init__.meta.json",
            ".mypy_cache/3.13/pydantic/v1/annotated_types.data.json",
            ".mypy_cache/3.13/pydantic/v1/annotated_types.meta.json",
            ".mypy_cache/3.13/pydantic/v1/class_validators.data.json",
            ".mypy_cache/3.13/pydantic/v1/class_validators.meta.json",
            ".mypy_cache/3.13/pydantic/v1/color.data.json",
            ".mypy_cache/3.13/pydantic/v1/color.meta.json",
            ".mypy_cache/3.13/pydantic/v1/config.data.json",
            ".mypy_cache/3.13/pydantic/v1/config.meta.json",
            ".mypy_cache/3.13/pydantic/v1/dataclasses.data.json",
            ".mypy_cache/3.13/pydantic/v1/dataclasses.meta.json",
            ".mypy_cache/3.13/pydantic/v1/datetime_parse.data.json",
            ".mypy_cache/3.13/pydantic/v1/datetime_parse.meta.json",
            ".mypy_cache/3.13/pydantic/v1/decorator.data.json",
            ".mypy_cache/3.13/pydantic/v1/decorator.meta.json",
            ".mypy_cache/3.13/pydantic/v1/env_settings.data.json",
            ".mypy_cache/3.13/pydantic/v1/env_settings.meta.json",
            ".mypy_cache/3.13/pydantic/v1/error_wrappers.data.json",
            ".mypy_cache/3.13/pydantic/v1/error_wrappers.meta.json",
            ".mypy_cache/3.13/pydantic/v1/errors.data.json",
            ".mypy_cache/3.13/pydantic/v1/errors.meta.json",
            ".mypy_cache/3.13/pydantic/v1/fields.data.json",
            ".mypy_cache/3.13/pydantic/v1/fields.meta.json",
            ".mypy_cache/3.13/pydantic/v1/json.data.json",
            ".mypy_cache/3.13/pydantic/v1/json.meta.json",
            ".mypy_cache/3.13/pydantic/v1/main.data.json",
            ".mypy_cache/3.13/pydantic/v1/main.meta.json",
            ".mypy_cache/3.13/pydantic/v1/networks.data.json",
            ".mypy_cache/3.13/pydantic/v1/networks.meta.json",
            ".mypy_cache/3.13/pydantic/v1/parse.data.json",
            ".mypy_cache/3.13/pydantic/v1/parse.meta.json",
            ".mypy_cache/3.13/pydantic/v1/schema.data.json",
            ".mypy_cache/3.13/pydantic/v1/schema.meta.json",
            ".mypy_cache/3.13/pydantic/v1/tools.data.json",
            ".mypy_cache/3.13/pydantic/v1/tools.meta.json",
            ".mypy_cache/3.13/pydantic/v1/types.data.json",
            ".mypy_cache/3.13/pydantic/v1/types.meta.json",
            ".mypy_cache/3.13/pydantic/v1/typing.data.json",
            ".mypy_cache/3.13/pydantic/v1/typing.meta.json",
            ".mypy_cache/3.13/pydantic/v1/utils.data.json",
            ".mypy_cache/3.13/pydantic/v1/utils.meta.json",
            ".mypy_cache/3.13/pydantic/v1/validators.data.json",
            ".mypy_cache/3.13/pydantic/v1/validators.meta.json",
            ".mypy_cache/3.13/pydantic/v1/version.data.json",
            ".mypy_cache/3.13/pydantic/v1/version.meta.json",
            ".mypy_cache/3.13/pydantic/validate_call_decorator.data.json",
            ".mypy_cache/3.13/pydantic/validate_call_decorator.meta.json",
            ".mypy_cache/3.13/pydantic/version.data.json",
            ".mypy_cache/3.13/pydantic/version.meta.json",
            ".mypy_cache/3.13/pydantic/warnings.data.json",
            ".mypy_cache/3.13/pydantic/warnings.meta.json",
            ".mypy_cache/3.13/pydantic_core/__init__.data.json",
            ".mypy_cache/3.13/pydantic_core/__init__.meta.json",
            ".mypy_cache/3.13/pydantic_core/_pydantic_core.data.json",
            ".mypy_cache/3.13/pydantic_core/_pydantic_core.meta.json",
            ".mypy_cache/3.13/pydantic_core/core_schema.data.json",
            ".mypy_cache/3.13/pydantic_core/core_schema.meta.json",
            ".mypy_cache/3.13/pydoc.data.json",
            ".mypy_cache/3.13/pydoc.meta.json",
            ".mypy_cache/3.13/pytest/__init__.data.json",
            ".mypy_cache/3.13/pytest/__init__.meta.json",
            ".mypy_cache/3.13/queue.data.json",
            ".mypy_cache/3.13/queue.meta.json",
            ".mypy_cache/3.13/random.data.json",
            ".mypy_cache/3.13/random.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/reprlib.data.json",
            ".mypy_cache/3.13/reprlib.meta.json",
            ".mypy_cache/3.13/rich/__init__.data.json",
            ".mypy_cache/3.13/rich/__init__.meta.json",
            ".mypy_cache/3.13/rich/__main__.data.json",
            ".mypy_cache/3.13/rich/__main__.meta.json",
            ".mypy_cache/3.13/rich/_cell_widths.data.json",
            ".mypy_cache/3.13/rich/_cell_widths.meta.json",
            ".mypy_cache/3.13/rich/_emoji_codes.data.json",
            ".mypy_cache/3.13/rich/_emoji_codes.meta.json",
            ".mypy_cache/3.13/rich/_emoji_replace.data.json",
            ".mypy_cache/3.13/rich/_emoji_replace.meta.json",
            ".mypy_cache/3.13/rich/_export_format.data.json",
            ".mypy_cache/3.13/rich/_export_format.meta.json",
            ".mypy_cache/3.13/rich/_extension.data.json",
            ".mypy_cache/3.13/rich/_extension.meta.json",
            ".mypy_cache/3.13/rich/_fileno.data.json",
            ".mypy_cache/3.13/rich/_fileno.meta.json",
            ".mypy_cache/3.13/rich/_log_render.data.json",
            ".mypy_cache/3.13/rich/_log_render.meta.json",
            ".mypy_cache/3.13/rich/_loop.data.json",
            ".mypy_cache/3.13/rich/_loop.meta.json",
            ".mypy_cache/3.13/rich/_null_file.data.json",
            ".mypy_cache/3.13/rich/_null_file.meta.json",
            ".mypy_cache/3.13/rich/_palettes.data.json",
            ".mypy_cache/3.13/rich/_palettes.meta.json",
            ".mypy_cache/3.13/rich/_pick.data.json",
            ".mypy_cache/3.13/rich/_pick.meta.json",
            ".mypy_cache/3.13/rich/_ratio.data.json",
            ".mypy_cache/3.13/rich/_ratio.meta.json",
            ".mypy_cache/3.13/rich/_spinners.data.json",
            ".mypy_cache/3.13/rich/_spinners.meta.json",
            ".mypy_cache/3.13/rich/_stack.data.json",
            ".mypy_cache/3.13/rich/_stack.meta.json",
            ".mypy_cache/3.13/rich/_timer.data.json",
            ".mypy_cache/3.13/rich/_timer.meta.json",
            ".mypy_cache/3.13/rich/_win32_console.data.json",
            ".mypy_cache/3.13/rich/_win32_console.meta.json",
            ".mypy_cache/3.13/rich/_windows.data.json",
            ".mypy_cache/3.13/rich/_windows.meta.json",
            ".mypy_cache/3.13/rich/_windows_renderer.data.json",
            ".mypy_cache/3.13/rich/_windows_renderer.meta.json",
            ".mypy_cache/3.13/rich/_wrap.data.json",
            ".mypy_cache/3.13/rich/_wrap.meta.json",
            ".mypy_cache/3.13/rich/abc.data.json",
            ".mypy_cache/3.13/rich/abc.meta.json",
            ".mypy_cache/3.13/rich/align.data.json",
            ".mypy_cache/3.13/rich/align.meta.json",
            ".mypy_cache/3.13/rich/ansi.data.json",
            ".mypy_cache/3.13/rich/ansi.meta.json",
            ".mypy_cache/3.13/rich/box.data.json",
            ".mypy_cache/3.13/rich/box.meta.json",
            ".mypy_cache/3.13/rich/cells.data.json",
            ".mypy_cache/3.13/rich/cells.meta.json",
            ".mypy_cache/3.13/rich/color.data.json",
            ".mypy_cache/3.13/rich/color.meta.json",
            ".mypy_cache/3.13/rich/color_triplet.data.json",
            ".mypy_cache/3.13/rich/color_triplet.meta.json",
            ".mypy_cache/3.13/rich/columns.data.json",
            ".mypy_cache/3.13/rich/columns.meta.json",
            ".mypy_cache/3.13/rich/console.data.json",
            ".mypy_cache/3.13/rich/console.meta.json",
            ".mypy_cache/3.13/rich/constrain.data.json",
            ".mypy_cache/3.13/rich/constrain.meta.json",
            ".mypy_cache/3.13/rich/containers.data.json",
            ".mypy_cache/3.13/rich/containers.meta.json",
            ".mypy_cache/3.13/rich/control.data.json",
            ".mypy_cache/3.13/rich/control.meta.json",
            ".mypy_cache/3.13/rich/default_styles.data.json",
            ".mypy_cache/3.13/rich/default_styles.meta.json",
            ".mypy_cache/3.13/rich/emoji.data.json",
            ".mypy_cache/3.13/rich/emoji.meta.json",
            ".mypy_cache/3.13/rich/errors.data.json",
            ".mypy_cache/3.13/rich/errors.meta.json",
            ".mypy_cache/3.13/rich/file_proxy.data.json",
            ".mypy_cache/3.13/rich/file_proxy.meta.json",
            ".mypy_cache/3.13/rich/filesize.data.json",
            ".mypy_cache/3.13/rich/filesize.meta.json",
            ".mypy_cache/3.13/rich/highlighter.data.json",
            ".mypy_cache/3.13/rich/highlighter.meta.json",
            ".mypy_cache/3.13/rich/json.data.json",
            ".mypy_cache/3.13/rich/json.meta.json",
            ".mypy_cache/3.13/rich/jupyter.data.json",
            ".mypy_cache/3.13/rich/jupyter.meta.json",
            ".mypy_cache/3.13/rich/live.data.json",
            ".mypy_cache/3.13/rich/live.meta.json",
            ".mypy_cache/3.13/rich/live_render.data.json",
            ".mypy_cache/3.13/rich/live_render.meta.json",
            ".mypy_cache/3.13/rich/markdown.data.json",
            ".mypy_cache/3.13/rich/markdown.meta.json",
            ".mypy_cache/3.13/rich/markup.data.json",
            ".mypy_cache/3.13/rich/markup.meta.json",
            ".mypy_cache/3.13/rich/measure.data.json",
            ".mypy_cache/3.13/rich/measure.meta.json",
            ".mypy_cache/3.13/rich/padding.data.json",
            ".mypy_cache/3.13/rich/padding.meta.json",
            ".mypy_cache/3.13/rich/pager.data.json",
            ".mypy_cache/3.13/rich/pager.meta.json",
            ".mypy_cache/3.13/rich/palette.data.json",
            ".mypy_cache/3.13/rich/palette.meta.json",
            ".mypy_cache/3.13/rich/panel.data.json",
            ".mypy_cache/3.13/rich/panel.meta.json",
            ".mypy_cache/3.13/rich/pretty.data.json",
            ".mypy_cache/3.13/rich/pretty.meta.json",
            ".mypy_cache/3.13/rich/progress.data.json",
            ".mypy_cache/3.13/rich/progress.meta.json",
            ".mypy_cache/3.13/rich/progress_bar.data.json",
            ".mypy_cache/3.13/rich/progress_bar.meta.json",
            ".mypy_cache/3.13/rich/protocol.data.json",
            ".mypy_cache/3.13/rich/protocol.meta.json",
            ".mypy_cache/3.13/rich/region.data.json",
            ".mypy_cache/3.13/rich/region.meta.json",
            ".mypy_cache/3.13/rich/repr.data.json",
            ".mypy_cache/3.13/rich/repr.meta.json",
            ".mypy_cache/3.13/rich/rule.data.json",
            ".mypy_cache/3.13/rich/rule.meta.json",
            ".mypy_cache/3.13/rich/scope.data.json",
            ".mypy_cache/3.13/rich/scope.meta.json",
            ".mypy_cache/3.13/rich/screen.data.json",
            ".mypy_cache/3.13/rich/screen.meta.json",
            ".mypy_cache/3.13/rich/segment.data.json",
            ".mypy_cache/3.13/rich/segment.meta.json",
            ".mypy_cache/3.13/rich/spinner.data.json",
            ".mypy_cache/3.13/rich/spinner.meta.json",
            ".mypy_cache/3.13/rich/status.data.json",
            ".mypy_cache/3.13/rich/status.meta.json",
            ".mypy_cache/3.13/rich/style.data.json",
            ".mypy_cache/3.13/rich/style.meta.json",
            ".mypy_cache/3.13/rich/styled.data.json",
            ".mypy_cache/3.13/rich/styled.meta.json",
            ".mypy_cache/3.13/rich/syntax.data.json",
            ".mypy_cache/3.13/rich/syntax.meta.json",
            ".mypy_cache/3.13/rich/table.data.json",
            ".mypy_cache/3.13/rich/table.meta.json",
            ".mypy_cache/3.13/rich/terminal_theme.data.json",
            ".mypy_cache/3.13/rich/terminal_theme.meta.json",
            ".mypy_cache/3.13/rich/text.data.json",
            ".mypy_cache/3.13/rich/text.meta.json",
            ".mypy_cache/3.13/rich/theme.data.json",
            ".mypy_cache/3.13/rich/theme.meta.json",
            ".mypy_cache/3.13/rich/themes.data.json",
            ".mypy_cache/3.13/rich/themes.meta.json",
            ".mypy_cache/3.13/rich/traceback.data.json",
            ".mypy_cache/3.13/rich/traceback.meta.json",
            ".mypy_cache/3.13/secrets.data.json",
            ".mypy_cache/3.13/secrets.meta.json",
            ".mypy_cache/3.13/select.data.json",
            ".mypy_cache/3.13/select.meta.json",
            ".mypy_cache/3.13/selectors.data.json",
            ".mypy_cache/3.13/selectors.meta.json",
            ".mypy_cache/3.13/shlex.data.json",
            ".mypy_cache/3.13/shlex.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sniffio/__init__.data.json",
            ".mypy_cache/3.13/sniffio/__init__.meta.json",
            ".mypy_cache/3.13/sniffio/_impl.data.json",
            ".mypy_cache/3.13/sniffio/_impl.meta.json",
            ".mypy_cache/3.13/sniffio/_version.data.json",
            ".mypy_cache/3.13/sniffio/_version.meta.json",
            ".mypy_cache/3.13/socket.data.json",
            ".mypy_cache/3.13/socket.meta.json",
            ".mypy_cache/3.13/sqlite3/__init__.data.json",
            ".mypy_cache/3.13/sqlite3/__init__.meta.json",
            ".mypy_cache/3.13/sqlite3/dbapi2.data.json",
            ".mypy_cache/3.13/sqlite3/dbapi2.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/ssl.data.json",
            ".mypy_cache/3.13/ssl.meta.json",
            ".mypy_cache/3.13/starlette/__init__.data.json",
            ".mypy_cache/3.13/starlette/__init__.meta.json",
            ".mypy_cache/3.13/starlette/_exception_handler.data.json",
            ".mypy_cache/3.13/starlette/_exception_handler.meta.json",
            ".mypy_cache/3.13/starlette/_utils.data.json",
            ".mypy_cache/3.13/starlette/_utils.meta.json",
            ".mypy_cache/3.13/starlette/applications.data.json",
            ".mypy_cache/3.13/starlette/applications.meta.json",
            ".mypy_cache/3.13/starlette/background.data.json",
            ".mypy_cache/3.13/starlette/background.meta.json",
            ".mypy_cache/3.13/starlette/concurrency.data.json",
            ".mypy_cache/3.13/starlette/concurrency.meta.json",
            ".mypy_cache/3.13/starlette/convertors.data.json",
            ".mypy_cache/3.13/starlette/convertors.meta.json",
            ".mypy_cache/3.13/starlette/datastructures.data.json",
            ".mypy_cache/3.13/starlette/datastructures.meta.json",
            ".mypy_cache/3.13/starlette/exceptions.data.json",
            ".mypy_cache/3.13/starlette/exceptions.meta.json",
            ".mypy_cache/3.13/starlette/formparsers.data.json",
            ".mypy_cache/3.13/starlette/formparsers.meta.json",
            ".mypy_cache/3.13/starlette/middleware/__init__.data.json",
            ".mypy_cache/3.13/starlette/middleware/__init__.meta.json",
            ".mypy_cache/3.13/starlette/middleware/base.data.json",
            ".mypy_cache/3.13/starlette/middleware/base.meta.json",
            ".mypy_cache/3.13/starlette/middleware/errors.data.json",
            ".mypy_cache/3.13/starlette/middleware/errors.meta.json",
            ".mypy_cache/3.13/starlette/middleware/exceptions.data.json",
            ".mypy_cache/3.13/starlette/middleware/exceptions.meta.json",
            ".mypy_cache/3.13/starlette/requests.data.json",
            ".mypy_cache/3.13/starlette/requests.meta.json",
            ".mypy_cache/3.13/starlette/responses.data.json",
            ".mypy_cache/3.13/starlette/responses.meta.json",
            ".mypy_cache/3.13/starlette/routing.data.json",
            ".mypy_cache/3.13/starlette/routing.meta.json",
            ".mypy_cache/3.13/starlette/status.data.json",
            ".mypy_cache/3.13/starlette/status.meta.json",
            ".mypy_cache/3.13/starlette/testclient.data.json",
            ".mypy_cache/3.13/starlette/testclient.meta.json",
            ".mypy_cache/3.13/starlette/types.data.json",
            ".mypy_cache/3.13/starlette/types.meta.json",
            ".mypy_cache/3.13/starlette/websockets.data.json",
            ".mypy_cache/3.13/starlette/websockets.meta.json",
            ".mypy_cache/3.13/stat.data.json",
            ".mypy_cache/3.13/stat.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/struct.data.json",
            ".mypy_cache/3.13/struct.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/sysconfig.data.json",
            ".mypy_cache/3.13/sysconfig.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/tempfile.data.json",
            ".mypy_cache/3.13/tempfile.meta.json",
            ".mypy_cache/3.13/textwrap.data.json",
            ".mypy_cache/3.13/textwrap.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/token.data.json",
            ".mypy_cache/3.13/token.meta.json",
            ".mypy_cache/3.13/tokenize.data.json",
            ".mypy_cache/3.13/tokenize.meta.json",
            ".mypy_cache/3.13/traceback.data.json",
            ".mypy_cache/3.13/traceback.meta.json",
            ".mypy_cache/3.13/typer/__init__.data.json",
            ".mypy_cache/3.13/typer/__init__.meta.json",
            ".mypy_cache/3.13/typer/_completion_classes.data.json",
            ".mypy_cache/3.13/typer/_completion_classes.meta.json",
            ".mypy_cache/3.13/typer/_completion_shared.data.json",
            ".mypy_cache/3.13/typer/_completion_shared.meta.json",
            ".mypy_cache/3.13/typer/_types.data.json",
            ".mypy_cache/3.13/typer/_types.meta.json",
            ".mypy_cache/3.13/typer/_typing.data.json",
            ".mypy_cache/3.13/typer/_typing.meta.json",
            ".mypy_cache/3.13/typer/colors.data.json",
            ".mypy_cache/3.13/typer/colors.meta.json",
            ".mypy_cache/3.13/typer/completion.data.json",
            ".mypy_cache/3.13/typer/completion.meta.json",
            ".mypy_cache/3.13/typer/core.data.json",
            ".mypy_cache/3.13/typer/core.meta.json",
            ".mypy_cache/3.13/typer/main.data.json",
            ".mypy_cache/3.13/typer/main.meta.json",
            ".mypy_cache/3.13/typer/models.data.json",
            ".mypy_cache/3.13/typer/models.meta.json",
            ".mypy_cache/3.13/typer/params.data.json",
            ".mypy_cache/3.13/typer/params.meta.json",
            ".mypy_cache/3.13/typer/rich_utils.data.json",
            ".mypy_cache/3.13/typer/rich_utils.meta.json",
            ".mypy_cache/3.13/typer/testing.data.json",
            ".mypy_cache/3.13/typer/testing.meta.json",
            ".mypy_cache/3.13/typer/utils.data.json",
            ".mypy_cache/3.13/typer/utils.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/typing_inspection/__init__.data.json",
            ".mypy_cache/3.13/typing_inspection/__init__.meta.json",
            ".mypy_cache/3.13/typing_inspection/introspection.data.json",
            ".mypy_cache/3.13/typing_inspection/introspection.meta.json",
            ".mypy_cache/3.13/typing_inspection/typing_objects.data.json",
            ".mypy_cache/3.13/typing_inspection/typing_objects.meta.json",
            ".mypy_cache/3.13/unicodedata.data.json",
            ".mypy_cache/3.13/unicodedata.meta.json",
            ".mypy_cache/3.13/unittest/__init__.data.json",
            ".mypy_cache/3.13/unittest/__init__.meta.json",
            ".mypy_cache/3.13/unittest/_log.data.json",
            ".mypy_cache/3.13/unittest/_log.meta.json",
            ".mypy_cache/3.13/unittest/async_case.data.json",
            ".mypy_cache/3.13/unittest/async_case.meta.json",
            ".mypy_cache/3.13/unittest/case.data.json",
            ".mypy_cache/3.13/unittest/case.meta.json",
            ".mypy_cache/3.13/unittest/loader.data.json",
            ".mypy_cache/3.13/unittest/loader.meta.json",
            ".mypy_cache/3.13/unittest/main.data.json",
            ".mypy_cache/3.13/unittest/main.meta.json",
            ".mypy_cache/3.13/unittest/result.data.json",
            ".mypy_cache/3.13/unittest/result.meta.json",
            ".mypy_cache/3.13/unittest/runner.data.json",
            ".mypy_cache/3.13/unittest/runner.meta.json",
            ".mypy_cache/3.13/unittest/signals.data.json",
            ".mypy_cache/3.13/unittest/signals.meta.json",
            ".mypy_cache/3.13/unittest/suite.data.json",
            ".mypy_cache/3.13/unittest/suite.meta.json",
            ".mypy_cache/3.13/urllib/__init__.data.json",
            ".mypy_cache/3.13/urllib/__init__.meta.json",
            ".mypy_cache/3.13/urllib/error.data.json",
            ".mypy_cache/3.13/urllib/error.meta.json",
            ".mypy_cache/3.13/urllib/parse.data.json",
            ".mypy_cache/3.13/urllib/parse.meta.json",
            ".mypy_cache/3.13/urllib/request.data.json",
            ".mypy_cache/3.13/urllib/request.meta.json",
            ".mypy_cache/3.13/urllib/response.data.json",
            ".mypy_cache/3.13/urllib/response.meta.json",
            ".mypy_cache/3.13/uuid.data.json",
            ".mypy_cache/3.13/uuid.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/weakref.data.json",
            ".mypy_cache/3.13/weakref.meta.json",
            ".mypy_cache/3.13/wsgiref/__init__.data.json",
            ".mypy_cache/3.13/wsgiref/__init__.meta.json",
            ".mypy_cache/3.13/wsgiref/types.data.json",
            ".mypy_cache/3.13/wsgiref/types.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/adapters/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/adapters/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/adapters/taskwarrior/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/adapters/taskwarrior/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/domain/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/domain/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/ports/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/ports/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/services/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/core/services/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/collaboration.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/collaboration.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/collaboration/store.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/collaboration/store.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/config.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/config.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/review/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/infrastructure/review/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/api/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/api/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/cli/__init__.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/cli/__init__.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/tui.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/interface/tui.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/save.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/save.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/tests.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/tests.meta.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/x_cls_legatus_acta_schedae_x.data.json",
            ".mypy_cache/3.13/x_legatus_acta_schedae_x/x_cls_legatus_acta_schedae_x.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/3.13/zoneinfo/__init__.data.json",
            ".mypy_cache/3.13/zoneinfo/__init__.meta.json",
            ".mypy_cache/3.13/zoneinfo/_common.data.json",
            ".mypy_cache/3.13/zoneinfo/_common.meta.json",
            ".mypy_cache/3.13/zoneinfo/_tzpath.data.json",
            ".mypy_cache/3.13/zoneinfo/_tzpath.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".mypy_cache/missing_stubs",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/11404241193410421452",
            ".ruff_cache/0.13.3/13784399517821074769",
            ".ruff_cache/0.13.3/17666352920968047950",
            ".ruff_cache/0.13.3/2872853158608187930",
            ".ruff_cache/CACHEDIR.TAG",
            "README.md",
            "__init__.py",
            "__main__.py",
            "adapters/__init__.py",
            "adapters/taskwarrior/__init__.py",
            "adapters/taskwarrior/tw_repository.py",
            "app.py",
            "architecture-readme.me",
            "core/__init__.py",
            "core/domain/__init__.py",
            "core/domain/events.py",
            "core/domain/review.py",
            "core/domain/task.py",
            "core/ports/__init__.py",
            "core/ports/review_repo.py",
            "core/ports/scheduler.py",
            "core/ports/search_index.py",
            "core/ports/task_repo.py",
            "core/services/__init__.py",
            "core/services/ai_briefing_service.py",
            "core/services/ai_service.py",
            "core/services/automation_service.py",
            "core/services/card_action_service.py",
            "core/services/collaboration_service.py",
            "core/services/plugin_bus.py",
            "core/services/review_guidance_service.py",
            "core/services/review_service.py",
            "core/services/scheduler_service.py",
            "core/services/search_service.py",
            "core/services/task_service.py",
            "data/ai_suggestions.jsonl",
            "data/cards.db",
            "data/cards.jsonl",
            "data/reviews.json",
            "engineering-change-proposal.md",
            "engineering-proposal-phase4.md",
            "firsttestnotes.md",
            "infrastructure/__init__.py",
            "infrastructure/automation/__init__.py",
            "infrastructure/automation/webhook_client.py",
            "infrastructure/collaboration/hub_client.py",
            "infrastructure/collaboration/store.py",
            "infrastructure/config.py",
            "infrastructure/di.py",
            "infrastructure/logging.py",
            "infrastructure/review/__init__.py",
            "infrastructure/review/json_repository.py",
            "infrastructure/scheduler/__init__.py",
            "infrastructure/scheduler/apscheduler_adapter.py",
            "infrastructure/scheduler/null_scheduler.py",
            "infrastructure/search/__init__.py",
            "infrastructure/search/memory_index.py",
            "infrastructure/telemetry.py",
            "interface/__init__.py",
            "interface/api/__init__.py",
            "interface/api/server.py",
            "interface/cli/__init__.py",
            "interface/cli/main.py",
            "interface/tui/app.py",
            "interface/tui/controller.py",
            "mypy.ini",
            "out/appointments_health_01_89DFB646.html",
            "out/appointments_health_01_C6D6CEC0.html",
            "out/appointments_health_01_E626D9B2.html",
            "out/daily-tasks_work_01_8D41D48F.html",
            "out/daily-tasks_work_01_A649DFB1.html",
            "out/daily-tasks_work_01_DE38E5A3.html",
            "out/duplex_3x5_fronts.html",
            "out/duplex_3x5_fronts.pdf",
            "out/duplex_4x6_backs.html",
            "out/duplex_4x6_backs.pdf",
            "out/duplex_4x6_fronts.html",
            "out/duplex_4x6_fronts.pdf",
            "out/general-knowledge-s1_flash-demo_01_9CE224E0.html",
            "out/general-knowledge-s1_flash-demo_01_CF8EECE4.html",
            "out/general-knowledge-s1_flash-demo_01_FECB91DC.html",
            "out/general-knowledge-s1_flash-demo_02_ABECEEE4.html",
            "out/general-knowledge-s1_flash-demo_02_AE653A9B.html",
            "out/general-knowledge-s1_flash-demo_02_B5AB4E2E.html",
            "plugins/__init__.py",
            "plugins/ai_assistant.py",
            "plugins/calendar_sync.py",
            "plugins/task_scoring.py",
            "requirements.txt",
            "save.py",
            "tests/test_ai_briefing_service.py",
            "tests/test_ai_service.py",
            "tests/test_api.py",
            "tests/test_automation_service.py",
            "tests/test_card_action_service.py",
            "tests/test_cli_ai_briefing.py",
            "tests/test_cli_collab.py",
            "tests/test_collaboration_hub.py",
            "tests/test_collaboration_service.py",
            "tests/test_plugin_ai_assistant.py",
            "tests/test_plugin_calendar_sync.py",
            "tests/test_review_guidance_service.py",
            "tests/test_review_service.py",
            "tests/test_scheduler_service.py",
            "tests/test_search_service.py",
            "tests/test_task_service.py",
            "tests/test_tui_controller.py",
            "tui/__init__.py",
            "tui/__main__.py",
            "x_cls_legatus_acta_schedae_x.py",
            "x_legatus_acta_schedae_x.md"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\events.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_briefing_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\review.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\automation_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\card_action_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_guidance_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\plugin_bus.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\search_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\collaboration_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\task_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\logging.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\di.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\scheduler\\apscheduler_adapter.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\review\\json_repository.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\telemetry.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\config.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\calendar_sync.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\ai_assistant.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\app.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\controller.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n41 files would be reformatted, 35 files would be left unchanged.\n",
                "stdout": "--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\events.py\t2025-10-07 02:51:49.442020+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\events.py\t2025-10-07 07:51:01.362959+00:00\n@@ -58,13 +58,11 @@\n \n class EventDispatcher:\n     def __init__(self) -> None:\n         self._subs: Dict[Type[Any], List[EventSubscriber]] = {}\n \n-    def subscribe(\n-        self, event_type: Type[Any], handler: EventSubscriber\n-    ) -> None:\n+    def subscribe(self, event_type: Type[Any], handler: EventSubscriber) -> None:\n         self._subs.setdefault(event_type, []).append(handler)\n \n     def publish(self, event: DomainEvent) -> None:\n         for etype, handlers in self._subs.items():\n             if isinstance(event, etype):\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_briefing_service.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_briefing_service.py\t2025-10-07 07:51:01.410362+00:00\n@@ -44,11 +44,9 @@\n             now=moment,\n             limit=limit,\n             include_completed=include_completed,\n             tags=tags,\n         )\n-        return AIBriefing(\n-            generated_at=moment, summary=summary, guidance=list(guidance)\n-        )\n+        return AIBriefing(generated_at=moment, summary=summary, guidance=list(guidance))\n \n \n __all__ = [\"AIBriefing\", \"AIBriefingService\"]\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\review.py\t2025-10-07 02:51:49.442020+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\review.py\t2025-10-07 07:51:01.560853+00:00\n@@ -50,20 +50,16 @@\n         next_due = datetime.fromisoformat(data[\"next_due\"])\n         context_candidate = data.get(\"context\")\n         context_value: dict[str, Any]\n         if isinstance(context_candidate, Mapping):\n             context_mapping = cast(Mapping[object, Any], context_candidate)\n-            context_value = {\n-                str(key): value for key, value in context_mapping.items()\n-            }\n+            context_value = {str(key): value for key, value in context_mapping.items()}\n         else:\n             context_value = {}\n         source_raw = data.get(\"source\")\n         source_value = (\n-            str(source_raw)\n-            if isinstance(source_raw, str) and source_raw\n-            else \"manual\"\n+            str(source_raw) if isinstance(source_raw, str) and source_raw else \"manual\"\n         )\n         return ReviewHistoryEntry(\n             reviewed_at=_ensure_tzaware(reviewed_at),\n             quality=int(data[\"quality\"]),\n             next_due=_ensure_tzaware(next_due),\n@@ -100,13 +96,11 @@\n         return {\n             \"task_id\": self.task_id,\n             \"created_at\": self.created_at.isoformat(),\n             \"due_at\": self.due_at.isoformat(),\n             \"last_reviewed_at\": (\n-                self.last_reviewed_at.isoformat()\n-                if self.last_reviewed_at\n-                else None\n+                self.last_reviewed_at.isoformat() if self.last_reviewed_at else None\n             ),\n             \"repetitions\": self.repetitions,\n             \"interval_days\": self.interval_days,\n             \"ease_factor\": self.ease_factor,\n             \"history\": [entry.to_dict() for entry in self.history],\n@@ -117,12 +111,11 @@\n     def from_dict(data: dict[str, Any]) -> \"ReviewRecord\":\n         created_at = datetime.fromisoformat(data[\"created_at\"])\n         due_at = datetime.fromisoformat(data[\"due_at\"])\n         last_reviewed = data.get(\"last_reviewed_at\")\n         history_entries = [\n-            ReviewHistoryEntry.from_dict(entry)\n-            for entry in data.get(\"history\", [])\n+            ReviewHistoryEntry.from_dict(entry) for entry in data.get(\"history\", [])\n         ]\n         return ReviewRecord(\n             task_id=data[\"task_id\"],\n             created_at=_ensure_tzaware(created_at),\n             due_at=_ensure_tzaware(due_at),\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\automation_service.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\automation_service.py\t2025-10-07 07:51:01.581873+00:00\n@@ -30,13 +30,11 @@\n         ai_service: AIService | None = None,\n     ) -> None:\n         self._dispatcher = dispatcher\n         self._task_repository = task_repository\n         self._webhook_client = webhook_client\n-        self._enabled = webhook_client is not None and bool(\n-            webhook_client.endpoints\n-        )\n+        self._enabled = webhook_client is not None and bool(webhook_client.endpoints)\n         self._telemetry = telemetry\n         self._ai_service = ai_service\n         if self._enabled:\n             dispatcher.subscribe(events.CardScanned, self._on_card_scanned)\n \n@@ -78,13 +76,11 @@\n                     \"delivered\": delivered,\n                     \"failed\": failures,\n                 },\n             )\n \n-    def _task_payload(\n-        self, event: events.CardScanned\n-    ) -> Mapping[str, Any] | None:\n+    def _task_payload(self, event: events.CardScanned) -> Mapping[str, Any] | None:\n         if not event.task_id:\n             return None\n         task = self._task_repository.get(event.task_id)\n         if task is None:\n             return None\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_service.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_service.py\t2025-10-07 07:51:01.593011+00:00\n@@ -34,13 +34,11 @@\n         self, repository: ITaskRepository, dispatcher: EventDispatcher\n     ) -> None:\n         self._repository = repository\n         self._dispatcher = dispatcher\n \n-    def summarize(\n-        self, *, now: datetime | None = None, top_n: int = 3\n-    ) -> TaskSummary:\n+    def summarize(self, *, now: datetime | None = None, top_n: int = 3) -> TaskSummary:\n         snapshot = list(self._repository.list())\n         moment = now or datetime.now(timezone.utc)\n         pending = sum(1 for task in snapshot if task.status != \"completed\")\n         completed = sum(1 for task in snapshot if task.status == \"completed\")\n         overdue = sum(\n@@ -71,13 +69,11 @@\n         if \"meeting\" in lowered or \"meet\" in lowered:\n             base_prompts.append(\n                 \"Prepare a meeting recap with action items for attendees.\"\n             )\n         if \"write\" in lowered or \"draft\" in lowered:\n-            base_prompts.append(\n-                \"Outline the key sections to polish the written draft.\"\n-            )\n+            base_prompts.append(\"Outline the key sections to polish the written draft.\")\n         if \"review\" in lowered:\n             base_prompts.append(\n                 \"List the checklist items to complete the review efficiently.\"\n             )\n         if not base_prompts:\n@@ -115,13 +111,11 @@\n     ) -> list[UpcomingTask]:\n         horizon = moment + timedelta(days=7)\n         candidates = [\n             task\n             for task in tasks\n-            if task.status != \"completed\"\n-            and task.due\n-            and moment <= task.due <= horizon\n+            if task.status != \"completed\" and task.due and moment <= task.due <= horizon\n         ]\n         candidates.sort(key=lambda t: (t.due, t.priority or \"\", t.created))\n         upcoming_rows: list[UpcomingTask] = []\n         for task in candidates[:count]:\n             upcoming_rows.append(\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\card_action_service.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\card_action_service.py\t2025-10-07 07:51:01.606610+00:00\n@@ -92,18 +92,14 @@\n             tags=list(card.tags),\n             task=update_result,\n             metadata=meta,\n         )\n \n-    def _apply_task_update(\n-        self, card: Notecard, action: str\n-    ) -> TaskUpdateResult:\n+    def _apply_task_update(self, card: Notecard, action: str) -> TaskUpdateResult:\n         task_id = self._extract_task_id(card)\n         if not task_id or action == \"none\":\n-            return TaskUpdateResult(\n-                task_id=task_id, action=None, updated=False\n-            )\n+            return TaskUpdateResult(task_id=task_id, action=None, updated=False)\n \n         if action == \"complete\":\n             try:\n                 task = self._task_service.complete_task(task_id)\n             except KeyError:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_guidance_service.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_guidance_service.py\t2025-10-07 07:51:01.638939+00:00\n@@ -64,13 +64,11 @@\n             }.get(priority, 0.5)\n             score += priority_boost\n             reasons.append(f\"priority {priority}\")\n \n         if task.due:\n-            delta_days = (\n-                task.due - item.reference_time\n-            ).total_seconds() / 86400.0\n+            delta_days = (task.due - item.reference_time).total_seconds() / 86400.0\n             if delta_days <= 0:\n                 score += 1.25\n                 reasons.append(\"task due\")\n             elif delta_days < 2:\n                 score += 0.75\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\plugin_bus.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\plugin_bus.py\t2025-10-07 07:51:01.666401+00:00\n@@ -73,13 +73,11 @@\n \n     @property\n     def ai_service(self) -> AIService:\n         return self._ai_service\n \n-    def subscribe(\n-        self, event_type: DomainEventType, handler: EventSubscriber\n-    ) -> None:\n+    def subscribe(self, event_type: DomainEventType, handler: EventSubscriber) -> None:\n         self._dispatcher.subscribe(event_type, handler)\n \n \n class PluginBus:\n     def __init__(\n@@ -123,13 +121,11 @@\n                 version=getattr(plugin, \"version\", \"0.0.0\"),\n                 module=plugin.__class__.__module__,\n                 spec=spec,\n             )\n             self._plugins.append(loaded)\n-            self._logger.info(\n-                \"Loaded plugin %s %s\", loaded.name, loaded.version\n-            )\n+            self._logger.info(\"Loaded plugin %s %s\", loaded.name, loaded.version)\n             self._telemetry.track(\n                 \"plugin.loaded\",\n                 {\n                     \"name\": loaded.name,\n                     \"version\": loaded.version,\n@@ -171,13 +167,11 @@\n             plugin_instance = plugin_obj()\n         else:\n             plugin_instance = plugin_obj\n \n         if not hasattr(plugin_instance, \"setup\"):\n-            self._logger.error(\n-                \"Plugin %s is missing required setup method\", spec\n-            )\n+            self._logger.error(\"Plugin %s is missing required setup method\", spec)\n             return None\n \n         return cast(Plugin, plugin_instance)\n \n     @property\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py\t2025-10-07 02:51:49.431013+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py\t2025-10-07 07:51:01.684088+00:00\n@@ -68,15 +68,11 @@\n                 task = self._convert(cast(Mapping[str, Any], t))\n                 if status and task.status != status:\n                     continue\n                 tasks.append(task)\n             return tasks\n-        return [\n-            t\n-            for t in self._cache.values()\n-            if (not status or t.status == status)\n-        ]\n+        return [t for t in self._cache.values() if (not status or t.status == status)]\n \n     def save(self, task: Task) -> Task:\n         if HAVE_TASKLIB and self._tw is not None:\n             for t in self._tw.tasks.all():\n                 task_data = cast(Mapping[str, Any], t)\n@@ -115,12 +111,11 @@\n             else None\n         )\n         return Task(\n             id=str(tw_task[\"uuid\"]),\n             description=tw_task[\"description\"],\n-            created=self._ensure_datetime(created)\n-            or datetime.now(timezone.utc),\n+            created=self._ensure_datetime(created) or datetime.now(timezone.utc),\n             status=status,\n             tags=tags,\n             due=self._ensure_datetime(due),\n             priority=priority,\n         )\n@@ -133,13 +128,11 @@\n         if not value:\n             return None\n         reverse = {\"L\": \"low\", \"M\": \"medium\", \"H\": \"high\"}\n         return reverse.get(value.upper())\n \n-    def _ensure_datetime(\n-        self, value: Optional[datetime]\n-    ) -> Optional[datetime]:\n+    def _ensure_datetime(self, value: Optional[datetime]) -> Optional[datetime]:\n         if value is None:\n             return None\n         if isinstance(value, datetime):\n             if value.tzinfo is None:\n                 return value.replace(tzinfo=timezone.utc)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\search_service.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\search_service.py\t2025-10-07 07:51:01.731564+00:00\n@@ -37,13 +37,11 @@\n         text: str | None = None,\n         status: str | None = None,\n         tags: Sequence[str] | None = None,\n         limit: int | None = None,\n     ) -> List[Task]:\n-        filters = SearchFilters(\n-            text=text, status=status, tags=tags, limit=limit\n-        )\n+        filters = SearchFilters(text=text, status=status, tags=tags, limit=limit)\n         return self._index.search(\n             text=filters.text,\n             status=filters.status,\n             tags=filters.tags,\n             limit=filters.limit,\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\collaboration_service.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\collaboration_service.py\t2025-10-07 07:51:01.737403+00:00\n@@ -44,13 +44,11 @@\n         *,\n         include_completed: bool = True,\n         limit: int | None = None,\n     ) -> ExportResult:\n         tasks = list(\n-            self._select_tasks(\n-                include_completed=include_completed, limit=limit\n-            )\n+            self._select_tasks(include_completed=include_completed, limit=limit)\n         )\n         payload = json.dumps(\n             [self._task_to_dict(task) for task in tasks], default=str\n         ).encode(\"utf-8\")\n         salt = os.urandom(16)\n@@ -84,13 +82,11 @@\n             raise ValueError(\"Malformed sync bundle\")\n         salt = base64.b64decode(salt_b64)\n         decrypted = self._decrypt(ciphertext.encode(\"utf-8\"), passphrase, salt)\n         try:\n             records = json.loads(decrypted.decode(\"utf-8\"))\n-        except (\n-            json.JSONDecodeError\n-        ) as exc:  # pragma: no cover - defensive guard\n+        except json.JSONDecodeError as exc:  # pragma: no cover - defensive guard\n             raise ValueError(\"Unable to decode sync payload\") from exc\n         imported_tasks: List[Task] = []\n         for record in records:\n             task = self._dict_to_task(record)\n             existing = self._repository.get(task.id)\n@@ -98,13 +94,11 @@\n                 continue\n             self._repository.save(task)\n             imported_tasks.append(task)\n         if imported_tasks:\n             self._dispatcher.publish(\n-                events.TasksImported(\n-                    tasks=tuple(imported_tasks), source=str(src_path)\n-                )\n+                events.TasksImported(tasks=tuple(imported_tasks), source=str(src_path))\n             )\n         return imported_tasks\n \n     def _select_tasks(\n         self,\n@@ -158,26 +152,20 @@\n         created = (\n             datetime.fromisoformat(created_raw)\n             if isinstance(created_raw, str)\n             else datetime.now(timezone.utc)\n         )\n-        due = (\n-            datetime.fromisoformat(due_raw)\n-            if isinstance(due_raw, str)\n-            else None\n-        )\n+        due = datetime.fromisoformat(due_raw) if isinstance(due_raw, str) else None\n         description = str(data.get(\"description\", \"\"))\n         status = str(data.get(\"status\", \"pending\"))\n         priority = data.get(\"priority\")\n         priority_value = str(priority) if isinstance(priority, str) else None\n         tags_raw = data.get(\"tags\")\n         tags_value: Sequence[str]\n         if isinstance(tags_raw, list):\n             tags_value = [\n-                str(t)\n-                for t in cast(List[object], tags_raw)\n-                if isinstance(t, str)\n+                str(t) for t in cast(List[object], tags_raw) if isinstance(t, str)\n             ]\n         else:\n             tags_value = []\n         return Task(\n             id=str(data.get(\"id\", \"\")),\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py\t2025-10-07 02:51:49.464618+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py\t2025-10-07 07:51:01.802544+00:00\n@@ -39,13 +39,11 @@\n \n     @property\n     def endpoints(self) -> tuple[str, ...]:\n         return tuple(self._endpoints)\n \n-    def dispatch(\n-        self, event: str, payload: Mapping[str, Any]\n-    ) -> list[DispatchResult]:\n+    def dispatch(self, event: str, payload: Mapping[str, Any]) -> list[DispatchResult]:\n         if not self._endpoints:\n             return []\n         payload_dict: dict[str, Any] = dict(payload)\n         envelope: dict[str, Any] = {\n             \"event\": event,\n@@ -55,17 +53,13 @@\n         results: list[DispatchResult] = []\n         for url in self._endpoints:\n             try:\n                 response = self._client.post(url, json=envelope)\n             except httpx.HTTPError as exc:\n-                logger.warning(\n-                    \"Automation webhook dispatch failed\", exc_info=exc\n-                )\n+                logger.warning(\"Automation webhook dispatch failed\", exc_info=exc)\n                 results.append(\n-                    DispatchResult(\n-                        url=url, status_code=None, ok=False, error=str(exc)\n-                    )\n+                    DispatchResult(url=url, status_code=None, ok=False, error=str(exc))\n                 )\n                 continue\n             ok = 200 <= response.status_code < 300\n             if not ok:\n                 logger.warning(\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\task_service.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\task_service.py\t2025-10-07 07:51:01.815423+00:00\n@@ -5,13 +5,11 @@\n from ..domain import events\n from ..ports.task_repo import ITaskRepository\n \n \n class TaskService:\n-    def __init__(\n-        self, repo: ITaskRepository, dispatcher: events.EventDispatcher\n-    ):\n+    def __init__(self, repo: ITaskRepository, dispatcher: events.EventDispatcher):\n         self._repo = repo\n         self._dispatcher = dispatcher\n \n     def add_task(\n         self,\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\logging.py\t2025-10-07 02:51:49.474125+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\logging.py\t2025-10-07 07:51:01.843427+00:00\n@@ -30,13 +30,11 @@\n     \"processName\",\n }\n \n \n class StructuredFormatter(logging.Formatter):\n-    def format(\n-        self, record: logging.LogRecord\n-    ) -> str:  # pragma: no cover - formatters\n+    def format(self, record: logging.LogRecord) -> str:  # pragma: no cover - formatters\n         base: Dict[str, Any] = {\n             \"timestamp\": datetime.fromtimestamp(\n                 record.created, tz=timezone.utc\n             ).isoformat(),\n             \"level\": record.levelname,\n@@ -61,10 +59,8 @@\n     handler = logging.StreamHandler()\n     if cfg.log_json:\n         handler.setFormatter(StructuredFormatter())\n     else:\n         handler.setFormatter(\n-            logging.Formatter(\n-                \"%(asctime)s %(levelname)s %(name)s :: %(message)s\"\n-            )\n+            logging.Formatter(\"%(asctime)s %(levelname)s %(name)s :: %(message)s\")\n         )\n     root.addHandler(handler)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\di.py\t2025-10-07 02:51:49.474125+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\di.py\t2025-10-07 07:51:01.915504+00:00\n@@ -65,13 +65,11 @@\n         task_repository=repo,\n         dispatcher=dispatcher,\n     )\n     review_guidance_service = ReviewGuidanceService(review_service)\n     ai_service = AIService(repository=repo, dispatcher=dispatcher)\n-    ai_briefing_service = AIBriefingService(\n-        ai_service, review_guidance_service\n-    )\n+    ai_briefing_service = AIBriefingService(ai_service, review_guidance_service)\n     automation_service: AutomationService | None = None\n     if cfg.automation_webhooks:\n         automation_client = AutomationWebhookClient(cfg.automation_webhooks)\n         automation_service = AutomationService(\n             dispatcher,\n@@ -88,18 +86,14 @@\n         ai_service=ai_service,\n     )\n     loaded_plugins = plugin_bus.load(cfg.plugins)\n     scheduler_service: SchedulerService | None = None\n     card_storage = Storage(cfg.cards_db_path)\n-    collaboration_service = CollaborationService(\n-        repository=repo, dispatcher=dispatcher\n-    )\n+    collaboration_service = CollaborationService(repository=repo, dispatcher=dispatcher)\n     if cfg.scheduler_enabled:\n         try:\n-            scheduler_adapter = ApschedulerScheduler(\n-                timezone=cfg.scheduler_timezone\n-            )\n+            scheduler_adapter = ApschedulerScheduler(timezone=cfg.scheduler_timezone)\n         except RuntimeError:\n             logging.getLogger(\"x_legatus.scheduler\").warning(\n                 \"Scheduler disabled because APScheduler is not installed\"\n             )\n         else:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\scheduler\\apscheduler_adapter.py\t2025-10-07 02:51:49.477755+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\scheduler\\apscheduler_adapter.py\t2025-10-07 07:51:01.931689+00:00\n@@ -7,19 +7,15 @@\n \n from ...core.ports.scheduler import IScheduler\n \n BackgroundScheduler: Any | None\n try:  # pragma: no cover - optional dependency\n-    background_module = importlib.import_module(\n-        \"apscheduler.schedulers.background\"\n-    )\n+    background_module = importlib.import_module(\"apscheduler.schedulers.background\")\n except Exception:  # pragma: no cover\n     BackgroundScheduler = None\n else:\n-    BackgroundScheduler = getattr(\n-        background_module, \"BackgroundScheduler\", None\n-    )\n+    BackgroundScheduler = getattr(background_module, \"BackgroundScheduler\", None)\n \n logger = logging.getLogger(__name__)\n \n \n class ApschedulerScheduler(IScheduler):\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\review\\json_repository.py\t2025-10-07 02:51:49.474125+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\review\\json_repository.py\t2025-10-07 07:51:01.941018+00:00\n@@ -57,11 +57,9 @@\n             }\n             records[task_id] = ReviewRecord.from_dict(normalised)\n         return records\n \n     def _write(self, data: dict[str, ReviewRecord]) -> None:\n-        serialised = {\n-            task_id: record.to_dict() for task_id, record in data.items()\n-        }\n+        serialised = {task_id: record.to_dict() for task_id, record in data.items()}\n         tmp_path = self._path.with_suffix(self._path.suffix + \".tmp\")\n         tmp_path.write_text(json.dumps(serialised, indent=2), encoding=\"utf-8\")\n         tmp_path.replace(self._path)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py\t2025-10-07 02:51:49.464618+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py\t2025-10-07 07:51:01.985490+00:00\n@@ -85,16 +85,12 @@\n         if response.status_code == 404:\n             return None\n         response.raise_for_status()\n         return self._parse_download(response.json())\n \n-    def list_bundles(\n-        self, *, limit: int | None = None\n-    ) -> list[BundleUploadResult]:\n-        params: dict[str, Any] | None = (\n-            {\"limit\": limit} if limit is not None else None\n-        )\n+    def list_bundles(self, *, limit: int | None = None) -> list[BundleUploadResult]:\n+        params: dict[str, Any] | None = {\"limit\": limit} if limit is not None else None\n         response = self._client.get(\"/api/collab/bundles\", params=params)\n         response.raise_for_status()\n         payload = response.json()\n         if isinstance(payload, list):\n             payload_list: list[Any] = list(payload)\n@@ -104,16 +100,12 @@\n                     raise ValueError(\"Unexpected bundle list entry\")\n                 results.append(self._parse_upload(self._to_str_dict(item)))\n             return results\n         raise ValueError(\"Unexpected bundle list payload\")\n \n-    def prune_bundles(\n-        self, *, keep: int\n-    ) -> tuple[list[BundleUploadResult], int]:\n-        response = self._client.delete(\n-            \"/api/collab/bundles\", params={\"keep\": keep}\n-        )\n+    def prune_bundles(self, *, keep: int) -> tuple[list[BundleUploadResult], int]:\n+        response = self._client.delete(\"/api/collab/bundles\", params={\"keep\": keep})\n         response.raise_for_status()\n         payload = response.json()\n         if not isinstance(payload, Mapping):\n             raise ValueError(\"Unexpected prune payload\")\n         payload_mapping = cast(Mapping[str, Any], payload)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\telemetry.py\t2025-10-07 02:51:49.480726+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\telemetry.py\t2025-10-07 07:51:01.993485+00:00\n@@ -5,13 +5,11 @@\n from pathlib import Path\n from typing import Any, Mapping\n \n \n class TelemetryClient:\n-    def __init__(\n-        self, enabled: bool, path: str | None, flush_seconds: int = 5\n-    ):\n+    def __init__(self, enabled: bool, path: str | None, flush_seconds: int = 5):\n         self._enabled = enabled and bool(path)\n         self._path = Path(path) if path else None\n         self._flush_seconds = flush_seconds\n         if self._enabled and self._path:\n             self._path.parent.mkdir(parents=True, exist_ok=True)\n@@ -22,13 +20,11 @@\n \n     @property\n     def path(self) -> Path | None:\n         return self._path\n \n-    def track(\n-        self, event: str, properties: Mapping[str, Any] | None = None\n-    ) -> None:\n+    def track(self, event: str, properties: Mapping[str, Any] | None = None) -> None:\n         if not self._enabled or not self._path:\n             return\n         entry: dict[str, Any] = {\n             \"timestamp\": datetime.now(timezone.utc).isoformat(),\n             \"event\": event,\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\config.py\t2025-10-07 02:51:49.474125+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\config.py\t2025-10-07 07:51:02.018134+00:00\n@@ -71,18 +71,14 @@\n     plugins: list[str] = field(default_factory=_default_plugins)\n     scheduler_enabled: bool = field(default_factory=_default_scheduler_enabled)\n     scheduler_timezone: str | None = None\n     review_store_path: str = field(default_factory=_default_review_store_path)\n     cards_db_path: str = field(default_factory=_default_cards_db_path)\n-    collaboration_bundle_path: str = field(\n-        default_factory=_default_collab_path\n-    )\n+    collaboration_bundle_path: str = field(default_factory=_default_collab_path)\n     collaboration_hub_dir: str = field(default_factory=_default_collab_hub_dir)\n     collaboration_endpoint: str | None = None\n-    automation_webhooks: list[str] = field(\n-        default_factory=_default_automation_webhooks\n-    )\n+    automation_webhooks: list[str] = field(default_factory=_default_automation_webhooks)\n \n \n def load_config(env: Mapping[str, str] | None = None) -> AppConfig:\n     source_env: Mapping[str, str] = env if env is not None else os.environ\n     overrides: dict[str, str] = {}\n@@ -105,13 +101,11 @@\n \n     telemetry_path = source_env.get(\"LEGATUS_TELEMETRY_PATH\")\n     if telemetry_path:\n         overrides[\"LEGATUS_TELEMETRY_PATH\"] = telemetry_path\n     if telemetry_enabled and not telemetry_path:\n-        telemetry_path = str(\n-            (_package_root() / \"data\" / \"telemetry.jsonl\").resolve()\n-        )\n+        telemetry_path = str((_package_root() / \"data\" / \"telemetry.jsonl\").resolve())\n \n     log_json = _read_bool(source_env.get(\"LEGATUS_LOG_JSON\"), True)\n     if \"LEGATUS_LOG_JSON\" in source_env:\n         overrides[\"LEGATUS_LOG_JSON\"] = source_env[\"LEGATUS_LOG_JSON\"]\n \n@@ -144,25 +138,19 @@\n         \"LEGATUS_REVIEW_STORE\", _default_review_store_path()\n     )\n     if \"LEGATUS_REVIEW_STORE\" in source_env:\n         overrides[\"LEGATUS_REVIEW_STORE\"] = review_store_path\n \n-    cards_db_path = source_env.get(\n-        \"LEGATUS_CARDS_DB\", _default_cards_db_path()\n-    )\n+    cards_db_path = source_env.get(\"LEGATUS_CARDS_DB\", _default_cards_db_path())\n     if \"LEGATUS_CARDS_DB\" in source_env:\n         overrides[\"LEGATUS_CARDS_DB\"] = cards_db_path\n \n-    collab_bundle_path = source_env.get(\n-        \"LEGATUS_COLLAB_BUNDLE\", _default_collab_path()\n-    )\n+    collab_bundle_path = source_env.get(\"LEGATUS_COLLAB_BUNDLE\", _default_collab_path())\n     if \"LEGATUS_COLLAB_BUNDLE\" in source_env:\n         overrides[\"LEGATUS_COLLAB_BUNDLE\"] = collab_bundle_path\n \n-    collab_hub_dir = source_env.get(\n-        \"LEGATUS_COLLAB_HUB_DIR\", _default_collab_hub_dir()\n-    )\n+    collab_hub_dir = source_env.get(\"LEGATUS_COLLAB_HUB_DIR\", _default_collab_hub_dir())\n     if \"LEGATUS_COLLAB_HUB_DIR\" in source_env:\n         overrides[\"LEGATUS_COLLAB_HUB_DIR\"] = collab_hub_dir\n \n     collab_endpoint = source_env.get(\"LEGATUS_COLLAB_ENDPOINT\")\n     if collab_endpoint:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py\t2025-10-07 02:51:49.474125+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py\t2025-10-07 07:51:02.042618+00:00\n@@ -88,19 +88,15 @@\n             return []\n         sorted_entries = sorted(entries, key=self._entry_stored_at)\n         if keep >= len(sorted_entries):\n             return []\n         split_index = len(sorted_entries) - keep if keep else 0\n-        remove_entries = (\n-            sorted_entries[:split_index] if keep else sorted_entries\n-        )\n+        remove_entries = sorted_entries[:split_index] if keep else sorted_entries\n         keep_entries: Sequence[dict[str, object]] = (\n             sorted_entries[split_index:] if keep else []\n         )\n-        removed_bundles = [\n-            self._build_bundle(entry) for entry in remove_entries\n-        ]\n+        removed_bundles = [self._build_bundle(entry) for entry in remove_entries]\n         for bundle in removed_bundles:\n             try:\n                 bundle.path.unlink()\n             except FileNotFoundError:\n                 pass\n@@ -111,13 +107,11 @@\n         if not self._index_path.exists():\n             return []\n         with self._index_path.open(\"r\", encoding=\"utf-8\") as handle:\n             lines = handle.readlines()\n         return [\n-            cast(dict[str, object], json.loads(line))\n-            for line in lines\n-            if line.strip()\n+            cast(dict[str, object], json.loads(line)) for line in lines if line.strip()\n         ]\n \n     def _write_entries(self, entries: Sequence[dict[str, object]]) -> None:\n         if not entries:\n             if self._index_path.exists():\n@@ -134,15 +128,11 @@\n         if isinstance(stored_at_raw, str):\n             try:\n                 parsed = datetime.fromisoformat(stored_at_raw)\n             except ValueError:\n                 return datetime.now(timezone.utc)\n-            return (\n-                parsed\n-                if parsed.tzinfo\n-                else parsed.replace(tzinfo=timezone.utc)\n-            )\n+            return parsed if parsed.tzinfo else parsed.replace(tzinfo=timezone.utc)\n         if isinstance(stored_at_raw, datetime):\n             return (\n                 stored_at_raw\n                 if stored_at_raw.tzinfo\n                 else stored_at_raw.replace(tzinfo=timezone.utc)\n@@ -163,13 +153,11 @@\n         source_value = entry.get(\"source\")\n         source = str(source_value) if isinstance(source_value, str) else None\n         metadata_entry = entry.get(\"metadata\")\n         metadata: dict[str, object]\n         if isinstance(metadata_entry, Mapping):\n-            metadata = {\n-                str(key): value for key, value in metadata_entry.items()\n-            }\n+            metadata = {str(key): value for key, value in metadata_entry.items()}\n         else:\n             metadata = {}\n         size_value = entry.get(\"size\")\n         size = (\n             int(size_value)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_service.py\t2025-10-07 02:51:49.458025+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_service.py\t2025-10-07 07:51:02.138147+00:00\n@@ -39,17 +39,13 @@\n     ):\n         self._repository = repository\n         self._task_repository = task_repository\n         self._dispatcher = dispatcher\n         self._dispatcher.subscribe(events.TaskCreated, self._on_task_created)\n-        self._dispatcher.subscribe(\n-            events.TaskCompleted, self._on_task_completed\n-        )\n+        self._dispatcher.subscribe(events.TaskCompleted, self._on_task_completed)\n         self._dispatcher.subscribe(events.CardScanned, self._on_card_scanned)\n-        self._dispatcher.subscribe(\n-            events.TasksImported, self._on_tasks_imported\n-        )\n+        self._dispatcher.subscribe(events.TasksImported, self._on_tasks_imported)\n         self._bootstrap_existing_tasks()\n \n     def _bootstrap_existing_tasks(self) -> None:\n         for task in self._task_repository.list():\n             self.ensure_record(task)\n@@ -284,13 +280,11 @@\n         def _convert(value: Any) -> Any:\n             if isinstance(value, (str, int, float, bool)) or value is None:\n                 return value\n             if isinstance(value, datetime):\n                 normalized = (\n-                    value\n-                    if value.tzinfo\n-                    else value.replace(tzinfo=timezone.utc)\n+                    value if value.tzinfo else value.replace(tzinfo=timezone.utc)\n                 )\n                 return normalized.astimezone(timezone.utc).isoformat()\n             if isinstance(value, Mapping):\n                 mapping_value = cast(Mapping[object, Any], value)\n                 return {str(k): _convert(v) for k, v in mapping_value.items()}\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\calendar_sync.py\t2025-10-07 02:51:49.505769+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\calendar_sync.py\t2025-10-07 07:51:02.171168+00:00\n@@ -40,13 +40,11 @@\n         ctx.subscribe(events.TaskCreated, _handle)\n         ctx.subscribe(events.TaskUpdated, _handle)\n         ctx.subscribe(events.TaskCompleted, _handle)\n         ctx.subscribe(events.TaskReminderTriggered, _handle)\n \n-    def _sync(\n-        self, task_id: str, due: datetime | None, ctx: PluginContext\n-    ) -> None:\n+    def _sync(self, task_id: str, due: datetime | None, ctx: PluginContext) -> None:\n         if due is None:\n             self._synced_tasks.pop(task_id, None)\n             ctx.logger.debug(\n                 \"Task %s removed from calendar due to missing due date\",\n                 task_id,\n@@ -66,13 +64,11 @@\n             {\n                 \"task_id\": task_id,\n                 \"due_at\": normalized.isoformat(),\n             },\n         )\n-        ctx.logger.debug(\n-            \"Task %s synced to calendar at %s\", task_id, normalized\n-        )\n+        ctx.logger.debug(\"Task %s synced to calendar at %s\", task_id, normalized)\n \n     def _unsync(self, task_id: str, ctx: PluginContext) -> None:\n         if task_id in self._synced_tasks:\n             self._synced_tasks.pop(task_id, None)\n             ctx.telemetry.track(\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py\t2025-10-07 07:51:02.215960+00:00\n@@ -19,13 +19,11 @@\n \n class StubAIService:\n     def __init__(self, summary: TaskSummary) -> None:\n         self._summary = summary\n \n-    def summarize(\n-        self, *, now: datetime | None = None, top_n: int = 3\n-    ) -> TaskSummary:\n+    def summarize(self, *, now: datetime | None = None, top_n: int = 3) -> TaskSummary:\n         return self._summary\n \n \n class StubReviewGuidanceService:\n     def __init__(self, guidance: list[ReviewGuidance]) -> None:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\ai_assistant.py\t2025-10-07 02:51:49.505769+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\ai_assistant.py\t2025-10-07 07:51:02.252827+00:00\n@@ -62,13 +62,11 @@\n                     \"pending\": summary.pending,\n                     \"completed\": summary.completed,\n                     \"overdue\": summary.overdue,\n                     \"top_tags\": summary.top_tags,\n                 },\n-                \"suggestions\": [\n-                    entry for entry in suggestions if entry[\"prompts\"]\n-                ],\n+                \"suggestions\": [entry for entry in suggestions if entry[\"prompts\"]],\n             }\n         )\n \n     def _handle_card_scanned(self, event: events.DomainEvent) -> None:\n         if not isinstance(event, events.CardScanned):\n@@ -77,13 +75,11 @@\n             return\n         try:\n             task = self._ctx.task_service.get_task(event.task_id)\n         except KeyError:\n             return\n-        prompts = self._ctx.ai_service.draft_followups(task)[\n-            : self._max_prompts\n-        ]\n+        prompts = self._ctx.ai_service.draft_followups(task)[: self._max_prompts]\n         if not prompts:\n             return\n         self._ctx.telemetry.track(\n             \"plugin.ai_assistant.card_followups\",\n             {\n@@ -126,13 +122,11 @@\n         )\n \n     # Helpers ------------------------------------------------------------------------\n \n     def _build_prompt_entry(self, task: Task, origin: str) -> dict[str, Any]:\n-        prompts = self._ctx.ai_service.draft_followups(task)[\n-            : self._max_prompts\n-        ]\n+        prompts = self._ctx.ai_service.draft_followups(task)[: self._max_prompts]\n         return {\n             \"task_id\": task.id,\n             \"description\": task.description,\n             \"origin\": origin,\n             \"tags\": sorted(task.tags),\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\app.py\t2025-10-07 02:51:49.490232+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\app.py\t2025-10-07 07:51:02.281615+00:00\n@@ -36,13 +36,11 @@\n if not TYPE_CHECKING:\n     try:  # pragma: no cover - dependency guard\n         _textual_app = import_module(\"textual.app\")\n         App = cast(Type[Any], getattr(_textual_app, \"App\"))\n         ComposeResult = cast(Type[Any], getattr(_textual_app, \"ComposeResult\"))\n-        Binding = cast(\n-            Type[Any], getattr(import_module(\"textual.binding\"), \"Binding\")\n-        )\n+        Binding = cast(Type[Any], getattr(import_module(\"textual.binding\"), \"Binding\"))\n         _widgets = import_module(\"textual.widgets\")\n         Footer = cast(Type[Any], getattr(_widgets, \"Footer\"))\n         Header = cast(Type[Any], getattr(_widgets, \"Header\"))\n         Input = cast(Type[Any], getattr(_widgets, \"Input\"))\n         Static = cast(Type[Any], getattr(_widgets, \"Static\"))\n@@ -147,13 +145,11 @@\n         ]\n         if summary.upcoming:\n             lines.append(\"Upcoming (\u00e2\u2030\u00a47d):\")\n             for item in summary.upcoming:\n                 due_display = (\n-                    item.due.astimezone(timezone.utc).strftime(\n-                        \"%Y-%m-%d %H:%M\"\n-                    )\n+                    item.due.astimezone(timezone.utc).strftime(\"%Y-%m-%d %H:%M\")\n                     if item.due\n                     else \"-\"\n                 )\n                 priority: str = item.priority or \"-\"\n                 lines.append(\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\controller.py\t2025-10-07 02:51:49.490232+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\controller.py\t2025-10-07 07:51:02.306806+00:00\n@@ -40,13 +40,11 @@\n \n     @classmethod\n     def from_task(cls, task: Task) -> \"TaskRow\":\n         due_display = \"-\"\n         if task.due:\n-            due_display = task.due.astimezone(timezone.utc).strftime(\n-                \"%Y-%m-%d %H:%M\"\n-            )\n+            due_display = task.due.astimezone(timezone.utc).strftime(\"%Y-%m-%d %H:%M\")\n         priority_display = task.priority or \"-\"\n         tags_display = \",\".join(sorted(task.tags)) or \"-\"\n         created_display = task.created.astimezone(timezone.utc).strftime(\n             \"%Y-%m-%d %H:%M\"\n         )\n@@ -77,13 +75,11 @@\n \n     def list_tasks(self, filters: TaskFilters | None = None) -> list[TaskRow]:\n         filters = filters or TaskFilters()\n         tasks: Iterable[Task]\n         if filters.text:\n-            tag_filter: Sequence[str] | None = (\n-                [filters.tag] if filters.tag else None\n-            )\n+            tag_filter: Sequence[str] | None = [filters.tag] if filters.tag else None\n             tasks = self._ctx.search_service.search(\n                 text=filters.text,\n                 status=filters.status,\n                 tags=tag_filter,\n                 limit=None,\n@@ -91,13 +87,11 @@\n         else:\n             tasks = self._ctx.task_service.list_tasks(status=filters.status)\n             if filters.tag:\n                 tasks = [t for t in tasks if filters.tag in t.tags]\n         if filters.priority:\n-            tasks = [\n-                t for t in tasks if (t.priority or \"-\") == filters.priority\n-            ]\n+            tasks = [t for t in tasks if (t.priority or \"-\") == filters.priority]\n \n         def sort_key(task: Task):\n             due = task.due or datetime.max.replace(tzinfo=timezone.utc)\n             return (task.status != \"pending\", due, task.created)\n \n@@ -139,13 +133,11 @@\n     ) -> TaskRow:\n         if days is None and not until:\n             raise ValueError(\"Provide at least one defer option\")\n         delta = timedelta(days=days) if days is not None else None\n         until_dt = _parse_due(until) if until else None\n-        task = self._ctx.task_service.defer_task(\n-            task_id, until=until_dt, delta=delta\n-        )\n+        task = self._ctx.task_service.defer_task(task_id, until=until_dt, delta=delta)\n         return TaskRow.from_task(task)\n \n     def prioritize_task(self, task_id: str, priority: str | None) -> TaskRow:\n         task = self._ctx.task_service.prioritize_task(task_id, priority)\n         return TaskRow.from_task(task)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py\t2025-10-07 02:51:49.480726+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py\t2025-10-07 07:51:02.338455+00:00\n@@ -64,16 +64,12 @@\n     task: TaskUpdatePayload\n     ai_summary: AISummaryPayload\n \n \n class BundleUploadRequest(BaseModel):\n-    payload: str = Field(\n-        ..., description=\"Base64-encoded encrypted bundle content\"\n-    )\n-    source: Optional[str] = Field(\n-        None, description=\"Origin identifier for the upload\"\n-    )\n+    payload: str = Field(..., description=\"Base64-encoded encrypted bundle content\")\n+    source: Optional[str] = Field(None, description=\"Origin identifier for the upload\")\n     metadata: Optional[Dict[str, Any]] = Field(\n         None, description=\"Additional metadata to store with the bundle\"\n     )\n \n \n@@ -125,13 +121,11 @@\n         config = cfg or load_config()\n         setup_logging(config)\n         local_ctx = build_context(config)\n     service = _build_service(local_ctx)\n     ai_service = _build_ai_service(local_ctx)\n-    bundle_store = CollaborationBundleStore(\n-        local_ctx.config.collaboration_hub_dir\n-    )\n+    bundle_store = CollaborationBundleStore(local_ctx.config.collaboration_hub_dir)\n \n     app = FastAPI(\n         title=\"Legatus Automations API\",\n         version=\"0.1.0\",\n         summary=\"Webhook endpoints to connect card scans with automations.\",\n@@ -189,13 +183,11 @@\n     ) -> list[BundleUploadResponse]:\n         stored = bundle_store.list(limit=limit)\n         return [_bundle_upload_response(bundle) for bundle in stored]\n \n     @app.delete(\"/api/collab/bundles\", response_model=BundlePruneResponse)\n-    async def prune_bundles(\n-        keep: int = Query(10, ge=0, le=100)\n-    ) -> BundlePruneResponse:\n+    async def prune_bundles(keep: int = Query(10, ge=0, le=100)) -> BundlePruneResponse:\n         removed = bundle_store.prune(keep)\n         remaining = bundle_store.list()\n         return BundlePruneResponse(\n             removed=[_bundle_upload_response(bundle) for bundle in removed],\n             remaining=len(remaining),\n@@ -218,13 +210,11 @@\n         stored = bundle_store.save(\n             payload, source=request.source, metadata=request.metadata\n         )\n         return _bundle_upload_response(stored)\n \n-    @app.get(\n-        \"/api/collab/bundles/latest\", response_model=BundleDownloadResponse\n-    )\n+    @app.get(\"/api/collab/bundles/latest\", response_model=BundleDownloadResponse)\n     async def download_latest_bundle() -> BundleDownloadResponse:\n         stored = bundle_store.latest()\n         if stored is None:\n             raise HTTPException(\n                 status_code=404, detail=\"No collaboration bundles available\"\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py\t2025-10-07 07:51:02.412595+00:00\n@@ -50,13 +50,11 @@\n     assert response.json()[\"status\"] == \"ok\"\n \n \n def test_scan_endpoint_returns_ai_summary(api_client: Any) -> None:\n     ctx = api_client.app.state.ctx  # type: ignore[attr-defined]\n-    task = ctx.task_service.add_task(\n-        \"API test task\", tags=[\"api\"], priority=\"high\"\n-    )\n+    task = ctx.task_service.add_task(\"API test task\", tags=[\"api\"], priority=\"high\")\n     note = Notecard(\n         id=\"card-123\",\n         type=\"task\",\n         front_md=\"Follow up\",\n         tags=[f\"task:{task.id}\"],\n@@ -115,13 +113,11 @@\n \n     latest = api_client.get(\"/api/collab/bundles/latest\")\n     assert latest.status_code == 200\n     latest_payload = latest.json()\n     assert latest_payload[\"bundle_id\"] == bundle_id_two\n-    assert (\n-        base64.b64decode(latest_payload[\"payload\"]) == b'{\"hello\": \"second\"}'\n-    )\n+    assert base64.b64decode(latest_payload[\"payload\"]) == b'{\"hello\": \"second\"}'\n \n     specific = api_client.get(f\"/api/collab/bundles/{bundle_id}\")\n     assert specific.status_code == 200\n     assert specific.json()[\"bundle_id\"] == bundle_id\n \n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py\t2025-10-07 07:51:02.469371+00:00\n@@ -24,13 +24,11 @@\n \n class StubTelemetry:\n     def __init__(self) -> None:\n         self.events: List[tuple[str, dict[str, object]]] = []\n \n-    def track(\n-        self, event: str, properties: dict[str, object] | None = None\n-    ) -> None:\n+    def track(self, event: str, properties: dict[str, object] | None = None) -> None:\n         self.events.append((event, properties or {}))\n \n \n class _CliResult(Protocol):\n     exit_code: int\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py\t2025-10-07 07:51:02.522643+00:00\n@@ -118,14 +118,11 @@\n     imported_overwrite = target_service.import_tasks(\n         export_path, \"secret\", overwrite_existing=True\n     )\n     assert len(imported_overwrite) == 1\n     stored_overwrite = repo_updated.get(task.id)\n-    assert (\n-        stored_overwrite is not None\n-        and stored_overwrite.description == \"Original\"\n-    )\n+    assert stored_overwrite is not None and stored_overwrite.description == \"Original\"\n \n \n def test_import_fails_with_wrong_passphrase(tmp_path: Path) -> None:\n     repo = InMemoryTaskRepository()\n     service, _ = _make_service(repo)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py\t2025-10-07 07:51:02.544550+00:00\n@@ -39,13 +39,11 @@\n         ]\n         self.dispatcher = events.EventDispatcher()\n         self.telemetry = RecordingTelemetry()\n         self.repo = _InMemoryTaskRepository()\n         self.task_service = TaskService(self.repo, self.dispatcher)\n-        self.ai_service = AIService(\n-            repository=self.repo, dispatcher=self.dispatcher\n-        )\n+        self.ai_service = AIService(repository=self.repo, dispatcher=self.dispatcher)\n         self.plugin_bus = PluginBus(\n             self.dispatcher,\n             self.telemetry,\n             self.config,\n             task_service=self.task_service,\n@@ -73,13 +71,11 @@\n         self.dispatcher.publish(scan_event)\n \n         self.assertTrue(self.suggestions_path.exists())\n         entries = [\n             json.loads(line)\n-            for line in self.suggestions_path.read_text(\n-                encoding=\"utf-8\"\n-            ).splitlines()\n+            for line in self.suggestions_path.read_text(encoding=\"utf-8\").splitlines()\n             if line\n         ]\n         event_types = {entry[\"event\"] for entry in entries}\n         self.assertIn(\"task_created\", event_types)\n         self.assertIn(\"tasks_imported\", event_types)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py\t2025-10-07 07:51:02.553840+00:00\n@@ -41,13 +41,11 @@\n             review_store_path=str(data_dir / \"reviews.json\"),\n             collaboration_bundle_path=str(data_dir / \"bundle.json\"),\n         )\n         self.repo = _InMemoryTaskRepository()\n         self.task_service = TaskService(self.repo, self.dispatcher)\n-        self.ai_service = AIService(\n-            repository=self.repo, dispatcher=self.dispatcher\n-        )\n+        self.ai_service = AIService(repository=self.repo, dispatcher=self.dispatcher)\n         self.plugin_bus = PluginBus(\n             self.dispatcher,\n             self.telemetry,\n             self.config,\n             task_service=self.task_service,\n@@ -62,13 +60,11 @@\n     def test_calendar_sync_tracks_events(self) -> None:\n         task = Task.create(\n             \"Prep meeting\", due=datetime.now(timezone.utc) + timedelta(hours=2)\n         )\n         self.dispatcher.publish(TaskCreated(task))\n-        updated = (\n-            task.with_due(task.due + timedelta(hours=1)) if task.due else task\n-        )\n+        updated = task.with_due(task.due + timedelta(hours=1)) if task.due else task\n         self.dispatcher.publish(TaskUpdated(updated))\n         reminder = TaskReminderTriggered(\n             task=updated, due_at=updated.due or datetime.now(timezone.utc)\n         )\n         self.dispatcher.publish(reminder)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py\t2025-10-07 07:51:02.675348+00:00\n@@ -18,13 +18,11 @@\n \n \n def test_bundle_store_roundtrip(tmp_path: Path) -> None:\n     store = CollaborationBundleStore(tmp_path)\n     payload = b'{\"task\": \"demo\"}'\n-    stored = store.save(\n-        payload, source=\"unit\", metadata={\"label\": \"roundtrip\"}\n-    )\n+    stored = store.save(payload, source=\"unit\", metadata={\"label\": \"roundtrip\"})\n \n     latest = store.latest()\n     assert latest is not None\n     assert latest.bundle_id == stored.bundle_id\n     assert latest.path.read_bytes() == payload\n@@ -68,14 +66,11 @@\n     bundle_path.write_bytes(bundle_bytes)\n \n     state: dict[str, dict[str, object]] = {}\n \n     def _handler(request: httpx.Request) -> httpx.Response:\n-        if (\n-            request.method == \"POST\"\n-            and request.url.path == \"/api/collab/bundles\"\n-        ):\n+        if request.method == \"POST\" and request.url.path == \"/api/collab/bundles\":\n             body = json.loads(request.content.decode(\"utf-8\"))\n             decoded = base64.b64decode(body[\"payload\"].encode(\"utf-8\"))\n             stored_at = datetime.now(timezone.utc).isoformat()\n             bundle_id = \"bundle-1\"\n             state[\"bundle\"] = {\n@@ -92,30 +87,23 @@\n                 \"source\": body.get(\"source\"),\n                 \"metadata\": body.get(\"metadata\", {}),\n             }\n             return httpx.Response(201, json=bundle_upload_response)\n \n-        if (\n-            request.method == \"GET\"\n-            and request.url.path == \"/api/collab/bundles\"\n-        ):\n+        if request.method == \"GET\" and request.url.path == \"/api/collab/bundles\":\n             bundle = state.get(\"bundle\")\n             if not bundle:\n                 return httpx.Response(200, json=[])\n             payload_bytes_obj = bundle.get(\"payload_bytes\")\n             payload_size = (\n-                len(payload_bytes_obj)\n-                if isinstance(payload_bytes_obj, bytes)\n-                else 0\n+                len(payload_bytes_obj) if isinstance(payload_bytes_obj, bytes) else 0\n             )\n             metadata_obj = bundle.get(\"metadata\", {})\n             metadata: dict[str, object]\n             if isinstance(metadata_obj, dict):\n                 metadata_mapping = cast(Mapping[Any, object], metadata_obj)\n-                metadata = {\n-                    str(key): value for key, value in metadata_mapping.items()\n-                }\n+                metadata = {str(key): value for key, value in metadata_mapping.items()}\n             else:\n                 metadata = {}\n             list_payload: dict[str, object] = {\n                 \"bundle_id\": bundle.get(\"bundle_id\"),\n                 \"stored_at\": bundle.get(\"stored_at\"),\n@@ -131,27 +119,22 @@\n             bundle = state.get(\"bundle\")\n             if not bundle:\n                 return httpx.Response(404, json={\"detail\": \"not found\"})\n             payload_bytes = bundle.get(\"payload_bytes\")\n             if not isinstance(payload_bytes, bytes):\n-                return httpx.Response(\n-                    500, json={\"detail\": \"invalid bundle payload\"}\n-                )\n+                return httpx.Response(500, json={\"detail\": \"invalid bundle payload\"})\n             download_payload: dict[str, object] = {\n                 \"bundle_id\": bundle[\"bundle_id\"],\n                 \"stored_at\": bundle[\"stored_at\"],\n                 \"size\": len(payload_bytes),\n                 \"source\": bundle[\"source\"],\n                 \"metadata\": bundle[\"metadata\"],\n                 \"payload\": base64.b64encode(payload_bytes).decode(\"utf-8\"),\n             }\n             return httpx.Response(200, json=download_payload)\n \n-        if (\n-            request.method == \"DELETE\"\n-            and request.url.path == \"/api/collab/bundles\"\n-        ):\n+        if request.method == \"DELETE\" and request.url.path == \"/api/collab/bundles\":\n             keep_param = request.url.params.get(\"keep\")\n             keep = int(keep_param) if keep_param is not None else 0\n             bundle = state.get(\"bundle\")\n             removed: list[dict[str, Any]] = []\n             if bundle and keep == 0:\n@@ -180,13 +163,11 @@\n \n         return httpx.Response(500, json={\"detail\": \"unexpected request\"})\n \n     transport = httpx.MockTransport(_handler)\n \n-    with CollaborationHubClient(\n-        \"http://testserver\", transport=transport\n-    ) as client:\n+    with CollaborationHubClient(\"http://testserver\", transport=transport) as client:\n         upload: BundleUploadResult = client.push_bundle(\n             bundle_path, source=\"tester\", metadata={\"note\": \"demo\"}\n         )\n         assert upload.bundle_id == \"bundle-1\"\n         assert upload.size == len(bundle_bytes)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py\t2025-10-07 07:51:02.724183+00:00\n@@ -56,16 +56,12 @@\n         matches = self.search_service.search(text=\"report\")\n         self.assertEqual(1, len(matches))\n         self.assertIn(\"report\", matches[0].description.lower())\n \n     def test_search_filters_status_and_tags(self) -> None:\n-        first = self.task_service.add_task(\n-            \"File expenses\", tags=[\"finance\", \"work\"]\n-        )\n-        second = self.task_service.add_task(\n-            \"Book flights\", tags=[\"travel\", \"work\"]\n-        )\n+        first = self.task_service.add_task(\"File expenses\", tags=[\"finance\", \"work\"])\n+        second = self.task_service.add_task(\"Book flights\", tags=[\"travel\", \"work\"])\n         self.task_service.complete_task(second.id)\n \n         completed = self.search_service.search(status=\"completed\")\n         self.assertEqual([second.id], [task.id for task in completed])\n \n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py\t2025-10-07 07:51:02.751643+00:00\n@@ -126,13 +126,11 @@\n \n     recommendations = guidance.generate(now=now, limit=2)\n \n     assert recommendations\n     assert recommendations[0].task.id == high_task.id\n-    assert any(\n-        \"priority high\" in reason for reason in recommendations[0].reasons\n-    )\n+    assert any(\"priority high\" in reason for reason in recommendations[0].reasons)\n     assert recommendations[0].suggested_action in {\n         \"review then commit\",\n         \"rescue overdue review\",\n     }\n \n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py\t2025-10-07 07:51:02.843430+00:00\n@@ -47,13 +47,11 @@\n class FakeScheduler(IScheduler):\n     def __init__(self) -> None:\n         self.started = False\n         self.jobs: Dict[\n             str,\n-            Tuple[\n-                datetime, Callable[..., None], Tuple[Any, ...], Dict[str, Any]\n-            ],\n+            Tuple[datetime, Callable[..., None], Tuple[Any, ...], Dict[str, Any]],\n         ] = {}\n \n     def start(self) -> None:\n         self.started = True\n \n@@ -84,13 +82,11 @@\n class RecordingTelemetry(TelemetryClient):\n     def __init__(self) -> None:\n         super().__init__(enabled=False, path=None)\n         self.events: list[tuple[str, Mapping[str, object]]] = []\n \n-    def track(\n-        self, event: str, properties: Mapping[str, object] | None = None\n-    ) -> None:\n+    def track(self, event: str, properties: Mapping[str, object] | None = None) -> None:\n         self.events.append((event, dict(properties or {})))\n \n \n class SchedulerServiceTests(unittest.TestCase):\n     def setUp(self) -> None:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py\t2025-10-07 07:51:02.870933+00:00\n@@ -92,13 +92,11 @@\n     task = Task.create(\"Learn CLI\")\n     task_repo.add(task)\n     service = ReviewService(review_repo, task_repo, dispatcher)\n \n     first_review_time = task.created\n-    record = service.record_review(\n-        task.id, quality=5, reviewed_at=first_review_time\n-    )\n+    record = service.record_review(task.id, quality=5, reviewed_at=first_review_time)\n     assert approx(record.interval_days, rel=1e-3) == 1.0\n     assert record.repetitions == 1\n     assert record.last_reviewed_at == first_review_time\n     assert record.history[-1].quality == 5\n     assert record.history[-1].source == \"manual\"\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py\t2025-10-07 02:51:49.514067+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py\t2025-10-07 07:51:02.994547+00:00\n@@ -27,13 +27,11 @@\n \n class StubTelemetry:\n     def __init__(self) -> None:\n         self.events: List[tuple[str, Dict[str, Any]]] = []\n \n-    def track(\n-        self, event: str, properties: Dict[str, Any] | None = None\n-    ) -> None:\n+    def track(self, event: str, properties: Dict[str, Any] | None = None) -> None:\n         self.events.append((event, dict(properties or {})))\n \n \n class StubCollaborationService:\n     def __init__(self) -> None:\n@@ -177,21 +175,17 @@\n         return self\n \n     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n         return None\n \n-    def list_bundles(\n-        self, *, limit: int | None = None\n-    ) -> List[BundleUploadResult]:\n+    def list_bundles(self, *, limit: int | None = None) -> List[BundleUploadResult]:\n         self.limits.append(limit)\n         if limit is None:\n             return self.bundles\n         return self.bundles[: max(limit, 0)]\n \n-    def prune_bundles(\n-        self, *, keep: int\n-    ) -> tuple[List[BundleUploadResult], int]:\n+    def prune_bundles(self, *, keep: int) -> tuple[List[BundleUploadResult], int]:\n         self.prune_calls.append(keep)\n         return (self._prune_removed, self._prune_remaining)\n \n \n class StubAIService:\n@@ -240,13 +234,11 @@\n     uploads: List[Dict[str, Any]] = []\n \n     def _ctx() -> Any:\n         return ctx\n \n-    def _client_factory(\n-        base_url: str, *args: Any, **kwargs: Any\n-    ) -> StubPushClient:\n+    def _client_factory(base_url: str, *args: Any, **kwargs: Any) -> StubPushClient:\n         return StubPushClient(base_url, uploads)\n \n     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n \n     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n@@ -280,13 +272,11 @@\n     assert ai_meta[\"pending\"] == summary.pending\n     assert ai_meta[\"completed\"] == summary.completed\n     assert ai_meta[\"overdue\"] == summary.overdue\n     assert ai_meta[\"top_tags\"] == summary.top_tags\n     expected_due = (\n-        summary.upcoming[0].due.isoformat()\n-        if summary.upcoming[0].due\n-        else None\n+        summary.upcoming[0].due.isoformat() if summary.upcoming[0].due else None\n     )\n     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n     assert uploads[0][\"source\"] == \"unit-test\"\n     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n@@ -320,13 +310,11 @@\n     )\n \n     def _ctx() -> Any:\n         return ctx\n \n-    def _client_factory(\n-        base_url: str, *args: Any, **kwargs: Any\n-    ) -> StubPullClient:\n+    def _client_factory(base_url: str, *args: Any, **kwargs: Any) -> StubPullClient:\n         return StubPullClient(base_url, download)\n \n     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n \n     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n@@ -345,14 +333,11 @@\n         ],\n     )\n \n     assert result.exit_code == 0\n     assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n-    assert (\n-        service.import_calls\n-        and service.import_calls[0][\"passphrase\"] == \"secret\"\n-    )\n+    assert service.import_calls and service.import_calls[0][\"passphrase\"] == \"secret\"\n     assert service.import_calls[0][\"overwrite_existing\"] is True\n     assert service.import_calls[0][\"payload\"] == payload\n     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n     assert telemetry.events[0][1][\"from_latest\"] is True\n@@ -391,13 +376,11 @@\n     clients: List[StubHistoryClient] = []\n \n     def _ctx() -> Any:\n         return ctx\n \n-    def _client_factory(\n-        base_url: str, *args: Any, **kwargs: Any\n-    ) -> StubHistoryClient:\n+    def _client_factory(base_url: str, *args: Any, **kwargs: Any) -> StubHistoryClient:\n         client = StubHistoryClient(base_url, bundles)\n         clients.append(client)\n         return client\n \n     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n@@ -450,13 +433,11 @@\n     clients: List[StubHistoryClient] = []\n \n     def _ctx() -> Any:\n         return ctx\n \n-    def _client_factory(\n-        base_url: str, *args: Any, **kwargs: Any\n-    ) -> StubHistoryClient:\n+    def _client_factory(base_url: str, *args: Any, **kwargs: Any) -> StubHistoryClient:\n         client = StubHistoryClient(\n             base_url,\n             [],\n             prune_removed=[removed_bundle],\n             prune_remaining=2,\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py\t2025-10-07 02:51:49.480726+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py\t2025-10-07 07:51:03.390252+00:00\n@@ -91,12 +91,11 @@\n         \"==========\",\n         f\"Pending tasks:   {summary.pending}\",\n         f\"Completed tasks: {summary.completed}\",\n         f\"Overdue tasks:   {summary.overdue}\",\n         \"\",\n-        \"Top tags: \"\n-        + (\", \".join(summary.top_tags) if summary.top_tags else \"-\"),\n+        \"Top tags: \" + (\", \".join(summary.top_tags) if summary.top_tags else \"-\"),\n     ]\n     if summary.upcoming:\n         lines.append(\"\")\n         lines.append(\"Upcoming focus (7d horizon):\")\n         for item in summary.upcoming:\n@@ -169,13 +168,11 @@\n     confirm: bool = False,\n     prompt_text: str = \"Passphrase\",\n ) -> str:\n     if value:\n         return value\n-    secret = typer.prompt(\n-        prompt_text, hide_input=True, confirmation_prompt=confirm\n-    )\n+    secret = typer.prompt(prompt_text, hide_input=True, confirmation_prompt=confirm)\n     if not secret:\n         raise typer.BadParameter(\"Passphrase is required\")\n     return secret\n \n \n@@ -268,13 +265,11 @@\n @app.command()\n def add(\n     description: str,\n     due: str = typer.Option(None, help=\"ISO datetime\"),\n     tags: str = typer.Option(\"\", help=\"Comma tags\"),\n-    priority: str | None = typer.Option(\n-        None, help=\"Priority: low|medium|high\"\n-    ),\n+    priority: str | None = typer.Option(None, help=\"Priority: low|medium|high\"),\n ):\n     ctx = _ctx()\n     due_dt = _parse_due(due)\n     tag_list = [t for t in tags.split(\",\") if t] if tags else []\n     task = ctx.task_service.add_task(\n@@ -300,25 +295,21 @@\n     ctx = _ctx()\n     tasks = list(ctx.task_service.list_tasks(status=status))\n     if tag:\n         tasks = [t for t in tasks if tag in t.tags]\n     if priority:\n-        tasks = [\n-            t for t in tasks if (t.priority or \"\").lower() == priority.lower()\n-        ]\n+        tasks = [t for t in tasks if (t.priority or \"\").lower() == priority.lower()]\n     if tasks:\n         typer.echo(_format_tasks(tasks))\n     else:\n         typer.echo(\"No tasks found\")\n     _record(ctx, \"task.list\", status=status, tag=tag, priority=priority)\n \n \n @app.command()\n def search(\n-    text: str = typer.Option(\n-        \"\", help=\"Substring match against task description\"\n-    ),\n+    text: str = typer.Option(\"\", help=\"Substring match against task description\"),\n     status: str | None = typer.Option(None, help=\"Filter by status\"),\n     tag: List[str] = typer.Option(\n         [], \"--tag\", \"-t\", help=\"Filter by tag; repeat for multiple\"\n     ),\n     limit: int = typer.Option(20, help=\"Maximum number of results\"),\n@@ -367,13 +358,11 @@\n \n @app.command()\n def defer(\n     task_id: str,\n     until: str = typer.Option(None, help=\"ISO datetime to defer until\"),\n-    days: int | None = typer.Option(\n-        None, help=\"Number of days to push the due date\"\n-    ),\n+    days: int | None = typer.Option(None, help=\"Number of days to push the due date\"),\n ):\n     ctx = _ctx()\n     due = _parse_due(until)\n     if due and days is not None:\n         raise typer.BadParameter(\"Provide either --until or --days, not both\")\n@@ -419,26 +408,24 @@\n         tags=tags or None,\n     )\n     if not items:\n         typer.echo(\"No reviews due\")\n     else:\n-        header = \"ID       Due (UTC)        Overdue  Interval  Reps Last Source  Description\"\n+        header = (\n+            \"ID       Due (UTC)        Overdue  Interval  Reps Last Source  Description\"\n+        )\n         lines = [header, \"-\" * len(header)]\n         for item in items:\n             tid = item.task.id[:8]\n             due_str = item.record.due_at.astimezone(timezone.utc).strftime(\n                 \"%Y-%m-%d %H:%M\"\n             )\n             overdue_hours = max(0.0, item.overdue.total_seconds() / 3600.0)\n-            overdue_display = (\n-                f\"{overdue_hours:6.1f}h\" if overdue_hours else \"  -   \"\n-            )\n+            overdue_display = f\"{overdue_hours:6.1f}h\" if overdue_hours else \"  -   \"\n             interval_display = f\"{item.record.interval_days:7.2f}d\"\n             reps_display = f\"{item.record.repetitions:3d}\"\n-            last_source = (\n-                item.record.history[-1].source if item.record.history else \"-\"\n-            )\n+            last_source = item.record.history[-1].source if item.record.history else \"-\"\n             source_display = last_source[:11].ljust(11)\n             lines.append(\n                 f\"{tid} {due_str} {overdue_display} {interval_display} {reps_display} {source_display} {item.task.description}\"\n             )\n         typer.echo(\"\\n\".join(lines))\n@@ -452,13 +439,11 @@\n     )\n \n \n @review_app.command(\"focus\")\n def review_focus(\n-    limit: int = typer.Option(\n-        5, help=\"Maximum number of guidance entries to display\"\n-    ),\n+    limit: int = typer.Option(5, help=\"Maximum number of guidance entries to display\"),\n     include_completed: bool = typer.Option(\n         False, help=\"Include completed tasks when computing guidance\"\n     ),\n     tag: List[str] = typer.Option(\n         [], \"--tag\", \"-t\", help=\"Filter by tag; repeat for multiple\"\n@@ -481,30 +466,28 @@\n             tags=tags,\n             results=0,\n         )\n         return\n \n-    header = \"ID       Score  Review Due        Overdue  Priority Last Review        Action\"\n+    header = (\n+        \"ID       Score  Review Due        Overdue  Priority Last Review        Action\"\n+    )\n     lines = [header, \"-\" * len(header)]\n     for insight in insights:\n         tid = insight.task.id[:8]\n         score_display = f\"{insight.score:5.2f}\"\n         due_str = insight.record.due_at.astimezone(timezone.utc).strftime(\n             \"%Y-%m-%d %H:%M\"\n         )\n         overdue_hours = max(insight.overdue.total_seconds() / 3600.0, 0.0)\n-        overdue_display = (\n-            f\"{overdue_hours:6.1f}h\" if overdue_hours else \"  -   \"\n-        )\n+        overdue_display = f\"{overdue_hours:6.1f}h\" if overdue_hours else \"  -   \"\n         priority_display = (insight.task.priority or \"-\").ljust(7)\n         last_review_time = insight.last_reviewed_at\n         if last_review_time and last_review_time.tzinfo is None:\n             last_review_time = last_review_time.replace(tzinfo=timezone.utc)\n         last_str = (\n-            last_review_time.astimezone(timezone.utc).strftime(\n-                \"%Y-%m-%d %H:%M\"\n-            )\n+            last_review_time.astimezone(timezone.utc).strftime(\"%Y-%m-%d %H:%M\")\n             if last_review_time\n             else \"-\"\n         )\n         action_display = insight.suggested_action[:18].ljust(18)\n         lines.append(\n@@ -535,13 +518,11 @@\n \n \n @review_app.command(\"log\")\n def review_log(\n     task_id: str,\n-    quality: int = typer.Option(\n-        ..., min=0, max=5, help=\"Review quality score (0-5)\"\n-    ),\n+    quality: int = typer.Option(..., min=0, max=5, help=\"Review quality score (0-5)\"),\n     reviewed_at: str | None = typer.Option(\n         None, help=\"Override review timestamp (ISO datetime)\"\n     ),\n ):\n     ctx = _ctx()\n@@ -574,20 +555,16 @@\n ):\n     ctx = _ctx()\n     record = ctx.review_service.suspend(task_id, suspended=suspend)\n     state = \"suspended\" if suspend else \"active\"\n     due_str = record.due_at.astimezone(timezone.utc).strftime(\"%Y-%m-%d %H:%M\")\n-    typer.echo(\n-        f\"Review schedule for {task_id[:8]} is now {state} (next due {due_str})\"\n-    )\n+    typer.echo(f\"Review schedule for {task_id[:8]} is now {state} (next due {due_str})\")\n     _record(ctx, \"review.suspend\", task_id=task_id, suspended=suspend)\n \n \n @tags_app.command(\"add\")\n-def tag_add(\n-    task_id: str, tags: List[str] = typer.Argument(..., help=\"Tags to add\")\n-):\n+def tag_add(task_id: str, tags: List[str] = typer.Argument(..., help=\"Tags to add\")):\n     ctx = _ctx()\n     task = ctx.task_service.add_tags(task_id, tags)\n     typer.echo(f\"Tags now: {','.join(sorted(task.tags)) or '-'}\")\n     _record(ctx, \"task.tag.add\", task_id=task.id, tags=list(tags))\n \n@@ -601,13 +578,11 @@\n     typer.echo(f\"Tags now: {','.join(sorted(task.tags)) or '-'}\")\n     _record(ctx, \"task.tag.remove\", task_id=task.id, tags=list(tags))\n \n \n @tags_app.command(\"set\")\n-def tag_set(\n-    task_id: str, tags: List[str] = typer.Argument(..., help=\"Replace tags\")\n-):\n+def tag_set(task_id: str, tags: List[str] = typer.Argument(..., help=\"Replace tags\")):\n     ctx = _ctx()\n     task = ctx.task_service.set_tags(task_id, tags)\n     typer.echo(f\"Tags now: {','.join(sorted(task.tags)) or '-'}\")\n     _record(ctx, \"task.tag.set\", task_id=task.id, tags=list(tags))\n \n@@ -648,34 +623,28 @@\n         \"telemetry_enabled\": cfg.telemetry_enabled,\n         \"telemetry_writable\": bool(cfg.telemetry_path),\n         \"scheduler_enabled\": cfg.scheduler_enabled,\n         \"scheduler_active\": bool(ctx.scheduler_service),\n         \"review_store_exists\": Path(cfg.review_store_path).exists(),\n-        \"review_store_parent_exists\": Path(\n-            cfg.review_store_path\n-        ).parent.exists(),\n+        \"review_store_parent_exists\": Path(cfg.review_store_path).parent.exists(),\n         \"cards_db_exists\": Path(cfg.cards_db_path).exists(),\n         \"cards_db_parent_exists\": Path(cfg.cards_db_path).parent.exists(),\n         \"collaboration_bundle_parent_exists\": Path(\n             cfg.collaboration_bundle_path\n         ).parent.exists(),\n         \"automation_webhooks_configured\": bool(cfg.automation_webhooks),\n     }\n     if cfg.taskwarrior_data_dir:\n-        checks[\"taskwarrior_data_dir_exists\"] = Path(\n-            cfg.taskwarrior_data_dir\n-        ).exists()\n+        checks[\"taskwarrior_data_dir_exists\"] = Path(cfg.taskwarrior_data_dir).exists()\n     if cfg.telemetry_path:\n         telemetry_path = Path(cfg.telemetry_path)\n         checks[\"telemetry_dir_exists\"] = telemetry_path.parent.exists()\n     bundle_path = Path(cfg.collaboration_bundle_path)\n     checks[\"collaboration_bundle_exists\"] = bundle_path.exists()\n     hub_dir = Path(cfg.collaboration_hub_dir)\n     checks[\"collaboration_hub_dir_exists\"] = hub_dir.exists()\n-    checks[\"collaboration_endpoint_configured\"] = bool(\n-        cfg.collaboration_endpoint\n-    )\n+    checks[\"collaboration_endpoint_configured\"] = bool(cfg.collaboration_endpoint)\n     typer.echo(json.dumps(checks, indent=2, default=str))\n     _record(ctx, \"config.doctor\", **checks)\n \n \n @automation_app.command(\"endpoints\")\n@@ -698,22 +667,16 @@\n     _record(ctx, \"automation.endpoints\", count=len(endpoints))\n \n \n @collab_app.command(\"export\")\n def collab_export(\n-    output: Path = typer.Option(\n-        None, \"--output\", \"-o\", help=\"Destination bundle path\"\n-    ),\n+    output: Path = typer.Option(None, \"--output\", \"-o\", help=\"Destination bundle path\"),\n     passphrase: str | None = typer.Option(\n         None, help=\"Passphrase used to encrypt the bundle\"\n     ),\n-    include_completed: bool = typer.Option(\n-        True, help=\"Include completed tasks\"\n-    ),\n-    limit: int | None = typer.Option(\n-        None, help=\"Maximum number of tasks to export\"\n-    ),\n+    include_completed: bool = typer.Option(True, help=\"Include completed tasks\"),\n+    limit: int | None = typer.Option(None, help=\"Maximum number of tasks to export\"),\n ):\n     ctx = _ctx()\n     dest = output or Path(ctx.config.collaboration_bundle_path)\n     secret = _prompt_passphrase(passphrase, confirm=True)\n     result = ctx.collaboration_service.export_tasks(\n@@ -761,32 +724,26 @@\n     )\n \n \n @collab_app.command(\"push\")\n def collab_push(\n-    endpoint: str | None = typer.Option(\n-        None, help=\"Collaboration hub base URL\"\n-    ),\n+    endpoint: str | None = typer.Option(None, help=\"Collaboration hub base URL\"),\n     passphrase: str | None = typer.Option(\n         None, help=\"Passphrase used to encrypt the bundle\"\n     ),\n     include_completed: bool = typer.Option(\n         True, help=\"Include completed tasks in the export\"\n     ),\n-    limit: int | None = typer.Option(\n-        None, help=\"Maximum number of tasks to export\"\n-    ),\n+    limit: int | None = typer.Option(None, help=\"Maximum number of tasks to export\"),\n     source: str | None = typer.Option(\n         None, help=\"Source identifier stored with the upload\"\n     ),\n ):\n     ctx = _ctx()\n     base_url = endpoint or ctx.config.collaboration_endpoint\n     if not base_url:\n-        raise typer.BadParameter(\n-            \"Provide --endpoint or set LEGATUS_COLLAB_ENDPOINT.\"\n-        )\n+        raise typer.BadParameter(\"Provide --endpoint or set LEGATUS_COLLAB_ENDPOINT.\")\n     secret = _prompt_passphrase(passphrase, confirm=True)\n     summary = ctx.ai_service.summarize()\n     summary_payload: dict[str, Any] = {\n         \"pending\": summary.pending,\n         \"completed\": summary.completed,\n@@ -854,23 +811,17 @@\n     )\n \n \n @collab_app.command(\"history\")\n def collab_history(\n-    endpoint: str | None = typer.Option(\n-        None, help=\"Collaboration hub base URL\"\n-    ),\n-    limit: int = typer.Option(\n-        10, help=\"Maximum number of bundles to list\", min=0\n-    ),\n+    endpoint: str | None = typer.Option(None, help=\"Collaboration hub base URL\"),\n+    limit: int = typer.Option(10, help=\"Maximum number of bundles to list\", min=0),\n ):\n     ctx = _ctx()\n     base_url = endpoint or ctx.config.collaboration_endpoint\n     if not base_url:\n-        raise typer.BadParameter(\n-            \"Provide --endpoint or set LEGATUS_COLLAB_ENDPOINT.\"\n-        )\n+        raise typer.BadParameter(\"Provide --endpoint or set LEGATUS_COLLAB_ENDPOINT.\")\n     try:\n         with CollaborationHubClient(base_url) as client:\n             bundles = client.list_bundles(limit=limit)\n     except Exception as exc:\n         raise typer.BadParameter(\n@@ -883,19 +834,15 @@\n         return\n \n     header = \"ID        Stored (UTC)        Size  Source      Metadata\"\n     lines = [header, \"-\" * len(header)]\n     for bundle in bundles:\n-        stored = bundle.stored_at.astimezone(timezone.utc).strftime(\n-            \"%Y-%m-%d %H:%M\"\n-        )\n+        stored = bundle.stored_at.astimezone(timezone.utc).strftime(\"%Y-%m-%d %H:%M\")\n         size_display = f\"{bundle.size:5d}\"\n         source_display = (bundle.source or \"-\")[:10].ljust(10)\n         metadata_display = (\n-            json.dumps(bundle.metadata, default=str)\n-            if bundle.metadata\n-            else \"-\"\n+            json.dumps(bundle.metadata, default=str) if bundle.metadata else \"-\"\n         )\n         lines.append(\n             f\"{bundle.bundle_id[:8]} {stored} {size_display} {source_display} {metadata_display}\"\n         )\n     typer.echo(\"\\n\".join(lines))\n@@ -908,13 +855,11 @@\n     )\n \n \n @collab_app.command(\"pull\")\n def collab_pull(\n-    endpoint: str | None = typer.Option(\n-        None, help=\"Collaboration hub base URL\"\n-    ),\n+    endpoint: str | None = typer.Option(None, help=\"Collaboration hub base URL\"),\n     passphrase: str | None = typer.Option(\n         None, help=\"Passphrase used to decrypt the bundle\"\n     ),\n     overwrite_existing: bool = typer.Option(\n         False, help=\"Replace tasks with matching IDs\"\n@@ -927,13 +872,11 @@\n     ),\n ):\n     ctx = _ctx()\n     base_url = endpoint or ctx.config.collaboration_endpoint\n     if not base_url:\n-        raise typer.BadParameter(\n-            \"Provide --endpoint or set LEGATUS_COLLAB_ENDPOINT.\"\n-        )\n+        raise typer.BadParameter(\"Provide --endpoint or set LEGATUS_COLLAB_ENDPOINT.\")\n \n     try:\n         with CollaborationHubClient(base_url) as client:\n             if bundle_id:\n                 download = client.fetch_bundle(bundle_id)\n@@ -959,13 +902,11 @@\n     tasks = ctx.collaboration_service.import_tasks(\n         destination,\n         secret,\n         overwrite_existing=overwrite_existing,\n     )\n-    typer.echo(\n-        f\"Imported {len(tasks)} task(s) from bundle {download.bundle_id}\"\n-    )\n+    typer.echo(f\"Imported {len(tasks)} task(s) from bundle {download.bundle_id}\")\n     _record(\n         ctx,\n         \"collab.pull\",\n         endpoint=base_url,\n         bundle_id=download.bundle_id,\n@@ -975,23 +916,19 @@\n     )\n \n \n @collab_app.command(\"prune\")\n def collab_prune(\n-    endpoint: str | None = typer.Option(\n-        None, help=\"Collaboration hub base URL\"\n-    ),\n+    endpoint: str | None = typer.Option(None, help=\"Collaboration hub base URL\"),\n     keep: int = typer.Option(\n         10, help=\"Number of most recent bundles to keep\", min=0, max=100\n     ),\n ):\n     ctx = _ctx()\n     base_url = endpoint or ctx.config.collaboration_endpoint\n     if not base_url:\n-        raise typer.BadParameter(\n-            \"Provide --endpoint or set LEGATUS_COLLAB_ENDPOINT.\"\n-        )\n+        raise typer.BadParameter(\"Provide --endpoint or set LEGATUS_COLLAB_ENDPOINT.\")\n     try:\n         with CollaborationHubClient(base_url) as client:\n             removed, remaining = client.prune_bundles(keep=keep)\n     except Exception as exc:\n         raise typer.BadParameter(\n@@ -1001,16 +938,12 @@\n     if not removed:\n         typer.echo(\"No bundles pruned.\")\n     else:\n         typer.echo(f\"Removed {len(removed)} bundle(s):\")\n         for item in removed:\n-            stored = item.stored_at.astimezone(timezone.utc).strftime(\n-                \"%Y-%m-%d %H:%M\"\n-            )\n-            typer.echo(\n-                f\"- {item.bundle_id} at {stored} (size={item.size} bytes)\"\n-            )\n+            stored = item.stored_at.astimezone(timezone.utc).strftime(\"%Y-%m-%d %H:%M\")\n+            typer.echo(f\"- {item.bundle_id} at {stored} (size={item.size} bytes)\")\n     typer.echo(f\"Remaining bundles on hub: {remaining}\")\n     _record(\n         ctx,\n         \"collab.prune\",\n         endpoint=base_url,\n@@ -1022,13 +955,11 @@\n \n @app.command(\"webhook\")\n def run_webhook_server(\n     host: str = typer.Option(\"127.0.0.1\", help=\"Host interface to bind\"),\n     port: int = typer.Option(8080, help=\"Port to bind\"),\n-    reload: bool = typer.Option(\n-        False, help=\"Enable auto-reload (development only)\"\n-    ),\n+    reload: bool = typer.Option(False, help=\"Enable auto-reload (development only)\"),\n ):\n     ctx = _ctx()\n     from ...interface.api.server import create_api_app\n \n     try:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py\t2025-10-07 02:51:49.529814+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py\t2025-10-07 07:51:04.027741+00:00\n@@ -83,13 +83,11 @@\n         )\n \n     # Dev fallback for PDF via wkhtmltopdf when enabled\n     def to_pdf(self, html_str: str, out_path: str) -> None:\n         # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n-        raise RuntimeError(\n-            \"PDF export not available (no PDF engine configured)\"\n-        )\n+        raise RuntimeError(\"PDF export not available (no PDF engine configured)\")\n \n \n # Built-in PDF adapter using wkhtmltopdf (subprocess)\n _DEFAULT_WKHTMLTOPDF_PATH = r\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\"\n \n@@ -112,13 +110,11 @@\n     def to_pdf(\n         self,\n         html_str: str,\n         out_path: str,\n         *,\n-        page_size: Optional[\n-            Tuple[float, float]\n-        ] = None,  # (width_in, height_in)\n+        page_size: Optional[Tuple[float, float]] = None,  # (width_in, height_in)\n         margin_in: float = 0.0,\n         dpi: int = 300,\n     ) -> None:\n         if not self._bin or not os.path.isfile(self._bin):\n             raise RuntimeError(\n@@ -175,13 +171,11 @@\n class _MarkdownAdapter:\n     def __init__(self, base_folder: str) -> None:\n         # Track whether the adapter provides a PDF exporter\n         self._inner, self._has_pdf = self._load_from_manifest(base_folder)\n \n-    def _load_from_manifest(\n-        self, base_folder: str\n-    ) -> Tuple[MarkdownLike, bool]:\n+    def _load_from_manifest(self, base_folder: str) -> Tuple[MarkdownLike, bool]:\n         # Search common locations and optional explicit path\n         env_manifest = os.environ.get(\"X_MANIFEST_PATH\")\n         candidates = [\n             os.path.join(base_folder, \"publish_manifest.json\"),\n             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n@@ -299,13 +293,11 @@\n                             os.remove(tmp_path)\n                         except Exception:\n                             pass\n \n             pdf_func = _call_to_pdf\n-        elif hasattr(inst, \"export_pdf\") and callable(\n-            getattr(inst, \"export_pdf\")\n-        ):\n+        elif hasattr(inst, \"export_pdf\") and callable(getattr(inst, \"export_pdf\")):\n             exp = cast(Callable[[str, str], None], getattr(inst, \"export_pdf\"))\n \n             def export_pdf_html(html_str: str, out_path: str) -> None:\n                 with tempfile.NamedTemporaryFile(\n                     \"w\", delete=False, suffix=\".html\", encoding=\"utf-8\"\n@@ -475,22 +467,18 @@\n         # Also append to JSON for easy inspection (preserve original field names)\n         self._append_jsonl(self.json_cards_path, d)\n \n     def update_status(self, card_id: str, status: str) -> None:\n         with self._conn() as cx:\n-            cx.execute(\n-                \"UPDATE cards SET status=? WHERE id=?\", (status, card_id)\n-            )\n+            cx.execute(\"UPDATE cards SET status=? WHERE id=?\", (status, card_id))\n         self._append_jsonl(\n             self.json_actions_path,\n             {\n                 \"card_id\": card_id,\n                 \"action_type\": \"status_update\",\n                 \"meta\": {\"status\": status},\n-                \"created_at\": _dt.datetime.now(_dt.UTC).isoformat(\n-                    timespec=\"seconds\"\n-                ),\n+                \"created_at\": _dt.datetime.now(_dt.UTC).isoformat(timespec=\"seconds\"),\n             },\n         )\n \n     def insert_action(\n         self, card_id: str, action_type: str, meta: Dict[str, Any]\n@@ -504,13 +492,11 @@\n             self.json_actions_path,\n             {\n                 \"card_id\": card_id,\n                 \"action_type\": action_type,\n                 \"meta\": meta or {},\n-                \"created_at\": _dt.datetime.now(_dt.UTC).isoformat(\n-                    timespec=\"seconds\"\n-                ),\n+                \"created_at\": _dt.datetime.now(_dt.UTC).isoformat(timespec=\"seconds\"),\n             },\n         )\n \n     def get_card(self, card_id: str) -> Optional[\"Notecard\"]:\n         with self._conn() as cx:\n@@ -570,13 +556,11 @@\n class Notecard:\n     id: str\n     type: str\n     front_md: str\n     back_md: Optional[str] = None\n-    size: str = (\n-        \"3x5\"  # accepts: \"WxH\" (in|mm|cm), aliases, suffix p/l for orientation\n-    )\n+    size: str = \"3x5\"  # accepts: \"WxH\" (in|mm|cm), aliases, suffix p/l for orientation\n     tags: List[str] = field(default_factory=list)\n     symbol_type: str = \"qr\"  # \"qr\" or \"code\"\n     symbol_data: Optional[str] = None  # payload/URI encoded in symbol\n     status: str = \"new\"  # \"new\" | \"acted\" | \"completed\"\n     created_at: str = field(\n@@ -607,27 +591,21 @@\n             for c in payload[\"cards\"]:\n                 result.append(\n                     {\n                         \"front_md\": c.get(\"front_md\", \"\"),\n                         \"back_md\": c.get(\"back_md\"),\n-                        \"tags\": list(\n-                            set([*(global_tags), *(c.get(\"tags\", []) or [])])\n-                        ),\n+                        \"tags\": list(set([*(global_tags), *(c.get(\"tags\", []) or [])])),\n                     }\n                 )\n             return result\n         if \"qa\" in payload:\n             for pair in payload[\"qa\"]:\n                 front = (\n-                    pair[0]\n-                    if isinstance(pair, (list, tuple)) and len(pair) > 0\n-                    else \"\"\n+                    pair[0] if isinstance(pair, (list, tuple)) and len(pair) > 0 else \"\"\n                 )\n                 back = (\n-                    pair[1]\n-                    if isinstance(pair, (list, tuple)) and len(pair) > 1\n-                    else \"\"\n+                    pair[1] if isinstance(pair, (list, tuple)) and len(pair) > 1 else \"\"\n                 )\n                 result.append(\n                     {\n                         \"front_md\": front,\n                         \"back_md\": back,\n@@ -700,13 +678,11 @@\n             for a in payload[\"appointments\"]:\n                 result.append(\n                     {\n                         \"front_md\": mk_front(a),\n                         \"back_md\": mk_back(a),\n-                        \"tags\": list(\n-                            set([*(global_tags), *(a.get(\"tags\", []) or [])])\n-                        ),\n+                        \"tags\": list(set([*(global_tags), *(a.get(\"tags\", []) or [])])),\n                     }\n                 )\n             return result\n         result.append(\n             {\n@@ -742,13 +718,11 @@\n         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n         os.makedirs(self.out_dir, exist_ok=True)\n         self.media_dir = os.path.join(self.out_dir, \"media\")\n         os.makedirs(self.media_dir, exist_ok=True)\n-        self.db_path = db_path or os.path.join(\n-            self.pkg_dir, \"data\", \"cards.db\"\n-        )\n+        self.db_path = db_path or os.path.join(self.pkg_dir, \"data\", \"cards.db\")\n         os.makedirs(os.path.dirname(self.db_path), exist_ok=True)\n         self.storage = Storage(self.db_path)\n         # Prefer base_dir for manifest lookup; still searches package/CWD/env\n         self.md = _MarkdownAdapter(self.base_dir)\n         self._pdf = _PDFAdapter()  # built-in PDF adapter using wkhtmltopdf\n@@ -825,15 +799,11 @@\n         t = re.sub(r\"-{2,}\", \"-\", t).strip(\"-\")\n         return t or \"card\"\n \n     def _output_filename(self, c: Notecard, ext: str) -> str:\n         base = self._slug(c.series_name or c.type or \"card\")\n-        tags = (\n-            \"-\".join(self._slug(t) for t in (c.tags or [])[:3])\n-            if c.tags\n-            else \"\"\n-        )\n+        tags = \"-\".join(self._slug(t) for t in (c.tags or [])[:3]) if c.tags else \"\"\n         idx = f\"{c.index:02d}\" if isinstance(c.index, int) else \"\"\n         short = (c.id.split(\"-\")[0] if c.id else \"\")[:8].upper()\n         parts = [p for p in [base, tags, idx, short] if p]\n         name = \"_\".join(parts)[:120]\n         return f\"{name}.{ext}\"\n@@ -853,13 +823,11 @@\n             return None\n         if raw in (\"letter\", \"us-letter\"):\n             return (8.5, 11.0)\n         if raw in (\"a4\", \"iso-a4\"):\n             return (8.27, 11.69)\n-        m = re.match(\n-            r\"^\\s*(\\d+(?:\\.\\d+)?)\\s*x\\s*(\\d+(?:\\.\\d+)?)(mm|cm|in)?\\s*$\", raw\n-        )\n+        m = re.match(r\"^\\s*(\\d+(?:\\.\\d+)?)\\s*x\\s*(\\d+(?:\\.\\d+)?)(mm|cm|in)?\\s*$\", raw)\n         if m:\n             w_raw, h_raw, unit = m.groups()\n             unit = unit or \"in\"\n             return (\n                 _to_inches(float(w_raw), unit),\n@@ -940,13 +908,11 @@\n         orient: Optional[str] = None\n         if s.endswith((\"p\", \"l\")):\n             orient, s = s[-1], s[:-1]\n \n         # Try strict \"WxH\" with optional unit\n-        m = re.match(\n-            r\"^\\s*(\\d+(?:\\.\\d+)?)\\s*x\\s*(\\d+(?:\\.\\d+)?)(mm|cm|in)?\\s*$\", s\n-        )\n+        m = re.match(r\"^\\s*(\\d+(?:\\.\\d+)?)\\s*x\\s*(\\d+(?:\\.\\d+)?)(mm|cm|in)?\\s*$\", s)\n         if m:\n             w_raw, h_raw, unit = m.groups()\n             unit = unit or \"in\"\n             w = _to_inches(float(w_raw), unit)\n             h = _to_inches(float(h_raw), unit)\n@@ -975,13 +941,11 @@\n             return (5.0, 3.0)\n         if near(w, 6.0) and near(h, 4.0):\n             return (6.0, 4.0)\n \n         raise ValueError(\n-            \"Only 3x5 and 4x6 sizes are supported (got: {:.2f}x{:.2f} in)\".format(\n-                w, h\n-            )\n+            \"Only 3x5 and 4x6 sizes are supported (got: {:.2f}x{:.2f} in)\".format(w, h)\n         )\n \n     def make(\n         self,\n         kind: str,\n@@ -999,13 +963,11 @@\n         total = len(raw_cards)\n         set_id = series_id or str(uuid.uuid4())\n         cards: List[Notecard] = []\n \n         global_tags = [\n-            t.strip().lower()\n-            for t in (tags or [])\n-            if isinstance(t, str) and t.strip()\n+            t.strip().lower() for t in (tags or []) if isinstance(t, str) and t.strip()\n         ]\n         for idx, rc in enumerate(raw_cards, start=1):\n             card_id = str(uuid.uuid4())\n             payload_uri = f\"ncx://card/{card_id}?scan=1\"\n             joined_tags = global_tags + [\n@@ -1068,36 +1030,28 @@\n         Each page contains the front content of a single card. Card back_md is not included\n         in duplex PDFs to support simple double-sided printing.\n         \"\"\"\n         out_paths: List[str] = []\n         sheet = self._sheet_size()\n-        force_wk = sheet is not None or _truthy_env(\n-            \"X_FORCE_WKHTMLTOPDF\", False\n-        )\n+        force_wk = sheet is not None or _truthy_env(\"X_FORCE_WKHTMLTOPDF\", False)\n \n         # Group cards by normalized size key (\"3x5\" or \"4x6\")\n         groups: Dict[str, List[Notecard]] = {\"3x5\": [], \"4x6\": []}\n         for c in cards:\n             w_in, h_in = self._parse_size_spec(c.size)\n             key = \"3x5\" if (w_in, h_in) == (5.0, 3.0) else \"4x6\"\n             groups[key].append(c)\n \n         # Helper to extract <style> and <body> fragments from per-card HTML\n         def _extract_style_and_body(html_str: str) -> Tuple[str, str]:\n-            m_style = re.search(\n-                r\"(<style>.*?</style>)\", html_str, flags=re.S | re.I\n-            )\n-            m_body = re.search(\n-                r\"<body>(.*)</body>\", html_str, flags=re.S | re.I\n-            )\n+            m_style = re.search(r\"(<style>.*?</style>)\", html_str, flags=re.S | re.I)\n+            m_body = re.search(r\"<body>(.*)</body>\", html_str, flags=re.S | re.I)\n             style_s = m_style.group(1) if m_style else \"<style></style>\"\n             body_s = m_body.group(1).strip() if m_body else \"\"\n             return (style_s, body_s)\n \n-        def _write_duplex_set(\n-            size_key: str, subset: List[Notecard]\n-        ) -> List[str]:\n+        def _write_duplex_set(size_key: str, subset: List[Notecard]) -> List[str]:\n             if not subset:\n                 return []\n             # Split into odds/evens based on per-size order\n             odds: List[Notecard] = []\n             evens: List[Notecard] = []\n@@ -1113,13 +1067,11 @@\n                     seq[0], sheet=sheet, both_sides=False\n                 )\n                 style_s, body_first = _extract_style_and_body(first_html)\n                 bodies = [body_first]\n                 for c in seq[1:]:\n-                    h = self._render_card_html(\n-                        c, sheet=sheet, both_sides=False\n-                    )\n+                    h = self._render_card_html(c, sheet=sheet, both_sides=False)\n                     _, b = _extract_style_and_body(h)\n                     bodies.append(b)\n \n                 doc_html = f\"\"\"<!doctype html>\n <html>\n@@ -1138,13 +1090,11 @@\n                 )\n                 with open(html_path, \"w\", encoding=\"utf-8\") as fh:\n                     fh.write(doc_html)\n \n                 # Export to PDF\n-                pdf_path = os.path.join(\n-                    self.out_dir, f\"duplex_{size_key}_{label}.pdf\"\n-                )\n+                pdf_path = os.path.join(self.out_dir, f\"duplex_{size_key}_{label}.pdf\")\n                 w_in, h_in = (5.0, 3.0) if size_key == \"3x5\" else (6.0, 4.0)\n                 if (\n                     not force_wk\n                     and getattr(self.md, \"can_pdf\", None)\n                     and self.md.can_pdf()\n@@ -1342,15 +1292,11 @@\n         kind = (c.type or \"\").strip().lower()\n         series = c.series_name or \"\"\n         ver = c.series_version or \"\"\n         n = f\"{c.index} of {c.total}\" if c.index and c.total else \"\"\n         b1 = f'<span class=\"badge\">{html.escape(kind)}</span>' if kind else \"\"\n-        b2 = (\n-            f'<span class=\"badge\">{html.escape(series)}</span>'\n-            if series\n-            else \"\"\n-        )\n+        b2 = f'<span class=\"badge\">{html.escape(series)}</span>' if series else \"\"\n         b3 = f'<span class=\"badge\">v{html.escape(ver)}</span>' if ver else \"\"\n         b4 = f'<span class=\"badge\">{html.escape(n)}</span>' if n else \"\"\n         return \"\".join([b1, b2, b3, b4])\n \n     def _qr_data_uri(self, payload: str) -> str:\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "infrastructure\\telemetry.py:27: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\telemetry.py:32: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\telemetry.py:35: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\ninfrastructure\\telemetry.py:35: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ninfrastructure\\telemetry.py:35: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ninfrastructure\\telemetry.py:35: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\telemetry.py:35: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\telemetry.py:37: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\ports\\scheduler.py:12: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\task.py:94: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\task.py:95: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\task.py:95: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\task.py:96: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\task.py:97: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\task.py:97: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\task.py:98: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\task.py:98: error: Expression has type \"Any\"  [misc]\ncore\\domain\\task.py:99: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\task.py:99: error: Expression has type \"Any\"  [misc]\ncore\\domain\\task.py:100: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\task.py:100: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\task.py:101: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\task.py:102: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\task.py:102: error: Expression has type \"Any\"  [misc]\ncore\\domain\\task.py:103: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:22: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:30: error: Expression type contains \"Any\" (has type \"type[ReviewHistoryEntry]\")  [misc]\ncore\\domain\\review.py:31: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:36: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:36: error: Expression type contains \"Any\" (has type \"Callable[[], dict[str, Any]]\")  [misc]\ncore\\domain\\review.py:38: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:39: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:44: error: Expression type contains \"Any\" (has type \"tuple[str, dict[str, Any]]\")  [misc]\ncore\\domain\\review.py:44: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:48: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:49: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:49: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:50: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:50: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:51: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:51: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:52: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:53: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:54: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:54: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ncore\\domain\\review.py:55: error: Expression type contains \"Any\" (has type \"tuple[object, Any]\")  [misc]\ncore\\domain\\review.py:55: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:56: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:56: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ncore\\domain\\review.py:56: error: Expression type contains \"Any\" (has type \"ItemsView[object, Any]\")  [misc]\ncore\\domain\\review.py:60: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:60: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:63: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:68: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:68: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:71: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:99: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:100: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:112: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\ncore\\domain\\review.py:112: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\domain\\review.py:112: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:117: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:118: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:118: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:119: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:119: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:120: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:120: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:121: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:122: error: Expression type contains \"Any\" (has type \"type[ReviewHistoryEntry]\")  [misc]\ncore\\domain\\review.py:122: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:123: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:123: error: Expression type contains \"Any\" (has type \"Any | list[Never]\")  [misc]\ncore\\domain\\review.py:126: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:126: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:130: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:131: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:134: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:134: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:135: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:135: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:136: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:136: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:138: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:138: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\null_scheduler.py:19: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:29: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\domain\\events.py:30: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:35: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:61: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:63: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:66: error: Expression type contains \"Any\" (has type \"dict[type[Any], list[EventSubscriber]]\")  [misc]\ncore\\domain\\events.py:66: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\ncore\\domain\\events.py:69: error: Expression type contains \"Any\" (has type \"tuple[type[Any], list[EventSubscriber]]\")  [misc]\ncore\\domain\\events.py:69: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\ncore\\domain\\events.py:69: error: Expression type contains \"Any\" (has type \"dict[type[Any], list[EventSubscriber]]\")  [misc]\ncore\\domain\\events.py:69: error: Expression type contains \"Any\" (has type \"dict_items[type[Any], list[EventSubscriber]]\")  [misc]\ncore\\domain\\events.py:70: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\ncore\\domain\\events.py:72: error: Expression has type \"Any\"  [misc]\ninfrastructure\\logging.py:38: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\logging.py:46: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\ninfrastructure\\logging.py:46: error: Expression has type \"Any\"  [misc]\ninfrastructure\\logging.py:46: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\logging.py:46: error: Expression type contains \"Any\" (has type \"dict_items[str, Any]\")  [misc]\ninfrastructure\\logging.py:49: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\logging.py:49: error: Expression has type \"Any\"  [misc]\ninfrastructure\\logging.py:51: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\logging.py:52: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\search\\memory_index.py:66: error: Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")  [misc]\ninfrastructure\\search\\memory_index.py:66: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:10: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\scheduler\\apscheduler_adapter.py:27: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:28: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:33: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\scheduler\\apscheduler_adapter.py:33: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:38: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:43: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:46: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\scheduler\\apscheduler_adapter.py:55: error: Expression type contains \"Any\" (has type \"tuple[Any, ...] | None\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:56: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:56: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:57: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:58: error: Expression type contains \"Any\" (has type \"Callable[..., Any]\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:63: error: Expression type contains \"Any\" (has type \"tuple[Any, ...]\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:64: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:66: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:70: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:43: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:45: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:46: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:54: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\review\\json_repository.py:54: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:55: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\review\\json_repository.py:55: error: Expression type contains \"Any\" (has type \"tuple[object, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:55: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:56: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:56: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:56: error: Expression type contains \"Any\" (has type \"ItemsView[object, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:58: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:62: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\ninfrastructure\\review\\json_repository.py:63: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:66: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\ncore\\services\\scheduler_service.py:71: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\scheduler_service.py:87: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\scheduler_service.py:99: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:47: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\services\\review_service.py:77: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:79: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\ncore\\services\\review_service.py:79: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\review_service.py:84: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\services\\review_service.py:91: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:93: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:96: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\ncore\\services\\review_service.py:96: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\review_service.py:97: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\ncore\\services\\review_service.py:97: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ncore\\services\\review_service.py:97: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:100: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:106: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:145: error: Expression type contains \"Any\" (has type \"set[Any]\")  [misc]\ncore\\services\\review_service.py:156: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:201: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:201: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\review_service.py:220: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:223: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\review_service.py:225: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ncore\\services\\review_service.py:225: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:226: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:238: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:241: error: Expression type contains \"Any\" (has type \"list[Any | None]\")  [misc]\ncore\\services\\review_service.py:242: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:242: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:244: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:244: error: Expression type contains \"Any\" (has type \"list[Any | None]\")  [misc]\ncore\\services\\review_service.py:245: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:248: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:248: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:249: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:253: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:253: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:254: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:265: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:266: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:268: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:270: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:278: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:281: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\review_service.py:284: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:285: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:287: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:294: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:295: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:295: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ncore\\services\\review_service.py:296: error: Expression type contains \"Any\" (has type \"tuple[object, Any]\")  [misc]\ncore\\services\\review_service.py:296: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:296: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ncore\\services\\review_service.py:296: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ncore\\services\\review_service.py:296: error: Expression type contains \"Any\" (has type \"ItemsView[object, Any]\")  [misc]\ncore\\services\\review_service.py:297: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:298: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:298: error: Expression type contains \"Any\" (has type \"Iterable[Any]\")  [misc]\ncore\\services\\review_service.py:299: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:299: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\review_service.py:299: error: Expression type contains \"Any\" (has type \"Iterable[Any]\")  [misc]\ncore\\services\\review_service.py:300: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:302: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\ncore\\services\\review_service.py:302: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:302: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:302: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ncore\\services\\review_service.py:302: error: Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:8: error: Explicit \"Any\" is not allowed  [explicit-any]\nadapters\\taskwarrior\\tw_repository.py:16: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:25: error: Explicit \"Any\" is not allowed  [explicit-any]\nadapters\\taskwarrior\\tw_repository.py:26: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:36: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:39: error: Explicit \"Any\" is not allowed  [explicit-any]\nadapters\\taskwarrior\\tw_repository.py:41: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:41: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:44: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:46: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:47: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:47: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:48: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:55: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:56: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:57: error: Explicit \"Any\" is not allowed  [explicit-any]\nadapters\\taskwarrior\\tw_repository.py:57: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:58: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:58: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:59: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:65: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:67: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:68: error: Explicit \"Any\" is not allowed  [explicit-any]\nadapters\\taskwarrior\\tw_repository.py:68: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:80: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:81: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:82: error: Explicit \"Any\" is not allowed  [explicit-any]\nadapters\\taskwarrior\\tw_repository.py:82: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:83: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:83: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:85: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:85: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:86: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:89: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:90: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:92: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:94: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:96: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:98: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:99: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:107: error: Explicit \"Any\" is not allowed  [explicit-any]\nadapters\\taskwarrior\\tw_repository.py:108: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:108: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:109: error: Expression type contains \"Any\" (has type \"frozenset[Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:109: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:109: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:109: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:109: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:110: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:110: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:111: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:111: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:113: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:113: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:114: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:114: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:118: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:118: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:119: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:119: error: Expression has type \"Any\"  [misc]\nadapters\\taskwarrior\\tw_repository.py:120: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:123: error: Expression type contains \"Any\" (has type \"frozenset[Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:124: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:147: error: Statement is unreachable  [unreachable]\ncore\\services\\plugin_bus.py:122: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\ncore\\services\\plugin_bus.py:123: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\ncore\\services\\plugin_bus.py:133: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\plugin_bus.py:151: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\plugin_bus.py:160: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:168: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:170: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:171: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:173: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:175: error: Expression has type \"Any\"  [misc]\ncore\\services\\card_action_service.py:26: error: Expression type contains \"Any\" (has type \"type[CardScanResult]\")  [misc]\ncore\\services\\card_action_service.py:27: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\card_action_service.py:32: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\card_action_service.py:48: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\card_action_service.py:61: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:61: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ncore\\services\\card_action_service.py:63: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:64: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:66: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:84: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:94: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\task_scoring.py:26: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\calendar_sync.py:27: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\calendar_sync.py:56: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\calendar_sync.py:66: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\calendar_sync.py:80: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:32: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\nplugins\\ai_assistant.py:43: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:52: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nplugins\\ai_assistant.py:53: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:57: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:60: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\nplugins\\ai_assistant.py:60: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nplugins\\ai_assistant.py:61: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\nplugins\\ai_assistant.py:61: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nplugins\\ai_assistant.py:67: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\nplugins\\ai_assistant.py:67: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:67: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nplugins\\ai_assistant.py:68: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:68: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nplugins\\ai_assistant.py:68: error: Expression has type \"Any\"  [misc]\nplugins\\ai_assistant.py:74: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\nplugins\\ai_assistant.py:89: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:96: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:101: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\nplugins\\ai_assistant.py:101: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nplugins\\ai_assistant.py:109: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:110: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:110: error: Expression has type \"Any\"  [misc]\nplugins\\ai_assistant.py:114: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:116: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:116: error: Expression has type \"Any\"  [misc]\nplugins\\ai_assistant.py:120: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:124: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nplugins\\ai_assistant.py:124: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:124: error: Expression has type \"Any\"  [misc]\nplugins\\ai_assistant.py:130: error: Explicit \"Any\" is not allowed  [explicit-any]\nplugins\\ai_assistant.py:142: error: Explicit \"Any\" is not allowed  [explicit-any]\nplugins\\ai_assistant.py:143: error: Explicit \"Any\" is not allowed  [explicit-any]\nplugins\\ai_assistant.py:145: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:149: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\collaboration_service.py:54: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\collaboration_service.py:80: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:81: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:82: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:83: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:88: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:94: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:95: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:143: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\collaboration_service.py:145: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\collaboration_service.py:146: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\collaboration_service.py:152: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:15: error: Expression type contains \"Any\" (has type \"type[BundleUploadResult]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:16: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:21: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:24: error: Expression type contains \"Any\" (has type \"type[BundleDownloadResult]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:25: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:32: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:40: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:57: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:67: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:74: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:81: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:88: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:93: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:94: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:96: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:98: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:99: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:100: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:102: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:102: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:103: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:105: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:116: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:117: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:119: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:119: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:120: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:120: error: Expression type contains \"Any\" (has type \"Any | list[Never]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:120: error: Need type annotation for \"removed_raw\"  [var-annotated]\ninfrastructure\\collaboration\\hub_client.py:121: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:121: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:122: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:124: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:126: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:126: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:127: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:129: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:130: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:134: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:135: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:135: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:136: error: Expression type contains \"Any\" (has type \"type[CollaborationHubClient]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:136: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:137: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:137: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:138: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:139: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:140: error: Expression type contains \"Any\" (has type \"type[CollaborationHubClient]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:144: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:144: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:146: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:146: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:147: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:147: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:148: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:152: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:153: error: Expression type contains \"Any\" (has type \"type[CollaborationHubClient]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:153: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:154: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:154: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:155: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:155: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:161: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:166: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:167: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:169: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:181: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression type contains \"Any\" (has type \"tuple[Any, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression type contains \"Any\" (has type \"Mapping[Any, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression type contains \"Any\" (has type \"ItemsView[Any, Any]\")  [misc]\ninfrastructure\\automation\\webhook_client.py:44: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\automation\\webhook_client.py:49: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\automation\\webhook_client.py:49: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\automation\\webhook_client.py:50: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\automation\\webhook_client.py:53: error: Expression type contains \"Any\" (has type \"tuple[str, dict[str, Any]]\")  [misc]\ninfrastructure\\automation\\webhook_client.py:53: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\automation\\webhook_client.py:58: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:41: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\services\\automation_service.py:48: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\services\\automation_service.py:52: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\automation_service.py:53: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:54: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\automation_service.py:58: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\ncore\\services\\automation_service.py:58: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\automation_service.py:59: error: Expression type contains \"Any\" (has type \"tuple[str, dict[str, Any]]\")  [misc]\ncore\\services\\automation_service.py:59: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:61: error: Expression type contains \"Any\" (has type \"tuple[str, Mapping[str, Any] | None]\")  [misc]\ncore\\services\\automation_service.py:61: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\automation_service.py:65: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:67: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:75: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:83: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\automation_service.py:101: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:28: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:37: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:43: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:51: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:56: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:59: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:63: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:68: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:75: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:80: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:85: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:88: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:92: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:100: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:139: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:139: error: Expression has type \"Any\"  [misc]\ninterface\\api\\server.py:140: error: Expression has type \"Any\"  [misc]\ninterface\\api\\server.py:142: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:142: error: Expression type contains \"Any\" (has type \"Callable[[], Coroutine[Any, Any, dict[str, Any]]]\")  [misc]\ninterface\\api\\server.py:143: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:143: error: Type of decorated function contains type \"Any\" (\"Callable[[], Coroutine[Any, Any, dict[str, Any]]]\")  [misc]\ninterface\\api\\server.py:146: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:146: error: Expression type contains \"Any\" (has type \"type[ScanResponse]\")  [misc]\ninterface\\api\\server.py:153: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ninterface\\api\\server.py:160: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:167: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\ninterface\\api\\server.py:168: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:181: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:186: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:193: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:204: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:206: error: Expression type contains \"Any\" (has type \"type[BundleUploadResponse]\")  [misc]\ninterface\\api\\server.py:219: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ninterface\\api\\server.py:223: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:224: error: Expression type contains \"Any\" (has type \"type[BundleDownloadResponse]\")  [misc]\ninterface\\api\\server.py:234: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:236: error: Expression type contains \"Any\" (has type \"type[BundleDownloadResponse]\")  [misc]\ninterface\\api\\server.py:253: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:260: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:261: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninterface\\api\\server.py:262: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninterface\\api\\server.py:263: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:263: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:265: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninterface\\api\\server.py:266: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninterface\\api\\server.py:267: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:267: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:269: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:270: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:271: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nFound 497 errors in 23 files (checked 74 source files)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:6:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.review\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_briefing_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:15:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_guidance_service\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.automation_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:15:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:20:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.automation\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:23:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.telemetry\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.card_action_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:16:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:17:6 - error: Import \"x_legatus_acta_schedae_x.x_cls_legatus_acta_schedae_x\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.review\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_briefing_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:15:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:19:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_guidance_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:22:6 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:101:10 - error: Import \"x_legatus_acta_schedae_x\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:105:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.services.collaboration_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:17:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.collaboration.hub_client\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:21:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:25:6 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:250:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:330:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:403:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:467:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:11:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.collaboration.hub_client\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:15:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.collaboration.store\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.services.collaboration_service\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.services.plugin_bus\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:15:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.config\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:16:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.telemetry\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:15:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:16:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:17:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:18:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:19:6 - error: Import \"x_legatus_acta_schedae_x.core.services.plugin_bus\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:20:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.config\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:21:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.telemetry\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:6:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.review\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.review_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_guidance_service\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.review\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.review_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.scheduler\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.services.scheduler_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:17:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:18:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:19:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.telemetry\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.services.search_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.search\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:5:6 - error: Import \"x_legatus_acta_schedae_x.interface.tui.controller\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:664:40 - error: Argument of type \"set[Any | Unknown | _T@set]\" cannot be assigned to parameter \"iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n  \u00c2\u00a0\u00c2\u00a0\"set[Any | Unknown | _T@set]\" is not assignable to \"Iterable[SupportsRichComparisonT@sorted]\"\n  \u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0Type parameter \"_T_co@Iterable\" is covariant, but \"Any | Unknown | _T@set\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n  \u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0Type \"Any | Unknown | _T@set\" is not assignable to type \"SupportsRichComparison\"\n  \u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0Type \"Any | Unknown | _T@set\" is not assignable to type \"SupportsRichComparison\"\n  \u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0Type \"_T@set\" is not assignable to type \"SupportsRichComparison\" (reportArgumentType)\n97 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_legatus_tactica_impetus_x": {
        "files": [
            "printer/EWS_V3.70.18.0.exe",
            "printer/SamsungUniversalPrintDriver3_V3.00.16.0101.01.exe",
            "printer/Screenshot 2025-09-14 153042.png",
            "printer/SetIP_V1.05.08.3.14.exe",
            "printer/WIN_EPM_V2.00.01.36.exe",
            "printer/links.txt",
            "x_legatus_tactica_impetus_x.md",
            "x_sort_x/a_code/a_downloads/CH9102_WIN.EXE",
            "x_sort_x/a_code/a_downloads/ESP32_GENERIC-20250415-v1.25.0.bin",
            "x_sort_x/a_code/a_downloads/Git-2.51.0-64-bit.exe",
            "x_sort_x/a_code/a_downloads/firmware.bin",
            "x_sort_x/a_code/a_downloads/python-3.13.5-amd64.exe",
            "x_sort_x/a_code/a_downloads/thonny-4.1.7.exe",
            "x_sort_x/a_code/a_downloads/wkhtmltox-0.12.6-1.msvc2015-win64.exe",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 002412.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 002851.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 005822.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 005920.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 012452.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 013149.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 133349.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 135140.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 143130.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 143249.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 143744.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 144002.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 144659.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 194823.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 195018.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 195143.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 195304.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201008.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201121.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201240.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201338.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201435.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201521.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201610.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201653.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201752.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201841.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201923.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-28 113249.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-28 113409.png",
            "x_sort_x/b_docs/developer diary.md"
        ],
        "files_index": [
            "printer/EWS_V3.70.18.0.exe",
            "printer/SamsungUniversalPrintDriver3_V3.00.16.0101.01.exe",
            "printer/Screenshot 2025-09-14 153042.png",
            "printer/SetIP_V1.05.08.3.14.exe",
            "printer/WIN_EPM_V2.00.01.36.exe",
            "printer/links.txt",
            "x_legatus_tactica_impetus_x.md",
            "x_sort_x/a_code/a_downloads/CH9102_WIN.EXE",
            "x_sort_x/a_code/a_downloads/ESP32_GENERIC-20250415-v1.25.0.bin",
            "x_sort_x/a_code/a_downloads/Git-2.51.0-64-bit.exe",
            "x_sort_x/a_code/a_downloads/firmware.bin",
            "x_sort_x/a_code/a_downloads/python-3.13.5-amd64.exe",
            "x_sort_x/a_code/a_downloads/thonny-4.1.7.exe",
            "x_sort_x/a_code/a_downloads/wkhtmltox-0.12.6-1.msvc2015-win64.exe",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 002412.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 002851.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 005822.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 005920.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 012452.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 013149.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 133349.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 135140.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 143130.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 143249.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 143744.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 144002.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-07-13 144659.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 194823.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 195018.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 195143.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 195304.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201008.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201121.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201240.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201338.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201435.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201521.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201610.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201653.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201752.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201841.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-27 201923.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-28 113249.png",
            "x_sort_x/b_docs/a_screenshots/Screenshot 2025-08-28 113409.png",
            "x_sort_x/b_docs/developer diary.md"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 0,
                "stderr": "skipped - no Python source (.py/.pyi) found",
                "stdout": ""
            },
            "mypy": {
                "cached": false,
                "exit": 0,
                "stderr": "skipped - no Python source (.py/.pyi) found",
                "stdout": ""
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "skipped - no Python source (.py/.pyi) found",
                "stdout": ""
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "warning: No Python files found under the given path(s)\n",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "warning: No Python files found under the given path(s)\n",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_make_github_clones_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_socket.data.json",
            ".mypy_cache/3.13/_socket.meta.json",
            ".mypy_cache/3.13/_ssl.data.json",
            ".mypy_cache/3.13/_ssl.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/http/__init__.data.json",
            ".mypy_cache/3.13/http/__init__.meta.json",
            ".mypy_cache/3.13/http/client.data.json",
            ".mypy_cache/3.13/http/client.meta.json",
            ".mypy_cache/3.13/http/cookiejar.data.json",
            ".mypy_cache/3.13/http/cookiejar.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/nturl2path.data.json",
            ".mypy_cache/3.13/nturl2path.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/socket.data.json",
            ".mypy_cache/3.13/socket.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/ssl.data.json",
            ".mypy_cache/3.13/ssl.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/tempfile.data.json",
            ".mypy_cache/3.13/tempfile.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/urllib/__init__.data.json",
            ".mypy_cache/3.13/urllib/__init__.meta.json",
            ".mypy_cache/3.13/urllib/error.data.json",
            ".mypy_cache/3.13/urllib/error.meta.json",
            ".mypy_cache/3.13/urllib/request.data.json",
            ".mypy_cache/3.13/urllib/request.meta.json",
            ".mypy_cache/3.13/urllib/response.data.json",
            ".mypy_cache/3.13/urllib/response.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/7726096326636789956",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_github_clones_x.py"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_socket.data.json",
            ".mypy_cache/3.13/_socket.meta.json",
            ".mypy_cache/3.13/_ssl.data.json",
            ".mypy_cache/3.13/_ssl.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/http/__init__.data.json",
            ".mypy_cache/3.13/http/__init__.meta.json",
            ".mypy_cache/3.13/http/client.data.json",
            ".mypy_cache/3.13/http/client.meta.json",
            ".mypy_cache/3.13/http/cookiejar.data.json",
            ".mypy_cache/3.13/http/cookiejar.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/nturl2path.data.json",
            ".mypy_cache/3.13/nturl2path.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/socket.data.json",
            ".mypy_cache/3.13/socket.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/ssl.data.json",
            ".mypy_cache/3.13/ssl.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/tempfile.data.json",
            ".mypy_cache/3.13/tempfile.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/urllib/__init__.data.json",
            ".mypy_cache/3.13/urllib/__init__.meta.json",
            ".mypy_cache/3.13/urllib/error.data.json",
            ".mypy_cache/3.13/urllib/error.meta.json",
            ".mypy_cache/3.13/urllib/request.data.json",
            ".mypy_cache/3.13/urllib/request.meta.json",
            ".mypy_cache/3.13/urllib/response.data.json",
            ".mypy_cache/3.13/urllib/response.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/7726096326636789956",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_github_clones_x.py"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_make_github_clones_x\\x_cls_make_github_clones_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_github_clones_x\\x_cls_make_github_clones_x.py\t2025-10-07 02:51:40.213620+00:00\n+++ C:\\x_runner_x\\x_make_github_clones_x\\x_cls_make_github_clones_x.py\t2025-10-07 07:51:22.255816+00:00\n@@ -186,13 +186,11 @@\n         if self.names is not None:\n             name_set = set(self.names)\n             repos = [\n                 r\n                 for r in repos\n-                if (\n-                    r.get(\"name\") in name_set or r.get(\"full_name\") in name_set\n-                )\n+                if (r.get(\"name\") in name_set or r.get(\"full_name\") in name_set)\n             ]\n         return repos\n \n     def _clone_or_update_repo(self, repo_dir: str, git_url: str) -> bool:\n         # If the repo is missing, clone it\n@@ -216,13 +214,11 @@\n         # - pop stash if we stashed\n         _info(f\"Updating {repo_dir}\")\n         stashed = False  # ensure defined for finally block\n         try:\n             # Fetch remote refs first\n-            self.run_cmd(\n-                [self.GIT_BIN, \"-C\", repo_dir, \"fetch\", \"--all\", \"--prune\"]\n-            )\n+            self.run_cmd([self.GIT_BIN, \"-C\", repo_dir, \"fetch\", \"--all\", \"--prune\"])\n \n             status = self.run_cmd(\n                 [self.GIT_BIN, \"-C\", repo_dir, \"status\", \"--porcelain\"],\n                 check=False,\n             )\n@@ -272,13 +268,11 @@\n             _error(\"pull failed:\", pull.stderr or pull.stdout)\n             return False\n         finally:\n             try:\n                 if stashed:\n-                    pop = self.run_cmd(\n-                        [self.GIT_BIN, \"-C\", repo_dir, \"stash\", \"pop\"]\n-                    )\n+                    pop = self.run_cmd([self.GIT_BIN, \"-C\", repo_dir, \"stash\", \"pop\"])\n                     if pop.returncode != 0:\n                         _error(\"stash pop failed:\", pop.stderr or pop.stdout)\n             except Exception as e:\n                 _error(\"failed to pop stash:\", e)\n \n@@ -319,13 +313,11 @@\n         if not os.path.exists(repo_dir):\n             return self._clone_or_update_repo(repo_dir, git_url)\n \n         try:\n             # Fetch first\n-            self.run_cmd(\n-                [self.GIT_BIN, \"-C\", repo_dir, \"fetch\", \"--all\", \"--prune\"]\n-            )\n+            self.run_cmd([self.GIT_BIN, \"-C\", repo_dir, \"fetch\", \"--all\", \"--prune\"])\n \n             status = self.run_cmd(\n                 [self.GIT_BIN, \"-C\", repo_dir, \"status\", \"--porcelain\"],\n                 check=False,\n             )\n@@ -393,13 +385,11 @@\n                         reset.stderr or reset.stdout,\n                     )\n \n             # Restore stashed changes if any\n             if stashed:\n-                pop = self.run_cmd(\n-                    [self.GIT_BIN, \"-C\", repo_dir, \"stash\", \"pop\"]\n-                )\n+                pop = self.run_cmd([self.GIT_BIN, \"-C\", repo_dir, \"stash\", \"pop\"])\n                 if pop.returncode != 0:\n                     _error(\"stash pop failed:\", pop.stderr or pop.stdout)\n \n             return ok\n         except Exception as e:\n@@ -470,13 +460,11 @@\n             try:\n                 shutil.move(tmp_dir, repo_dir)\n             except Exception:\n                 # try to restore from backup\n                 try:\n-                    if os.path.exists(bak_dir) and not os.path.exists(\n-                        repo_dir\n-                    ):\n+                    if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n                         shutil.move(bak_dir, repo_dir)\n                 except Exception:\n                     pass\n                 try:\n                     if os.path.exists(tmp_dir):\n@@ -508,21 +496,15 @@\n                 pass\n             return False\n \n     def _repo_clone_url(self, repo: dict[str, Any]) -> str:\n         clone_url = repo.get(\"clone_url\") or repo.get(\"ssh_url\") or \"\"\n-        if (\n-            self.token\n-            and self.allow_token_clone\n-            and clone_url.startswith(\"https://\")\n-        ):\n+        if self.token and self.allow_token_clone and clone_url.startswith(\"https://\"):\n             return clone_url.replace(\"https://\", f\"https://{self.token}@\")\n         return clone_url\n \n-    def sync(\n-        self, username: str | None = None, dest: str | None = None\n-    ) -> int:\n+    def sync(self, username: str | None = None, dest: str | None = None) -> int:\n         username = username or self.username\n         dest = dest or self.target_dir or self.DEFAULT_TARGET_DIR\n         if not dest:\n             dest = _repo_parent_root()\n         os.makedirs(dest, exist_ok=True)\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_github_clones_x.py:21: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:23: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:23: error: Expression type contains \"Any\" (has type \"tuple[Any, ...]\")  [misc]\nx_cls_make_github_clones_x.py:26: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:26: error: Expression type contains \"Any\" (has type \"tuple[Any, ...]\")  [misc]\nx_cls_make_github_clones_x.py:31: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:33: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:33: error: Expression type contains \"Any\" (has type \"tuple[Any, ...]\")  [misc]\nx_cls_make_github_clones_x.py:36: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:36: error: Expression type contains \"Any\" (has type \"tuple[Any, ...]\")  [misc]\nx_cls_make_github_clones_x.py:53: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:54: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:63: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:69: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:69: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:71: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:71: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:89: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:122: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:128: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:129: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:129: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:130: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:131: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:132: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:132: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:132: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:133: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:136: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:136: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:136: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:137: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:139: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:152: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:160: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:163: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:165: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:165: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:166: error: Expression type contains \"Any\" (has type \"Literal[False] | Any | None\")  [misc]\nx_cls_make_github_clones_x.py:166: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:166: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_clones_x.py:168: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:168: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_clones_x.py:169: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_clones_x.py:171: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:171: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:172: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:185: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:185: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:185: error: Expression type contains \"Any\" (has type \"dict_values[str, dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:188: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:189: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:190: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:192: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:192: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_clones_x.py:192: error: Unsupported operand types for in (\"Any | None\" and \"set[str]\")  [operator]\nx_cls_make_github_clones_x.py:195: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:511: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_clones_x.py:512: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:512: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_clones_x.py:512: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_github_clones_x.py:514: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_github_clones_x.py:514: error: Expression type contains \"Any\" (has type \"Literal[''] | Any | bool | None\")  [misc]\nx_cls_make_github_clones_x.py:516: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_github_clones_x.py:516: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_github_clones_x.py:518: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_github_clones_x.py:519: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_github_clones_x.py:530: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:537: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:537: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:537: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_clones_x.py:537: error: Unsupported operand types for in (\"Any | None\" and \"set[str]\")  [operator]\nx_cls_make_github_clones_x.py:540: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:540: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nx_cls_make_github_clones_x.py:541: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:541: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_clones_x.py:542: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_clones_x.py:544: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_clones_x.py:545: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_clones_x.py:577: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nFound 80 errors in 1 file (checked 1 source file)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "0 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_make_github_visitor_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_blake2.data.json",
            ".mypy_cache/3.13/_blake2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_hashlib.data.json",
            ".mypy_cache/3.13/_hashlib.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/datetime.data.json",
            ".mypy_cache/3.13/datetime.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/hashlib.data.json",
            ".mypy_cache/3.13/hashlib.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/test_github_visitor.data.json",
            ".mypy_cache/3.13/test_github_visitor.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/13845779216998491589",
            ".ruff_cache/0.13.3/13900341102435382230",
            ".ruff_cache/0.13.3/3792206235907386223",
            ".ruff_cache/0.13.3/4094799139838868345",
            ".ruff_cache/0.13.3/6249547576486142198",
            ".ruff_cache/0.13.3/8859108240743411063",
            ".ruff_cache/CACHEDIR.TAG",
            ".tool_cache/x_0_make_all_x_pyright_62b3b9c040815418.json",
            ".tool_cache/x_0_make_all_x_ruff_check_62b3b9c040815418.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_31172601cd856498.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_608ed2fead24e8aa.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_62b3b9c040815418.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_cd4e44915de232e0.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_d9f05d6d1c615c4a.json",
            ".tool_cache/x_legatus_acta_schedae_x_ruff_check_18c9595ba63c1a64.json",
            ".tool_cache/x_legatus_acta_schedae_x_ruff_fix_18c9595ba63c1a64.json",
            ".tool_cache/x_legatus_tactica_impetus_x_ruff_check_a5d6cd811adba81f.json",
            ".tool_cache/x_legatus_tactica_impetus_x_ruff_fix_a5d6cd811adba81f.json",
            ".tool_cache/x_make_github_clones_x_pyright_b6c34f1071a3577b.json",
            ".tool_cache/x_make_github_clones_x_ruff_check_b6c34f1071a3577b.json",
            ".tool_cache/x_make_github_clones_x_ruff_fix_b6c34f1071a3577b.json",
            ".tool_cache/x_make_graphviz_x_pyright_13d24fbb438ad07d.json",
            ".tool_cache/x_make_graphviz_x_ruff_check_13d24fbb438ad07d.json",
            ".tool_cache/x_make_graphviz_x_ruff_fix_13d24fbb438ad07d.json",
            ".tool_cache/x_make_markdown_x_pyright_ade728b8c2fbe87a.json",
            ".tool_cache/x_make_markdown_x_ruff_check_ade728b8c2fbe87a.json",
            ".tool_cache/x_make_markdown_x_ruff_fix_ade728b8c2fbe87a.json",
            ".tool_cache/x_make_mermaid_x_pyright_2eb7a08910504454.json",
            ".tool_cache/x_make_mermaid_x_ruff_check_2eb7a08910504454.json",
            ".tool_cache/x_make_mermaid_x_ruff_fix_2eb7a08910504454.json",
            ".tool_cache/x_make_persistent_env_var_x_ruff_check_0685f3f86835de05.json",
            ".tool_cache/x_make_persistent_env_var_x_ruff_fix_0685f3f86835de05.json",
            ".tool_cache/x_make_pip_updates_x_pyright_aef351744b8555e5.json",
            ".tool_cache/x_make_pip_updates_x_ruff_check_aef351744b8555e5.json",
            ".tool_cache/x_make_pip_updates_x_ruff_fix_aef351744b8555e5.json",
            ".tool_cache/x_make_py_mod_sideload_x_pyright_111777db7e4d6961.json",
            ".tool_cache/x_make_py_mod_sideload_x_ruff_check_111777db7e4d6961.json",
            ".tool_cache/x_make_py_mod_sideload_x_ruff_fix_111777db7e4d6961.json",
            ".tool_cache/x_make_pypi_x_pyright_19fcb2d718f26db6.json",
            ".tool_cache/x_make_pypi_x_ruff_check_19fcb2d718f26db6.json",
            ".tool_cache/x_make_pypi_x_ruff_fix_19fcb2d718f26db6.json",
            ".tool_cache/x_make_yahw_x_black_c52509d2cfd6e4f9.json",
            ".tool_cache/x_make_yahw_x_mypy_c52509d2cfd6e4f9.json",
            ".tool_cache/x_make_yahw_x_pyright_c52509d2cfd6e4f9.json",
            ".tool_cache/x_make_yahw_x_ruff_check_c52509d2cfd6e4f9.json",
            ".tool_cache/x_make_yahw_x_ruff_fix_c52509d2cfd6e4f9.json",
            "README.md",
            "pyproject.toml",
            "tests/test_github_visitor.py",
            "tmp.json",
            "x_cls_make_github_visitor_x.py",
            "x_index_a_a_priori_x.json",
            "x_index_b_a_posteriori_x.json"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_blake2.data.json",
            ".mypy_cache/3.13/_blake2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_hashlib.data.json",
            ".mypy_cache/3.13/_hashlib.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/datetime.data.json",
            ".mypy_cache/3.13/datetime.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/hashlib.data.json",
            ".mypy_cache/3.13/hashlib.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/test_github_visitor.data.json",
            ".mypy_cache/3.13/test_github_visitor.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/13845779216998491589",
            ".ruff_cache/0.13.3/13900341102435382230",
            ".ruff_cache/0.13.3/3792206235907386223",
            ".ruff_cache/0.13.3/4094799139838868345",
            ".ruff_cache/0.13.3/6249547576486142198",
            ".ruff_cache/0.13.3/8859108240743411063",
            ".ruff_cache/CACHEDIR.TAG",
            ".tool_cache/x_0_make_all_x_pyright_62b3b9c040815418.json",
            ".tool_cache/x_0_make_all_x_ruff_check_62b3b9c040815418.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_31172601cd856498.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_608ed2fead24e8aa.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_62b3b9c040815418.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_cd4e44915de232e0.json",
            ".tool_cache/x_0_make_all_x_ruff_fix_d9f05d6d1c615c4a.json",
            ".tool_cache/x_legatus_acta_schedae_x_ruff_check_18c9595ba63c1a64.json",
            ".tool_cache/x_legatus_acta_schedae_x_ruff_fix_18c9595ba63c1a64.json",
            ".tool_cache/x_legatus_tactica_impetus_x_ruff_check_a5d6cd811adba81f.json",
            ".tool_cache/x_legatus_tactica_impetus_x_ruff_fix_a5d6cd811adba81f.json",
            ".tool_cache/x_make_github_clones_x_pyright_b6c34f1071a3577b.json",
            ".tool_cache/x_make_github_clones_x_ruff_check_b6c34f1071a3577b.json",
            ".tool_cache/x_make_github_clones_x_ruff_fix_b6c34f1071a3577b.json",
            "README.md",
            "pyproject.toml",
            "tests/test_github_visitor.py",
            "tmp.json",
            "x_cls_make_github_visitor_x.py",
            "x_index_a_a_priori_x.json",
            "x_index_b_a_posteriori_x.json"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_make_github_visitor_x\\x_cls_make_github_visitor_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted, 1 file would be left unchanged.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_github_visitor_x\\x_cls_make_github_visitor_x.py\t2025-10-07 07:50:16.410634+00:00\n+++ C:\\x_runner_x\\x_make_github_visitor_x\\x_cls_make_github_visitor_x.py\t2025-10-07 07:51:27.464622+00:00\n@@ -74,13 +74,11 @@\n \n         # The workspace root must not itself be a git repository (we operate\n         # on immediate child clones).\n \n         if (self.root / \".git\").exists():\n-            raise AssertionError(\n-                f\"root path must not be a git repository: {self.root}\"\n-            )\n+            raise AssertionError(f\"root path must not be a git repository: {self.root}\")\n \n         self.output_filename = output_filename\n         self._tool_reports: dict[str, Any] = {}\n         self._ctx = ctx\n         self.enable_cache = enable_cache\n@@ -215,11 +213,13 @@\n \n     def _prune_cache(self, keep: int = 500) -> None:\n         if not self.enable_cache or not self.cache_dir.exists():\n             return\n         try:\n-            cache_files = sorted(self.cache_dir.glob(\"*.json\"), key=lambda p: p.stat().st_mtime)\n+            cache_files = sorted(\n+                self.cache_dir.glob(\"*.json\"), key=lambda p: p.stat().st_mtime\n+            )\n         except Exception:\n             return\n         overflow = len(cache_files) - keep\n         if overflow <= 0:\n             return\n@@ -235,13 +235,11 @@\n         Returns the list of repository names (relative paths) that were indexed.\n         \"\"\"\n         children = self._child_dirs()\n         if not children:\n             try:\n-                entries = sorted(\n-                    p.name for p in self.root.iterdir() if p.is_dir()\n-                )\n+                entries = sorted(p.name for p in self.root.iterdir() if p.is_dir())\n             except Exception:\n                 entries = []\n             preview = \", \".join(entries[:10])\n             suffix = \"\" if len(entries) <= 10 else \" \u00e2\u20ac\u00a6\"\n             raise AssertionError(\n@@ -494,13 +492,11 @@\n         # re-read and normalize apriori\n         try:\n             with p1.open(\"r\", encoding=\"utf-8\") as fh:\n                 raw_apriori = json.load(fh)\n         except Exception as exc:\n-            raise AssertionError(\n-                f\"failed to read a-priori index: {exc}\"\n-            ) from exc\n+            raise AssertionError(f\"failed to read a-priori index: {exc}\") from exc\n \n         if not isinstance(raw_apriori, dict):\n             raise AssertionError(\n                 f\"a-priori index must be a JSON object mapping repo->files: {p1}\"\n             )\n@@ -517,13 +513,11 @@\n                 apriori[key_str] = normalized\n             else:\n                 apriori[key_str] = []\n \n         # ensure the apriori keys match visible child dirs (use _child_dirs to ignore caches)\n-        current_children = [\n-            str(p.relative_to(self.root)) for p in self._child_dirs()\n-        ]\n+        current_children = [str(p.relative_to(self.root)) for p in self._child_dirs()]\n         apriori_keys = sorted(apriori.keys())\n         if apriori_keys != sorted(current_children):\n             raise AssertionError(\n                 f\"a-priori index contents do not match immediate children.\\n  expected: {sorted(current_children)}\\n  found: {apriori_keys}\"\n             )\n@@ -543,13 +537,11 @@\n \n         try:\n             with p2.open(\"r\", encoding=\"utf-8\") as fh:\n                 raw_data = json.load(fh)\n         except Exception as exc:\n-            raise AssertionError(\n-                f\"failed to read a-posteriori index: {exc}\"\n-            ) from exc\n+            raise AssertionError(f\"failed to read a-posteriori index: {exc}\") from exc\n \n         if not isinstance(raw_data, dict):\n             raise AssertionError(\n                 f\"a-posteriori index must be a JSON object mapping repo->files: {p2}\"\n             )\n@@ -626,11 +618,9 @@\n     summary = inst.generate_summary_report()\n     overall = summary.get(\"overall_stats\", {})\n     hits = int(overall.get(\"cache_hits\", 0))\n     total = int(overall.get(\"total_tools_run\", 0))\n     ratio = (hits / total * 100.0) if total else 0.0\n-    _info(\n-        f\"wrote a-priori, a-posteriori, and summary files to: {inst.package_root}\"\n-    )\n+    _info(f\"wrote a-priori, a-posteriori, and summary files to: {inst.package_root}\")\n     _info(\n         f\"processed {summary.get('total_repos', 0)} repositories | cache hits: {hits}/{total} ({ratio:.1f}%)\"\n     )\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_github_visitor_x.py:84: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:121: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:124: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:156: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:169: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:169: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:178: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:178: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:184: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:186: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:197: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:220: error: Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")  [misc]\nx_cls_make_github_visitor_x.py:220: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:289: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:294: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:297: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\nx_cls_make_github_visitor_x.py:297: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:375: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:375: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:383: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_github_visitor_x.py:384: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_github_visitor_x.py:385: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:386: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:386: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:398: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:404: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:404: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:412: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:421: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:421: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_github_visitor_x.py:423: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:436: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:438: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:440: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:441: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\nx_cls_make_github_visitor_x.py:441: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:447: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\nx_cls_make_github_visitor_x.py:447: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:449: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:449: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:450: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:450: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:450: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:450: error: Expression type contains \"Any\" (has type \"dict_items[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:451: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:452: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:452: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:453: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\nx_cls_make_github_visitor_x.py:453: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:457: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:458: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:459: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:460: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:461: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:461: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:465: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:467: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:467: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:468: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:470: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:472: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:472: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:473: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:474: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:474: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:475: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:497: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:503: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:508: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:508: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:510: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:510: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:510: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:510: error: Expression type contains \"Any\" (has type \"dict_items[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:512: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:514: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:514: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:514: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_github_visitor_x.py:514: error: Redundant cast to \"list[Any]\"  [redundant-cast]\nx_cls_make_github_visitor_x.py:515: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:546: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:552: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:557: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:557: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:558: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_github_visitor_x.py:558: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:558: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:558: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:558: error: Expression type contains \"Any\" (has type \"dict_items[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:561: error: Expression type contains \"Any\" (has type \"Any | tuple[Never, Never]\")  [misc]\nx_cls_make_github_visitor_x.py:561: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:561: error: Expression type contains \"Any\" (has type \"Any | dict[Never, Never]\")  [misc]\nx_cls_make_github_visitor_x.py:561: error: Expression type contains \"Any\" (has type \"Any | dict_items[Never, Never]\")  [misc]\nx_cls_make_github_visitor_x.py:562: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:562: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:563: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:563: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:563: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:564: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:564: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:564: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:564: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_github_visitor_x.py:565: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:565: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:566: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:566: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:569: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:569: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:569: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:570: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:570: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:571: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:571: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:574: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:576: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:578: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:626: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:627: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:627: error: Expression type contains \"Any\" (has type \"Any | dict[Never, Never]\")  [misc]\nx_cls_make_github_visitor_x.py:627: error: Need type annotation for \"overall\"  [var-annotated]\nx_cls_make_github_visitor_x.py:628: error: Expression type contains \"Any\" (has type \"Any | dict[Any, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:628: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:629: error: Expression type contains \"Any\" (has type \"Any | dict[Any, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:629: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:635: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:635: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nFound 126 errors in 1 file (checked 2 source files)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "c:\\x_runner_x\\x_make_github_visitor_x\\x_cls_make_github_visitor_x.py\n  c:\\x_runner_x\\x_make_github_visitor_x\\x_cls_make_github_visitor_x.py:248:17 - error: Implicit string concatenation not allowed (reportImplicitStringConcatenation)\n1 error, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 1,
                "stderr": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n",
                "stdout": "E501 Line too long (96 > 88)\n   --> x_cls_make_github_visitor_x.py:220:89\n    |\n218 |             return\n219 |         try:\n220 |             cache_files = sorted(self.cache_dir.glob(\"*.json\"), key=lambda p: p.stat().st_mtime)\n    |                                                                                         ^^^^^^^^\n221 |         except Exception:\n222 |             return\n    |\n\nE501 Line too long (95 > 88)\n   --> x_cls_make_github_visitor_x.py:271:89\n    |\n270 |     def body(self) -> None:\n271 |         \"\"\"Run toolchain (ruff -> black -> ruff -> mypy -> pyright) against each child repo.\"\"\"\n    |                                                                                         ^^^^^^^\n272 |\n273 |         python = sys.executable\n    |\n\nE501 Line too long (107 > 88)\n   --> x_cls_make_github_visitor_x.py:409:89\n    |\n407 |                     any_failures = True\n408 |                     _info(\n409 |                         f\"{tool_name}: failure (exit {proc.returncode}) in {rel}; see cached stdout/stderr\"\n    |                                                                                         ^^^^^^^^^^^^^^^^^^^\n410 |                     )\n411 |                     continue\n    |\n\nE501 Line too long (91 > 88)\n   --> x_cls_make_github_visitor_x.py:491:89\n    |\n489 |         ), f\"step1 failed: {p1} missing or empty\"\n490 |         _info(\n491 |             f\"apriori discovery: found {len(apriori_repos)} repositories under {self.root}\"\n    |                                                                                         ^^^\n492 |         )\n    |\n\nE501 Line too long (93 > 88)\n   --> x_cls_make_github_visitor_x.py:521:89\n    |\n519 |                 apriori[key_str] = []\n520 |\n521 |         # ensure the apriori keys match visible child dirs (use _child_dirs to ignore caches)\n    |                                                                                         ^^^^^\n522 |         current_children = [\n523 |             str(p.relative_to(self.root)) for p in self._child_dirs()\n    |\n\nE501 Line too long (140 > 88)\n   --> x_cls_make_github_visitor_x.py:528:89\n    |\n526 | \u00e2\u20ac\u00a6en):\n527 | \u00e2\u20ac\u00a6\n528 | \u00e2\u20ac\u00a6 match immediate children.\\n  expected: {sorted(current_children)}\\n  found: {apriori_keys}\"\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n529 | \u00e2\u20ac\u00a6\n    |\n\nE501 Line too long (98 > 88)\n   --> x_cls_make_github_visitor_x.py:541:89\n    |\n539 |         ), f\"step3 failed: {p2} missing or empty\"\n540 |         _info(\n541 |             f\"a-posteriori discovery: found {len(posterior_repos)} repositories under {self.root}\"\n    |                                                                                         ^^^^^^^^^^\n542 |         )\n    |\n\nE501 Line too long (109 > 88)\n   --> x_cls_make_github_visitor_x.py:635:89\n    |\n633 |     )\n634 |     _info(\n635 |         f\"processed {summary.get('total_repos', 0)} repositories | cache hits: {hits}/{total} ({ratio:.1f}%)\"\n    |                                                                                         ^^^^^^^^^^^^^^^^^^^^^\n636 |     )\n    |\n\nFound 8 errors.\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 1,
                "stderr": "warning: The top-level linter settings are deprecated in favour of their counterparts in the `lint` section. Please update the following options in `pyproject.toml`:\n  - 'ignore' -> 'lint.ignore'\n  - 'select' -> 'lint.select'\n",
                "stdout": "E501 Line too long (96 > 88)\n   --> x_cls_make_github_visitor_x.py:220:89\n    |\n218 |             return\n219 |         try:\n220 |             cache_files = sorted(self.cache_dir.glob(\"*.json\"), key=lambda p: p.stat().st_mtime)\n    |                                                                                         ^^^^^^^^\n221 |         except Exception:\n222 |             return\n    |\n\nE501 Line too long (95 > 88)\n   --> x_cls_make_github_visitor_x.py:271:89\n    |\n270 |     def body(self) -> None:\n271 |         \"\"\"Run toolchain (ruff -> black -> ruff -> mypy -> pyright) against each child repo.\"\"\"\n    |                                                                                         ^^^^^^^\n272 |\n273 |         python = sys.executable\n    |\n\nE501 Line too long (107 > 88)\n   --> x_cls_make_github_visitor_x.py:409:89\n    |\n407 |                     any_failures = True\n408 |                     _info(\n409 |                         f\"{tool_name}: failure (exit {proc.returncode}) in {rel}; see cached stdout/stderr\"\n    |                                                                                         ^^^^^^^^^^^^^^^^^^^\n410 |                     )\n411 |                     continue\n    |\n\nE501 Line too long (91 > 88)\n   --> x_cls_make_github_visitor_x.py:491:89\n    |\n489 |         ), f\"step1 failed: {p1} missing or empty\"\n490 |         _info(\n491 |             f\"apriori discovery: found {len(apriori_repos)} repositories under {self.root}\"\n    |                                                                                         ^^^\n492 |         )\n    |\n\nE501 Line too long (93 > 88)\n   --> x_cls_make_github_visitor_x.py:521:89\n    |\n519 |                 apriori[key_str] = []\n520 |\n521 |         # ensure the apriori keys match visible child dirs (use _child_dirs to ignore caches)\n    |                                                                                         ^^^^^\n522 |         current_children = [\n523 |             str(p.relative_to(self.root)) for p in self._child_dirs()\n    |\n\nE501 Line too long (140 > 88)\n   --> x_cls_make_github_visitor_x.py:528:89\n    |\n526 | \u00e2\u20ac\u00a6en):\n527 | \u00e2\u20ac\u00a6\n528 | \u00e2\u20ac\u00a6 match immediate children.\\n  expected: {sorted(current_children)}\\n  found: {apriori_keys}\"\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n529 | \u00e2\u20ac\u00a6\n    |\n\nE501 Line too long (98 > 88)\n   --> x_cls_make_github_visitor_x.py:541:89\n    |\n539 |         ), f\"step3 failed: {p2} missing or empty\"\n540 |         _info(\n541 |             f\"a-posteriori discovery: found {len(posterior_repos)} repositories under {self.root}\"\n    |                                                                                         ^^^^^^^^^^\n542 |         )\n    |\n\nE501 Line too long (109 > 88)\n   --> x_cls_make_github_visitor_x.py:635:89\n    |\n633 |     )\n634 |     _info(\n635 |         f\"processed {summary.get('total_repos', 0)} repositories | cache hits: {hits}/{total} ({ratio:.1f}%)\"\n    |                                                                                         ^^^^^^^^^^^^^^^^^^^^^\n636 |     )\n    |\n\nFound 8 errors.\n"
            }
        }
    },
    "x_make_graphviz_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/15710232822096050041",
            ".ruff_cache/CACHEDIR.TAG",
            "README.md",
            "x_cls_make_graphviz_x.py"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/15710232822096050041",
            ".ruff_cache/CACHEDIR.TAG",
            "README.md",
            "x_cls_make_graphviz_x.py"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_make_graphviz_x\\x_cls_make_graphviz_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_graphviz_x\\x_cls_make_graphviz_x.py\t2025-10-07 02:51:41.342925+00:00\n+++ C:\\x_runner_x\\x_make_graphviz_x\\x_cls_make_graphviz_x.py\t2025-10-07 07:51:31.900241+00:00\n@@ -50,13 +50,11 @@\n class _Subgraph:\n     def __init__(\n         self, name: str, cluster: bool, attrs: dict[str, Any] | None = None\n     ) -> None:\n         self.name = (\n-            \"cluster_\" + name\n-            if cluster and not name.startswith(\"cluster_\")\n-            else name\n+            \"cluster_\" + name if cluster and not name.startswith(\"cluster_\") else name\n         )\n         self.attrs = attrs or {}\n         self.nodes: list[str] = []\n         self.edges: list[str] = []\n         self.raw: list[str] = []\n@@ -73,13 +71,11 @@\n \n \n class x_cls_make_graphviz_x:\n     \"\"\"Rich Graphviz builder.\"\"\"\n \n-    def __init__(\n-        self, ctx: object | None = None, directed: bool = True\n-    ) -> None:\n+    def __init__(self, ctx: object | None = None, directed: bool = True) -> None:\n         self._ctx = ctx\n         self._directed = directed\n         self._graph_attrs: dict[str, Any] = {}\n         self._node_defaults: dict[str, Any] = {}\n         self._edge_defaults: dict[str, Any] = {}\n@@ -225,13 +221,11 @@\n     def html_label(html: str) -> str:\n         return f\"<<{html}>>\"\n \n     # Subgraphs / clusters\n \n-    def subgraph(\n-        self, name: str, cluster: bool = False, **attrs: Any\n-    ) -> _Subgraph:\n+    def subgraph(self, name: str, cluster: bool = False, **attrs: Any) -> _Subgraph:\n         sg = _Subgraph(name=name, cluster=cluster, attrs=attrs or None)\n         self._subgraphs.append(sg)\n         return sg\n \n     def sub_node(\n@@ -293,13 +287,11 @@\n                 try:\n                     g.engine = self._engine\n                 except Exception:\n                     # fallback to layout attribute if engine not supported by graphviz.Source\n                     pass\n-            out_path = g.render(\n-                filename=output_file, format=format, cleanup=True\n-            )\n+            out_path = g.render(filename=output_file, format=format, cleanup=True)\n             return str(out_path)\n         except Exception:\n             dot_path = f\"{output_file}.dot\"\n             with open(dot_path, \"w\", encoding=\"utf-8\") as f:\n                 f.write(dot)\n@@ -332,26 +324,20 @@\n             if self._engine:\n                 try:\n                     src.engine = self._engine\n                 except Exception:\n                     pass\n-            out_path = src.render(\n-                filename=output_basename, format=\"svg\", cleanup=True\n-            )\n+            out_path = src.render(filename=output_basename, format=\"svg\", cleanup=True)\n             return str(out_path)\n         except Exception:\n             # on failure, still persist DOT for manual conversion\n             self.save_dot(f\"{output_basename}.dot\")\n             return None\n \n \n def main() -> str:\n-    g = (\n-        x_cls_make_graphviz_x(directed=True)\n-        .rankdir(\"LR\")\n-        .node_defaults(shape=\"box\")\n-    )\n+    g = x_cls_make_graphviz_x(directed=True).rankdir(\"LR\").node_defaults(shape=\"box\")\n     g.add_node(\"A\", \"Start\")\n     g.add_node(\"B\", \"End\")\n     g.add_edge(\"A\", \"B\", \"to\", color=\"blue\")\n     sg = g.subgraph(\"cluster_demo\", cluster=True, label=\"Demo\")\n     g.sub_node(sg, \"C\", \"In cluster\")\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_graphviz_x.py:37: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:38: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_graphviz_x.py:41: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:41: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:41: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:41: error: Expression type contains \"Any\" (has type \"dict_items[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:42: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:44: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:46: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:51: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:59: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_graphviz_x.py:59: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:66: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:67: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:83: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:84: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:85: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:101: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:102: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:105: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:106: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:109: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:110: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:134: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:136: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:138: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:143: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:146: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:150: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:151: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:151: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:152: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:153: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:153: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:155: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:156: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:157: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:160: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:170: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:171: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:171: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:172: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:173: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:173: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:178: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:179: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:180: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:188: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:198: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:199: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:201: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:202: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:204: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:205: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:206: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:230: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:233: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:233: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_graphviz_x.py:237: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:244: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:245: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:246: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:249: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:258: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:259: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:260: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:268: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:269: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:270: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:271: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:272: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:273: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:285: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_graphviz_x.py:290: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:291: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:294: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:298: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:301: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:306: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_graphviz_x.py:321: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:325: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_graphviz_x.py:331: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:334: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:337: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:340: error: Expression has type \"Any\"  [misc]\nFound 85 errors in 1 file (checked 1 source file)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "0 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_make_markdown_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/2670707227449642003",
            ".ruff_cache/CACHEDIR.TAG",
            "dummy/dummy.txt",
            "dummy/mummy/mummy.txt",
            "dummy2.txt",
            "out_docs/alice_in_wonderland.md",
            "out_docs/alice_in_wonderland.pdf",
            "x_cls_make_markdown_x.py",
            "yummy/yummy.txt"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/2670707227449642003",
            ".ruff_cache/CACHEDIR.TAG",
            "dummy/dummy.txt",
            "dummy/mummy/mummy.txt",
            "dummy2.txt",
            "out_docs/alice_in_wonderland.md",
            "out_docs/alice_in_wonderland.pdf",
            "x_cls_make_markdown_x.py",
            "yummy/yummy.txt"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_make_markdown_x\\x_cls_make_markdown_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_markdown_x\\x_cls_make_markdown_x.py\t2025-10-07 02:51:41.962490+00:00\n+++ C:\\x_runner_x\\x_make_markdown_x\\x_cls_make_markdown_x.py\t2025-10-07 07:51:35.967161+00:00\n@@ -52,13 +52,11 @@\n     \"\"\"A simple markdown builder with an optional PDF export step.\"\"\"\n \n     # Environment variable to override wkhtmltopdf path\n     WKHTMLTOPDF_ENV_VAR: str = \"X_WKHTMLTOPDF_PATH\"\n     # Default Windows install path (used if present and env var not set)\n-    DEFAULT_WKHTMLTOPDF_PATH: str = (\n-        r\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\"\n-    )\n+    DEFAULT_WKHTMLTOPDF_PATH: str = r\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\"\n \n     def __init__(\n         self, wkhtmltopdf_path: str | None = None, ctx: object | None = None\n     ) -> None:\n         \"\"\"Accept optional ctx for future orchestrator integration.\n@@ -118,13 +116,11 @@\n         self.elements.append(f\"![{alt_text}]({url})\\n\\n\")\n \n     def add_list(self, items: list[str], ordered: bool = False) -> None:\n         \"\"\"Add a list to the markdown document.\"\"\"\n         if ordered:\n-            self.elements.extend(\n-                [f\"{i + 1}. {item}\" for i, item in enumerate(items)]\n-            )\n+            self.elements.extend([f\"{i + 1}. {item}\" for i, item in enumerate(items)])\n         else:\n             self.elements.extend([f\"- {item}\" for item in items])\n         self.elements.append(\"\\n\")\n \n     def add_toc(self) -> None:\n@@ -141,23 +137,19 @@\n             # Minimal fallback: return plain text wrapped in <pre> to preserve content\n             return f\"<pre>{(text or '').replace('<','&lt;').replace('>','&gt;')}</pre>\"\n \n     def to_pdf(self, html_str: str, out_path: str) -> None:\n         \"\"\"Render HTML to PDF using pdfkit + wkhtmltopdf; fail fast if unavailable.\"\"\"\n-        if not self.wkhtmltopdf_path or not _os.path.isfile(\n-            self.wkhtmltopdf_path\n-        ):\n+        if not self.wkhtmltopdf_path or not _os.path.isfile(self.wkhtmltopdf_path):\n             raise RuntimeError(\n                 f\"wkhtmltopdf not found (set {self.WKHTMLTOPDF_ENV_VAR} or install at default path)\"\n             )\n         try:\n             _pdfkit: Any = importlib.import_module(\"pdfkit\")\n         except Exception as e:\n             raise RuntimeError(\"pdfkit is required for PDF export\") from e\n-        _os.makedirs(\n-            _os.path.dirname(_os.path.abspath(out_path)) or \".\", exist_ok=True\n-        )\n+        _os.makedirs(_os.path.dirname(_os.path.abspath(out_path)) or \".\", exist_ok=True)\n         cfg = _pdfkit.configuration(wkhtmltopdf=self.wkhtmltopdf_path)\n         _pdfkit.from_string(html_str, out_path, configuration=cfg)\n \n     def generate(self, output_file: str = \"example.md\") -> str:\n         \"\"\"Generate markdown and save it to a file; optionally render a PDF.\"\"\"\n@@ -187,13 +179,11 @@\n         verbose = True\n \n     maker = x_cls_make_markdown_x(ctx=_Ctx())\n \n     maker.add_header(\"Alice's Adventures in Wonderland\", 1)\n-    maker.add_paragraph(\n-        \"Public-domain sampler inspired by Lewis Carroll (1865).\"\n-    )\n+    maker.add_paragraph(\"Public-domain sampler inspired by Lewis Carroll (1865).\")\n \n     maker.add_header(\"Down the Rabbit-Hole\", 2)\n     maker.add_paragraph(\n         \"Alice was beginning to get very tired of sitting by her sister on the bank, \"\n         \"and of having nothing to do: once or twice she had peeped into the book her \"\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_markdown_x.py:22: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_markdown_x.py:23: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:75: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:76: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:137: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_markdown_x.py:138: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:153: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_markdown_x.py:159: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:160: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:168: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nFound 10 errors in 1 file (checked 1 source file)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "0 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_make_mermaid_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/12136676168052556075",
            ".ruff_cache/CACHEDIR.TAG",
            "README.md",
            "x_cls_make_mermaid_x.py"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/12136676168052556075",
            ".ruff_cache/CACHEDIR.TAG",
            "README.md",
            "x_cls_make_mermaid_x.py"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_make_mermaid_x\\x_cls_make_mermaid_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_mermaid_x\\x_cls_make_mermaid_x.py\t2025-10-07 02:51:42.525335+00:00\n+++ C:\\x_runner_x\\x_make_mermaid_x\\x_cls_make_mermaid_x.py\t2025-10-07 07:51:40.515239+00:00\n@@ -60,13 +60,11 @@\n @dataclass\n class MermaidDoc:\n     kind: str\n     header: str\n     lines: list[str] = field(default_factory=list)\n-    directives: list[str] = field(\n-        default_factory=list\n-    )  # e.g., %%{init: {...}}%%\n+    directives: list[str] = field(default_factory=list)  # e.g., %%{init: {...}}%%\n     comments: list[str] = field(default_factory=list)\n \n \n class x_cls_make_mermaid_x:\n     \"\"\"Flexible Mermaid builder covering many diagram kinds.\n@@ -75,13 +73,11 @@\n       m = x_cls_make_mermaid_x().flowchart(\"LR\").node(\"A\",\"Start\").edge(\"A\",\"B\",\"go\")\n       m.sequence().participant(\"A\",\"Alice\").message(\"A\",\"B\",\"Hi\")\n       src = m.source()\n     \"\"\"\n \n-    def __init__(\n-        self, direction: str = \"LR\", ctx: object | None = None\n-    ) -> None:\n+    def __init__(self, direction: str = \"LR\", ctx: object | None = None) -> None:\n         self._ctx = ctx\n         self._doc = MermaidDoc(kind=_FLOW, header=f\"{_FLOW} {direction}\")\n \n     # Core controls\n \n@@ -201,13 +197,11 @@\n             \"circle\": (\"((\", \"))\"),\n             \"asym\": (\">\", \"]\"),\n         }\n         if shape and shape in shape_map:\n             left_delim, right_delim = shape_map[shape]\n-            self._doc.lines.append(\n-                f\"{node_id}{left_delim}{_esc(label)}{right_delim}\"\n-            )\n+            self._doc.lines.append(f\"{node_id}{left_delim}{_esc(label)}{right_delim}\")\n         else:\n             self._doc.lines.append(f'{node_id}[\"{_esc(label)}\"]')\n         return self\n \n     def edge(\n@@ -259,13 +253,11 @@\n                 self._doc.lines.append(f'click {node_id} \"{_esc(url)}\"')\n         return self\n \n     # Sequence API\n \n-    def participant(\n-        self, pid: str, label: str | None = None\n-    ) -> \"x_cls_make_mermaid_x\":\n+    def participant(self, pid: str, label: str | None = None) -> \"x_cls_make_mermaid_x\":\n         if self._doc.kind == _SEQ:\n             if label:\n                 self._doc.lines.append(f'participant {pid} as \"{_esc(label)}\"')\n             else:\n                 self._doc.lines.append(f\"participant {pid}\")\n@@ -281,13 +273,11 @@\n     def note_over(\n         self, who: str | tuple[str, str], text: str\n     ) -> \"x_cls_make_mermaid_x\":\n         if self._doc.kind == _SEQ:\n             if isinstance(who, tuple):\n-                self._doc.lines.append(\n-                    f\"Note over {who[0]},{who[1]}: {_esc(text)}\"\n-                )\n+                self._doc.lines.append(f\"Note over {who[0]},{who[1]}: {_esc(text)}\")\n             else:\n                 self._doc.lines.append(f\"Note over {who}: {_esc(text)}\")\n         return self\n \n     def activate(self, pid: str) -> \"x_cls_make_mermaid_x\":\n@@ -337,13 +327,11 @@\n             self._doc.lines.append(f\"{a} {op} {b}{lab}\")\n         return self\n \n     # State API\n \n-    def state_node(\n-        self, name: str, alias: str | None = None\n-    ) -> \"x_cls_make_mermaid_x\":\n+    def state_node(self, name: str, alias: str | None = None) -> \"x_cls_make_mermaid_x\":\n         if self._doc.kind == _STATE:\n             if alias:\n                 self._doc.lines.append(f'state \"{_esc(name)}\" as {alias}')\n             else:\n                 self._doc.lines.append(f'state \"{_esc(name)}\"')\n@@ -361,13 +349,11 @@\n         return self.state_trans(\"[*]\", to)\n \n     def state_end(self, frm: str) -> \"x_cls_make_mermaid_x\":\n         return self.state_trans(frm, \"[*]\")\n \n-    def state_subgraph(\n-        self, name: str, body: Iterable[str]\n-    ) -> \"x_cls_make_mermaid_x\":\n+    def state_subgraph(self, name: str, body: Iterable[str]) -> \"x_cls_make_mermaid_x\":\n         if self._doc.kind == _STATE:\n             self._doc.lines.append(f\"state {_esc(name)} {{\")\n             for ln in body:\n                 self._doc.lines.append(ln)\n             self._doc.lines.append(\"}\")\n@@ -433,13 +419,11 @@\n     def journey_section(self, title: str) -> \"x_cls_make_mermaid_x\":\n         if self._doc.kind == _JOURNEY:\n             self._doc.lines.append(f\"section {_esc(title)}\")\n         return self\n \n-    def journey_step(\n-        self, actor: str, score: int, text: str\n-    ) -> \"x_cls_make_mermaid_x\":\n+    def journey_step(self, actor: str, score: int, text: str) -> \"x_cls_make_mermaid_x\":\n         if self._doc.kind == _JOURNEY:\n             self._doc.lines.append(f\"{_esc(actor)}: {score}: {_esc(text)}\")\n         return self\n \n     # Pie\n@@ -518,13 +502,11 @@\n     def quadrant(self, idx: int, name: str) -> \"x_cls_make_mermaid_x\":\n         if self._doc.kind == _QUAD:\n             self._doc.lines.append(f'quadrant-{idx} \"{_esc(name)}\"')\n         return self\n \n-    def quad_point(\n-        self, label: str, x: float, y: float\n-    ) -> \"x_cls_make_mermaid_x\":\n+    def quad_point(self, label: str, x: float, y: float) -> \"x_cls_make_mermaid_x\":\n         if self._doc.kind == _QUAD:\n             self._doc.lines.append(f'point \"{_esc(label)}\" : {x}, {y}')\n         return self\n \n     # Beta charts (stubs: let callers write lines)\n@@ -570,13 +552,11 @@\n                 self.save(mmd_path)\n         except Exception:\n             self.save(mmd_path)\n         # Decide svg output\n         svg_path = svg_path or (\n-            mmd_path[:-4] + \"svg\"\n-            if mmd_path.endswith(\".mmd\")\n-            else mmd_path + \".svg\"\n+            mmd_path[:-4] + \"svg\" if mmd_path.endswith(\".mmd\") else mmd_path + \".svg\"\n         )\n         # Resolve CLI\n         cmd = mmdc_cmd or os.environ.get(\"MMDC\", \"mmdc\")\n         exe = shutil.which(cmd)\n         if not exe:\n@@ -587,13 +567,11 @@\n             return None\n         args = [exe, \"-i\", mmd_path, \"-o\", svg_path, \"-b\", \"transparent\"]\n         if extra_args:\n             args.extend(extra_args)\n         try:\n-            res = _subprocess.run(\n-                args, check=False, capture_output=True, text=True\n-            )\n+            res = _subprocess.run(args, check=False, capture_output=True, text=True)\n             if res.stdout:\n                 _info(res.stdout.strip())\n             if res.returncode == 0:\n                 return svg_path\n             if res.stderr:\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_mermaid_x.py:88: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_mermaid_x.py:92: error: Expression type contains \"Any\" (has type \"str | dict[str, Any]\")  [misc]\nx_cls_make_mermaid_x.py:551: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_mermaid_x.py:583: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nFound 4 errors in 1 file (checked 1 source file)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "0 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_make_persistent_env_var_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_tkinter.data.json",
            ".mypy_cache/3.13/_tkinter.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/itertools.data.json",
            ".mypy_cache/3.13/itertools.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/tkinter/__init__.data.json",
            ".mypy_cache/3.13/tkinter/__init__.meta.json",
            ".mypy_cache/3.13/tkinter/constants.data.json",
            ".mypy_cache/3.13/tkinter/constants.meta.json",
            ".mypy_cache/3.13/tkinter/font.data.json",
            ".mypy_cache/3.13/tkinter/font.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/7597743550816888988",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_persistent_env_var_x.py"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_tkinter.data.json",
            ".mypy_cache/3.13/_tkinter.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/itertools.data.json",
            ".mypy_cache/3.13/itertools.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/tkinter/__init__.data.json",
            ".mypy_cache/3.13/tkinter/__init__.meta.json",
            ".mypy_cache/3.13/tkinter/constants.data.json",
            ".mypy_cache/3.13/tkinter/constants.meta.json",
            ".mypy_cache/3.13/tkinter/font.data.json",
            ".mypy_cache/3.13/tkinter/font.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/7597743550816888988",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_persistent_env_var_x.py"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_make_persistent_env_var_x\\x_cls_make_persistent_env_var_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_persistent_env_var_x\\x_cls_make_persistent_env_var_x.py\t2025-10-07 02:51:43.108770+00:00\n+++ C:\\x_runner_x\\x_make_persistent_env_var_x\\x_cls_make_persistent_env_var_x.py\t2025-10-07 07:51:44.972253+00:00\n@@ -266,13 +266,11 @@\n     btn_frame = tk_mod.Frame(frame)\n     btn_frame.grid(row=row, column=0, columnspan=2, pady=(10, 0))\n     tk_mod.Button(btn_frame, text=\"Set\", command=on_set).pack(\n         side=tk_mod.LEFT, padx=(0, 6)\n     )\n-    tk_mod.Button(btn_frame, text=\"Cancel\", command=on_cancel).pack(\n-        side=tk_mod.LEFT\n-    )\n+    tk_mod.Button(btn_frame, text=\"Cancel\", command=on_cancel).pack(side=tk_mod.LEFT)\n \n     return root, entries, show_var, result\n \n \n def _run_gui_loop(\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_persistent_env_var_x.py:113: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_persistent_env_var_x.py:120: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_persistent_env_var_x.py:129: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_persistent_env_var_x.py:137: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_persistent_env_var_x.py:143: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_persistent_env_var_x.py:204: error: Expression type contains \"Any\" (has type \"tuple[Any, dict[str, Any], Any, dict[str, str]]\")  [misc]\nx_cls_make_persistent_env_var_x.py:204: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:204: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:205: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:205: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:218: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_persistent_env_var_x.py:222: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:223: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:224: error: Type of variable becomes \"dict[str, Any]\" due to an unfollowed import  [no-any-unimported]\nx_cls_make_persistent_env_var_x.py:226: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:227: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:229: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:232: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:233: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:233: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:233: error: Expression type contains \"Any\" (has type \"dict_values[str, Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:234: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:238: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:239: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:241: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:242: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:244: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:245: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:245: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:248: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:249: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:251: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:257: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:257: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:257: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:257: error: Expression type contains \"Any\" (has type \"dict_items[str, Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:258: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:259: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:260: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:263: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:266: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:267: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:268: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:269: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:271: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:272: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:275: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:275: error: Expression type contains \"Any\" (has type \"tuple[Any, dict[str, Any], Any, dict[str, str]]\")  [misc]\nx_cls_make_persistent_env_var_x.py:275: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:278: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_persistent_env_var_x.py:283: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:284: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:285: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:286: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:287: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:288: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:289: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:291: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:295: error: Expression has type \"Any\"  [misc]\nFound 59 errors in 1 file (checked 1 source file)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "c:\\x_runner_x\\x_make_persistent_env_var_x\\x_cls_make_persistent_env_var_x.py\n  c:\\x_runner_x\\x_make_persistent_env_var_x\\x_cls_make_persistent_env_var_x.py:224:24 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n1 error, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_make_pip_updates_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/8728992162722463221",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_pip_updates_x.py"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/8728992162722463221",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_pip_updates_x.py"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_make_pip_updates_x\\x_cls_make_pip_updates_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_pip_updates_x\\x_cls_make_pip_updates_x.py\t2025-10-07 02:51:43.727786+00:00\n+++ C:\\x_runner_x\\x_make_pip_updates_x\\x_cls_make_pip_updates_x.py\t2025-10-07 07:51:49.469058+00:00\n@@ -52,13 +52,11 @@\n \n \n class x_cls_make_pip_updates_x:\n     # ...existing code...\n \n-    def batch_install(\n-        self, packages: list[str], use_user: bool = False\n-    ) -> int:\n+    def batch_install(self, packages: list[str], use_user: bool = False) -> int:\n         # Force pip upgrade first\n         _info(\"Upgrading pip itself...\")\n         pip_upgrade_cmd = [\n             sys.executable,\n             \"-m\",\n@@ -118,19 +116,15 @@\n \n         _info(\"\\nSummary:\")\n         for r in results:\n             prev_val = r.get(\"prev\")\n             prev = (\n-                prev_val\n-                if isinstance(prev_val, str) and prev_val\n-                else \"not installed\"\n+                prev_val if isinstance(prev_val, str) and prev_val else \"not installed\"\n             )\n             curr_val = r.get(\"curr\")\n             curr = (\n-                curr_val\n-                if isinstance(curr_val, str) and curr_val\n-                else \"not installed\"\n+                curr_val if isinstance(curr_val, str) and curr_val else \"not installed\"\n             )\n             status = \"OK\" if r[\"code\"] == 0 else f\"FAIL (code {r['code']})\"\n             _info(f\"- {r['name']}: {status} | current: {curr}\")\n         return 1 if any_fail else 0\n \n@@ -223,13 +217,11 @@\n             _info(f\"{dist_name} not installed. Installing...\")\n             code = self.pip_install(dist_name, upgrade=False)\n             if code != 0:\n                 _error(f\"Failed to install {dist_name} (exit {code}).\")\n             return\n-        _info(\n-            f\"{dist_name} installed (version {installed}). Checking for updates...\"\n-        )\n+        _info(f\"{dist_name} installed (version {installed}). Checking for updates...\")\n         if self.is_outdated(dist_name):\n             _info(f\"{dist_name} is outdated. Upgrading...\")\n             code = self.pip_install(dist_name, upgrade=True)\n             if code != 0:\n                 _error(f\"Failed to upgrade {dist_name} (exit {code}).\")\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_pip_updates_x.py:154: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_pip_updates_x.py:158: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_pip_updates_x.py:193: error: Expression has type \"Any\"  [misc]\nx_cls_make_pip_updates_x.py:194: error: Expression has type \"Any\"  [misc]\nFound 4 errors in 1 file (checked 1 source file)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "0 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_make_py_mod_sideload_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/dis.data.json",
            ".mypy_cache/3.13/dis.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/importlib/util.data.json",
            ".mypy_cache/3.13/importlib/util.meta.json",
            ".mypy_cache/3.13/inspect.data.json",
            ".mypy_cache/3.13/inspect.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/opcode.data.json",
            ".mypy_cache/3.13/opcode.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/6964838980149084214",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_py_mod_sideload_x.py"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/dis.data.json",
            ".mypy_cache/3.13/dis.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/importlib/util.data.json",
            ".mypy_cache/3.13/importlib/util.meta.json",
            ".mypy_cache/3.13/inspect.data.json",
            ".mypy_cache/3.13/inspect.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/opcode.data.json",
            ".mypy_cache/3.13/opcode.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/6964838980149084214",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_py_mod_sideload_x.py"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_make_py_mod_sideload_x\\x_cls_make_py_mod_sideload_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_py_mod_sideload_x\\x_cls_make_py_mod_sideload_x.py\t2025-10-07 02:51:44.851557+00:00\n+++ C:\\x_runner_x\\x_make_py_mod_sideload_x\\x_cls_make_py_mod_sideload_x.py\t2025-10-07 07:51:53.488614+00:00\n@@ -12,13 +12,11 @@\n import inspect\n import os\n \n \n class x_cls_make_py_mod_sideload_x:\n-    def run(\n-        self, base_path: str, module: str, obj: Optional[str] = None\n-    ) -> Any:\n+    def run(self, base_path: str, module: str, obj: Optional[str] = None) -> Any:\n         \"\"\"Load a module file under base_path and return module or attribute.\n \n         base_path: directory containing modules or packages\n         module: a filename (foo.py), a dotted name (pkg.mod) or a module name\n         obj: optional attribute name to return from the module\n@@ -63,13 +61,11 @@\n \n         spec = importlib.util.spec_from_file_location(\n             f\"sideload_{abs(hash(module_file))}\", module_file\n         )\n         if spec is None or spec.loader is None:\n-            raise ImportError(\n-                f\"Failed to create module spec for {module_file}\"\n-            )\n+            raise ImportError(f\"Failed to create module spec for {module_file}\")\n \n         module_obj = importlib.util.module_from_spec(spec)\n         spec.loader.exec_module(module_obj)\n \n         if obj is None:\n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_py_mod_sideload_x.py:17: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_py_mod_sideload_x.py:83: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:84: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:85: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:86: error: Expression has type \"Any\"  [misc]\nFound 5 errors in 1 file (checked 1 source file)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "0 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_make_pypi_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_socket.data.json",
            ".mypy_cache/3.13/_socket.meta.json",
            ".mypy_cache/3.13/_ssl.data.json",
            ".mypy_cache/3.13/_ssl.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/http/__init__.data.json",
            ".mypy_cache/3.13/http/__init__.meta.json",
            ".mypy_cache/3.13/http/client.data.json",
            ".mypy_cache/3.13/http/client.meta.json",
            ".mypy_cache/3.13/http/cookiejar.data.json",
            ".mypy_cache/3.13/http/cookiejar.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/nturl2path.data.json",
            ".mypy_cache/3.13/nturl2path.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/socket.data.json",
            ".mypy_cache/3.13/socket.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/ssl.data.json",
            ".mypy_cache/3.13/ssl.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/tempfile.data.json",
            ".mypy_cache/3.13/tempfile.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/urllib/__init__.data.json",
            ".mypy_cache/3.13/urllib/__init__.meta.json",
            ".mypy_cache/3.13/urllib/error.data.json",
            ".mypy_cache/3.13/urllib/error.meta.json",
            ".mypy_cache/3.13/urllib/request.data.json",
            ".mypy_cache/3.13/urllib/request.meta.json",
            ".mypy_cache/3.13/urllib/response.data.json",
            ".mypy_cache/3.13/urllib/response.meta.json",
            ".mypy_cache/3.13/uuid.data.json",
            ".mypy_cache/3.13/uuid.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/17619619197878247853",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_pypi_x.py"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/__future__.data.json",
            ".mypy_cache/3.13/__future__.meta.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_bz2.data.json",
            ".mypy_cache/3.13/_bz2.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_compression.data.json",
            ".mypy_cache/3.13/_compression.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_socket.data.json",
            ".mypy_cache/3.13/_socket.meta.json",
            ".mypy_cache/3.13/_ssl.data.json",
            ".mypy_cache/3.13/_ssl.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/bz2.data.json",
            ".mypy_cache/3.13/bz2.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/gzip.data.json",
            ".mypy_cache/3.13/gzip.meta.json",
            ".mypy_cache/3.13/http/__init__.data.json",
            ".mypy_cache/3.13/http/__init__.meta.json",
            ".mypy_cache/3.13/http/client.data.json",
            ".mypy_cache/3.13/http/client.meta.json",
            ".mypy_cache/3.13/http/cookiejar.data.json",
            ".mypy_cache/3.13/http/cookiejar.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/json/__init__.data.json",
            ".mypy_cache/3.13/json/__init__.meta.json",
            ".mypy_cache/3.13/json/decoder.data.json",
            ".mypy_cache/3.13/json/decoder.meta.json",
            ".mypy_cache/3.13/json/encoder.data.json",
            ".mypy_cache/3.13/json/encoder.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/nturl2path.data.json",
            ".mypy_cache/3.13/nturl2path.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/shutil.data.json",
            ".mypy_cache/3.13/shutil.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/socket.data.json",
            ".mypy_cache/3.13/socket.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/ssl.data.json",
            ".mypy_cache/3.13/ssl.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/tarfile.data.json",
            ".mypy_cache/3.13/tarfile.meta.json",
            ".mypy_cache/3.13/tempfile.data.json",
            ".mypy_cache/3.13/tempfile.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/urllib/__init__.data.json",
            ".mypy_cache/3.13/urllib/__init__.meta.json",
            ".mypy_cache/3.13/urllib/error.data.json",
            ".mypy_cache/3.13/urllib/error.meta.json",
            ".mypy_cache/3.13/urllib/request.data.json",
            ".mypy_cache/3.13/urllib/request.meta.json",
            ".mypy_cache/3.13/urllib/response.data.json",
            ".mypy_cache/3.13/urllib/response.meta.json",
            ".mypy_cache/3.13/uuid.data.json",
            ".mypy_cache/3.13/uuid.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/3.13/zlib.data.json",
            ".mypy_cache/3.13/zlib.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/17619619197878247853",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_pypi_x.py"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 1,
                "stderr": "would reformat C:\\x_runner_x\\x_make_pypi_x\\x_cls_make_pypi_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_pypi_x\\x_cls_make_pypi_x.py\t2025-10-07 02:51:44.263597+00:00\n+++ C:\\x_runner_x\\x_make_pypi_x\\x_cls_make_pypi_x.py\t2025-10-07 07:51:57.486359+00:00\n@@ -84,13 +84,11 @@\n             url = f\"{self.PYPI_INDEX_URL}/pypi/{self.name}/json\"\n             with urllib.request.urlopen(url, timeout=10) as response:\n                 data = json.load(response)\n             return self.version in data.get(\"releases\", {})\n         except Exception as e:\n-            _info(\n-                f\"WARNING: Could not check PyPI for {self.name}=={self.version}: {e}\"\n-            )\n+            _info(f\"WARNING: Could not check PyPI for {self.name}=={self.version}: {e}\")\n             return False\n \n     def __init__(\n         self,\n         name: str,\n@@ -194,16 +192,12 @@\n                 if self.author or self.email:\n                     auth_name = self.author or \"Unknown\"\n                     auth_email = self.email or \"unknown@example.com\"\n                     base_pyproject += f'authors = [{{name = \"{auth_name}\", email = \"{auth_email}\"}}]\\n'\n                 if self.dependencies:\n-                    deps_serial = \",\\n    \".join(\n-                        f'\"{d}\"' for d in self.dependencies\n-                    )\n-                    base_pyproject += (\n-                        f\"dependencies = [\\n    {deps_serial}\\n]\\n\"\n-                    )\n+                    deps_serial = \",\\n    \".join(f'\"{d}\"' for d in self.dependencies)\n+                    base_pyproject += f\"dependencies = [\\n    {deps_serial}\\n]\\n\"\n \n                 # Compose explicit package-data list\n                 pkg_data_list = [\n                     '\"py.typed\"',\n                     *[f'\"{rel}\"' for rel in explicit_files],\n@@ -275,34 +269,28 @@\n                 shutil.rmtree(package_dir)\n             else:\n                 os.remove(package_dir)\n         os.makedirs(package_dir, exist_ok=True)\n \n-        shutil.copy2(\n-            main_file, os.path.join(package_dir, os.path.basename(main_file))\n-        )\n+        shutil.copy2(main_file, os.path.join(package_dir, os.path.basename(main_file)))\n         init_path = os.path.join(package_dir, \"__init__.py\")\n         if not os.path.exists(init_path):\n             with open(init_path, \"w\", encoding=\"utf-8\") as f:\n                 f.write(\"# Package init\\n\")\n \n         def _is_allowed(p: str) -> bool:\n             \"\"\"Allow-list files copied into the build.\"\"\"\n             _, ext = os.path.splitext(p.lower())\n             allowed = {\".py\", \".txt\", \".md\", \".rst\"}\n-            return (\n-                ext in allowed or os.path.basename(p).lower() == \"__init__.py\"\n-            )\n+            return ext in allowed or os.path.basename(p).lower() == \"__init__.py\"\n \n         # Copy ancillaries: files only; do not recurse directories\n         for entry in ancillary_files or []:\n             rel_norm = entry.replace(\"\\\\\", \"/\").lstrip(\"/\")\n             src_path = rel_norm.replace(\"/\", os.sep)\n             if os.path.isdir(src_path):\n-                _info(\n-                    f\"Ignoring ancillary directory (no recursion): {rel_norm}\"\n-                )\n+                _info(f\"Ignoring ancillary directory (no recursion): {rel_norm}\")\n                 continue\n             if os.path.isfile(src_path) and _is_allowed(src_path):\n                 dest_path = os.path.join(package_dir, src_path)\n                 os.makedirs(os.path.dirname(dest_path), exist_ok=True)\n                 shutil.copy2(src_path, dest_path)\n@@ -328,13 +316,11 @@\n                 for fname in files:\n                     if fname.endswith(\".py\") and not fname.endswith(\".pyi\"):\n                         stub_path = os.path.join(root, fname[:-3] + \".pyi\")\n                         if not os.path.exists(stub_path):\n                             try:\n-                                with open(\n-                                    stub_path, \"w\", encoding=\"utf-8\"\n-                                ) as f:\n+                                with open(stub_path, \"w\", encoding=\"utf-8\") as f:\n                                     f.write(\n                                         f\"# Stub for {fname}\\nfrom typing import Any\\n\\n\"\n                                     )\n                             except Exception:\n                                 pass\n@@ -454,13 +440,11 @@\n             try:\n                 os.chdir(cwd)\n             except Exception:\n                 pass\n \n-    def prepare_and_publish(\n-        self, main_file: str, ancillary_files: list[str]\n-    ) -> None:\n+    def prepare_and_publish(self, main_file: str, ancillary_files: list[str]) -> None:\n         # Always validate inputs (evidence cleanup is enforced unconditionally).\n         self.prepare(main_file, ancillary_files or [])\n         self.publish(main_file, ancillary_files or [])\n \n \n"
            },
            "mypy": {
                "cached": false,
                "exit": 1,
                "stderr": "",
                "stdout": "x_cls_make_pypi_x.py:20: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_pypi_x.py:21: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:21: error: Expression type contains \"Any\" (has type \"tuple[Any, ...]\")  [misc]\nx_cls_make_pypi_x.py:35: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_pypi_x.py:36: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:36: error: Expression type contains \"Any\" (has type \"tuple[Any, ...]\")  [misc]\nx_cls_make_pypi_x.py:51: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_pypi_x.py:52: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:64: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_pypi_x.py:68: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_pypi_x.py:85: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:86: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:87: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:94: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_pypi_x.py:120: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_pypi_x.py:124: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_pypi_x.py:125: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_pypi_x.py:125: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:128: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_pypi_x.py:175: error: Expression type contains \"Any\" (has type \"dict[str, Any | None]\")  [misc]\nx_cls_make_pypi_x.py:408: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:409: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:410: error: Expression has type \"Any\"  [misc]\nFound 23 errors in 1 file (checked 1 source file)\n"
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "0 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    },
    "x_make_yahw_x": {
        "files": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/x_cls_make_yahw_x.data.json",
            ".mypy_cache/3.13/x_cls_make_yahw_x.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/10423271576466066158",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_yahw_x.py"
        ],
        "files_index": [
            ".mypy_cache/.gitignore",
            ".mypy_cache/3.13/@plugins_snapshot.json",
            ".mypy_cache/3.13/_ast.data.json",
            ".mypy_cache/3.13/_ast.meta.json",
            ".mypy_cache/3.13/_codecs.data.json",
            ".mypy_cache/3.13/_codecs.meta.json",
            ".mypy_cache/3.13/_collections_abc.data.json",
            ".mypy_cache/3.13/_collections_abc.meta.json",
            ".mypy_cache/3.13/_contextvars.data.json",
            ".mypy_cache/3.13/_contextvars.meta.json",
            ".mypy_cache/3.13/_frozen_importlib.data.json",
            ".mypy_cache/3.13/_frozen_importlib.meta.json",
            ".mypy_cache/3.13/_frozen_importlib_external.data.json",
            ".mypy_cache/3.13/_frozen_importlib_external.meta.json",
            ".mypy_cache/3.13/_io.data.json",
            ".mypy_cache/3.13/_io.meta.json",
            ".mypy_cache/3.13/_sitebuiltins.data.json",
            ".mypy_cache/3.13/_sitebuiltins.meta.json",
            ".mypy_cache/3.13/_thread.data.json",
            ".mypy_cache/3.13/_thread.meta.json",
            ".mypy_cache/3.13/_typeshed/__init__.data.json",
            ".mypy_cache/3.13/_typeshed/__init__.meta.json",
            ".mypy_cache/3.13/_typeshed/importlib.data.json",
            ".mypy_cache/3.13/_typeshed/importlib.meta.json",
            ".mypy_cache/3.13/_warnings.data.json",
            ".mypy_cache/3.13/_warnings.meta.json",
            ".mypy_cache/3.13/_winapi.data.json",
            ".mypy_cache/3.13/_winapi.meta.json",
            ".mypy_cache/3.13/abc.data.json",
            ".mypy_cache/3.13/abc.meta.json",
            ".mypy_cache/3.13/ast.data.json",
            ".mypy_cache/3.13/ast.meta.json",
            ".mypy_cache/3.13/builtins.data.json",
            ".mypy_cache/3.13/builtins.meta.json",
            ".mypy_cache/3.13/codecs.data.json",
            ".mypy_cache/3.13/codecs.meta.json",
            ".mypy_cache/3.13/collections/__init__.data.json",
            ".mypy_cache/3.13/collections/__init__.meta.json",
            ".mypy_cache/3.13/collections/abc.data.json",
            ".mypy_cache/3.13/collections/abc.meta.json",
            ".mypy_cache/3.13/contextlib.data.json",
            ".mypy_cache/3.13/contextlib.meta.json",
            ".mypy_cache/3.13/contextvars.data.json",
            ".mypy_cache/3.13/contextvars.meta.json",
            ".mypy_cache/3.13/dataclasses.data.json",
            ".mypy_cache/3.13/dataclasses.meta.json",
            ".mypy_cache/3.13/email/__init__.data.json",
            ".mypy_cache/3.13/email/__init__.meta.json",
            ".mypy_cache/3.13/email/_policybase.data.json",
            ".mypy_cache/3.13/email/_policybase.meta.json",
            ".mypy_cache/3.13/email/charset.data.json",
            ".mypy_cache/3.13/email/charset.meta.json",
            ".mypy_cache/3.13/email/contentmanager.data.json",
            ".mypy_cache/3.13/email/contentmanager.meta.json",
            ".mypy_cache/3.13/email/errors.data.json",
            ".mypy_cache/3.13/email/errors.meta.json",
            ".mypy_cache/3.13/email/header.data.json",
            ".mypy_cache/3.13/email/header.meta.json",
            ".mypy_cache/3.13/email/message.data.json",
            ".mypy_cache/3.13/email/message.meta.json",
            ".mypy_cache/3.13/email/policy.data.json",
            ".mypy_cache/3.13/email/policy.meta.json",
            ".mypy_cache/3.13/enum.data.json",
            ".mypy_cache/3.13/enum.meta.json",
            ".mypy_cache/3.13/genericpath.data.json",
            ".mypy_cache/3.13/genericpath.meta.json",
            ".mypy_cache/3.13/importlib/__init__.data.json",
            ".mypy_cache/3.13/importlib/__init__.meta.json",
            ".mypy_cache/3.13/importlib/_abc.data.json",
            ".mypy_cache/3.13/importlib/_abc.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap.meta.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.data.json",
            ".mypy_cache/3.13/importlib/_bootstrap_external.meta.json",
            ".mypy_cache/3.13/importlib/abc.data.json",
            ".mypy_cache/3.13/importlib/abc.meta.json",
            ".mypy_cache/3.13/importlib/machinery.data.json",
            ".mypy_cache/3.13/importlib/machinery.meta.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.data.json",
            ".mypy_cache/3.13/importlib/metadata/__init__.meta.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.data.json",
            ".mypy_cache/3.13/importlib/metadata/_meta.meta.json",
            ".mypy_cache/3.13/importlib/readers.data.json",
            ".mypy_cache/3.13/importlib/readers.meta.json",
            ".mypy_cache/3.13/importlib/resources/__init__.data.json",
            ".mypy_cache/3.13/importlib/resources/__init__.meta.json",
            ".mypy_cache/3.13/importlib/resources/_common.data.json",
            ".mypy_cache/3.13/importlib/resources/_common.meta.json",
            ".mypy_cache/3.13/importlib/resources/_functional.data.json",
            ".mypy_cache/3.13/importlib/resources/_functional.meta.json",
            ".mypy_cache/3.13/importlib/resources/abc.data.json",
            ".mypy_cache/3.13/importlib/resources/abc.meta.json",
            ".mypy_cache/3.13/io.data.json",
            ".mypy_cache/3.13/io.meta.json",
            ".mypy_cache/3.13/logging/__init__.data.json",
            ".mypy_cache/3.13/logging/__init__.meta.json",
            ".mypy_cache/3.13/ntpath.data.json",
            ".mypy_cache/3.13/ntpath.meta.json",
            ".mypy_cache/3.13/os/__init__.data.json",
            ".mypy_cache/3.13/os/__init__.meta.json",
            ".mypy_cache/3.13/os/path.data.json",
            ".mypy_cache/3.13/os/path.meta.json",
            ".mypy_cache/3.13/pathlib/__init__.data.json",
            ".mypy_cache/3.13/pathlib/__init__.meta.json",
            ".mypy_cache/3.13/posixpath.data.json",
            ".mypy_cache/3.13/posixpath.meta.json",
            ".mypy_cache/3.13/re.data.json",
            ".mypy_cache/3.13/re.meta.json",
            ".mypy_cache/3.13/signal.data.json",
            ".mypy_cache/3.13/signal.meta.json",
            ".mypy_cache/3.13/sre_compile.data.json",
            ".mypy_cache/3.13/sre_compile.meta.json",
            ".mypy_cache/3.13/sre_constants.data.json",
            ".mypy_cache/3.13/sre_constants.meta.json",
            ".mypy_cache/3.13/sre_parse.data.json",
            ".mypy_cache/3.13/sre_parse.meta.json",
            ".mypy_cache/3.13/string/__init__.data.json",
            ".mypy_cache/3.13/string/__init__.meta.json",
            ".mypy_cache/3.13/subprocess.data.json",
            ".mypy_cache/3.13/subprocess.meta.json",
            ".mypy_cache/3.13/sys/__init__.data.json",
            ".mypy_cache/3.13/sys/__init__.meta.json",
            ".mypy_cache/3.13/sys/_monitoring.data.json",
            ".mypy_cache/3.13/sys/_monitoring.meta.json",
            ".mypy_cache/3.13/threading.data.json",
            ".mypy_cache/3.13/threading.meta.json",
            ".mypy_cache/3.13/time.data.json",
            ".mypy_cache/3.13/time.meta.json",
            ".mypy_cache/3.13/types.data.json",
            ".mypy_cache/3.13/types.meta.json",
            ".mypy_cache/3.13/typing.data.json",
            ".mypy_cache/3.13/typing.meta.json",
            ".mypy_cache/3.13/typing_extensions.data.json",
            ".mypy_cache/3.13/typing_extensions.meta.json",
            ".mypy_cache/3.13/warnings.data.json",
            ".mypy_cache/3.13/warnings.meta.json",
            ".mypy_cache/3.13/x_cls_make_yahw_x.data.json",
            ".mypy_cache/3.13/x_cls_make_yahw_x.meta.json",
            ".mypy_cache/3.13/zipfile/__init__.data.json",
            ".mypy_cache/3.13/zipfile/__init__.meta.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.data.json",
            ".mypy_cache/3.13/zipfile/_path/__init__.meta.json",
            ".mypy_cache/3.13/zipimport.data.json",
            ".mypy_cache/3.13/zipimport.meta.json",
            ".mypy_cache/CACHEDIR.TAG",
            ".ruff_cache/.gitignore",
            ".ruff_cache/0.13.3/10423271576466066158",
            ".ruff_cache/CACHEDIR.TAG",
            "x_cls_make_yahw_x.py"
        ],
        "tool_reports": {
            "black": {
                "cached": false,
                "exit": 0,
                "stderr": "All done! \\u2728 \\U0001f370 \\u2728\n1 file would be left unchanged.\n",
                "stdout": ""
            },
            "mypy": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "Success: no issues found in 1 source file\n"
            },
            "pyright": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "0 errors, 0 warnings, 0 informations\n"
            },
            "ruff_check": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            },
            "ruff_fix": {
                "cached": false,
                "exit": 0,
                "stderr": "",
                "stdout": "All checks passed!\n"
            }
        }
    }
}