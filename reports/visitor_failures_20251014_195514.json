{
    "failures": [
        {
            "captured_at": "2025-10-14T19:53:43.569122+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "black",
                    ".",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311",
                    "--check",
                    "--diff"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff",
                "cwd": "C:\\x_runner_x\\x_0_make_all_x",
                "duration_seconds": 2.1411558999679983,
                "ended_at": "2025-10-14T19:53:43.569122+00:00",
                "exit": 1,
                "repo": "x_0_make_all_x",
                "repo_hash": "9f8d8e13f32ebf84d3d74392838736e2426d850402d5519eaa52ffdac46a9c2f",
                "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
                "started_at": "2025-10-14T19:53:41.427965+00:00",
                "stderr": "would reformat C:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted, 14 files would be left unchanged.\n",
                "stdout": "--- C:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\t2025-10-14 19:35:06.724700+00:00\n+++ C:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\t2025-10-14 19:53:43.147761+00:00\n@@ -432,22 +432,32 @@\n             tool_key = failure.tool.strip().lower()\n             if not repo_key or not tool_key:\n                 continue\n             failure_lookup.setdefault((repo_key, tool_key), failure)\n \n-        header_labels = [\"Repository\"] + [self._format_tool_header(name) for name in tool_names]\n+        header_labels = [\"Repository\"] + [\n+            self._format_tool_header(name) for name in tool_names\n+        ]\n         table = QtWidgets.QTableWidget(len(repo_rows), len(header_labels))\n         table.setHorizontalHeaderLabels(header_labels)\n         table.verticalHeader().setVisible(False)\n         table.setEditTriggers(QtWidgets.QAbstractItemView.EditTrigger.NoEditTriggers)\n-        table.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.SingleSelection)\n-        table.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectionBehavior.SelectItems)\n+        table.setSelectionMode(\n+            QtWidgets.QAbstractItemView.SelectionMode.SingleSelection\n+        )\n+        table.setSelectionBehavior(\n+            QtWidgets.QAbstractItemView.SelectionBehavior.SelectItems\n+        )\n         table.setWordWrap(False)\n         header = table.horizontalHeader()\n-        header.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeMode.ResizeToContents)\n+        header.setSectionResizeMode(\n+            0, QtWidgets.QHeaderView.ResizeMode.ResizeToContents\n+        )\n         for column in range(1, len(header_labels)):\n-            header.setSectionResizeMode(column, QtWidgets.QHeaderView.ResizeMode.Stretch)\n+            header.setSectionResizeMode(\n+                column, QtWidgets.QHeaderView.ResizeMode.Stretch\n+            )\n \n         self._repo_status_table = table\n         self._repo_cell_payload = {}\n \n         for row_index, repo_entry in enumerate(repo_rows):\n@@ -493,11 +503,13 @@\n                     if cached:\n                         tooltip_lines.append(\"Result served from cache\")\n                     if timed_out:\n                         tooltip_lines.append(\"Tool timed out\")\n \n-                    failure = failure_lookup.get((repo_name.strip().lower(), tool_name.strip().lower()))\n+                    failure = failure_lookup.get(\n+                        (repo_name.strip().lower(), tool_name.strip().lower())\n+                    )\n                     if failure is not None:\n                         payload[\"message\"] = failure.message\n                         payload[\"command\"] = failure.command\n                         payload[\"captured_at\"] = failure.captured_at\n                         tooltip_lines.append(self._build_failure_tooltip(failure))\n@@ -510,11 +522,13 @@\n                         display_text = \"T\"\n                         background = QColor(180, 132, 36)\n                         foreground = QColor(18, 18, 18)\n                     elif exit_code == 0:\n                         display_text = \"Y\"\n-                        background = QColor(45, 120, 63) if cached else QColor(37, 94, 52)\n+                        background = (\n+                            QColor(45, 120, 63) if cached else QColor(37, 94, 52)\n+                        )\n                         foreground = QColor(240, 240, 240)\n                     elif exit_code is None:\n                         display_text = \"?\"\n                         background = QColor(96, 96, 96)\n                         foreground = QColor(240, 240, 240)\n",
                "tool": "black",
                "tool_module": "black",
                "tool_version": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7"
            },
            "exit": "exit 1",
            "message": "black failed for x_0_make_all_x (exit 1)\ncwd: C:\\x_runner_x\\x_0_make_all_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff\nstarted_at: 2025-10-14T19:53:41.427965+00:00\nduration: 2.141s\ntool_version: python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7\nstdout:\n--- C:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\t2025-10-14 19:35:06.724700+00:00\n+++ C:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\t2025-10-14 19:53:43.147761+00:00\n@@ -432,22 +432,32 @@\n             tool_key = failure.tool.strip().lower()\n             if not repo_key or not tool_key:\n\u2026\nstderr:\nwould reformat C:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted, 14 files would be left unchanged.",
            "repo": "x_0_make_all_x",
            "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
            "stderr_preview": "would reformat C:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted, 14 files would be left unchanged.",
            "stdout_preview": "--- C:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\t2025-10-14 19:35:06.724700+00:00\n+++ C:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\t2025-10-14 19:53:43.147761+00:00\n@@ -432,22 +432,32 @@\n             tool_key = failure.tool.strip().lower()\n             if not repo_key or not tool_key:\n\u2026",
            "suggested_action": "Investigate",
            "summary": "black failed for x_0_make_all_x (exit 1) cwd: C:\\x_runner_x\\x_0_make_all_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff started_at: 2025-10-14T19:53:41.427965+00:00 durat\u2026",
            "tool": "black",
            "tool_version": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7"
        },
        {
            "captured_at": "2025-10-14T19:53:50.443601+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "pyright",
                    ".",
                    "--level",
                    "error"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error",
                "cwd": "C:\\x_runner_x\\x_0_make_all_x",
                "duration_seconds": 2.164213399984874,
                "ended_at": "2025-10-14T19:53:50.443601+00:00",
                "exit": 1,
                "repo": "x_0_make_all_x",
                "repo_hash": "9f8d8e13f32ebf84d3d74392838736e2426d850402d5519eaa52ffdac46a9c2f",
                "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
                "started_at": "2025-10-14T19:53:48.279396+00:00",
                "stderr": "",
                "stdout": "c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:420:46 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:462:39 - error: Cannot access attribute \"get\" for class \"object\"\n  \u00c2\u00a0\u00c2\u00a0Attribute \"get\" is unknown (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:498:61 - error: Cannot access attribute \"strip\" for class \"object\"\n  \u00c2\u00a0\u00c2\u00a0Attribute \"strip\" is unknown (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:696:40 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:731:44 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:754:46 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:777:43 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n7 errors, 0 warnings, 0 informations\n",
                "tool": "pyright",
                "tool_module": "pyright",
                "tool_version": "pyright 1.1.406"
            },
            "exit": "exit 1",
            "message": "pyright failed for x_0_make_all_x (exit 1)\ncwd: C:\\x_runner_x\\x_0_make_all_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error\nstarted_at: 2025-10-14T19:53:48.279396+00:00\nduration: 2.164s\ntool_version: pyright 1.1.406\nstdout:\nc:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:420:46 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:462:39 - error: Cannot access attribute \"get\" for class \"object\"\n  \u00c2\u00a0\u00c2\u00a0Attribute \"get\" is unknown (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:498:61 - error: Cannot access attribute \"strip\" for class \"object\"\n\u2026\nstderr:\n<empty>",
            "repo": "x_0_make_all_x",
            "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
            "stderr_preview": null,
            "stdout_preview": "c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:420:46 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:462:39 - error: Cannot access attribute \"get\" for class \"object\"\n  \u00c2\u00a0\u00c2\u00a0Attribute \"get\" is unknown (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_0_make_all_x\\interface\\gui\\app.py:498:61 - error: Cannot access attribute \"strip\" for class \"object\"\n\u2026",
            "suggested_action": "Investigate",
            "summary": "pyright failed for x_0_make_all_x (exit 1) cwd: C:\\x_runner_x\\x_0_make_all_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error started_at: 2025-10-14T19:53:48.279396+00:00 duration: 2.164s tool_version: pyright 1.1\u2026",
            "tool": "pyright",
            "tool_version": "pyright 1.1.406"
        },
        {
            "captured_at": "2025-10-14T19:53:44.508355+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_0_make_all_x",
                "duration_seconds": 0.28846310009248555,
                "ended_at": "2025-10-14T19:53:44.508355+00:00",
                "exit": 1,
                "repo": "x_0_make_all_x",
                "repo_hash": "9f8d8e13f32ebf84d3d74392838736e2426d850402d5519eaa52ffdac46a9c2f",
                "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
                "started_at": "2025-10-14T19:53:44.219889+00:00",
                "stderr": "",
                "stdout": "PLR0911 Too many return statements (7 > 6)\n  --> interface\\gui\\app.py:84:5\n   |\n84 | def _coerce_exit_code(value: object | None) -> int | None:\n   |     ^^^^^^^^^^^^^^^^^\n85 |     if value is None:\n86 |         return None\n   |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> interface\\gui\\app.py:157:13\n    |\n155 |     for entry in failures:\n156 |         if isinstance(entry, Mapping):\n157 |             rows.append(_normalize_failure_entry(entry))\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n158 |     return rows\n    |\nhelp: Replace for loop with list.extend\n\nPERF401 Use `list.extend` to create a transformed list\n   --> interface\\gui\\app.py:167:17\n    |\n165 |         for entry in details:\n166 |             if isinstance(entry, Mapping):\n167 |                 rows.append(_normalize_failure_entry(entry))\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |     if rows:\n169 |         return rows\n    |\nhelp: Replace for loop with list.extend\n\nPERF401 Use a list comprehension to create a transformed list\n   --> interface\\gui\\app.py:212:17\n    |\n210 |         for entry in failure_details_seq:\n211 |             if isinstance(entry, Mapping):\n212 |                 normalized_details.append({str(key): val for key, val in entry.items()})\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n213 |         failure_details = tuple(normalized_details)\n214 |     else:\n    |\nhelp: Replace for loop with list comprehension\n\nPLR0915 Too many statements (52 > 50)\n   --> interface\\gui\\app.py:309:9\n    |\n307 |         self.setAutoFillBackground(True)\n308 |\n309 |     def _build_ui(self) -> None:\n    |         ^^^^^^^^^\n310 |         container = QtWidgets.QWidget()\n311 |         layout = QtWidgets.QVBoxLayout()\n    |\n\nE501 Line too long (100 > 88)\n   --> interface\\gui\\app.py:411:89\n    |\n409 |             if self._outcome.pip_update_packages:\n410 |                 lines.append(\n411 |                     f\"Pip updates executed for {len(self._outcome.pip_update_packages)} package(s).\"\n    |                                                                                         ^^^^^^^^^^^^\n412 |                 )\n413 |             else:\n    |\n\nC901 `_create_repo_status_section` is too complex (15 > 10)\n   --> interface\\gui\\app.py:420:9\n    |\n418 |         return lines\n419 |\n420 |     def _create_repo_status_section(self) -> QtWidgets.QGroupBox | None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n421 |         matrix = self._collect_repo_tool_matrix()\n422 |         if matrix is None:\n    |\n\nPLR0912 Too many branches (17 > 12)\n   --> interface\\gui\\app.py:420:9\n    |\n418 |         return lines\n419 |\n420 |     def _create_repo_status_section(self) -> QtWidgets.QGroupBox | None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n421 |         matrix = self._collect_repo_tool_matrix()\n422 |         if matrix is None:\n    |\n\nPLR0915 Too many statements (96 > 50)\n   --> interface\\gui\\app.py:420:9\n    |\n418 |         return lines\n419 |\n420 |     def _create_repo_status_section(self) -> QtWidgets.QGroupBox | None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n421 |         matrix = self._collect_repo_tool_matrix()\n422 |         if matrix is None:\n    |\n\nE501 Line too long (96 > 88)\n   --> interface\\gui\\app.py:437:89\n    |\n435 |             failure_lookup.setdefault((repo_key, tool_key), failure)\n436 |\n437 |         header_labels = [\"Repository\"] + [self._format_tool_header(name) for name in tool_names]\n    |                                                                                         ^^^^^^^^\n438 |         table = QtWidgets.QTableWidget(len(repo_rows), len(header_labels))\n439 |         table.setHorizontalHeaderLabels(header_labels)\n    |\n\nE501 Line too long (89 > 88)\n   --> interface\\gui\\app.py:446:89\n    |\n444 |         table.setWordWrap(False)\n445 |         header = table.horizontalHeader()\n446 |         header.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeMode.ResizeToContents)\n    |                                                                                         ^\n447 |         for column in range(1, len(header_labels)):\n448 |             header.setSectionResizeMode(column, QtWidgets.QHeaderView.ResizeMode.Stretch)\n    |\n\nE501 Line too long (89 > 88)\n   --> interface\\gui\\app.py:448:89\n    |\n446 |         header.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeMode.ResizeToContents)\n447 |         for column in range(1, len(header_labels)):\n448 |             header.setSectionResizeMode(column, QtWidgets.QHeaderView.ResizeMode.Stretch)\n    |                                                                                         ^\n449 |\n450 |         self._repo_status_table = table\n    |\n\nE501 Line too long (89 > 88)\n   --> interface\\gui\\app.py:491:89\n    |\n490 |                     tooltip_lines.append(\n491 |                         f\"Exit code: {exit_code if exit_code is not None else 'unknown'}\"\n    |                                                                                         ^\n492 |                     )\n493 |                     if cached:\n    |\n\nE501 Line too long (104 > 88)\n   --> interface\\gui\\app.py:498:89\n    |\n496 |                         tooltip_lines.append(\"Tool timed out\")\n497 |\n498 |                     failure = failure_lookup.get((repo_name.strip().lower(), tool_name.strip().lower()))\n    |                                                                                         ^^^^^^^^^^^^^^^^\n499 |                     if failure is not None:\n500 |                         payload[\"message\"] = failure.message\n    |\n\nE501 Line too long (90 > 88)\n   --> interface\\gui\\app.py:515:89\n    |\n513 |                     elif exit_code == 0:\n514 |                         display_text = \"Y\"\n515 |                         background = QColor(45, 120, 63) if cached else QColor(37, 94, 52)\n    |                                                                                         ^^\n516 |                         foreground = QColor(240, 240, 240)\n517 |                     elif exit_code is None:\n    |\n\nC901 `_handle_repo_status_activation` is too complex (13 > 10)\n   --> interface\\gui\\app.py:552:9\n    |\n550 |         return group\n551 |\n552 |     def _handle_repo_status_activation(self, row: int, column: int) -> None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n553 |         if column <= 0 or self._repo_status_table is None:\n554 |             return\n    |\n\nPLR0912 Too many branches (13 > 12)\n   --> interface\\gui\\app.py:552:9\n    |\n550 |         return group\n551 |\n552 |     def _handle_repo_status_activation(self, row: int, column: int) -> None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n553 |         if column <= 0 or self._repo_status_table is None:\n554 |             return\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> interface\\gui\\app.py:686:27\n    |\n684 |     def _build_failure_tooltip(self, failure: FailureRow) -> str:\n685 |         message = failure.message.strip()\n686 |         if len(message) > 200:\n    |                           ^^^\n687 |             message = f\"{message[:197]}\u00e2\u20ac\u00a6\"\n688 |         command = failure.command.strip()\n    |\n\nC408 Unnecessary `tuple()` call (rewrite as a literal)\n   --> interface\\gui\\app.py:932:14\n    |\n930 |         cast(\"tuple[str, ...]\", pip_packages_obj)\n931 |         if isinstance(pip_packages_obj, tuple)\n932 |         else tuple()\n    |              ^^^^^^^\n933 |     )\n    |\nhelp: Rewrite as a literal\n\nSLF001 Private member accessed: `_coerce_exit_code`\n  --> tests\\test_gui_exit_code.py:29:24\n   |\n27 | )\n28 | def test_coerce_exit_code(value: object | None, expected: int | None) -> None:\n29 |     coerce_exit_code = gui_app._coerce_exit_code\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^\n30 |     assert coerce_exit_code(value) == expected\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_gui_exit_code.py:30:5\n   |\n28 | def test_coerce_exit_code(value: object | None, expected: int | None) -> None:\n29 |     coerce_exit_code = gui_app._coerce_exit_code\n30 |     assert coerce_exit_code(value) == expected\n   |     ^^^^^^\n   |\n\nFound 21 errors.\nNo fixes available (1 hidden fix can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_check",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.0"
            },
            "exit": "exit 1",
            "message": "ruff_check failed for x_0_make_all_x (exit 1)\ncwd: C:\\x_runner_x\\x_0_make_all_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-14T19:53:44.219889+00:00\nduration: 0.288s\ntool_version: ruff 0.14.0\nstdout:\nPLR0911 Too many return statements (7 > 6)\n  --> interface\\gui\\app.py:84:5\n   |\n84 | def _coerce_exit_code(value: object | None) -> int | None:\n   |     ^^^^^^^^^^^^^^^^^\n\u2026\nstderr:\n<empty>",
            "repo": "x_0_make_all_x",
            "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
            "stderr_preview": null,
            "stdout_preview": "PLR0911 Too many return statements (7 > 6)\n  --> interface\\gui\\app.py:84:5\n   |\n84 | def _coerce_exit_code(value: object | None) -> int | None:\n   |     ^^^^^^^^^^^^^^^^^\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_check failed for x_0_make_all_x (exit 1) cwd: C:\\x_runner_x\\x_0_make_all_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311 started_at: 2\u2026",
            "tool": "ruff_check",
            "tool_version": "ruff 0.14.0"
        },
        {
            "captured_at": "2025-10-14T19:53:40.365687+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--fix",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_0_make_all_x",
                "duration_seconds": 0.4392196999397129,
                "ended_at": "2025-10-14T19:53:40.365687+00:00",
                "exit": 1,
                "repo": "x_0_make_all_x",
                "repo_hash": "9f8d8e13f32ebf84d3d74392838736e2426d850402d5519eaa52ffdac46a9c2f",
                "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
                "started_at": "2025-10-14T19:53:39.926448+00:00",
                "stderr": "",
                "stdout": "PLR0911 Too many return statements (7 > 6)\n  --> interface\\gui\\app.py:84:5\n   |\n84 | def _coerce_exit_code(value: object | None) -> int | None:\n   |     ^^^^^^^^^^^^^^^^^\n85 |     if value is None:\n86 |         return None\n   |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> interface\\gui\\app.py:157:13\n    |\n155 |     for entry in failures:\n156 |         if isinstance(entry, Mapping):\n157 |             rows.append(_normalize_failure_entry(entry))\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n158 |     return rows\n    |\nhelp: Replace for loop with list.extend\n\nPERF401 Use `list.extend` to create a transformed list\n   --> interface\\gui\\app.py:167:17\n    |\n165 |         for entry in details:\n166 |             if isinstance(entry, Mapping):\n167 |                 rows.append(_normalize_failure_entry(entry))\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |     if rows:\n169 |         return rows\n    |\nhelp: Replace for loop with list.extend\n\nPERF401 Use a list comprehension to create a transformed list\n   --> interface\\gui\\app.py:212:17\n    |\n210 |         for entry in failure_details_seq:\n211 |             if isinstance(entry, Mapping):\n212 |                 normalized_details.append({str(key): val for key, val in entry.items()})\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n213 |         failure_details = tuple(normalized_details)\n214 |     else:\n    |\nhelp: Replace for loop with list comprehension\n\nPLR0915 Too many statements (52 > 50)\n   --> interface\\gui\\app.py:309:9\n    |\n307 |         self.setAutoFillBackground(True)\n308 |\n309 |     def _build_ui(self) -> None:\n    |         ^^^^^^^^^\n310 |         container = QtWidgets.QWidget()\n311 |         layout = QtWidgets.QVBoxLayout()\n    |\n\nE501 Line too long (100 > 88)\n   --> interface\\gui\\app.py:411:89\n    |\n409 |             if self._outcome.pip_update_packages:\n410 |                 lines.append(\n411 |                     f\"Pip updates executed for {len(self._outcome.pip_update_packages)} package(s).\"\n    |                                                                                         ^^^^^^^^^^^^\n412 |                 )\n413 |             else:\n    |\n\nC901 `_create_repo_status_section` is too complex (15 > 10)\n   --> interface\\gui\\app.py:420:9\n    |\n418 |         return lines\n419 |\n420 |     def _create_repo_status_section(self) -> QtWidgets.QGroupBox | None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n421 |         matrix = self._collect_repo_tool_matrix()\n422 |         if matrix is None:\n    |\n\nPLR0912 Too many branches (17 > 12)\n   --> interface\\gui\\app.py:420:9\n    |\n418 |         return lines\n419 |\n420 |     def _create_repo_status_section(self) -> QtWidgets.QGroupBox | None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n421 |         matrix = self._collect_repo_tool_matrix()\n422 |         if matrix is None:\n    |\n\nPLR0915 Too many statements (96 > 50)\n   --> interface\\gui\\app.py:420:9\n    |\n418 |         return lines\n419 |\n420 |     def _create_repo_status_section(self) -> QtWidgets.QGroupBox | None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n421 |         matrix = self._collect_repo_tool_matrix()\n422 |         if matrix is None:\n    |\n\nE501 Line too long (96 > 88)\n   --> interface\\gui\\app.py:437:89\n    |\n435 |             failure_lookup.setdefault((repo_key, tool_key), failure)\n436 |\n437 |         header_labels = [\"Repository\"] + [self._format_tool_header(name) for name in tool_names]\n    |                                                                                         ^^^^^^^^\n438 |         table = QtWidgets.QTableWidget(len(repo_rows), len(header_labels))\n439 |         table.setHorizontalHeaderLabels(header_labels)\n    |\n\nE501 Line too long (89 > 88)\n   --> interface\\gui\\app.py:446:89\n    |\n444 |         table.setWordWrap(False)\n445 |         header = table.horizontalHeader()\n446 |         header.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeMode.ResizeToContents)\n    |                                                                                         ^\n447 |         for column in range(1, len(header_labels)):\n448 |             header.setSectionResizeMode(column, QtWidgets.QHeaderView.ResizeMode.Stretch)\n    |\n\nE501 Line too long (89 > 88)\n   --> interface\\gui\\app.py:448:89\n    |\n446 |         header.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeMode.ResizeToContents)\n447 |         for column in range(1, len(header_labels)):\n448 |             header.setSectionResizeMode(column, QtWidgets.QHeaderView.ResizeMode.Stretch)\n    |                                                                                         ^\n449 |\n450 |         self._repo_status_table = table\n    |\n\nE501 Line too long (89 > 88)\n   --> interface\\gui\\app.py:491:89\n    |\n490 |                     tooltip_lines.append(\n491 |                         f\"Exit code: {exit_code if exit_code is not None else 'unknown'}\"\n    |                                                                                         ^\n492 |                     )\n493 |                     if cached:\n    |\n\nE501 Line too long (104 > 88)\n   --> interface\\gui\\app.py:498:89\n    |\n496 |                         tooltip_lines.append(\"Tool timed out\")\n497 |\n498 |                     failure = failure_lookup.get((repo_name.strip().lower(), tool_name.strip().lower()))\n    |                                                                                         ^^^^^^^^^^^^^^^^\n499 |                     if failure is not None:\n500 |                         payload[\"message\"] = failure.message\n    |\n\nE501 Line too long (90 > 88)\n   --> interface\\gui\\app.py:515:89\n    |\n513 |                     elif exit_code == 0:\n514 |                         display_text = \"Y\"\n515 |                         background = QColor(45, 120, 63) if cached else QColor(37, 94, 52)\n    |                                                                                         ^^\n516 |                         foreground = QColor(240, 240, 240)\n517 |                     elif exit_code is None:\n    |\n\nC901 `_handle_repo_status_activation` is too complex (13 > 10)\n   --> interface\\gui\\app.py:552:9\n    |\n550 |         return group\n551 |\n552 |     def _handle_repo_status_activation(self, row: int, column: int) -> None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n553 |         if column <= 0 or self._repo_status_table is None:\n554 |             return\n    |\n\nPLR0912 Too many branches (13 > 12)\n   --> interface\\gui\\app.py:552:9\n    |\n550 |         return group\n551 |\n552 |     def _handle_repo_status_activation(self, row: int, column: int) -> None:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n553 |         if column <= 0 or self._repo_status_table is None:\n554 |             return\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> interface\\gui\\app.py:686:27\n    |\n684 |     def _build_failure_tooltip(self, failure: FailureRow) -> str:\n685 |         message = failure.message.strip()\n686 |         if len(message) > 200:\n    |                           ^^^\n687 |             message = f\"{message[:197]}\u00e2\u20ac\u00a6\"\n688 |         command = failure.command.strip()\n    |\n\nC408 Unnecessary `tuple()` call (rewrite as a literal)\n   --> interface\\gui\\app.py:932:14\n    |\n930 |         cast(\"tuple[str, ...]\", pip_packages_obj)\n931 |         if isinstance(pip_packages_obj, tuple)\n932 |         else tuple()\n    |              ^^^^^^^\n933 |     )\n    |\nhelp: Rewrite as a literal\n\nSLF001 Private member accessed: `_coerce_exit_code`\n  --> tests\\test_gui_exit_code.py:29:24\n   |\n27 | )\n28 | def test_coerce_exit_code(value: object | None, expected: int | None) -> None:\n29 |     coerce_exit_code = gui_app._coerce_exit_code\n   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^\n30 |     assert coerce_exit_code(value) == expected\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_gui_exit_code.py:30:5\n   |\n28 | def test_coerce_exit_code(value: object | None, expected: int | None) -> None:\n29 |     coerce_exit_code = gui_app._coerce_exit_code\n30 |     assert coerce_exit_code(value) == expected\n   |     ^^^^^^\n   |\n\nFound 21 errors.\nNo fixes available (1 hidden fix can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_fix",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.0"
            },
            "exit": "exit 1",
            "message": "ruff_fix failed for x_0_make_all_x (exit 1)\ncwd: C:\\x_runner_x\\x_0_make_all_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-14T19:53:39.926448+00:00\nduration: 0.439s\ntool_version: ruff 0.14.0\nstdout:\nPLR0911 Too many return statements (7 > 6)\n  --> interface\\gui\\app.py:84:5\n   |\n84 | def _coerce_exit_code(value: object | None) -> int | None:\n   |     ^^^^^^^^^^^^^^^^^\n\u2026\nstderr:\n<empty>",
            "repo": "x_0_make_all_x",
            "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
            "stderr_preview": null,
            "stdout_preview": "PLR0911 Too many return statements (7 > 6)\n  --> interface\\gui\\app.py:84:5\n   |\n84 | def _coerce_exit_code(value: object | None) -> int | None:\n   |     ^^^^^^^^^^^^^^^^^\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_fix failed for x_0_make_all_x (exit 1) cwd: C:\\x_runner_x\\x_0_make_all_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311 started_a\u2026",
            "tool": "ruff_fix",
            "tool_version": "ruff 0.14.0"
        },
        {
            "captured_at": "2025-10-14T19:54:26.839031+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_github_visitor_x",
                "duration_seconds": 2.124564600060694,
                "ended_at": "2025-10-14T19:54:26.839031+00:00",
                "exit": 1,
                "repo": "x_make_github_visitor_x",
                "repo_hash": "3d4a4722ed48601509ad6f3f25392be34266a04b667c6d71dacae4d164b3b380",
                "repo_path": "C:\\x_runner_x\\x_make_github_visitor_x",
                "started_at": "2025-10-14T19:54:24.714468+00:00",
                "stderr": "",
                "stdout": "run_external.py:9: error: Skipping analyzing \"x_make_github_visitor_x.x_cls_make_github_visitor_x\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nrun_external.py:9: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nrun_external.py:33: error: Explicit \"Any\" is not allowed  [explicit-any]\nrun_external.py:34: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nrun_external.py:43: error: Expression has type \"Any\"  [misc]\nrun_external.py:44: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nrun_external.py:47: error: Expression has type \"Any\"  [misc]\nrun_external.py:50: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nrun_external.py:59: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nrun_external.py:67: error: Explicit \"Any\" is not allowed  [explicit-any]\nrun_external.py:70: error: Expression has type \"Any\"  [misc]\nrun_external.py:72: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nrun_external.py:72: error: Expression has type \"Any\"  [misc]\nrun_external.py:73: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\nrun_external.py:73: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nrun_external.py:73: error: Expression has type \"Any\"  [misc]\nrun_external.py:74: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\nrun_external.py:74: error: Expression has type \"Any\"  [misc]\nrun_external.py:74: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nrun_external.py:74: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nrun_external.py:75: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nrun_external.py:75: error: Expression has type \"Any\"  [misc]\nrun_external.py:77: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_github_visitor_x.py:19: error: Skipping analyzing \"x_make_github_visitor_x.inspection_flow\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nx_cls_make_github_visitor_x.py:231: error: Type of variable becomes \"Any | None\" due to an unfollowed import  [no-any-unimported]\nx_cls_make_github_visitor_x.py:1014: error: Return type becomes \"Any\" due to an unfollowed import  [no-any-unimported]\nx_cls_make_github_visitor_x.py:1033: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:1041: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:1269: error: Return type becomes \"Any | None\" due to an unfollowed import  [no-any-unimported]\nx_cls_make_github_visitor_x.py:1270: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_visitor_x.py:1312: error: Return type becomes \"Any\" due to an unfollowed import  [no-any-unimported]\nx_cls_make_github_visitor_x.py:1346: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:1356: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_visitor_x.py:1357: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_github_visitor_x.py:1357: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:1358: error: Expression has type \"Any\"  [misc]\nx_cls_make_github_visitor_x.py:1361: error: Expression has type \"Any\"  [misc]\ninspection_flow.py:510: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninspection_flow.py:511: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_github_visitor.py:139: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:141: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:142: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:142: error: Expression type contains \"Any\" (has type \"list[tuple[Any, Any]]\")  [misc]\ntests\\test_github_visitor.py:142: error: Expression type contains \"Any\" (has type \"tuple[Any, Any]\")  [misc]\ntests\\test_github_visitor.py:146: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:147: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:148: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:149: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:150: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:193: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:194: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:195: error: Expression has type \"Any\"  [misc]\ntests\\test_github_visitor.py:196: error: Expression has type \"Any\"  [misc]\nFound 52 errors in 4 files (checked 6 source files)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 1",
            "message": "mypy failed for x_make_github_visitor_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_github_visitor_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-14T19:54:24.714468+00:00\nduration: 2.125s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nrun_external.py:9: error: Skipping analyzing \"x_make_github_visitor_x.x_cls_make_github_visitor_x\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nrun_external.py:9: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nrun_external.py:33: error: Explicit \"Any\" is not allowed  [explicit-any]\nrun_external.py:34: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nrun_external.py:43: error: Expression has type \"Any\"  [misc]\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_github_visitor_x",
            "repo_path": "C:\\x_runner_x\\x_make_github_visitor_x",
            "stderr_preview": null,
            "stdout_preview": "run_external.py:9: error: Skipping analyzing \"x_make_github_visitor_x.x_cls_make_github_visitor_x\": module is installed, but missing library stubs or py.typed marker  [import-untyped]\nrun_external.py:9: note: See https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports\nrun_external.py:33: error: Explicit \"Any\" is not allowed  [explicit-any]\nrun_external.py:34: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nrun_external.py:43: error: Expression has type \"Any\"  [misc]\n\u2026",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_github_visitor_x (exit 1) cwd: C:\\x_runner_x\\x_make_github_visitor_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-14T19:54:24.711141+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_github_visitor_x",
                "duration_seconds": 0.3210362000390887,
                "ended_at": "2025-10-14T19:54:24.711141+00:00",
                "exit": 1,
                "repo": "x_make_github_visitor_x",
                "repo_hash": "3d4a4722ed48601509ad6f3f25392be34266a04b667c6d71dacae4d164b3b380",
                "repo_path": "C:\\x_runner_x\\x_make_github_visitor_x",
                "started_at": "2025-10-14T19:54:24.390109+00:00",
                "stderr": "",
                "stdout": "TC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> inspection_flow.py:8:29\n   |\n 6 | import pickle\n 7 | import queue\n 8 | from collections.abc import Sequence\n   |                             ^^^^^^^^\n 9 | from contextlib import suppress\n10 | from dataclasses import dataclass\n   |\nhelp: Move into type-checking block\n\nPLR0915 Too many statements (92 > 50)\n   --> inspection_flow.py:227:5\n    |\n227 | def _run_visitor_in_subprocess(  # noqa: C901, PLR0912\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n228 |     root_path: Path,\n229 |     ctx: object | None,\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> run_external.py:57:12\n   |\n55 |         )\n56 |         return 1\n57 |     except Exception as err:  # pragma: no cover - defensive\n   |            ^^^^^^^^^\n58 |         _emit_payload(\n59 |             {\n   |\n\nSLF001 Private member accessed: `_root_is_git_repo`\n   --> tests\\test_github_visitor.py:208:12\n    |\n206 |     visitor = x_cls_make_github_visitor_x(workspace)\n207 |\n208 |     assert visitor._root_is_git_repo is True\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n\nFound 4 errors.\nNo fixes available (1 hidden fix can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_check",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.0"
            },
            "exit": "exit 1",
            "message": "ruff_check failed for x_make_github_visitor_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_github_visitor_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-14T19:54:24.390109+00:00\nduration: 0.321s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> inspection_flow.py:8:29\n   |\n 6 | import pickle\n 7 | import queue\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_github_visitor_x",
            "repo_path": "C:\\x_runner_x\\x_make_github_visitor_x",
            "stderr_preview": null,
            "stdout_preview": "TC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> inspection_flow.py:8:29\n   |\n 6 | import pickle\n 7 | import queue\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_check failed for x_make_github_visitor_x (exit 1) cwd: C:\\x_runner_x\\x_make_github_visitor_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version p\u2026",
            "tool": "ruff_check",
            "tool_version": "ruff 0.14.0"
        },
        {
            "captured_at": "2025-10-14T19:54:22.858752+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--fix",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_github_visitor_x",
                "duration_seconds": 0.29014319996349514,
                "ended_at": "2025-10-14T19:54:22.858752+00:00",
                "exit": 1,
                "repo": "x_make_github_visitor_x",
                "repo_hash": "3d4a4722ed48601509ad6f3f25392be34266a04b667c6d71dacae4d164b3b380",
                "repo_path": "C:\\x_runner_x\\x_make_github_visitor_x",
                "started_at": "2025-10-14T19:54:22.568615+00:00",
                "stderr": "",
                "stdout": "TC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> inspection_flow.py:8:29\n   |\n 6 | import pickle\n 7 | import queue\n 8 | from collections.abc import Sequence\n   |                             ^^^^^^^^\n 9 | from contextlib import suppress\n10 | from dataclasses import dataclass\n   |\nhelp: Move into type-checking block\n\nPLR0915 Too many statements (92 > 50)\n   --> inspection_flow.py:227:5\n    |\n227 | def _run_visitor_in_subprocess(  # noqa: C901, PLR0912\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n228 |     root_path: Path,\n229 |     ctx: object | None,\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> run_external.py:57:12\n   |\n55 |         )\n56 |         return 1\n57 |     except Exception as err:  # pragma: no cover - defensive\n   |            ^^^^^^^^^\n58 |         _emit_payload(\n59 |             {\n   |\n\nSLF001 Private member accessed: `_root_is_git_repo`\n   --> tests\\test_github_visitor.py:208:12\n    |\n206 |     visitor = x_cls_make_github_visitor_x(workspace)\n207 |\n208 |     assert visitor._root_is_git_repo is True\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n\nFound 4 errors.\nNo fixes available (1 hidden fix can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_fix",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.0"
            },
            "exit": "exit 1",
            "message": "ruff_fix failed for x_make_github_visitor_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_github_visitor_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-14T19:54:22.568615+00:00\nduration: 0.290s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> inspection_flow.py:8:29\n   |\n 6 | import pickle\n 7 | import queue\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_github_visitor_x",
            "repo_path": "C:\\x_runner_x\\x_make_github_visitor_x",
            "stderr_preview": null,
            "stdout_preview": "TC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> inspection_flow.py:8:29\n   |\n 6 | import pickle\n 7 | import queue\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_fix failed for x_make_github_visitor_x (exit 1) cwd: C:\\x_runner_x\\x_make_github_visitor_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-versi\u2026",
            "tool": "ruff_fix",
            "tool_version": "ruff 0.14.0"
        }
    ],
    "generated_at": "2025-10-14T19:55:14.722692+00:00",
    "runtime": {
        "environment": {
            "PATH": "C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\;C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\;C:\\Users\\eye43\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\eye43\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;c:\\Users\\eye43\\.vscode\\extensions\\ms-python.debugpy-2025.14.0-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\eye43\\AppData\\Roaming\\Code\\User\\globalStorage\\github.copilot-chat\\debugCommand"
        },
        "platform": "Windows-11-10.0.22631-SP0",
        "python_executable": "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
        "python_version": "3.13.7 (tags/v3.13.7:bcee1c3, Aug 14 2025, 14:15:11) [MSC v.1944 64 bit (AMD64)]",
        "run_completed_at": "2025-10-14T19:55:14.722444+00:00",
        "run_started_at": "2025-10-14T19:53:27.521648+00:00",
        "workspace_root": "C:\\x_runner_x"
    },
    "schema_version": "1.0",
    "summary": {
        "overall_stats": {
            "cache_hits": 32,
            "cache_misses": 43,
            "failed_tools": 7,
            "had_failures": true,
            "total_tools_run": 75
        },
        "repos": {
            "x_0_make_all_x": {
                "cached": 0,
                "failed": 4,
                "repo_hash": "9f8d8e13f32ebf84d3d74392838736e2426d850402d5519eaa52ffdac46a9c2f",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    }
                }
            },
            "x_legatus_acta_schedae_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "4086545fa63cb6a1c50687e6504665b0eef42bfd2c7db6b108b6c949ddc188da",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_legatus_tabula_opus_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "f4b763f6afbfa52e84a7dc5334a1fca42a6284b358ff82acbf40b0b767e3eaca",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_legatus_tactica_impetus_x": {
                "cached": 2,
                "failed": 0,
                "repo_hash": "cc97fafbcc480da07f5da6f3bf95b20b6477a3877b19257bb492c37a976161aa",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_common_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "1a2f9400440ce5d4f3b6e9377cfad2f8aced4c37c56ba23b087b1bfefbbcc59c",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_github_clones_x": {
                "cached": 5,
                "failed": 0,
                "repo_hash": "5f1c4037b899542ba442042ba042e48556fc019d2fa2a2c66020898d692abdfb",
                "tools": {
                    "black": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_github_visitor_x": {
                "cached": 0,
                "failed": 3,
                "repo_hash": "3d4a4722ed48601509ad6f3f25392be34266a04b667c6d71dacae4d164b3b380",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    }
                }
            },
            "x_make_graphviz_x": {
                "cached": 5,
                "failed": 0,
                "repo_hash": "4e98d42bf69c1c0e7077c37dbab3351afe73144e36e35eea6d92844887f7e9e9",
                "tools": {
                    "black": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_markdown_x": {
                "cached": 5,
                "failed": 0,
                "repo_hash": "0634e764feda18bf1202aac62871c55dbc57522733d4b6e5e48d35229324e5fa",
                "tools": {
                    "black": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_mermaid_x": {
                "cached": 5,
                "failed": 0,
                "repo_hash": "896b5881250edb42972d6cfe02d83b40eaefa8cefa5571a520921409c1542001",
                "tools": {
                    "black": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_persistent_env_var_x": {
                "cached": 5,
                "failed": 0,
                "repo_hash": "60badf502308026fe99ba7de71422f01bd84643e336742ec554b7e8e567bf894",
                "tools": {
                    "black": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_pip_updates_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "692bdaedd66811836f7d63ebf6159b688f8483b74734e58ec1d02ef84bda5378",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_py_mod_sideload_x": {
                "cached": 5,
                "failed": 0,
                "repo_hash": "0f81979e95fbdb9acbd9d15265f7c26703c4514e9b86168904127040d09166d8",
                "tools": {
                    "black": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": true,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_pypi_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "fffadc0446a62cf1e346a551bccbcbfd6b9547448a564a3aca371a6adc1fa97d",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_yahw_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "8a69beffc0fde663158ccd789d3d4d526db9190936702d214205e6b7927ffcc1",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            }
        },
        "timestamp": "2025-10-14T19:55:14.722736+00:00",
        "total_repos": 15
    },
    "tool_versions": {
        "black": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7",
        "mypy": "mypy 1.18.2 (compiled: yes)",
        "pyright": "pyright 1.1.406",
        "ruff": "ruff 0.14.0"
    },
    "workspace_root": "C:\\x_runner_x"
}