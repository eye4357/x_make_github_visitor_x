{
    "failures": [
        {
            "captured_at": "2025-10-21T22:14:46.516237+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_github_clones_x",
                "duration_seconds": 0.8449476000096183,
                "ended_at": "2025-10-21T22:14:46.516237+00:00",
                "exit": 2,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "fastapi/__init__.py",
                    "fastapi/__main__.py",
                    "fastapi/cli.py",
                    "fastapi_cli/__init__.py",
                    "fastapi_cli/cli.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_make_github_clones.py",
                    "x_cls_make_github_clones_x.py",
                    "x_make_github_clones_x/__init__.py",
                    "x_make_github_clones_x/x_cls_make_github_clones_x.py"
                ],
                "repo": "x_make_github_clones_x",
                "repo_hash": "b59786e4d5aef3c705f5bce65563df4ab5346b7fdfb6f5befd249c250e8cd381",
                "repo_path": "C:\\x_runner_x\\x_make_github_clones_x",
                "started_at": "2025-10-21T22:14:45.678358+00:00",
                "stderr": "",
                "stdout": "json_contracts.py: error: Source file found twice under different module names: \"json_contracts\" and \"x_make_github_clones_x.json_contracts\"\nFound 1 error in 1 file (errors prevented further checking)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 2",
            "message": "mypy failed for x_make_github_clones_x (exit 2)\ncwd: C:\\x_runner_x\\x_make_github_clones_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:14:45.678358+00:00\nduration: 0.845s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\njson_contracts.py: error: Source file found twice under different module names: \"json_contracts\" and \"x_make_github_clones_x.json_contracts\"\nFound 1 error in 1 file (errors prevented further checking)\nstderr:\n<empty>",
            "repo": "x_make_github_clones_x",
            "repo_path": "C:\\x_runner_x\\x_make_github_clones_x",
            "stderr_preview": null,
            "stdout_preview": "json_contracts.py: error: Source file found twice under different module names: \"json_contracts\" and \"x_make_github_clones_x.json_contracts\"\nFound 1 error in 1 file (errors prevented further checking)",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_github_clones_x (exit 2) cwd: C:\\x_runner_x\\x_make_github_clones_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable -\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:15:30.263810+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_graphviz_x",
                "duration_seconds": 0.5707789000007324,
                "ended_at": "2025-10-21T22:15:30.263810+00:00",
                "exit": 2,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_graphviz_builder.py",
                    "tests/test_json_contracts.py",
                    "x_cls_make_graphviz_x.py"
                ],
                "repo": "x_make_graphviz_x",
                "repo_hash": "c589918256732914e91fbe69cf87fc38a26c0e297ffb4771209412522f9d9849",
                "repo_path": "C:\\x_runner_x\\x_make_graphviz_x",
                "started_at": "2025-10-21T22:15:29.693059+00:00",
                "stderr": "",
                "stdout": "x_cls_make_graphviz_x.py: error: Source file found twice under different module names: \"x_cls_make_graphviz_x\" and \"x_make_graphviz_x.x_cls_make_graphviz_x\"\nFound 1 error in 1 file (errors prevented further checking)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 2",
            "message": "mypy failed for x_make_graphviz_x (exit 2)\ncwd: C:\\x_runner_x\\x_make_graphviz_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:15:29.693059+00:00\nduration: 0.571s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_graphviz_x.py: error: Source file found twice under different module names: \"x_cls_make_graphviz_x\" and \"x_make_graphviz_x.x_cls_make_graphviz_x\"\nFound 1 error in 1 file (errors prevented further checking)\nstderr:\n<empty>",
            "repo": "x_make_graphviz_x",
            "repo_path": "C:\\x_runner_x\\x_make_graphviz_x",
            "stderr_preview": null,
            "stdout_preview": "x_cls_make_graphviz_x.py: error: Source file found twice under different module names: \"x_cls_make_graphviz_x\" and \"x_make_graphviz_x.x_cls_make_graphviz_x\"\nFound 1 error in 1 file (errors prevented further checking)",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_graphviz_x (exit 2) cwd: C:\\x_runner_x\\x_make_graphviz_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:15:51.159630+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_markdown_x",
                "duration_seconds": 1.262447000015527,
                "ended_at": "2025-10-21T22:15:51.159630+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_markdown_builder.py",
                    "x_cls_make_markdown_x.py"
                ],
                "repo": "x_make_markdown_x",
                "repo_hash": "515d19563b523ffc7cfcf73cc0294e96dace7ac3fd9e669cc600bef995f712f7",
                "repo_path": "C:\\x_runner_x\\x_make_markdown_x",
                "started_at": "2025-10-21T22:15:49.896752+00:00",
                "stderr": "",
                "stdout": "x_cls_make_markdown_x.py:80: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:81: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:83: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:298: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:304: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:306: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:311: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:316: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:321: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:339: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_markdown_x.py:446: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_markdown_x.py:470: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_markdown_x.py:549: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:552: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:552: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_json_contracts.py:30: error: Expression has type \"Any\"  [misc]\nFound 16 errors in 2 files (checked 6 source files)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 1",
            "message": "mypy failed for x_make_markdown_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_markdown_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:15:49.896752+00:00\nduration: 1.262s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_markdown_x.py:80: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:81: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:83: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:298: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:304: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_markdown_x",
            "repo_path": "C:\\x_runner_x\\x_make_markdown_x",
            "stderr_preview": null,
            "stdout_preview": "x_cls_make_markdown_x.py:80: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:81: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:83: error: Expression has type \"Any\"  [misc]\nx_cls_make_markdown_x.py:298: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_markdown_x.py:304: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\n\u2026",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_markdown_x (exit 1) cwd: C:\\x_runner_x\\x_make_markdown_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:16:11.333752+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_mermaid_x",
                "duration_seconds": 1.32601010001963,
                "ended_at": "2025-10-21T22:16:11.333752+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_mermaid_builder.py",
                    "x_cls_make_mermaid_x.py"
                ],
                "repo": "x_make_mermaid_x",
                "repo_hash": "1abd1070db8bee30ef70050626cc65f8053ce728a07b9991631d7bd141fb89c0",
                "repo_path": "C:\\x_runner_x\\x_make_mermaid_x",
                "started_at": "2025-10-21T22:16:10.007249+00:00",
                "stderr": "",
                "stdout": "x_cls_make_mermaid_x.py:744: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_mermaid_x.py:785: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_mermaid_x.py:841: error: Expression type contains \"Any\" (has type \"MappingProxyType[Any, Any]\")  [misc]\nx_cls_make_mermaid_x.py:841: error: Expression type contains \"Any\" (has type \"MappingProxyType[Any, Any] | None\")  [misc]\nx_cls_make_mermaid_x.py:841: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_mermaid_x.py:848: error: Expression type contains \"Any\" (has type \"MappingProxyType[Any, Any] | None\")  [misc]\nx_cls_make_mermaid_x.py:850: error: Expression type contains \"Any\" (has type \"MappingProxyType[Any, Any]\")  [misc]\nx_cls_make_mermaid_x.py:900: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_mermaid_x.py:1527: error: Expression has type \"Any\"  [misc]\nx_cls_make_mermaid_x.py:1530: error: Expression has type \"Any\"  [misc]\nx_cls_make_mermaid_x.py:1530: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_json_contracts.py:28: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:70: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:71: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:79: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:81: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:82: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:86: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:118: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:141: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\ntests\\test_json_contracts.py:142: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\ntests\\test_json_contracts.py:143: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nFound 22 errors in 2 files (checked 6 source files)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 1",
            "message": "mypy failed for x_make_mermaid_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_mermaid_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:16:10.007249+00:00\nduration: 1.326s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_mermaid_x.py:744: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_mermaid_x.py:785: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_mermaid_x.py:841: error: Expression type contains \"Any\" (has type \"MappingProxyType[Any, Any]\")  [misc]\nx_cls_make_mermaid_x.py:841: error: Expression type contains \"Any\" (has type \"MappingProxyType[Any, Any] | None\")  [misc]\nx_cls_make_mermaid_x.py:841: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_mermaid_x",
            "repo_path": "C:\\x_runner_x\\x_make_mermaid_x",
            "stderr_preview": null,
            "stdout_preview": "x_cls_make_mermaid_x.py:744: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_mermaid_x.py:785: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_mermaid_x.py:841: error: Expression type contains \"Any\" (has type \"MappingProxyType[Any, Any]\")  [misc]\nx_cls_make_mermaid_x.py:841: error: Expression type contains \"Any\" (has type \"MappingProxyType[Any, Any] | None\")  [misc]\nx_cls_make_mermaid_x.py:841: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\n\u2026",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_mermaid_x (exit 1) cwd: C:\\x_runner_x\\x_make_mermaid_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-an\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:16:32.477707+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_persistent_env_var_x",
                "duration_seconds": 1.3183867000043392,
                "ended_at": "2025-10-21T22:16:32.477707+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_persistent_env.py",
                    "x_cls_make_persistent_env_var_x.py"
                ],
                "repo": "x_make_persistent_env_var_x",
                "repo_hash": "1b23429d89eaff89c8109552eb88eca2fddf28be097faea9cd5218ebe18f7b23",
                "repo_path": "C:\\x_runner_x\\x_make_persistent_env_var_x",
                "started_at": "2025-10-21T22:16:31.163234+00:00",
                "stderr": "",
                "stdout": "x_cls_make_persistent_env_var_x.py:600: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_persistent_env_var_x.py:601: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_persistent_env_var_x.py:602: error: Expression type contains \"Any\" (has type \"Callable[[], Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:602: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:1018: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_persistent_env_var_x.py:1105: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_persistent_env_var_x.py:1142: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:1145: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:1145: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_json_contracts.py:29: error: Unused \"type: ignore\" comment  [unused-ignore]\ntests\\test_json_contracts.py:32: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:35: error: Unused \"type: ignore\" comment  [unused-ignore]\ntests\\test_json_contracts.py:38: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:41: error: Unused \"type: ignore\" comment  [unused-ignore]\ntests\\test_json_contracts.py:44: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:127: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:128: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:135: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:147: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:236: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\ntests\\test_json_contracts.py:237: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\ntests\\test_json_contracts.py:238: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\ntests\\test_json_contracts.py:239: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nFound 23 errors in 2 files (checked 6 source files)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 1",
            "message": "mypy failed for x_make_persistent_env_var_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_persistent_env_var_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:16:31.163234+00:00\nduration: 1.318s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_persistent_env_var_x.py:600: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_persistent_env_var_x.py:601: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_persistent_env_var_x.py:602: error: Expression type contains \"Any\" (has type \"Callable[[], Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:602: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:1018: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_persistent_env_var_x",
            "repo_path": "C:\\x_runner_x\\x_make_persistent_env_var_x",
            "stderr_preview": null,
            "stdout_preview": "x_cls_make_persistent_env_var_x.py:600: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_persistent_env_var_x.py:601: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_persistent_env_var_x.py:602: error: Expression type contains \"Any\" (has type \"Callable[[], Any]\")  [misc]\nx_cls_make_persistent_env_var_x.py:602: error: Expression has type \"Any\"  [misc]\nx_cls_make_persistent_env_var_x.py:1018: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\n\u2026",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_persistent_env_var_x (exit 1) cwd: C:\\x_runner_x\\x_make_persistent_env_var_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unr\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:16:31.159022+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_persistent_env_var_x",
                "duration_seconds": 0.16464060000726022,
                "ended_at": "2025-10-21T22:16:31.159022+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_persistent_env.py",
                    "x_cls_make_persistent_env_var_x.py"
                ],
                "repo": "x_make_persistent_env_var_x",
                "repo_hash": "1b23429d89eaff89c8109552eb88eca2fddf28be097faea9cd5218ebe18f7b23",
                "repo_path": "C:\\x_runner_x\\x_make_persistent_env_var_x",
                "started_at": "2025-10-21T22:16:30.994280+00:00",
                "stderr": "",
                "stdout": "PLR0913 Too many arguments in function definition (6 > 5)\n   --> x_cls_make_persistent_env_var_x.py:578:5\n    |\n578 | def _attach_gui_buttons(\n    |     ^^^^^^^^^^^^^^^^^^^\n579 |     tk_mod: ModuleType,\n580 |     frame: TkFrame,\n    |\n\nPLR0913 Too many arguments in function definition (6 > 5)\n   --> x_cls_make_persistent_env_var_x.py:729:5\n    |\n729 | def _persist_value_for_spec(\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n730 |     spec: TokenSpec,\n731 |     provided: str | None,\n    |\n\nFound 2 errors.\n",
                "tool": "ruff_check",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_check failed for x_make_persistent_env_var_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_persistent_env_var_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:16:30.994280+00:00\nduration: 0.165s\ntool_version: ruff 0.14.1\nstdout:\nPLR0913 Too many arguments in function definition (6 > 5)\n   --> x_cls_make_persistent_env_var_x.py:578:5\n    |\n578 | def _attach_gui_buttons(\n    |     ^^^^^^^^^^^^^^^^^^^\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_persistent_env_var_x",
            "repo_path": "C:\\x_runner_x\\x_make_persistent_env_var_x",
            "stderr_preview": null,
            "stdout_preview": "PLR0913 Too many arguments in function definition (6 > 5)\n   --> x_cls_make_persistent_env_var_x.py:578:5\n    |\n578 | def _attach_gui_buttons(\n    |     ^^^^^^^^^^^^^^^^^^^\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_check failed for x_make_persistent_env_var_x (exit 1) cwd: C:\\x_runner_x\\x_make_persistent_env_var_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-v\u2026",
            "tool": "ruff_check",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:16:28.868376+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--fix",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_persistent_env_var_x",
                "duration_seconds": 0.2768991999910213,
                "ended_at": "2025-10-21T22:16:28.868376+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_persistent_env.py",
                    "x_cls_make_persistent_env_var_x.py"
                ],
                "repo": "x_make_persistent_env_var_x",
                "repo_hash": "1b23429d89eaff89c8109552eb88eca2fddf28be097faea9cd5218ebe18f7b23",
                "repo_path": "C:\\x_runner_x\\x_make_persistent_env_var_x",
                "started_at": "2025-10-21T22:16:28.602917+00:00",
                "stderr": "",
                "stdout": "PLR0913 Too many arguments in function definition (6 > 5)\n   --> x_cls_make_persistent_env_var_x.py:578:5\n    |\n578 | def _attach_gui_buttons(\n    |     ^^^^^^^^^^^^^^^^^^^\n579 |     tk_mod: ModuleType,\n580 |     frame: TkFrame,\n    |\n\nPLR0913 Too many arguments in function definition (6 > 5)\n   --> x_cls_make_persistent_env_var_x.py:729:5\n    |\n729 | def _persist_value_for_spec(\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n730 |     spec: TokenSpec,\n731 |     provided: str | None,\n    |\n\nFound 2 errors.\n",
                "tool": "ruff_fix",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_fix failed for x_make_persistent_env_var_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_persistent_env_var_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:16:28.602917+00:00\nduration: 0.277s\ntool_version: ruff 0.14.1\nstdout:\nPLR0913 Too many arguments in function definition (6 > 5)\n   --> x_cls_make_persistent_env_var_x.py:578:5\n    |\n578 | def _attach_gui_buttons(\n    |     ^^^^^^^^^^^^^^^^^^^\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_persistent_env_var_x",
            "repo_path": "C:\\x_runner_x\\x_make_persistent_env_var_x",
            "stderr_preview": null,
            "stdout_preview": "PLR0913 Too many arguments in function definition (6 > 5)\n   --> x_cls_make_persistent_env_var_x.py:578:5\n    |\n578 | def _attach_gui_buttons(\n    |     ^^^^^^^^^^^^^^^^^^^\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_fix failed for x_make_persistent_env_var_x (exit 1) cwd: C:\\x_runner_x\\x_make_persistent_env_var_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --targ\u2026",
            "tool": "ruff_fix",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:16:48.204778+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "black",
                    ".",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311",
                    "--check",
                    "--diff"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff",
                "cwd": "C:\\x_runner_x\\x_make_pip_updates_x",
                "duration_seconds": 1.9059295999759343,
                "ended_at": "2025-10-21T22:16:48.204778+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_pip_updates.py",
                    "update_flow.py",
                    "x_cls_make_pip_updates_x.py"
                ],
                "repo": "x_make_pip_updates_x",
                "repo_hash": "442cc79d34105f87f8fd51e31442057f1da001d0383bf0279255335d7a08045f",
                "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
                "started_at": "2025-10-21T22:16:46.298891+00:00",
                "stderr": "would reformat C:\\x_runner_x\\x_make_pip_updates_x\\update_flow.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted, 6 files would be left unchanged.\n",
                "stdout": "--- C:\\x_runner_x\\x_make_pip_updates_x\\update_flow.py\t2025-10-21 22:12:24.742618+00:00\n+++ C:\\x_runner_x\\x_make_pip_updates_x\\update_flow.py\t2025-10-21 22:16:48.037018+00:00\n@@ -691,13 +691,11 @@\n     effective_ctx = _resolve_effective_ctx(ctx, context_obj)\n \n     cloner_obj = _build_cloner(parameters.get(\"cloner\"))\n \n     class _NoopRunner(PipUpdatesRunnerProtocol):\n-        def batch_install(\n-            self, packages: Sequence[str], *, use_user: bool\n-        ) -> int:\n+        def batch_install(self, packages: Sequence[str], *, use_user: bool) -> int:\n             return 0\n \n     def _default_factory(*_args: object, **_kwargs: object) -> PipUpdatesRunnerProtocol:\n         return _NoopRunner()\n \n",
                "tool": "black",
                "tool_module": "black",
                "tool_version": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.12.6"
            },
            "exit": "exit 1",
            "message": "black failed for x_make_pip_updates_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pip_updates_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff\nstarted_at: 2025-10-21T22:16:46.298891+00:00\nduration: 1.906s\ntool_version: python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.12.6\nstdout:\n--- C:\\x_runner_x\\x_make_pip_updates_x\\update_flow.py\t2025-10-21 22:12:24.742618+00:00\n+++ C:\\x_runner_x\\x_make_pip_updates_x\\update_flow.py\t2025-10-21 22:16:48.037018+00:00\n@@ -691,13 +691,11 @@\n     effective_ctx = _resolve_effective_ctx(ctx, context_obj)\n \n\u2026\nstderr:\nwould reformat C:\\x_runner_x\\x_make_pip_updates_x\\update_flow.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted, 6 files would be left unchanged.",
            "repo": "x_make_pip_updates_x",
            "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
            "stderr_preview": "would reformat C:\\x_runner_x\\x_make_pip_updates_x\\update_flow.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted, 6 files would be left unchanged.",
            "stdout_preview": "--- C:\\x_runner_x\\x_make_pip_updates_x\\update_flow.py\t2025-10-21 22:12:24.742618+00:00\n+++ C:\\x_runner_x\\x_make_pip_updates_x\\update_flow.py\t2025-10-21 22:16:48.037018+00:00\n@@ -691,13 +691,11 @@\n     effective_ctx = _resolve_effective_ctx(ctx, context_obj)\n \n\u2026",
            "suggested_action": "Investigate",
            "summary": "black failed for x_make_pip_updates_x (exit 1) cwd: C:\\x_runner_x\\x_make_pip_updates_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff started_at: 2025-10-21T22:16:46.298891\u2026",
            "tool": "black",
            "tool_version": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.12.6"
        },
        {
            "captured_at": "2025-10-21T22:16:49.111101+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_pip_updates_x",
                "duration_seconds": 0.7687510999967344,
                "ended_at": "2025-10-21T22:16:49.111101+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_pip_updates.py",
                    "update_flow.py",
                    "x_cls_make_pip_updates_x.py"
                ],
                "repo": "x_make_pip_updates_x",
                "repo_hash": "442cc79d34105f87f8fd51e31442057f1da001d0383bf0279255335d7a08045f",
                "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
                "started_at": "2025-10-21T22:16:48.342089+00:00",
                "stderr": "",
                "stdout": "update_flow.py:86: error: Expression has type \"Any\"  [misc]\nupdate_flow.py:559: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nupdate_flow.py:582: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nupdate_flow.py:583: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nupdate_flow.py:644: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nupdate_flow.py:650: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nupdate_flow.py:730: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nupdate_flow.py:743: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nupdate_flow.py:754: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nx_cls_make_pip_updates_x.py:308: error: Expression has type \"Any\"  [misc]\nx_cls_make_pip_updates_x.py:311: error: Expression has type \"Any\"  [misc]\nx_cls_make_pip_updates_x.py:311: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_json_contracts.py:22: error: Argument 1 has incompatible type \"Callable[[], dict[str, object]]\"; expected \"Callable[[VarArg(Never), KwArg(Never)], Never]\"  [arg-type]\ntests\\test_json_contracts.py:25: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:25: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:28: error: Argument 1 has incompatible type \"Callable[[], dict[str, object]]\"; expected \"Callable[[VarArg(Never), KwArg(Never)], Never]\"  [arg-type]\ntests\\test_json_contracts.py:31: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:31: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:34: error: Argument 1 has incompatible type \"Callable[[], dict[str, object]]\"; expected \"Callable[[VarArg(Never), KwArg(Never)], Never]\"  [arg-type]\ntests\\test_json_contracts.py:37: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:37: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:60: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:61: error: Expression has type \"Any\"  [misc]\nFound 23 errors in 3 files (checked 7 source files)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 1",
            "message": "mypy failed for x_make_pip_updates_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pip_updates_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:16:48.342089+00:00\nduration: 0.769s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nupdate_flow.py:86: error: Expression has type \"Any\"  [misc]\nupdate_flow.py:559: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nupdate_flow.py:582: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nupdate_flow.py:583: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nupdate_flow.py:644: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_pip_updates_x",
            "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
            "stderr_preview": null,
            "stdout_preview": "update_flow.py:86: error: Expression has type \"Any\"  [misc]\nupdate_flow.py:559: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nupdate_flow.py:582: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nupdate_flow.py:583: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nupdate_flow.py:644: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\n\u2026",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_pip_updates_x (exit 1) cwd: C:\\x_runner_x\\x_make_pip_updates_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --dis\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:16:48.330929+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_pip_updates_x",
                "duration_seconds": 0.13146670002606697,
                "ended_at": "2025-10-21T22:16:48.330929+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_pip_updates.py",
                    "update_flow.py",
                    "x_cls_make_pip_updates_x.py"
                ],
                "repo": "x_make_pip_updates_x",
                "repo_hash": "442cc79d34105f87f8fd51e31442057f1da001d0383bf0279255335d7a08045f",
                "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
                "started_at": "2025-10-21T22:16:48.207647+00:00",
                "stderr": "",
                "stdout": "F842 Local variable `result` is annotated but never used\n   --> update_flow.py:172:5\n    |\n170 |     use_user_flag: bool,\n171 | ) -> tuple[bool, int | None]:\n172 |     result: dict[str, object]\n    |     ^^^^^^\n173 |     try:\n174 |         runner = _instantiate_runner(\n    |\n\nPLR0911 Too many return statements (7 > 6)\n   --> update_flow.py:654:5\n    |\n654 | def main_json(\n    |     ^^^^^^^^^\n655 |     payload: Mapping[str, object],\n656 |     *,\n    |\n\nARG002 Unused method argument: `packages`\n   --> update_flow.py:697:19\n    |\n695 |     class _NoopRunner(PipUpdatesRunnerProtocol):\n696 |         def batch_install(\n697 |             self, packages: Sequence[str], *, use_user: bool\n    |                   ^^^^^^^^\n698 |         ) -> int:\n699 |             return 0\n    |\n\nARG002 Unused method argument: `use_user`\n   --> update_flow.py:697:47\n    |\n695 |     class _NoopRunner(PipUpdatesRunnerProtocol):\n696 |         def batch_install(\n697 |             self, packages: Sequence[str], *, use_user: bool\n    |                                               ^^^^^^^^\n698 |         ) -> int:\n699 |             return 0\n    |\n\nTRY301 Abstract `raise` to an inner function\n   --> update_flow.py:729:17\n    |\n727 |             loaded_obj: object = json.load(handle)\n728 |             if not isinstance(loaded_obj, Mapping):\n729 |                 raise TypeError(\"pip updates report must be a mapping\")\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n730 |             result = dict(loaded_obj)\n731 |     except FileNotFoundError:\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> update_flow.py:729:23\n    |\n727 |             loaded_obj: object = json.load(handle)\n728 |             if not isinstance(loaded_obj, Mapping):\n729 |                 raise TypeError(\"pip updates report must be a mapping\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n730 |             result = dict(loaded_obj)\n731 |     except FileNotFoundError:\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> update_flow.py:729:33\n    |\n727 |             loaded_obj: object = json.load(handle)\n728 |             if not isinstance(loaded_obj, Mapping):\n729 |                 raise TypeError(\"pip updates report must be a mapping\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n730 |             result = dict(loaded_obj)\n731 |     except FileNotFoundError:\n    |\nhelp: Assign to variable; remove string literal\n\nFound 7 errors.\nNo fixes available (1 hidden fix can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_check",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_check failed for x_make_pip_updates_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pip_updates_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:16:48.207647+00:00\nduration: 0.131s\ntool_version: ruff 0.14.1\nstdout:\nF842 Local variable `result` is annotated but never used\n   --> update_flow.py:172:5\n    |\n170 |     use_user_flag: bool,\n171 | ) -> tuple[bool, int | None]:\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_pip_updates_x",
            "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
            "stderr_preview": null,
            "stdout_preview": "F842 Local variable `result` is annotated but never used\n   --> update_flow.py:172:5\n    |\n170 |     use_user_flag: bool,\n171 | ) -> tuple[bool, int | None]:\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_check failed for x_make_pip_updates_x (exit 1) cwd: C:\\x_runner_x\\x_make_pip_updates_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311 s\u2026",
            "tool": "ruff_check",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:16:46.295182+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--fix",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_pip_updates_x",
                "duration_seconds": 0.19995479998760857,
                "ended_at": "2025-10-21T22:16:46.295182+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/test_json_contracts.py",
                    "tests/test_pip_updates.py",
                    "update_flow.py",
                    "x_cls_make_pip_updates_x.py"
                ],
                "repo": "x_make_pip_updates_x",
                "repo_hash": "442cc79d34105f87f8fd51e31442057f1da001d0383bf0279255335d7a08045f",
                "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
                "started_at": "2025-10-21T22:16:46.094283+00:00",
                "stderr": "",
                "stdout": "F842 Local variable `result` is annotated but never used\n   --> update_flow.py:172:5\n    |\n170 |     use_user_flag: bool,\n171 | ) -> tuple[bool, int | None]:\n172 |     result: dict[str, object]\n    |     ^^^^^^\n173 |     try:\n174 |         runner = _instantiate_runner(\n    |\n\nPLR0911 Too many return statements (7 > 6)\n   --> update_flow.py:654:5\n    |\n654 | def main_json(\n    |     ^^^^^^^^^\n655 |     payload: Mapping[str, object],\n656 |     *,\n    |\n\nARG002 Unused method argument: `packages`\n   --> update_flow.py:697:19\n    |\n695 |     class _NoopRunner(PipUpdatesRunnerProtocol):\n696 |         def batch_install(\n697 |             self, packages: Sequence[str], *, use_user: bool\n    |                   ^^^^^^^^\n698 |         ) -> int:\n699 |             return 0\n    |\n\nARG002 Unused method argument: `use_user`\n   --> update_flow.py:697:47\n    |\n695 |     class _NoopRunner(PipUpdatesRunnerProtocol):\n696 |         def batch_install(\n697 |             self, packages: Sequence[str], *, use_user: bool\n    |                                               ^^^^^^^^\n698 |         ) -> int:\n699 |             return 0\n    |\n\nTRY301 Abstract `raise` to an inner function\n   --> update_flow.py:729:17\n    |\n727 |             loaded_obj: object = json.load(handle)\n728 |             if not isinstance(loaded_obj, Mapping):\n729 |                 raise TypeError(\"pip updates report must be a mapping\")\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n730 |             result = dict(loaded_obj)\n731 |     except FileNotFoundError:\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> update_flow.py:729:23\n    |\n727 |             loaded_obj: object = json.load(handle)\n728 |             if not isinstance(loaded_obj, Mapping):\n729 |                 raise TypeError(\"pip updates report must be a mapping\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n730 |             result = dict(loaded_obj)\n731 |     except FileNotFoundError:\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> update_flow.py:729:33\n    |\n727 |             loaded_obj: object = json.load(handle)\n728 |             if not isinstance(loaded_obj, Mapping):\n729 |                 raise TypeError(\"pip updates report must be a mapping\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n730 |             result = dict(loaded_obj)\n731 |     except FileNotFoundError:\n    |\nhelp: Assign to variable; remove string literal\n\nFound 7 errors.\nNo fixes available (1 hidden fix can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_fix",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_fix failed for x_make_pip_updates_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pip_updates_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:16:46.094283+00:00\nduration: 0.200s\ntool_version: ruff 0.14.1\nstdout:\nF842 Local variable `result` is annotated but never used\n   --> update_flow.py:172:5\n    |\n170 |     use_user_flag: bool,\n171 | ) -> tuple[bool, int | None]:\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_pip_updates_x",
            "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
            "stderr_preview": null,
            "stdout_preview": "F842 Local variable `result` is annotated but never used\n   --> update_flow.py:172:5\n    |\n170 |     use_user_flag: bool,\n171 | ) -> tuple[bool, int | None]:\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_fix failed for x_make_pip_updates_x (exit 1) cwd: C:\\x_runner_x\\x_make_pip_updates_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py3\u2026",
            "tool": "ruff_fix",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:17:08.410281+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
                "duration_seconds": 1.2149280000012368,
                "ended_at": "2025-10-21T22:17:08.410281+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_json_contracts.py",
                    "tests/test_py_module_sideload.py",
                    "x_cls_make_py_mod_sideload_x.py"
                ],
                "repo": "x_make_py_mod_sideload_x",
                "repo_hash": "cf44f1ade7c42cc22ca0974700d53e4d69a9bebd9bdb5bbc0a3cccb71d7f4f56",
                "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
                "started_at": "2025-10-21T22:17:07.196334+00:00",
                "stderr": "",
                "stdout": "x_cls_make_py_mod_sideload_x.py:102: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:103: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:105: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:108: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:115: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:116: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:119: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:216: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_py_mod_sideload_x.py:264: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:265: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:306: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_py_mod_sideload_x.py:340: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:343: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:343: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_json_contracts.py:23: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:23: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:46: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:46: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:52: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:52: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:58: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:58: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:113: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nFound 23 errors in 2 files (checked 7 source files)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 1",
            "message": "mypy failed for x_make_py_mod_sideload_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_mod_sideload_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:17:07.196334+00:00\nduration: 1.215s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_py_mod_sideload_x.py:102: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:103: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:105: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:108: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:115: error: Expression has type \"Any\"  [misc]\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_py_mod_sideload_x",
            "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "stderr_preview": null,
            "stdout_preview": "x_cls_make_py_mod_sideload_x.py:102: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:103: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:105: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_py_mod_sideload_x.py:108: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:115: error: Expression has type \"Any\"  [misc]\n\u2026",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_py_mod_sideload_x (exit 1) cwd: C:\\x_runner_x\\x_make_py_mod_sideload_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachab\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:17:07.188094+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
                "duration_seconds": 0.12699889999930747,
                "ended_at": "2025-10-21T22:17:07.188094+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_json_contracts.py",
                    "tests/test_py_module_sideload.py",
                    "x_cls_make_py_mod_sideload_x.py"
                ],
                "repo": "x_make_py_mod_sideload_x",
                "repo_hash": "cf44f1ade7c42cc22ca0974700d53e4d69a9bebd9bdb5bbc0a3cccb71d7f4f56",
                "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
                "started_at": "2025-10-21T22:17:07.065955+00:00",
                "stderr": "",
                "stdout": "C901 `main_json` is too complex (11 > 10)\n   --> x_cls_make_py_mod_sideload_x.py:210:5\n    |\n210 | def main_json(\n    |     ^^^^^^^^^\n211 |     payload: Mapping[str, object], *, ctx: object | None = None\n212 | ) -> dict[str, object]:\n    |\n\nS101 Use of `assert` detected\n   --> x_cls_make_py_mod_sideload_x.py:243:5\n    |\n241 |         return _failure_payload(message, details={\"field\": field})\n242 |\n243 |     assert base_path is not None  # mypy safeguard after validation\n    |     ^^^^^^\n244 |     assert module_name is not None\n    |\n\nS101 Use of `assert` detected\n   --> x_cls_make_py_mod_sideload_x.py:244:5\n    |\n243 |     assert base_path is not None  # mypy safeguard after validation\n244 |     assert module_name is not None\n    |     ^^^^^^\n245 |\n246 |     runner = ModuleSideloadRunner()\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_py_mod_sideload_x.py:323:19\n    |\n321 |         payload_obj: object = json.load(stream)\n322 |         if not isinstance(payload_obj, Mapping):\n323 |             raise TypeError(\"JSON payload must be a mapping\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n324 |         return cast(\"Mapping[str, object]\", payload_obj)\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_py_mod_sideload_x.py:323:29\n    |\n321 |         payload_obj: object = json.load(stream)\n322 |         if not isinstance(payload_obj, Mapping):\n323 |             raise TypeError(\"JSON payload must be a mapping\")\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n324 |         return cast(\"Mapping[str, object]\", payload_obj)\n    |\nhelp: Assign to variable; remove string literal\n\nFound 5 errors.\nNo fixes available (1 hidden fix can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_check",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_check failed for x_make_py_mod_sideload_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_mod_sideload_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:17:07.065955+00:00\nduration: 0.127s\ntool_version: ruff 0.14.1\nstdout:\nC901 `main_json` is too complex (11 > 10)\n   --> x_cls_make_py_mod_sideload_x.py:210:5\n    |\n210 | def main_json(\n    |     ^^^^^^^^^\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_py_mod_sideload_x",
            "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "stderr_preview": null,
            "stdout_preview": "C901 `main_json` is too complex (11 > 10)\n   --> x_cls_make_py_mod_sideload_x.py:210:5\n    |\n210 | def main_json(\n    |     ^^^^^^^^^\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_check failed for x_make_py_mod_sideload_x (exit 1) cwd: C:\\x_runner_x\\x_make_py_mod_sideload_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version\u2026",
            "tool": "ruff_check",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:17:05.874150+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--fix",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
                "duration_seconds": 0.15958959999261424,
                "ended_at": "2025-10-21T22:17:05.874150+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_json_contracts.py",
                    "tests/test_py_module_sideload.py",
                    "x_cls_make_py_mod_sideload_x.py"
                ],
                "repo": "x_make_py_mod_sideload_x",
                "repo_hash": "cf44f1ade7c42cc22ca0974700d53e4d69a9bebd9bdb5bbc0a3cccb71d7f4f56",
                "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
                "started_at": "2025-10-21T22:17:05.712884+00:00",
                "stderr": "",
                "stdout": "C901 `main_json` is too complex (11 > 10)\n   --> x_cls_make_py_mod_sideload_x.py:210:5\n    |\n210 | def main_json(\n    |     ^^^^^^^^^\n211 |     payload: Mapping[str, object], *, ctx: object | None = None\n212 | ) -> dict[str, object]:\n    |\n\nS101 Use of `assert` detected\n   --> x_cls_make_py_mod_sideload_x.py:243:5\n    |\n241 |         return _failure_payload(message, details={\"field\": field})\n242 |\n243 |     assert base_path is not None  # mypy safeguard after validation\n    |     ^^^^^^\n244 |     assert module_name is not None\n    |\n\nS101 Use of `assert` detected\n   --> x_cls_make_py_mod_sideload_x.py:244:5\n    |\n243 |     assert base_path is not None  # mypy safeguard after validation\n244 |     assert module_name is not None\n    |     ^^^^^^\n245 |\n246 |     runner = ModuleSideloadRunner()\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_py_mod_sideload_x.py:323:19\n    |\n321 |         payload_obj: object = json.load(stream)\n322 |         if not isinstance(payload_obj, Mapping):\n323 |             raise TypeError(\"JSON payload must be a mapping\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n324 |         return cast(\"Mapping[str, object]\", payload_obj)\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_py_mod_sideload_x.py:323:29\n    |\n321 |         payload_obj: object = json.load(stream)\n322 |         if not isinstance(payload_obj, Mapping):\n323 |             raise TypeError(\"JSON payload must be a mapping\")\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n324 |         return cast(\"Mapping[str, object]\", payload_obj)\n    |\nhelp: Assign to variable; remove string literal\n\nFound 5 errors.\nNo fixes available (1 hidden fix can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_fix",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_fix failed for x_make_py_mod_sideload_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_mod_sideload_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:17:05.712884+00:00\nduration: 0.160s\ntool_version: ruff 0.14.1\nstdout:\nC901 `main_json` is too complex (11 > 10)\n   --> x_cls_make_py_mod_sideload_x.py:210:5\n    |\n210 | def main_json(\n    |     ^^^^^^^^^\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_py_mod_sideload_x",
            "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "stderr_preview": null,
            "stdout_preview": "C901 `main_json` is too complex (11 > 10)\n   --> x_cls_make_py_mod_sideload_x.py:210:5\n    |\n210 | def main_json(\n    |     ^^^^^^^^^\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_fix failed for x_make_py_mod_sideload_x (exit 1) cwd: C:\\x_runner_x\\x_make_py_mod_sideload_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-ver\u2026",
            "tool": "ruff_fix",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:17:16.319754+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_py_venv_x",
                "duration_seconds": 0.6946252999769058,
                "ended_at": "2025-10-21T22:17:16.319754+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "x_cls_make_py_venv_x.py"
                ],
                "repo": "x_make_py_venv_x",
                "repo_hash": "304df6861289091891b6b612684ef92b492115f89c62ca3caff370bb0defc18b",
                "repo_path": "C:\\x_runner_x\\x_make_py_venv_x",
                "started_at": "2025-10-21T22:17:15.627433+00:00",
                "stderr": "",
                "stdout": "x_cls_make_py_venv_x.py:267: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:396: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:402: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:409: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:460: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:464: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:466: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:467: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:468: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:470: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:471: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:475: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:475: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:476: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:476: error: Expression type contains \"Any\" (has type \"list[Path | Any]\")  [misc]\nx_cls_make_py_venv_x.py:477: error: Expression type contains \"Any\" (has type \"Path | Any\")  [misc]\nx_cls_make_py_venv_x.py:477: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:478: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:480: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:480: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:480: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:481: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:481: error: Expression type contains \"Any\" (has type \"list[Path | Any]\")  [misc]\nx_cls_make_py_venv_x.py:482: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:482: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:483: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:485: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:491: error: Expression type contains \"Any\" (has type \"list[Path | Any]\")  [misc]\nx_cls_make_py_venv_x.py:492: error: Expression type contains \"Any\" (has type \"dict[Path | Any, Any | None]\")  [misc]\nx_cls_make_py_venv_x.py:492: error: Expression type contains \"Any\" (has type \"list[Path | Any]\")  [misc]\nx_cls_make_py_venv_x.py:493: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:493: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:493: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:494: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:494: error: Expression type contains \"Any\" (has type \"dict[Any, Any | None]\")  [misc]\nx_cls_make_py_venv_x.py:500: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:504: error: Expression type contains \"Any\" (has type \"list[Path | Any]\")  [misc]\nx_cls_make_py_venv_x.py:505: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:506: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:509: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:511: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:512: error: Expression has type \"Any\"  [misc]\nFound 42 errors in 1 file (checked 1 source file)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 1",
            "message": "mypy failed for x_make_py_venv_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_venv_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:17:15.627433+00:00\nduration: 0.695s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_py_venv_x.py:267: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:396: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:402: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:409: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:460: error: Expression has type \"Any\"  [misc]\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_py_venv_x",
            "repo_path": "C:\\x_runner_x\\x_make_py_venv_x",
            "stderr_preview": null,
            "stdout_preview": "x_cls_make_py_venv_x.py:267: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_venv_x.py:396: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:402: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:409: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_py_venv_x.py:460: error: Expression has type \"Any\"  [misc]\n\u2026",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_py_venv_x (exit 1) cwd: C:\\x_runner_x\\x_make_py_venv_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-an\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:17:15.619887+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_py_venv_x",
                "duration_seconds": 0.1267822000081651,
                "ended_at": "2025-10-21T22:17:15.619887+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "x_cls_make_py_venv_x.py"
                ],
                "repo": "x_make_py_venv_x",
                "repo_hash": "304df6861289091891b6b612684ef92b492115f89c62ca3caff370bb0defc18b",
                "repo_path": "C:\\x_runner_x\\x_make_py_venv_x",
                "started_at": "2025-10-21T22:17:15.497549+00:00",
                "stderr": "",
                "stdout": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_py_venv_x.py:12:29\n   |\n10 | import subprocess\n11 | import sys\n12 | from collections.abc import Iterable, Sequence\n   |                             ^^^^^^^^\n13 | from dataclasses import dataclass\n14 | from enum import Enum\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> x_cls_make_py_venv_x.py:12:39\n   |\n10 | import subprocess\n11 | import sys\n12 | from collections.abc import Iterable, Sequence\n   |                                       ^^^^^^^^\n13 | from dataclasses import dataclass\n14 | from enum import Enum\n   |\nhelp: Move into type-checking block\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> x_cls_make_py_venv_x.py:49:47\n   |\n47 |         major = int(parts[0])\n48 |         minor = int(parts[1]) if len(parts) > 1 and parts[1].isdigit() else 0\n49 |         patch = int(parts[2]) if len(parts) > 2 and parts[2].isdigit() else None\n   |                                               ^\n50 |         return cls(raw=text, major=major, minor=minor, patch=patch)\n   |\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:133:13\n    |\n131 |               )\n132 |           elif self.tool is Tool.CURRENT:\n133 | /             logging.info(\n134 | |                 \"Using current interpreter at %s for Python %s\",\n135 | |                 sys.executable,\n136 | |                 version.raw,\n137 | |             )\n    | |_____________^\n138 |           else:  # Tool.AUTO should never reach here\n139 |               msg = f\"Unhandled tool: {self.tool}\"\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:144:13\n    |\n142 |     def _ensure_environment(self, version: VersionRequest, env_path: Path) -> bool:\n143 |         if env_path.exists():\n144 |             logging.info(\"Environment already exists at %s\", env_path)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n145 |             return False\n146 |         if self.dry_run:\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:147:13\n    |\n145 |             return False\n146 |         if self.dry_run:\n147 |             logging.info(\"[dry-run] Would create %s\", env_path)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n148 |             return False\n149 |         env_path.parent.mkdir(parents=True, exist_ok=True)\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:184:9\n    |\n182 |             msg = f\"Unhandled tool: {self.tool}\"\n183 |             raise RuntimeError(msg)\n184 |         logging.info(\"Created environment at %s\", env_path)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n185 |         return True\n    |\nhelp: Use own logger instead\n\nLOG015 `warning()` call on root logger\n   --> x_cls_make_py_venv_x.py:218:17\n    |\n216 |         for requirement in requirement_files:\n217 |             if not requirement.exists():\n218 |                 logging.warning(\"Requirement file %s missing; skipping\", requirement)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n219 |                 continue\n220 |             self._run_command(\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:244:9\n    |\n242 |         env: dict[str, str] | None = None,\n243 |     ) -> None:\n244 |         logging.info(reason)\n    |         ^^^^^^^^^^^^^^^^^^^^\n245 |         logging.debug(\"Command: %s\", \" \".join(command))\n246 |         if self.dry_run:\n    |\nhelp: Use own logger instead\n\nLOG015 `debug()` call on root logger\n   --> x_cls_make_py_venv_x.py:245:9\n    |\n243 |     ) -> None:\n244 |         logging.info(reason)\n245 |         logging.debug(\"Command: %s\", \" \".join(command))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n246 |         if self.dry_run:\n247 |             logging.info(\"[dry-run] Skipped execution\")\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:247:13\n    |\n245 |         logging.debug(\"Command: %s\", \" \".join(command))\n246 |         if self.dry_run:\n247 |             logging.info(\"[dry-run] Skipped execution\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n248 |             return\n249 |         try:\n    |\nhelp: Use own logger instead\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_py_venv_x.py:250:13\n    |\n248 |             return\n249 |         try:\n250 |             subprocess.run(command, check=True, env=env)\n    |             ^^^^^^^^^^^^^^\n251 |         except subprocess.CalledProcessError as exc:\n252 |             msg = f\"Command failed ({reason}): {exc}\"\n    |\n\nSIM103 Return the condition `tool is Tool.CURRENT` directly\n   --> x_cls_make_py_venv_x.py:284:5\n    |\n282 |       if tool is Tool.PYLAUNCHER:\n283 |           return shutil.which(\"py\") is not None\n284 | /     if tool is Tool.CURRENT:\n285 | |         return True\n286 | |     return False\n    | |________________^\n    |\nhelp: Replace with `return tool is Tool.CURRENT`\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:297:13\n    |\n295 |     if tool is Tool.UV and _resolve_uv_executable() is None and bootstrap_uv:\n296 |         if dry_run:\n297 |             logging.info(\"[dry-run] Would install uv via pip\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n298 |             return\n299 |         logging.info(\"Installing uv via pip to provision interpreters\")\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:299:9\n    |\n297 |             logging.info(\"[dry-run] Would install uv via pip\")\n298 |             return\n299 |         logging.info(\"Installing uv via pip to provision interpreters\")\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n300 |         try:\n301 |             subprocess.run(\n    |\nhelp: Use own logger instead\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_py_venv_x.py:301:13\n    |\n299 |         logging.info(\"Installing uv via pip to provision interpreters\")\n300 |         try:\n301 |             subprocess.run(\n    |             ^^^^^^^^^^^^^^\n302 |                 [sys.executable, \"-m\", \"pip\", \"install\", \"--upgrade\", \"uv\"],\n303 |                 check=True,\n    |\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:323:5\n    |\n321 |     target = project_root / \".python-version\"\n322 |     target.write_text(f\"{version.raw}\\n\", encoding=\"utf-8\")\n323 |     logging.info(\"Pinned .python-version to %s\", version.raw)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Use own logger instead\n\nARG001 Unused function argument: `project_root`\n   --> x_cls_make_py_venv_x.py:327:5\n    |\n326 | def update_tox_ini(\n327 |     project_root: Path,\n    |     ^^^^^^^^^^^^\n328 |     versions: Sequence[VersionRequest],\n329 |     *,\n    |\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:349:5\n    |\n347 |     with tox_path.open(\"w\", encoding=\"utf-8\") as handle:\n348 |         config.write(handle)\n349 |     logging.info(\"Updated %s with envlist=%s\", tox_path, env_names)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:487:17\n    |\n485 |                   candidate_path = project_root / candidate\n486 |               if candidate_path.exists():\n487 | /                 logging.info(\n488 | |                     \"Auto-including requirements file at %s\",\n489 | |                     candidate_path,\n490 | |                 )\n    | |_________________^\n491 |                   requirements.append(candidate_path)\n492 |       requirements = list(dict.fromkeys(requirements))\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:517:5\n    |\n515 |         update_tox_ini(project_root, versions, tox_path=tox_path)\n516 |\n517 |     logging.info(\"Provisioned %d environment(s)\", len(created))\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n518 |     return 0\n    |\nhelp: Use own logger instead\n\nFound 21 errors.\nNo fixes available (3 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_check",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_check failed for x_make_py_venv_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_venv_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:17:15.497549+00:00\nduration: 0.127s\ntool_version: ruff 0.14.1\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_py_venv_x.py:12:29\n   |\n10 | import subprocess\n11 | import sys\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_py_venv_x",
            "repo_path": "C:\\x_runner_x\\x_make_py_venv_x",
            "stderr_preview": null,
            "stdout_preview": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_py_venv_x.py:12:29\n   |\n10 | import subprocess\n11 | import sys\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_check failed for x_make_py_venv_x (exit 1) cwd: C:\\x_runner_x\\x_make_py_venv_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311 started_a\u2026",
            "tool": "ruff_check",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:17:15.072432+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--fix",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_py_venv_x",
                "duration_seconds": 0.2969679000088945,
                "ended_at": "2025-10-21T22:17:15.072432+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "x_cls_make_py_venv_x.py"
                ],
                "repo": "x_make_py_venv_x",
                "repo_hash": "304df6861289091891b6b612684ef92b492115f89c62ca3caff370bb0defc18b",
                "repo_path": "C:\\x_runner_x\\x_make_py_venv_x",
                "started_at": "2025-10-21T22:17:14.774912+00:00",
                "stderr": "",
                "stdout": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_py_venv_x.py:12:29\n   |\n10 | import subprocess\n11 | import sys\n12 | from collections.abc import Iterable, Sequence\n   |                             ^^^^^^^^\n13 | from dataclasses import dataclass\n14 | from enum import Enum\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> x_cls_make_py_venv_x.py:12:39\n   |\n10 | import subprocess\n11 | import sys\n12 | from collections.abc import Iterable, Sequence\n   |                                       ^^^^^^^^\n13 | from dataclasses import dataclass\n14 | from enum import Enum\n   |\nhelp: Move into type-checking block\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> x_cls_make_py_venv_x.py:49:47\n   |\n47 |         major = int(parts[0])\n48 |         minor = int(parts[1]) if len(parts) > 1 and parts[1].isdigit() else 0\n49 |         patch = int(parts[2]) if len(parts) > 2 and parts[2].isdigit() else None\n   |                                               ^\n50 |         return cls(raw=text, major=major, minor=minor, patch=patch)\n   |\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:133:13\n    |\n131 |               )\n132 |           elif self.tool is Tool.CURRENT:\n133 | /             logging.info(\n134 | |                 \"Using current interpreter at %s for Python %s\",\n135 | |                 sys.executable,\n136 | |                 version.raw,\n137 | |             )\n    | |_____________^\n138 |           else:  # Tool.AUTO should never reach here\n139 |               msg = f\"Unhandled tool: {self.tool}\"\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:144:13\n    |\n142 |     def _ensure_environment(self, version: VersionRequest, env_path: Path) -> bool:\n143 |         if env_path.exists():\n144 |             logging.info(\"Environment already exists at %s\", env_path)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n145 |             return False\n146 |         if self.dry_run:\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:147:13\n    |\n145 |             return False\n146 |         if self.dry_run:\n147 |             logging.info(\"[dry-run] Would create %s\", env_path)\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n148 |             return False\n149 |         env_path.parent.mkdir(parents=True, exist_ok=True)\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:184:9\n    |\n182 |             msg = f\"Unhandled tool: {self.tool}\"\n183 |             raise RuntimeError(msg)\n184 |         logging.info(\"Created environment at %s\", env_path)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n185 |         return True\n    |\nhelp: Use own logger instead\n\nLOG015 `warning()` call on root logger\n   --> x_cls_make_py_venv_x.py:218:17\n    |\n216 |         for requirement in requirement_files:\n217 |             if not requirement.exists():\n218 |                 logging.warning(\"Requirement file %s missing; skipping\", requirement)\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n219 |                 continue\n220 |             self._run_command(\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:244:9\n    |\n242 |         env: dict[str, str] | None = None,\n243 |     ) -> None:\n244 |         logging.info(reason)\n    |         ^^^^^^^^^^^^^^^^^^^^\n245 |         logging.debug(\"Command: %s\", \" \".join(command))\n246 |         if self.dry_run:\n    |\nhelp: Use own logger instead\n\nLOG015 `debug()` call on root logger\n   --> x_cls_make_py_venv_x.py:245:9\n    |\n243 |     ) -> None:\n244 |         logging.info(reason)\n245 |         logging.debug(\"Command: %s\", \" \".join(command))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n246 |         if self.dry_run:\n247 |             logging.info(\"[dry-run] Skipped execution\")\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:247:13\n    |\n245 |         logging.debug(\"Command: %s\", \" \".join(command))\n246 |         if self.dry_run:\n247 |             logging.info(\"[dry-run] Skipped execution\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n248 |             return\n249 |         try:\n    |\nhelp: Use own logger instead\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_py_venv_x.py:250:13\n    |\n248 |             return\n249 |         try:\n250 |             subprocess.run(command, check=True, env=env)\n    |             ^^^^^^^^^^^^^^\n251 |         except subprocess.CalledProcessError as exc:\n252 |             msg = f\"Command failed ({reason}): {exc}\"\n    |\n\nSIM103 Return the condition `tool is Tool.CURRENT` directly\n   --> x_cls_make_py_venv_x.py:284:5\n    |\n282 |       if tool is Tool.PYLAUNCHER:\n283 |           return shutil.which(\"py\") is not None\n284 | /     if tool is Tool.CURRENT:\n285 | |         return True\n286 | |     return False\n    | |________________^\n    |\nhelp: Replace with `return tool is Tool.CURRENT`\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:297:13\n    |\n295 |     if tool is Tool.UV and _resolve_uv_executable() is None and bootstrap_uv:\n296 |         if dry_run:\n297 |             logging.info(\"[dry-run] Would install uv via pip\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n298 |             return\n299 |         logging.info(\"Installing uv via pip to provision interpreters\")\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:299:9\n    |\n297 |             logging.info(\"[dry-run] Would install uv via pip\")\n298 |             return\n299 |         logging.info(\"Installing uv via pip to provision interpreters\")\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n300 |         try:\n301 |             subprocess.run(\n    |\nhelp: Use own logger instead\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_py_venv_x.py:301:13\n    |\n299 |         logging.info(\"Installing uv via pip to provision interpreters\")\n300 |         try:\n301 |             subprocess.run(\n    |             ^^^^^^^^^^^^^^\n302 |                 [sys.executable, \"-m\", \"pip\", \"install\", \"--upgrade\", \"uv\"],\n303 |                 check=True,\n    |\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:323:5\n    |\n321 |     target = project_root / \".python-version\"\n322 |     target.write_text(f\"{version.raw}\\n\", encoding=\"utf-8\")\n323 |     logging.info(\"Pinned .python-version to %s\", version.raw)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Use own logger instead\n\nARG001 Unused function argument: `project_root`\n   --> x_cls_make_py_venv_x.py:327:5\n    |\n326 | def update_tox_ini(\n327 |     project_root: Path,\n    |     ^^^^^^^^^^^^\n328 |     versions: Sequence[VersionRequest],\n329 |     *,\n    |\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:349:5\n    |\n347 |     with tox_path.open(\"w\", encoding=\"utf-8\") as handle:\n348 |         config.write(handle)\n349 |     logging.info(\"Updated %s with envlist=%s\", tox_path, env_names)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:487:17\n    |\n485 |                   candidate_path = project_root / candidate\n486 |               if candidate_path.exists():\n487 | /                 logging.info(\n488 | |                     \"Auto-including requirements file at %s\",\n489 | |                     candidate_path,\n490 | |                 )\n    | |_________________^\n491 |                   requirements.append(candidate_path)\n492 |       requirements = list(dict.fromkeys(requirements))\n    |\nhelp: Use own logger instead\n\nLOG015 `info()` call on root logger\n   --> x_cls_make_py_venv_x.py:517:5\n    |\n515 |         update_tox_ini(project_root, versions, tox_path=tox_path)\n516 |\n517 |     logging.info(\"Provisioned %d environment(s)\", len(created))\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n518 |     return 0\n    |\nhelp: Use own logger instead\n\nFound 21 errors.\nNo fixes available (3 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_fix",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_fix failed for x_make_py_venv_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_venv_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:17:14.774912+00:00\nduration: 0.297s\ntool_version: ruff 0.14.1\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_py_venv_x.py:12:29\n   |\n10 | import subprocess\n11 | import sys\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_py_venv_x",
            "repo_path": "C:\\x_runner_x\\x_make_py_venv_x",
            "stderr_preview": null,
            "stdout_preview": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_py_venv_x.py:12:29\n   |\n10 | import subprocess\n11 | import sys\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_fix failed for x_make_py_venv_x (exit 1) cwd: C:\\x_runner_x\\x_make_py_venv_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311 start\u2026",
            "tool": "ruff_fix",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:17:37.731018+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_pypi_x",
                "duration_seconds": 1.317597300017951,
                "ended_at": "2025-10-21T22:17:37.731018+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "publish_flow.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_json_contracts.py",
                    "tests/test_main_json.py",
                    "x_cls_make_pypi_x.py"
                ],
                "repo": "x_make_pypi_x",
                "repo_hash": "9a6e6ccd208a9c5b19165ab998f7b7476567f3bc4f502ad8e9043f0d32afd1cf",
                "repo_path": "C:\\x_runner_x\\x_make_pypi_x",
                "started_at": "2025-10-21T22:17:36.412821+00:00",
                "stderr": "",
                "stdout": "publish_flow.py:18: error: Unused \"type: ignore\" comment  [unused-ignore]\npublish_flow.py:20: error: Incompatible types in assignment (expression has type \"None\", variable has type Module)  [assignment]\npublish_flow.py:66: error: Expression has type \"Any\"  [misc]\npublish_flow.py:68: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:546: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_pypi_x.py:637: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:638: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:660: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_pypi_x.py:722: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_pypi_x.py:723: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_pypi_x.py:729: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:739: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:745: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_pypi_x.py:746: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_pypi_x.py:746: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_pypi_x.py:751: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_pypi_x.py:778: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:781: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:781: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_json_contracts.py:22: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:22: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:28: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:28: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:34: error: Returning Any from function declared to return \"dict[str, object]\"  [no-any-return]\ntests\\test_json_contracts.py:34: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:60: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:61: error: Expression has type \"Any\"  [misc]\ntests\\test_main_json.py:27: error: Explicit \"Any\" is not allowed  [explicit-any]\ntests\\test_main_json.py:121: error: Explicit \"Any\" is not allowed  [explicit-any]\ntests\\test_main_json.py:123: error: Explicit \"Any\" is not allowed  [explicit-any]\ntests\\test_main_json.py:132: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:132: error: Expression type contains \"Any\" (has type \"Sequence[Any]\")  [misc]\ntests\\test_main_json.py:133: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:134: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:135: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:136: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:138: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:141: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:148: error: Expression type contains \"Any\" (has type \"Callable[[Sequence[Any], NamedArg(object, 'cloner'), NamedArg(object | None, 'ctx'), NamedArg(str, 'repo_parent_root'), NamedArg(object, 'publisher_factory'), NamedArg(str, 'token_env')], tuple[dict[str, str | None], dict[str, dict[str, object]], Path]]\")  [misc]\ntests\\test_main_json.py:155: error: Explicit \"Any\" is not allowed  [explicit-any]\ntests\\test_main_json.py:155: error: Expression type contains \"Any\" (has type \"Sequence[Any]\")  [misc]\ntests\\test_main_json.py:155: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:156: error: Expression type contains \"Any\" (has type \"Sequence[Any]\")  [misc]\ntests\\test_main_json.py:156: error: Expression type contains \"Any\" (has type \"Sequence[Any] | Any\")  [misc]\ntests\\test_main_json.py:156: error: Expression has type \"Any\"  [misc]\ntests\\test_main_json.py:157: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:157: error: Expression has type \"Any\"  [misc]\ntests\\test_main_json.py:158: error: Expression has type \"Any\"  [misc]\ntests\\test_main_json.py:158: error: Expression type contains \"Any\" (has type \"type[SimpleNamespace]\")  [misc]\ntests\\test_main_json.py:159: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\ntests\\test_main_json.py:160: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:160: error: Expression has type \"Any\"  [misc]\ntests\\test_main_json.py:161: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:161: error: Expression has type \"Any\"  [misc]\ntests\\test_main_json.py:162: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ntests\\test_main_json.py:162: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_main_json.py:163: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_main_json.py:164: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\ntests\\test_main_json.py:164: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\ntests\\test_main_json.py:164: error: Expression has type \"Any\"  [misc]\ntests\\test_main_json.py:173: error: Explicit \"Any\" is not allowed  [explicit-any]\ntests\\test_main_json.py:181: error: Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), KwArg(Any)], tuple[dict[str, str | None], dict[str, dict[str, object]], Path]]\")  [misc]\nFound 62 errors in 4 files (checked 8 source files)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 1",
            "message": "mypy failed for x_make_pypi_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pypi_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:17:36.412821+00:00\nduration: 1.318s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\npublish_flow.py:18: error: Unused \"type: ignore\" comment  [unused-ignore]\npublish_flow.py:20: error: Incompatible types in assignment (expression has type \"None\", variable has type Module)  [assignment]\npublish_flow.py:66: error: Expression has type \"Any\"  [misc]\npublish_flow.py:68: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:546: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_pypi_x",
            "repo_path": "C:\\x_runner_x\\x_make_pypi_x",
            "stderr_preview": null,
            "stdout_preview": "publish_flow.py:18: error: Unused \"type: ignore\" comment  [unused-ignore]\npublish_flow.py:20: error: Incompatible types in assignment (expression has type \"None\", variable has type Module)  [assignment]\npublish_flow.py:66: error: Expression has type \"Any\"  [misc]\npublish_flow.py:68: error: Expression has type \"Any\"  [misc]\nx_cls_make_pypi_x.py:546: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\n\u2026",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_pypi_x (exit 1) cwd: C:\\x_runner_x\\x_make_pypi_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unim\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:17:36.398954+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_pypi_x",
                "duration_seconds": 0.12902650001342408,
                "ended_at": "2025-10-21T22:17:36.398954+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "publish_flow.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_json_contracts.py",
                    "tests/test_main_json.py",
                    "x_cls_make_pypi_x.py"
                ],
                "repo": "x_make_pypi_x",
                "repo_hash": "9a6e6ccd208a9c5b19165ab998f7b7476567f3bc4f502ad8e9043f0d32afd1cf",
                "repo_path": "C:\\x_runner_x\\x_make_pypi_x",
                "started_at": "2025-10-21T22:17:36.279196+00:00",
                "stderr": "",
                "stdout": "TC003 Move standard library import `types.ModuleType` into a type-checking block\n  --> publish_flow.py:14:19\n   |\n12 | from os import PathLike\n13 | from pathlib import Path\n14 | from types import ModuleType\n   |                   ^^^^^^^^^^\n15 | from typing import TYPE_CHECKING, Protocol, cast\n   |\nhelp: Move into type-checking block\n\nE402 Module level import not at top of file\n  --> publish_flow.py:24:1\n   |\n22 |   winreg: ModuleType | None = _winreg\n23 |\n24 | / from x_make_common_x import (\n25 | |     HttpClient,\n26 | |     HttpError,\n27 | |     isoformat_timestamp,\n28 | |     log_error,\n29 | |     log_info,\n30 | |     write_run_report,\n31 | | )\n   | |_^\n32 |\n33 |   PACKAGE_ROOT = Path(__file__).resolve().parent\n   |\n\nC901 `_prime_twine_credentials` is too complex (12 > 10)\n  --> publish_flow.py:90:5\n   |\n90 | def _prime_twine_credentials(token_env: str) -> str | None:\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n91 |     token_sources: list[str] = []\n92 |     if token_env:\n   |\n\nS105 Possible hardcoded password assigned to: \"password_env\"\n   --> publish_flow.py:135:24\n    |\n133 |     if token_value:\n134 |         username_env = \"TWINE_USERNAME\"\n135 |         password_env = \"TWINE_PASSWORD\"\n    |                        ^^^^^^^^^^^^^^^^\n136 |         os.environ[username_env] = \"__token__\"\n137 |         os.environ[password_env] = token_value\n    |\n\nSIM102 Use a single `if` statement instead of nested `if` statements\n   --> publish_flow.py:142:5\n    |\n140 |       repository_env = \"TWINE_REPOSITORY_URL\"\n141 |       repo_present = bool(os.environ.get(repository_env, \"\").strip())\n142 | /     if not repo_present and selected_source:\n143 | |         if \"test\" in selected_source.lower():\n    | |_____________________________________________^\n144 |               os.environ[repository_env] = \"https://test.pypi.org/legacy/\"\n145 |               _info(\"Configured Twine repository for TestPyPI uploads.\")\n    |\nhelp: Combine `if` statements using `and`\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> tests\\test_main_json.py:7:29\n  |\n5 | import os\n6 | import sys\n7 | from collections.abc import Mapping, Sequence\n  |                             ^^^^^^^\n8 | from datetime import datetime\n9 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> tests\\test_main_json.py:7:38\n  |\n5 | import os\n6 | import sys\n7 | from collections.abc import Mapping, Sequence\n  |                                      ^^^^^^^^\n8 | from datetime import datetime\n9 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n  --> tests\\test_main_json.py:9:21\n   |\n 7 | from collections.abc import Mapping, Sequence\n 8 | from datetime import datetime\n 9 | from pathlib import Path\n   |                     ^^^^\n10 | from types import ModuleType, SimpleNamespace\n11 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `pytest` into a type-checking block\n  --> tests\\test_main_json.py:13:8\n   |\n11 | from typing import Any, cast\n12 |\n13 | import pytest\n   |        ^^^^^^\n14 | from x_make_common_x.json_contracts import validate_payload\n   |\nhelp: Move into type-checking block\n\nDTZ001 `datetime.datetime()` called without a `tzinfo` argument\n  --> tests\\test_main_json.py:30:28\n   |\n28 |     return {\n29 |         \"run_id\": \"0123456789abcdef0123456789abcdef\",\n30 |         \"started_at\": _iso(datetime(2025, 1, 1, 12, 0, 0)),\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n31 |         \"inputs\": {\n32 |             \"entry_count\": 1,\n   |\nhelp: Pass a `datetime.timezone` object to the `tzinfo` parameter\n\nDTZ001 `datetime.datetime()` called without a `tzinfo` argument\n  --> tests\\test_main_json.py:67:30\n   |\n65 |         },\n66 |         \"status\": \"completed\",\n67 |         \"completed_at\": _iso(datetime(2025, 1, 1, 12, 5, 0)),\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n68 |         \"duration_seconds\": 300.0,\n69 |         \"tool\": \"x_make_pypi_x\",\n   |\nhelp: Pass a `datetime.timezone` object to the `tzinfo` parameter\n\nDTZ001 `datetime.datetime()` called without a `tzinfo` argument\n  --> tests\\test_main_json.py:70:30\n   |\n68 |         \"duration_seconds\": 300.0,\n69 |         \"tool\": \"x_make_pypi_x\",\n70 |         \"generated_at\": _iso(datetime(2025, 1, 1, 12, 5, 0)),\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n71 |         \"errors\": [],\n72 |     }\n   |\nhelp: Pass a `datetime.timezone` object to the `tzinfo` parameter\n\nPLR0913 Too many arguments in function definition (6 > 5)\n   --> tests\\test_main_json.py:123:9\n    |\n121 |     calls: dict[str, Any] = {}\n122 |\n123 |     def fake_publish(\n    |         ^^^^^^^^^^^^\n124 |         entries: Sequence[Any],\n125 |         *,\n    |\n\nARG001 Unused function argument: `cloner`\n   --> tests\\test_main_json.py:126:9\n    |\n124 |         entries: Sequence[Any],\n125 |         *,\n126 |         cloner: object,\n    |         ^^^^^^\n127 |         ctx: object | None,\n128 |         repo_parent_root: str,\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:156:5\n    |\n155 |     entries = cast(\"Sequence[Any]\", calls[\"entries\"])\n156 |     assert entries and entries[0].package == \"demo_pkg\"\n    |     ^^^^^^\n157 |     ctx = calls[\"ctx\"]\n158 |     assert isinstance(ctx, SimpleNamespace)\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_main_json.py:156:5\n    |\n155 |     entries = cast(\"Sequence[Any]\", calls[\"entries\"])\n156 |     assert entries and entries[0].package == \"demo_pkg\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n157 |     ctx = calls[\"ctx\"]\n158 |     assert isinstance(ctx, SimpleNamespace)\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:158:5\n    |\n156 |     assert entries and entries[0].package == \"demo_pkg\"\n157 |     ctx = calls[\"ctx\"]\n158 |     assert isinstance(ctx, SimpleNamespace)\n    |     ^^^^^^\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:159:5\n    |\n157 |     ctx = calls[\"ctx\"]\n158 |     assert isinstance(ctx, SimpleNamespace)\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n    |     ^^^^^^\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:160:5\n    |\n158 |     assert isinstance(ctx, SimpleNamespace)\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n    |     ^^^^^^\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:161:5\n    |\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n    |     ^^^^^^\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n163 |     assert callable(publisher_factory_obj)\n    |\n\nS105 Possible hardcoded password assigned to: \"token_env\"\n   --> tests\\test_main_json.py:161:34\n    |\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n    |                                  ^^^^^^^^^^^^\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n163 |     assert callable(publisher_factory_obj)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:163:5\n    |\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n163 |     assert callable(publisher_factory_obj)\n    |     ^^^^^^\n164 |     assert getattr(publisher_factory_obj, \"__name__\", \"\") == \"FakePublisher\"\n165 |     status_value = result.get(\"status\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:164:5\n    |\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n163 |     assert callable(publisher_factory_obj)\n164 |     assert getattr(publisher_factory_obj, \"__name__\", \"\") == \"FakePublisher\"\n    |     ^^^^^^\n165 |     status_value = result.get(\"status\")\n166 |     assert isinstance(status_value, str)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:166:5\n    |\n164 |     assert getattr(publisher_factory_obj, \"__name__\", \"\") == \"FakePublisher\"\n165 |     status_value = result.get(\"status\")\n166 |     assert isinstance(status_value, str)\n    |     ^^^^^^\n167 |     assert status_value == \"completed\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:167:5\n    |\n165 |     status_value = result.get(\"status\")\n166 |     assert isinstance(status_value, str)\n167 |     assert status_value == \"completed\"\n    |     ^^^^^^\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*_`\n   --> tests\\test_main_json.py:174:13\n    |\n172 | ) -> None:\n173 |     def failing_publish(\n174 |         *_: Any, **__: Any\n    |             ^^^\n175 |     ) -> tuple[dict[str, str | None], dict[str, dict[str, object]], Path]:\n176 |         report_path = tmp_path / \"reports\" / \"failed.json\"\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**__`\n   --> tests\\test_main_json.py:174:24\n    |\n172 | ) -> None:\n173 |     def failing_publish(\n174 |         *_: Any, **__: Any\n    |                        ^^^\n175 |     ) -> tuple[dict[str, str | None], dict[str, dict[str, object]], Path]:\n176 |         report_path = tmp_path / \"reports\" / \"failed.json\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:189:5\n    |\n188 |     details_obj = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n189 |     assert details_obj is not None\n    |     ^^^^^^\n190 |     assert \"run_report_path\" in details_obj\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:190:5\n    |\n188 |     details_obj = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n189 |     assert details_obj is not None\n190 |     assert \"run_report_path\" in details_obj\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:197:5\n    |\n195 |     validate_payload(result, ERROR_SCHEMA)\n196 |     status_value = result.get(\"status\")\n197 |     assert isinstance(status_value, str)\n    |     ^^^^^^\n198 |     assert status_value == \"failure\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:198:5\n    |\n196 |     status_value = result.get(\"status\")\n197 |     assert isinstance(status_value, str)\n198 |     assert status_value == \"failure\"\n    |     ^^^^^^\n    |\n\nS105 Possible hardcoded password assigned to: \"token_value\"\n   --> tests\\test_main_json.py:204:19\n    |\n202 |     monkeypatch: pytest.MonkeyPatch,\n203 | ) -> None:\n204 |     token_value = \"pypi-AgENdGVzdC10b2tlbg\"\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n205 |     monkeypatch.delenv(\"TWINE_API_TOKEN\", raising=False)\n206 |     monkeypatch.delenv(\"TWINE_USERNAME\", raising=False)\n    |\n\nSLF001 Private member accessed: `_prime_twine_credentials`\n   --> tests\\test_main_json.py:211:16\n    |\n209 |     monkeypatch.setenv(custom_env, token_value)\n210 |\n211 |     selected = publish_flow._prime_twine_credentials(custom_env)\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n212 |\n213 |     assert selected == custom_env\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:213:5\n    |\n211 |     selected = publish_flow._prime_twine_credentials(custom_env)\n212 |\n213 |     assert selected == custom_env\n    |     ^^^^^^\n214 |     assert os.environ[\"TWINE_API_TOKEN\"] == token_value\n215 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:214:5\n    |\n213 |     assert selected == custom_env\n214 |     assert os.environ[\"TWINE_API_TOKEN\"] == token_value\n    |     ^^^^^^\n215 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n216 |     assert os.environ[\"TWINE_PASSWORD\"] == token_value\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:215:5\n    |\n213 |     assert selected == custom_env\n214 |     assert os.environ[\"TWINE_API_TOKEN\"] == token_value\n215 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n    |     ^^^^^^\n216 |     assert os.environ[\"TWINE_PASSWORD\"] == token_value\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:216:5\n    |\n214 |     assert os.environ[\"TWINE_API_TOKEN\"] == token_value\n215 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n216 |     assert os.environ[\"TWINE_PASSWORD\"] == token_value\n    |     ^^^^^^\n    |\n\nSLF001 Private member accessed: `_prime_twine_credentials`\n   --> tests\\test_main_json.py:226:16\n    |\n224 |     monkeypatch.setenv(\"TWINE_PASSWORD\", \"custom-pass\")\n225 |\n226 |     selected = publish_flow._prime_twine_credentials(\"\")\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n227 |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:228:5\n    |\n226 |     selected = publish_flow._prime_twine_credentials(\"\")\n227 |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n    |     ^^^^^^\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:229:5\n    |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n    |     ^^^^^^\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |\n\nS105 Possible hardcoded password assigned to: \"TWINE_API_TOKEN\"\n   --> tests\\test_main_json.py:229:45\n    |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n    |                                             ^^^^^^^^^^\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:230:5\n    |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n    |     ^^^^^^\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:231:5\n    |\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |     ^^^^^^\n    |\n\nS105 Possible hardcoded password assigned to: \"TWINE_PASSWORD\"\n   --> tests\\test_main_json.py:231:44\n    |\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |                                            ^^^^^^^^^^\n    |\n\nPLR0915 Too many statements (53 > 50)\n   --> x_cls_make_pypi_x.py:434:9\n    |\n432 |                 raise FileNotFoundError(message)\n433 |\n434 |     def publish(  # noqa: C901, PLR0912\n    |         ^^^^^^^\n435 |         self,\n436 |         main_file: str,\n    |\n\nSIM105 Use `contextlib.suppress(ValidationError)` instead of `try`-`except`-`pass`\n   --> x_cls_make_pypi_x.py:544:5\n    |\n542 |       if details:\n543 |           payload[\"details\"] = {str(key): value for key, value in details.items()}\n544 | /     try:\n545 | |         validate_payload(payload, ERROR_SCHEMA)\n546 | |     except ValidationError:\n547 | |         pass\n    | |____________^\n548 |       return payload\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(ValidationError): ...`\n\nS101 Use of `assert` detected\n   --> x_cls_make_pypi_x.py:610:5\n    |\n608 |     package = _normalize_string(entry.get(\"package\"))\n609 |     version = _normalize_string(entry.get(\"version\"))\n610 |     assert package and version  # schema validation guarantees presence\n    |     ^^^^^^\n611 |     return ManifestEntry(\n612 |         package=package,\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> x_cls_make_pypi_x.py:610:5\n    |\n608 |     package = _normalize_string(entry.get(\"package\"))\n609 |     version = _normalize_string(entry.get(\"version\"))\n610 |     assert package and version  # schema validation guarantees presence\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n611 |     return ManifestEntry(\n612 |         package=package,\n    |\nhelp: Break down assertion into multiple parts\n\nSLF001 Private member accessed: `_parent_ctx`\n   --> x_cls_make_pypi_x.py:651:9\n    |\n649 |     namespace = SimpleNamespace(**{str(key): value for key, value in overrides.items()})\n650 |     if ctx is not None:\n651 |         namespace._parent_ctx = ctx\n    |         ^^^^^^^^^^^^^^^^^^^^^\n652 |     return namespace\n    |\n\nPLR0911 Too many return statements (7 > 6)\n   --> x_cls_make_pypi_x.py:655:5\n    |\n655 | def main_json(\n    |     ^^^^^^^^^\n656 |     payload: Mapping[str, object], *, ctx: object | None = None\n657 | ) -> dict[str, object]:\n    |\n\nPERF401 Use a list comprehension to create a transformed list\n   --> x_cls_make_pypi_x.py:677:13\n    |\n675 |     for entry_obj in entries_raw:\n676 |         if isinstance(entry_obj, Mapping):\n677 |             manifest_entries.append(_entry_from_json(entry_obj))\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n678 |\n679 |     repo_root_obj = parameters.get(\"repo_parent_root\")\n    |\nhelp: Replace for loop with list comprehension\n\nFound 51 errors.\nNo fixes available (9 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_check",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_check failed for x_make_pypi_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pypi_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:17:36.279196+00:00\nduration: 0.129s\ntool_version: ruff 0.14.1\nstdout:\nTC003 Move standard library import `types.ModuleType` into a type-checking block\n  --> publish_flow.py:14:19\n   |\n12 | from os import PathLike\n13 | from pathlib import Path\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_pypi_x",
            "repo_path": "C:\\x_runner_x\\x_make_pypi_x",
            "stderr_preview": null,
            "stdout_preview": "TC003 Move standard library import `types.ModuleType` into a type-checking block\n  --> publish_flow.py:14:19\n   |\n12 | from os import PathLike\n13 | from pathlib import Path\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_check failed for x_make_pypi_x (exit 1) cwd: C:\\x_runner_x\\x_make_pypi_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311 started_at: 202\u2026",
            "tool": "ruff_check",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:17:34.726150+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--fix",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_pypi_x",
                "duration_seconds": 0.24759549999726005,
                "ended_at": "2025-10-21T22:17:34.726150+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "publish_flow.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_json_contracts.py",
                    "tests/test_main_json.py",
                    "x_cls_make_pypi_x.py"
                ],
                "repo": "x_make_pypi_x",
                "repo_hash": "9a6e6ccd208a9c5b19165ab998f7b7476567f3bc4f502ad8e9043f0d32afd1cf",
                "repo_path": "C:\\x_runner_x\\x_make_pypi_x",
                "started_at": "2025-10-21T22:17:34.478124+00:00",
                "stderr": "",
                "stdout": "TC003 Move standard library import `types.ModuleType` into a type-checking block\n  --> publish_flow.py:14:19\n   |\n12 | from os import PathLike\n13 | from pathlib import Path\n14 | from types import ModuleType\n   |                   ^^^^^^^^^^\n15 | from typing import TYPE_CHECKING, Protocol, cast\n   |\nhelp: Move into type-checking block\n\nE402 Module level import not at top of file\n  --> publish_flow.py:24:1\n   |\n22 |   winreg: ModuleType | None = _winreg\n23 |\n24 | / from x_make_common_x import (\n25 | |     HttpClient,\n26 | |     HttpError,\n27 | |     isoformat_timestamp,\n28 | |     log_error,\n29 | |     log_info,\n30 | |     write_run_report,\n31 | | )\n   | |_^\n32 |\n33 |   PACKAGE_ROOT = Path(__file__).resolve().parent\n   |\n\nC901 `_prime_twine_credentials` is too complex (12 > 10)\n  --> publish_flow.py:90:5\n   |\n90 | def _prime_twine_credentials(token_env: str) -> str | None:\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n91 |     token_sources: list[str] = []\n92 |     if token_env:\n   |\n\nS105 Possible hardcoded password assigned to: \"password_env\"\n   --> publish_flow.py:135:24\n    |\n133 |     if token_value:\n134 |         username_env = \"TWINE_USERNAME\"\n135 |         password_env = \"TWINE_PASSWORD\"\n    |                        ^^^^^^^^^^^^^^^^\n136 |         os.environ[username_env] = \"__token__\"\n137 |         os.environ[password_env] = token_value\n    |\n\nSIM102 Use a single `if` statement instead of nested `if` statements\n   --> publish_flow.py:142:5\n    |\n140 |       repository_env = \"TWINE_REPOSITORY_URL\"\n141 |       repo_present = bool(os.environ.get(repository_env, \"\").strip())\n142 | /     if not repo_present and selected_source:\n143 | |         if \"test\" in selected_source.lower():\n    | |_____________________________________________^\n144 |               os.environ[repository_env] = \"https://test.pypi.org/legacy/\"\n145 |               _info(\"Configured Twine repository for TestPyPI uploads.\")\n    |\nhelp: Combine `if` statements using `and`\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> tests\\test_main_json.py:7:29\n  |\n5 | import os\n6 | import sys\n7 | from collections.abc import Mapping, Sequence\n  |                             ^^^^^^^\n8 | from datetime import datetime\n9 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> tests\\test_main_json.py:7:38\n  |\n5 | import os\n6 | import sys\n7 | from collections.abc import Mapping, Sequence\n  |                                      ^^^^^^^^\n8 | from datetime import datetime\n9 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n  --> tests\\test_main_json.py:9:21\n   |\n 7 | from collections.abc import Mapping, Sequence\n 8 | from datetime import datetime\n 9 | from pathlib import Path\n   |                     ^^^^\n10 | from types import ModuleType, SimpleNamespace\n11 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `pytest` into a type-checking block\n  --> tests\\test_main_json.py:13:8\n   |\n11 | from typing import Any, cast\n12 |\n13 | import pytest\n   |        ^^^^^^\n14 | from x_make_common_x.json_contracts import validate_payload\n   |\nhelp: Move into type-checking block\n\nDTZ001 `datetime.datetime()` called without a `tzinfo` argument\n  --> tests\\test_main_json.py:30:28\n   |\n28 |     return {\n29 |         \"run_id\": \"0123456789abcdef0123456789abcdef\",\n30 |         \"started_at\": _iso(datetime(2025, 1, 1, 12, 0, 0)),\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n31 |         \"inputs\": {\n32 |             \"entry_count\": 1,\n   |\nhelp: Pass a `datetime.timezone` object to the `tzinfo` parameter\n\nDTZ001 `datetime.datetime()` called without a `tzinfo` argument\n  --> tests\\test_main_json.py:67:30\n   |\n65 |         },\n66 |         \"status\": \"completed\",\n67 |         \"completed_at\": _iso(datetime(2025, 1, 1, 12, 5, 0)),\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n68 |         \"duration_seconds\": 300.0,\n69 |         \"tool\": \"x_make_pypi_x\",\n   |\nhelp: Pass a `datetime.timezone` object to the `tzinfo` parameter\n\nDTZ001 `datetime.datetime()` called without a `tzinfo` argument\n  --> tests\\test_main_json.py:70:30\n   |\n68 |         \"duration_seconds\": 300.0,\n69 |         \"tool\": \"x_make_pypi_x\",\n70 |         \"generated_at\": _iso(datetime(2025, 1, 1, 12, 5, 0)),\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n71 |         \"errors\": [],\n72 |     }\n   |\nhelp: Pass a `datetime.timezone` object to the `tzinfo` parameter\n\nPLR0913 Too many arguments in function definition (6 > 5)\n   --> tests\\test_main_json.py:123:9\n    |\n121 |     calls: dict[str, Any] = {}\n122 |\n123 |     def fake_publish(\n    |         ^^^^^^^^^^^^\n124 |         entries: Sequence[Any],\n125 |         *,\n    |\n\nARG001 Unused function argument: `cloner`\n   --> tests\\test_main_json.py:126:9\n    |\n124 |         entries: Sequence[Any],\n125 |         *,\n126 |         cloner: object,\n    |         ^^^^^^\n127 |         ctx: object | None,\n128 |         repo_parent_root: str,\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:156:5\n    |\n155 |     entries = cast(\"Sequence[Any]\", calls[\"entries\"])\n156 |     assert entries and entries[0].package == \"demo_pkg\"\n    |     ^^^^^^\n157 |     ctx = calls[\"ctx\"]\n158 |     assert isinstance(ctx, SimpleNamespace)\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_main_json.py:156:5\n    |\n155 |     entries = cast(\"Sequence[Any]\", calls[\"entries\"])\n156 |     assert entries and entries[0].package == \"demo_pkg\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n157 |     ctx = calls[\"ctx\"]\n158 |     assert isinstance(ctx, SimpleNamespace)\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:158:5\n    |\n156 |     assert entries and entries[0].package == \"demo_pkg\"\n157 |     ctx = calls[\"ctx\"]\n158 |     assert isinstance(ctx, SimpleNamespace)\n    |     ^^^^^^\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:159:5\n    |\n157 |     ctx = calls[\"ctx\"]\n158 |     assert isinstance(ctx, SimpleNamespace)\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n    |     ^^^^^^\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:160:5\n    |\n158 |     assert isinstance(ctx, SimpleNamespace)\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n    |     ^^^^^^\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:161:5\n    |\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n    |     ^^^^^^\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n163 |     assert callable(publisher_factory_obj)\n    |\n\nS105 Possible hardcoded password assigned to: \"token_env\"\n   --> tests\\test_main_json.py:161:34\n    |\n159 |     assert getattr(ctx, \"dry_run\", False) is True\n160 |     assert calls[\"repo_parent_root\"] == str(tmp_path)\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n    |                                  ^^^^^^^^^^^^\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n163 |     assert callable(publisher_factory_obj)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:163:5\n    |\n161 |     assert calls[\"token_env\"] == \"CUSTOM_ENV\"\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n163 |     assert callable(publisher_factory_obj)\n    |     ^^^^^^\n164 |     assert getattr(publisher_factory_obj, \"__name__\", \"\") == \"FakePublisher\"\n165 |     status_value = result.get(\"status\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:164:5\n    |\n162 |     publisher_factory_obj = calls.get(\"publisher_factory\")\n163 |     assert callable(publisher_factory_obj)\n164 |     assert getattr(publisher_factory_obj, \"__name__\", \"\") == \"FakePublisher\"\n    |     ^^^^^^\n165 |     status_value = result.get(\"status\")\n166 |     assert isinstance(status_value, str)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:166:5\n    |\n164 |     assert getattr(publisher_factory_obj, \"__name__\", \"\") == \"FakePublisher\"\n165 |     status_value = result.get(\"status\")\n166 |     assert isinstance(status_value, str)\n    |     ^^^^^^\n167 |     assert status_value == \"completed\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:167:5\n    |\n165 |     status_value = result.get(\"status\")\n166 |     assert isinstance(status_value, str)\n167 |     assert status_value == \"completed\"\n    |     ^^^^^^\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*_`\n   --> tests\\test_main_json.py:174:13\n    |\n172 | ) -> None:\n173 |     def failing_publish(\n174 |         *_: Any, **__: Any\n    |             ^^^\n175 |     ) -> tuple[dict[str, str | None], dict[str, dict[str, object]], Path]:\n176 |         report_path = tmp_path / \"reports\" / \"failed.json\"\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**__`\n   --> tests\\test_main_json.py:174:24\n    |\n172 | ) -> None:\n173 |     def failing_publish(\n174 |         *_: Any, **__: Any\n    |                        ^^^\n175 |     ) -> tuple[dict[str, str | None], dict[str, dict[str, object]], Path]:\n176 |         report_path = tmp_path / \"reports\" / \"failed.json\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:189:5\n    |\n188 |     details_obj = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n189 |     assert details_obj is not None\n    |     ^^^^^^\n190 |     assert \"run_report_path\" in details_obj\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:190:5\n    |\n188 |     details_obj = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n189 |     assert details_obj is not None\n190 |     assert \"run_report_path\" in details_obj\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:197:5\n    |\n195 |     validate_payload(result, ERROR_SCHEMA)\n196 |     status_value = result.get(\"status\")\n197 |     assert isinstance(status_value, str)\n    |     ^^^^^^\n198 |     assert status_value == \"failure\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:198:5\n    |\n196 |     status_value = result.get(\"status\")\n197 |     assert isinstance(status_value, str)\n198 |     assert status_value == \"failure\"\n    |     ^^^^^^\n    |\n\nS105 Possible hardcoded password assigned to: \"token_value\"\n   --> tests\\test_main_json.py:204:19\n    |\n202 |     monkeypatch: pytest.MonkeyPatch,\n203 | ) -> None:\n204 |     token_value = \"pypi-AgENdGVzdC10b2tlbg\"\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n205 |     monkeypatch.delenv(\"TWINE_API_TOKEN\", raising=False)\n206 |     monkeypatch.delenv(\"TWINE_USERNAME\", raising=False)\n    |\n\nSLF001 Private member accessed: `_prime_twine_credentials`\n   --> tests\\test_main_json.py:211:16\n    |\n209 |     monkeypatch.setenv(custom_env, token_value)\n210 |\n211 |     selected = publish_flow._prime_twine_credentials(custom_env)\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n212 |\n213 |     assert selected == custom_env\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:213:5\n    |\n211 |     selected = publish_flow._prime_twine_credentials(custom_env)\n212 |\n213 |     assert selected == custom_env\n    |     ^^^^^^\n214 |     assert os.environ[\"TWINE_API_TOKEN\"] == token_value\n215 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:214:5\n    |\n213 |     assert selected == custom_env\n214 |     assert os.environ[\"TWINE_API_TOKEN\"] == token_value\n    |     ^^^^^^\n215 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n216 |     assert os.environ[\"TWINE_PASSWORD\"] == token_value\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:215:5\n    |\n213 |     assert selected == custom_env\n214 |     assert os.environ[\"TWINE_API_TOKEN\"] == token_value\n215 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n    |     ^^^^^^\n216 |     assert os.environ[\"TWINE_PASSWORD\"] == token_value\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:216:5\n    |\n214 |     assert os.environ[\"TWINE_API_TOKEN\"] == token_value\n215 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n216 |     assert os.environ[\"TWINE_PASSWORD\"] == token_value\n    |     ^^^^^^\n    |\n\nSLF001 Private member accessed: `_prime_twine_credentials`\n   --> tests\\test_main_json.py:226:16\n    |\n224 |     monkeypatch.setenv(\"TWINE_PASSWORD\", \"custom-pass\")\n225 |\n226 |     selected = publish_flow._prime_twine_credentials(\"\")\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n227 |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:228:5\n    |\n226 |     selected = publish_flow._prime_twine_credentials(\"\")\n227 |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n    |     ^^^^^^\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:229:5\n    |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n    |     ^^^^^^\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |\n\nS105 Possible hardcoded password assigned to: \"TWINE_API_TOKEN\"\n   --> tests\\test_main_json.py:229:45\n    |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n    |                                             ^^^^^^^^^^\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:230:5\n    |\n228 |     assert selected == \"TWINE_API_TOKEN\"\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n    |     ^^^^^^\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_main_json.py:231:5\n    |\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |     ^^^^^^\n    |\n\nS105 Possible hardcoded password assigned to: \"TWINE_PASSWORD\"\n   --> tests\\test_main_json.py:231:44\n    |\n229 |     assert os.environ[\"TWINE_API_TOKEN\"] == \"existing\"\n230 |     assert os.environ[\"TWINE_USERNAME\"] == \"__token__\"\n231 |     assert os.environ[\"TWINE_PASSWORD\"] == \"existing\"\n    |                                            ^^^^^^^^^^\n    |\n\nPLR0915 Too many statements (53 > 50)\n   --> x_cls_make_pypi_x.py:434:9\n    |\n432 |                 raise FileNotFoundError(message)\n433 |\n434 |     def publish(  # noqa: C901, PLR0912\n    |         ^^^^^^^\n435 |         self,\n436 |         main_file: str,\n    |\n\nSIM105 Use `contextlib.suppress(ValidationError)` instead of `try`-`except`-`pass`\n   --> x_cls_make_pypi_x.py:544:5\n    |\n542 |       if details:\n543 |           payload[\"details\"] = {str(key): value for key, value in details.items()}\n544 | /     try:\n545 | |         validate_payload(payload, ERROR_SCHEMA)\n546 | |     except ValidationError:\n547 | |         pass\n    | |____________^\n548 |       return payload\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(ValidationError): ...`\n\nS101 Use of `assert` detected\n   --> x_cls_make_pypi_x.py:610:5\n    |\n608 |     package = _normalize_string(entry.get(\"package\"))\n609 |     version = _normalize_string(entry.get(\"version\"))\n610 |     assert package and version  # schema validation guarantees presence\n    |     ^^^^^^\n611 |     return ManifestEntry(\n612 |         package=package,\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> x_cls_make_pypi_x.py:610:5\n    |\n608 |     package = _normalize_string(entry.get(\"package\"))\n609 |     version = _normalize_string(entry.get(\"version\"))\n610 |     assert package and version  # schema validation guarantees presence\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n611 |     return ManifestEntry(\n612 |         package=package,\n    |\nhelp: Break down assertion into multiple parts\n\nSLF001 Private member accessed: `_parent_ctx`\n   --> x_cls_make_pypi_x.py:651:9\n    |\n649 |     namespace = SimpleNamespace(**{str(key): value for key, value in overrides.items()})\n650 |     if ctx is not None:\n651 |         namespace._parent_ctx = ctx\n    |         ^^^^^^^^^^^^^^^^^^^^^\n652 |     return namespace\n    |\n\nPLR0911 Too many return statements (7 > 6)\n   --> x_cls_make_pypi_x.py:655:5\n    |\n655 | def main_json(\n    |     ^^^^^^^^^\n656 |     payload: Mapping[str, object], *, ctx: object | None = None\n657 | ) -> dict[str, object]:\n    |\n\nPERF401 Use a list comprehension to create a transformed list\n   --> x_cls_make_pypi_x.py:677:13\n    |\n675 |     for entry_obj in entries_raw:\n676 |         if isinstance(entry_obj, Mapping):\n677 |             manifest_entries.append(_entry_from_json(entry_obj))\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n678 |\n679 |     repo_root_obj = parameters.get(\"repo_parent_root\")\n    |\nhelp: Replace for loop with list comprehension\n\nFound 51 errors.\nNo fixes available (9 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_fix",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_fix failed for x_make_pypi_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pypi_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:17:34.478124+00:00\nduration: 0.248s\ntool_version: ruff 0.14.1\nstdout:\nTC003 Move standard library import `types.ModuleType` into a type-checking block\n  --> publish_flow.py:14:19\n   |\n12 | from os import PathLike\n13 | from pathlib import Path\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_pypi_x",
            "repo_path": "C:\\x_runner_x\\x_make_pypi_x",
            "stderr_preview": null,
            "stdout_preview": "TC003 Move standard library import `types.ModuleType` into a type-checking block\n  --> publish_flow.py:14:19\n   |\n12 | from os import PathLike\n13 | from pathlib import Path\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_fix failed for x_make_pypi_x (exit 1) cwd: C:\\x_runner_x\\x_make_pypi_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311 started_at:\u2026",
            "tool": "ruff_fix",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:17:57.436091+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "mypy",
                    ".",
                    "--strict",
                    "--no-warn-unused-configs",
                    "--show-error-codes",
                    "--warn-return-any",
                    "--warn-unreachable",
                    "--disallow-any-unimported",
                    "--disallow-any-expr",
                    "--disallow-any-decorated",
                    "--disallow-any-explicit"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
                "cwd": "C:\\x_runner_x\\x_make_yahw_x",
                "duration_seconds": 1.1911576999991667,
                "ended_at": "2025-10-21T22:17:57.436091+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_json_contracts.py",
                    "tests/test_main_json.py",
                    "tests/test_yahw.py",
                    "x_cls_make_yahw_x.py"
                ],
                "repo": "x_make_yahw_x",
                "repo_hash": "61b7ffc612b6b4592ef28d8d4e6865da8c53dab3f5ef13c2929655bccd33088d",
                "repo_path": "C:\\x_runner_x\\x_make_yahw_x",
                "started_at": "2025-10-21T22:17:56.244183+00:00",
                "stderr": "",
                "stdout": "x_cls_make_yahw_x.py:63: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_yahw_x.py:101: error: Argument 1 to \"len\" has incompatible type \"object\"; expected \"Sized\"  [arg-type]\nx_cls_make_yahw_x.py:115: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_yahw_x.py:143: error: Expression has type \"Any\"  [misc]\nx_cls_make_yahw_x.py:146: error: Expression has type \"Any\"  [misc]\nx_cls_make_yahw_x.py:146: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_json_contracts.py:24: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:26: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:28: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:30: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:31: error: Expression has type \"Any\"  [misc]\ntests\\test_json_contracts.py:32: error: Expression has type \"Any\"  [misc]\ntests\\test_yahw.py:50: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_yahw.py:51: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ntests\\test_main_json.py:51: error: Expression type contains \"Any\" (has type \"type[SimpleNamespace]\")  [misc]\ntests\\test_main_json.py:52: error: Expression has type \"Any\"  [misc]\ntests\\test_main_json.py:53: error: Expression has type \"Any\"  [misc]\nFound 17 errors in 4 files (checked 8 source files)\n",
                "tool": "mypy",
                "tool_module": "mypy",
                "tool_version": "mypy 1.18.2 (compiled: yes)"
            },
            "exit": "exit 1",
            "message": "mypy failed for x_make_yahw_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_yahw_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-21T22:17:56.244183+00:00\nduration: 1.191s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_yahw_x.py:63: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_yahw_x.py:101: error: Argument 1 to \"len\" has incompatible type \"object\"; expected \"Sized\"  [arg-type]\nx_cls_make_yahw_x.py:115: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_yahw_x.py:143: error: Expression has type \"Any\"  [misc]\nx_cls_make_yahw_x.py:146: error: Expression has type \"Any\"  [misc]\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_yahw_x",
            "repo_path": "C:\\x_runner_x\\x_make_yahw_x",
            "stderr_preview": null,
            "stdout_preview": "x_cls_make_yahw_x.py:63: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_yahw_x.py:101: error: Argument 1 to \"len\" has incompatible type \"object\"; expected \"Sized\"  [arg-type]\nx_cls_make_yahw_x.py:115: error: Expression type contains \"Any\" (has type \"type[ValidationError]\")  [misc]\nx_cls_make_yahw_x.py:143: error: Expression has type \"Any\"  [misc]\nx_cls_make_yahw_x.py:146: error: Expression has type \"Any\"  [misc]\n\u2026",
            "suggested_action": "Investigate",
            "summary": "mypy failed for x_make_yahw_x (exit 1) cwd: C:\\x_runner_x\\x_make_yahw_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unim\u2026",
            "tool": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "captured_at": "2025-10-21T22:17:56.229637+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_yahw_x",
                "duration_seconds": 0.13041499999235384,
                "ended_at": "2025-10-21T22:17:56.229637+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_json_contracts.py",
                    "tests/test_main_json.py",
                    "tests/test_yahw.py",
                    "x_cls_make_yahw_x.py"
                ],
                "repo": "x_make_yahw_x",
                "repo_hash": "61b7ffc612b6b4592ef28d8d4e6865da8c53dab3f5ef13c2929655bccd33088d",
                "repo_path": "C:\\x_runner_x\\x_make_yahw_x",
                "started_at": "2025-10-21T22:17:56.110213+00:00",
                "stderr": "",
                "stdout": "S101 Use of `assert` detected\n  --> tests\\test_main_json.py:45:5\n   |\n43 |     validate_payload(result, OUTPUT_SCHEMA)\n44 |\n45 |     assert result[\"message\"] == \"Hello integration!\"\n   |     ^^^^^^\n46 |     metadata = cast(\"Mapping[str, object]\", result.get(\"metadata\", {}))\n47 |     assert metadata\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:47:5\n   |\n45 |     assert result[\"message\"] == \"Hello integration!\"\n46 |     metadata = cast(\"Mapping[str, object]\", result.get(\"metadata\", {}))\n47 |     assert metadata\n   |     ^^^^^^\n48 |     assert metadata.get(\"context_entries\") == 2\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:48:5\n   |\n46 |     metadata = cast(\"Mapping[str, object]\", result.get(\"metadata\", {}))\n47 |     assert metadata\n48 |     assert metadata.get(\"context_entries\") == 2\n   |     ^^^^^^\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n50 |     ctx_obj = captured_context[\"ctx\"]\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> tests\\test_main_json.py:48:47\n   |\n46 |     metadata = cast(\"Mapping[str, object]\", result.get(\"metadata\", {}))\n47 |     assert metadata\n48 |     assert metadata.get(\"context_entries\") == 2\n   |                                               ^\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n50 |     ctx_obj = captured_context[\"ctx\"]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:49:5\n   |\n47 |     assert metadata\n48 |     assert metadata.get(\"context_entries\") == 2\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n   |     ^^^^^^\n50 |     ctx_obj = captured_context[\"ctx\"]\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:51:5\n   |\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n50 |     ctx_obj = captured_context[\"ctx\"]\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n   |     ^^^^^^\n52 |     assert ctx_obj.invoked_by == \"json-test\"\n53 |     assert ctx_obj.attempt == 3\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:52:5\n   |\n50 |     ctx_obj = captured_context[\"ctx\"]\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n52 |     assert ctx_obj.invoked_by == \"json-test\"\n   |     ^^^^^^\n53 |     assert ctx_obj.attempt == 3\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:53:5\n   |\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n52 |     assert ctx_obj.invoked_by == \"json-test\"\n53 |     assert ctx_obj.attempt == 3\n   |     ^^^^^^\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n  --> tests\\test_main_json.py:53:31\n   |\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n52 |     assert ctx_obj.invoked_by == \"json-test\"\n53 |     assert ctx_obj.attempt == 3\n   |                               ^\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> tests\\test_main_json.py:59:32\n   |\n57 |     class FailingRunner(XClsMakeYahwX):\n58 |         def run(self) -> str:\n59 |             raise RuntimeError(\"boom\")\n   |                                ^^^^^^\n60 |\n61 |     monkeypatch.setattr(yahw_module, \"XClsMakeYahwX\", FailingRunner)\n   |\nhelp: Assign to variable; remove string literal\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:67:5\n   |\n66 |     validate_payload(result, ERROR_SCHEMA)\n67 |     assert result[\"status\"] == \"failure\"\n   |     ^^^^^^\n68 |     details = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n69 |     assert details is not None and \"boom\" in str(details.get(\"error\"))\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:69:5\n   |\n67 |     assert result[\"status\"] == \"failure\"\n68 |     details = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n69 |     assert details is not None and \"boom\" in str(details.get(\"error\"))\n   |     ^^^^^^\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_main_json.py:69:5\n   |\n67 |     assert result[\"status\"] == \"failure\"\n68 |     details = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n69 |     assert details is not None and \"boom\" in str(details.get(\"error\"))\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:75:5\n   |\n73 |     result = main_json({})\n74 |     validate_payload(result, ERROR_SCHEMA)\n75 |     assert result[\"status\"] == \"failure\"\n   |     ^^^^^^\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> tests\\test_yahw.py:65:34\n   |\n63 |         spec.loader.exec_module(module)\n64 |\n65 |     assert excinfo.value.code == 2\n   |                                  ^\n66 |     output = capsys.readouterr()\n67 |     assert \"JSON input required\" in output.err\n   |\n\nSLF001 Private member accessed: `_parent_ctx`\n  --> x_cls_make_yahw_x.py:54:9\n   |\n52 |     namespace = SimpleNamespace(**{str(key): value for key, value in overrides.items()})\n53 |     if ctx is not None:\n54 |         namespace._parent_ctx = ctx\n   |         ^^^^^^^^^^^^^^^^^^^^^\n55 |     return namespace\n   |\n\nSIM118 Use `key in dict` instead of `key in dict.keys()`\n   --> x_cls_make_yahw_x.py:100:56\n    |\n 98 |     metadata: dict[str, object] = {}\n 99 |     if context_mapping:\n100 |         metadata[\"context_keys\"] = sorted(str(key) for key in context_mapping.keys())\n    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n101 |         metadata[\"context_entries\"] = len(metadata[\"context_keys\"])\n102 |     if runtime_ctx is not ctx and runtime_ctx is not None and ctx is not None:\n    |\nhelp: Remove `.keys()`\n\nFound 17 errors.\nNo fixes available (3 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_check",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_check failed for x_make_yahw_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_yahw_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:17:56.110213+00:00\nduration: 0.130s\ntool_version: ruff 0.14.1\nstdout:\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:45:5\n   |\n43 |     validate_payload(result, OUTPUT_SCHEMA)\n44 |\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_yahw_x",
            "repo_path": "C:\\x_runner_x\\x_make_yahw_x",
            "stderr_preview": null,
            "stdout_preview": "S101 Use of `assert` detected\n  --> tests\\test_main_json.py:45:5\n   |\n43 |     validate_payload(result, OUTPUT_SCHEMA)\n44 |\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_check failed for x_make_yahw_x (exit 1) cwd: C:\\x_runner_x\\x_make_yahw_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311 started_at: 202\u2026",
            "tool": "ruff_check",
            "tool_version": "ruff 0.14.1"
        },
        {
            "captured_at": "2025-10-21T22:17:54.788313+00:00",
            "command": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "detail": {
                "cached": false,
                "cmd": [
                    "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                    "-m",
                    "ruff",
                    "check",
                    ".",
                    "--fix",
                    "--select",
                    "ALL",
                    "--ignore",
                    "D,COM812,ISC001,T20",
                    "--line-length",
                    "88",
                    "--target-version",
                    "py311"
                ],
                "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
                "cwd": "C:\\x_runner_x\\x_make_yahw_x",
                "duration_seconds": 0.13715319999027997,
                "ended_at": "2025-10-21T22:17:54.788313+00:00",
                "exit": 1,
                "failed_files": [],
                "files_checked": [
                    "__init__.py",
                    "json_contracts.py",
                    "tests/__init__.py",
                    "tests/conftest.py",
                    "tests/test_json_contracts.py",
                    "tests/test_main_json.py",
                    "tests/test_yahw.py",
                    "x_cls_make_yahw_x.py"
                ],
                "repo": "x_make_yahw_x",
                "repo_hash": "61b7ffc612b6b4592ef28d8d4e6865da8c53dab3f5ef13c2929655bccd33088d",
                "repo_path": "C:\\x_runner_x\\x_make_yahw_x",
                "started_at": "2025-10-21T22:17:54.652280+00:00",
                "stderr": "",
                "stdout": "S101 Use of `assert` detected\n  --> tests\\test_main_json.py:45:5\n   |\n43 |     validate_payload(result, OUTPUT_SCHEMA)\n44 |\n45 |     assert result[\"message\"] == \"Hello integration!\"\n   |     ^^^^^^\n46 |     metadata = cast(\"Mapping[str, object]\", result.get(\"metadata\", {}))\n47 |     assert metadata\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:47:5\n   |\n45 |     assert result[\"message\"] == \"Hello integration!\"\n46 |     metadata = cast(\"Mapping[str, object]\", result.get(\"metadata\", {}))\n47 |     assert metadata\n   |     ^^^^^^\n48 |     assert metadata.get(\"context_entries\") == 2\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:48:5\n   |\n46 |     metadata = cast(\"Mapping[str, object]\", result.get(\"metadata\", {}))\n47 |     assert metadata\n48 |     assert metadata.get(\"context_entries\") == 2\n   |     ^^^^^^\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n50 |     ctx_obj = captured_context[\"ctx\"]\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> tests\\test_main_json.py:48:47\n   |\n46 |     metadata = cast(\"Mapping[str, object]\", result.get(\"metadata\", {}))\n47 |     assert metadata\n48 |     assert metadata.get(\"context_entries\") == 2\n   |                                               ^\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n50 |     ctx_obj = captured_context[\"ctx\"]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:49:5\n   |\n47 |     assert metadata\n48 |     assert metadata.get(\"context_entries\") == 2\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n   |     ^^^^^^\n50 |     ctx_obj = captured_context[\"ctx\"]\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:51:5\n   |\n49 |     assert metadata.get(\"context_keys\") == [\"attempt\", \"invoked_by\"]\n50 |     ctx_obj = captured_context[\"ctx\"]\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n   |     ^^^^^^\n52 |     assert ctx_obj.invoked_by == \"json-test\"\n53 |     assert ctx_obj.attempt == 3\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:52:5\n   |\n50 |     ctx_obj = captured_context[\"ctx\"]\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n52 |     assert ctx_obj.invoked_by == \"json-test\"\n   |     ^^^^^^\n53 |     assert ctx_obj.attempt == 3\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:53:5\n   |\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n52 |     assert ctx_obj.invoked_by == \"json-test\"\n53 |     assert ctx_obj.attempt == 3\n   |     ^^^^^^\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n  --> tests\\test_main_json.py:53:31\n   |\n51 |     assert isinstance(ctx_obj, SimpleNamespace)\n52 |     assert ctx_obj.invoked_by == \"json-test\"\n53 |     assert ctx_obj.attempt == 3\n   |                               ^\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> tests\\test_main_json.py:59:32\n   |\n57 |     class FailingRunner(XClsMakeYahwX):\n58 |         def run(self) -> str:\n59 |             raise RuntimeError(\"boom\")\n   |                                ^^^^^^\n60 |\n61 |     monkeypatch.setattr(yahw_module, \"XClsMakeYahwX\", FailingRunner)\n   |\nhelp: Assign to variable; remove string literal\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:67:5\n   |\n66 |     validate_payload(result, ERROR_SCHEMA)\n67 |     assert result[\"status\"] == \"failure\"\n   |     ^^^^^^\n68 |     details = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n69 |     assert details is not None and \"boom\" in str(details.get(\"error\"))\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:69:5\n   |\n67 |     assert result[\"status\"] == \"failure\"\n68 |     details = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n69 |     assert details is not None and \"boom\" in str(details.get(\"error\"))\n   |     ^^^^^^\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_main_json.py:69:5\n   |\n67 |     assert result[\"status\"] == \"failure\"\n68 |     details = cast(\"Mapping[str, object] | None\", result.get(\"details\"))\n69 |     assert details is not None and \"boom\" in str(details.get(\"error\"))\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:75:5\n   |\n73 |     result = main_json({})\n74 |     validate_payload(result, ERROR_SCHEMA)\n75 |     assert result[\"status\"] == \"failure\"\n   |     ^^^^^^\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> tests\\test_yahw.py:65:34\n   |\n63 |         spec.loader.exec_module(module)\n64 |\n65 |     assert excinfo.value.code == 2\n   |                                  ^\n66 |     output = capsys.readouterr()\n67 |     assert \"JSON input required\" in output.err\n   |\n\nSLF001 Private member accessed: `_parent_ctx`\n  --> x_cls_make_yahw_x.py:54:9\n   |\n52 |     namespace = SimpleNamespace(**{str(key): value for key, value in overrides.items()})\n53 |     if ctx is not None:\n54 |         namespace._parent_ctx = ctx\n   |         ^^^^^^^^^^^^^^^^^^^^^\n55 |     return namespace\n   |\n\nSIM118 Use `key in dict` instead of `key in dict.keys()`\n   --> x_cls_make_yahw_x.py:100:56\n    |\n 98 |     metadata: dict[str, object] = {}\n 99 |     if context_mapping:\n100 |         metadata[\"context_keys\"] = sorted(str(key) for key in context_mapping.keys())\n    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n101 |         metadata[\"context_entries\"] = len(metadata[\"context_keys\"])\n102 |     if runtime_ctx is not ctx and runtime_ctx is not None and ctx is not None:\n    |\nhelp: Remove `.keys()`\n\nFound 17 errors.\nNo fixes available (3 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
                "tool": "ruff_fix",
                "tool_module": "ruff",
                "tool_version": "ruff 0.14.1"
            },
            "exit": "exit 1",
            "message": "ruff_fix failed for x_make_yahw_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_yahw_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-21T22:17:54.652280+00:00\nduration: 0.137s\ntool_version: ruff 0.14.1\nstdout:\nS101 Use of `assert` detected\n  --> tests\\test_main_json.py:45:5\n   |\n43 |     validate_payload(result, OUTPUT_SCHEMA)\n44 |\n\u2026\nstderr:\n<empty>",
            "repo": "x_make_yahw_x",
            "repo_path": "C:\\x_runner_x\\x_make_yahw_x",
            "stderr_preview": null,
            "stdout_preview": "S101 Use of `assert` detected\n  --> tests\\test_main_json.py:45:5\n   |\n43 |     validate_payload(result, OUTPUT_SCHEMA)\n44 |\n\u2026",
            "suggested_action": "Investigate",
            "summary": "ruff_fix failed for x_make_yahw_x (exit 1) cwd: C:\\x_runner_x\\x_make_yahw_x command: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311 started_at:\u2026",
            "tool": "ruff_fix",
            "tool_version": "ruff 0.14.1"
        }
    ],
    "generated_at": "2025-10-21T22:17:59.191114+00:00",
    "runtime": {
        "environment": {
            "PATH": "C:\\x_runner_x\\.venv\\Lib\\site-packages\\PySide6;C:\\windows\\system32;C:\\windows;C:\\windows\\System32\\Wbem;C:\\windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\windows\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\HP\\HP One Agent;C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Launcher\\;C:\\Users\\eye43\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;c:\\Users\\eye43\\.vscode\\extensions\\ms-python.debugpy-2025.14.1-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\eye43\\AppData\\Roaming\\Code\\User\\globalStorage\\github.copilot-chat\\debugCommand"
        },
        "platform": "Windows-11-10.0.26100-SP0",
        "python_executable": "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
        "python_version": "3.12.6 (main, Sep  9 2024, 20:50:27) [MSC v.1929 64 bit (AMD64)]",
        "run_completed_at": "2025-10-21T22:17:59.191114+00:00",
        "run_started_at": "2025-10-21T22:12:52.128311+00:00",
        "workspace_root": "C:\\x_runner_x"
    },
    "schema_version": "1.0",
    "summary": {
        "overall_stats": {
            "cache_hits": 0,
            "cache_misses": 75,
            "failed_tools": 23,
            "had_failures": true,
            "total_tools_run": 75
        },
        "repos": {
            "x_0_make_all_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "03aae27d011ffe3196f259cf03a52a36014dcd8d4d84f32a68116d994edebf48",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_legatus_acta_schedae_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "fb26eda5d5c43517fce12a07ebd1e8940f344b8c6ecbd49a821f0c469abe9d61",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_legatus_tactica_impetus_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "9fe8fa5da6bb7971aae3acb28f1cc21b176c9c0916997a30407b350986bb270b",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_common_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "2b45f1ae17e4eaa08b3e60e0a976749e4d27f0907a184c262c33f22e6ae56c58",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_github_clones_x": {
                "cached": 0,
                "failed": 1,
                "repo_hash": "b59786e4d5aef3c705f5bce65563df4ab5346b7fdfb6f5befd249c250e8cd381",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 2,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_github_visitor_x": {
                "cached": 0,
                "failed": 0,
                "repo_hash": "d5e3bf88c872e86e93834e4c7b1e2e4b3a356547086e18e355dd907c82b4e813",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_graphviz_x": {
                "cached": 0,
                "failed": 1,
                "repo_hash": "c589918256732914e91fbe69cf87fc38a26c0e297ffb4771209412522f9d9849",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 2,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_markdown_x": {
                "cached": 0,
                "failed": 1,
                "repo_hash": "515d19563b523ffc7cfcf73cc0294e96dace7ac3fd9e669cc600bef995f712f7",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_mermaid_x": {
                "cached": 0,
                "failed": 1,
                "repo_hash": "1abd1070db8bee30ef70050626cc65f8053ce728a07b9991631d7bd141fb89c0",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    }
                }
            },
            "x_make_persistent_env_var_x": {
                "cached": 0,
                "failed": 3,
                "repo_hash": "1b23429d89eaff89c8109552eb88eca2fddf28be097faea9cd5218ebe18f7b23",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    }
                }
            },
            "x_make_pip_updates_x": {
                "cached": 0,
                "failed": 4,
                "repo_hash": "442cc79d34105f87f8fd51e31442057f1da001d0383bf0279255335d7a08045f",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    }
                }
            },
            "x_make_py_mod_sideload_x": {
                "cached": 0,
                "failed": 3,
                "repo_hash": "cf44f1ade7c42cc22ca0974700d53e4d69a9bebd9bdb5bbc0a3cccb71d7f4f56",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    }
                }
            },
            "x_make_py_venv_x": {
                "cached": 0,
                "failed": 3,
                "repo_hash": "304df6861289091891b6b612684ef92b492115f89c62ca3caff370bb0defc18b",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    }
                }
            },
            "x_make_pypi_x": {
                "cached": 0,
                "failed": 3,
                "repo_hash": "9a6e6ccd208a9c5b19165ab998f7b7476567f3bc4f502ad8e9043f0d32afd1cf",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    }
                }
            },
            "x_make_yahw_x": {
                "cached": 0,
                "failed": 3,
                "repo_hash": "61b7ffc612b6b4592ef28d8d4e6865da8c53dab3f5ef13c2929655bccd33088d",
                "tools": {
                    "black": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "mypy": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "pyright": {
                        "cached": false,
                        "exit": 0,
                        "timed_out": false
                    },
                    "ruff_check": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    },
                    "ruff_fix": {
                        "cached": false,
                        "exit": 1,
                        "timed_out": false
                    }
                }
            }
        },
        "timestamp": "2025-10-21T22:17:59.191114+00:00",
        "total_repos": 15
    },
    "tool_versions": {
        "black": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.12.6",
        "mypy": "mypy 1.18.2 (compiled: yes)",
        "pyright": "pyright 1.1.406",
        "ruff": "ruff 0.14.1"
    },
    "workspace_root": "C:\\x_runner_x"
}