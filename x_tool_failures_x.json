{
    "apriori_index_path": "C:\\x_runner_x\\x_make_github_visitor_x\\x_index_a_a_priori_x.json",
    "failure_messages": [
        "ruff_fix failed for x_0_make_all_x (exit 1)\ncwd: C:\\x_runner_x\\x_0_make_all_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:48:38.868499+00:00\nduration: 0.081s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> forceit.py:23:29\n   |\n21 | import shutil\n22 | import sys\n\u2026\nstderr:\n<empty>",
        "ruff_check failed for x_0_make_all_x (exit 1)\ncwd: C:\\x_runner_x\\x_0_make_all_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:48:39.987435+00:00\nduration: 0.132s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> forceit.py:23:29\n   |\n21 | import shutil\n22 | import sys\n\u2026\nstderr:\n<empty>",
        "mypy failed for x_0_make_all_x (exit 1)\ncwd: C:\\x_runner_x\\x_0_make_all_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-08T12:48:40.120306+00:00\nduration: 7.590s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nforceit.py:126: error: Expression has type \"Any\"  [misc]\nforceit.py:128: error: Expression has type \"Any\"  [misc]\nforceit.py:129: error: Expression has type \"Any\"  [misc]\nmanifest.py:192: error: Expression has type \"Any\"  [misc]\nmanifest.py:196: error: Expression has type \"Any\"  [misc]\n\u2026\nstderr:\n<empty>",
        "pyright failed for x_0_make_all_x (exit 1)\ncwd: C:\\x_runner_x\\x_0_make_all_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error\nstarted_at: 2025-10-08T12:48:47.710860+00:00\nduration: 1.560s\ntool_version: pyright 1.1.406\nstdout:\nc:\\x_runner_x\\x_0_make_all_x\\manifest.py\n  c:\\x_runner_x\\x_0_make_all_x\\manifest.py:11:6 - error: Import \"x_make_common_x\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_0_make_all_x\\tests\\test_forceit.py\n  c:\\x_runner_x\\x_0_make_all_x\\tests\\test_forceit.py:7:6 - error: Import \"x_0_make_all_x.forceit\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_0_make_all_x\\tests\\test_forceit.py:52:21 - error: \"raises\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n\u2026\nstderr:\nError processing line 1 of C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\distutils-precedence.pth:\n\n  Traceback (most recent call last):\n    File \"<frozen site>\", line 207, in addpackage\n    File \"<string>\", line 1, in <module>\n\u2026",
        "ruff_fix failed for x_legatus_acta_schedae_x (exit 1)\ncwd: C:\\x_runner_x\\x_legatus_acta_schedae_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:48:49.685463+00:00\nduration: 0.112s\ntool_version: ruff 0.14.0\nstdout:\nTC001 Move application import `.core.services.ai_service.AIService` into a type-checking block\n --> app.py:5:39\n  |\n3 | from dataclasses import dataclass\n4 |\n\u2026\nstderr:\n<empty>",
        "black failed for x_legatus_acta_schedae_x (exit 1)\ncwd: C:\\x_runner_x\\x_legatus_acta_schedae_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff\nstarted_at: 2025-10-08T12:48:49.799319+00:00\nduration: 2.681s\ntool_version: python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7\nstdout:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\events.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\events.py\t2025-10-08 12:48:50.427176+00:00\n@@ -60,13 +60,11 @@\n \n class EventDispatcher:\n\u2026\nstderr:\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\events.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_briefing_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\review.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\automation_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_service.py\n\u2026",
        "ruff_check failed for x_legatus_acta_schedae_x (exit 1)\ncwd: C:\\x_runner_x\\x_legatus_acta_schedae_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:48:52.481453+00:00\nduration: 0.126s\ntool_version: ruff 0.14.0\nstdout:\nTC001 Move application import `.core.services.ai_service.AIService` into a type-checking block\n --> app.py:5:39\n  |\n3 | from dataclasses import dataclass\n4 |\n\u2026\nstderr:\n<empty>",
    "2025-10-08 note: x_legatus_acta_schedae_x/app.py now hides service imports behind TYPE_CHECKING; python -m ruff check app.py exits 0.",
    "2025-10-08 note: domain/events.py wraps datetime and Task imports in TYPE_CHECKING, clearing remaining TC00x flags for the module.",
    "2025-10-08 note: Added x_0_make_all_x/tests/__init__.py to collapse the INP001 namespace-package warning; forceit tests still need assert refactors and import sorting.",
    "2025-10-08 note: `_TEST_PYPI_TOKEN_ENV` now carries `# noqa: S105` to explain the env-var string and clear the security lint false positive.",
        "mypy failed for x_legatus_acta_schedae_x (exit 1)\ncwd: C:\\x_runner_x\\x_legatus_acta_schedae_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-08T12:48:52.608488+00:00\nduration: 10.401s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\ncore\\ports\\scheduler.py:13: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:22: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:30: error: Expression type contains \"Any\" (has type \"type[ReviewHistoryEntry]\")  [misc]\ncore\\domain\\review.py:31: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:36: error: Explicit \"Any\" is not allowed  [explicit-any]\n\u2026\nstderr:\n<empty>",
        "pyright failed for x_legatus_acta_schedae_x (exit 1)\ncwd: C:\\x_runner_x\\x_legatus_acta_schedae_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error\nstarted_at: 2025-10-08T12:49:03.010378+00:00\nduration: 2.560s\ntool_version: pyright 1.1.406\nstdout:\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:13:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:14:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n\u2026\nstderr:\nError processing line 1 of C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\distutils-precedence.pth:\n\n  Traceback (most recent call last):\n    File \"<frozen site>\", line 207, in addpackage\n    File \"<string>\", line 1, in <module>\n\u2026",
        "pyright failed for x_make_common_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_common_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error\nstarted_at: 2025-10-08T12:49:07.879811+00:00\nduration: 1.194s\ntool_version: pyright 1.1.406\nstdout:\nc:\\x_runner_x\\x_make_common_x\\x_http_client_x.py\n  c:\\x_runner_x\\x_make_common_x\\x_http_client_x.py:34:30 - error: \"Client\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_make_common_x\\x_http_client_x.py:60:22 - error: \"HTTPError\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n2 errors, 0 warnings, 0 informations\nstderr:\nError processing line 1 of C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\distutils-precedence.pth:\n\n  Traceback (most recent call last):\n    File \"<frozen site>\", line 207, in addpackage\n    File \"<string>\", line 1, in <module>\n\u2026",
        "ruff_fix failed for x_make_github_clones_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_github_clones_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:09.145868+00:00\nduration: 0.094s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_make_github_clones_x.py:18:29\n   |\n16 | import time\n17 | import urllib.request\n\u2026\nstderr:\n<empty>",
        "black failed for x_make_github_clones_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_github_clones_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff\nstarted_at: 2025-10-08T12:49:09.240171+00:00\nduration: 0.493s\ntool_version: python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7\nstdout:\n--- C:\\x_runner_x\\x_make_github_clones_x\\x_cls_make_github_clones_x.py\t2025-10-08 05:55:06.664533+00:00\n+++ C:\\x_runner_x\\x_make_github_clones_x\\x_cls_make_github_clones_x.py\t2025-10-08 12:49:09.668259+00:00\n@@ -55,43 +55,31 @@\n     def matches(self, names: set[str] | None) -> bool:\n         if names is None:\n\u2026\nstderr:\nwould reformat C:\\x_runner_x\\x_make_github_clones_x\\x_cls_make_github_clones_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.",
        "ruff_check failed for x_make_github_clones_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_github_clones_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:09.733896+00:00\nduration: 0.104s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_make_github_clones_x.py:18:29\n   |\n16 | import time\n17 | import urllib.request\n\u2026\nstderr:\n<empty>",
        "ruff_fix failed for x_make_graphviz_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_graphviz_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:13.883219+00:00\nduration: 0.077s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_graphviz_x.py:13:29\n   |\n11 | import logging\n12 | import sys as _sys\n\u2026\nstderr:\n<empty>",
        "black failed for x_make_graphviz_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_graphviz_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff\nstarted_at: 2025-10-08T12:49:13.960353+00:00\nduration: 0.441s\ntool_version: python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7\nstdout:\n--- C:\\x_runner_x\\x_make_graphviz_x\\x_cls_make_graphviz_x.py\t2025-10-07 17:48:28.073292+00:00\n+++ C:\\x_runner_x\\x_make_graphviz_x\\x_cls_make_graphviz_x.py\t2025-10-08 12:49:14.352593+00:00\n@@ -51,13 +51,11 @@\n class _Subgraph:\n     def __init__(\n\u2026\nstderr:\nwould reformat C:\\x_runner_x\\x_make_graphviz_x\\x_cls_make_graphviz_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.",
        "ruff_check failed for x_make_graphviz_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_graphviz_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:14.402036+00:00\nduration: 0.109s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_graphviz_x.py:13:29\n   |\n11 | import logging\n12 | import sys as _sys\n\u2026\nstderr:\n<empty>",
        "mypy failed for x_make_graphviz_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_graphviz_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-08T12:49:14.511530+00:00\nduration: 0.390s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_graphviz_x.py:38: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:39: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_graphviz_x.py:42: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:42: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:42: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\n\u2026\nstderr:\n<empty>",
        "ruff_fix failed for x_make_mermaid_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_mermaid_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:16.050505+00:00\nduration: 0.094s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_mermaid_x.py:14:29\n   |\n12 | import subprocess as _subprocess\n13 | import sys as _sys\n\u2026\nstderr:\n<empty>",
        "black failed for x_make_mermaid_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_mermaid_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff\nstarted_at: 2025-10-08T12:49:16.144910+00:00\nduration: 0.551s\ntool_version: python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7\nstdout:\n--- C:\\x_runner_x\\x_make_mermaid_x\\x_cls_make_mermaid_x.py\t2025-10-07 17:48:30.177558+00:00\n+++ C:\\x_runner_x\\x_make_mermaid_x\\x_cls_make_mermaid_x.py\t2025-10-08 12:49:16.627708+00:00\n@@ -61,13 +61,11 @@\n @dataclass\n class MermaidDoc:\n\u2026\nstderr:\nwould reformat C:\\x_runner_x\\x_make_mermaid_x\\x_cls_make_mermaid_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.",
        "ruff_check failed for x_make_mermaid_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_mermaid_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:16.696029+00:00\nduration: 0.094s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_mermaid_x.py:14:29\n   |\n12 | import subprocess as _subprocess\n13 | import sys as _sys\n\u2026\nstderr:\n<empty>",
        "mypy failed for x_make_mermaid_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_mermaid_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-08T12:49:16.790565+00:00\nduration: 0.372s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_mermaid_x.py:89: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_mermaid_x.py:93: error: Expression type contains \"Any\" (has type \"str | dict[str, Any]\")  [misc]\nx_cls_make_mermaid_x.py:552: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_mermaid_x.py:584: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nFound 4 errors in 1 file (checked 1 source file)\nstderr:\n<empty>",
        "2025-10-08 note: x_make_persistent_env_var_x now passes ruff (check/fix), black, mypy, and pyright; removing stale failure entries.",
        "ruff_fix failed for x_make_pip_updates_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pip_updates_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:20.539390+00:00\nduration: 0.093s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_make_pip_updates_x.py:8:29\n   |\n 6 | import sys\n 7 | import sys as _sys\n\u2026\nstderr:\n<empty>",
        "ruff_check failed for x_make_pip_updates_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pip_updates_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:20.853066+00:00\nduration: 0.081s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_make_pip_updates_x.py:8:29\n   |\n 6 | import sys\n 7 | import sys as _sys\n\u2026\nstderr:\n<empty>",
        "mypy failed for x_make_pip_updates_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pip_updates_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-08T12:49:20.934825+00:00\nduration: 0.379s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_pip_updates_x.py:148: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_pip_updates_x.py:152: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_pip_updates_x.py:186: error: Expression has type \"Any\"  [misc]\nx_cls_make_pip_updates_x.py:187: error: Expression has type \"Any\"  [misc]\nFound 4 errors in 1 file (checked 1 source file)\nstderr:\n<empty>",
        "ruff_fix failed for x_make_py_mod_sideload_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_mod_sideload_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:22.475954+00:00\nduration: 0.089s\ntool_version: ruff 0.14.0\nstdout:\nN801 Class name `x_cls_make_py_mod_sideload_x` should use CapWords convention\n  --> x_cls_make_py_mod_sideload_x.py:16:7\n   |\n16 | class x_cls_make_py_mod_sideload_x:\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\u2026\nstderr:\n<empty>",
        "black failed for x_make_py_mod_sideload_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_mod_sideload_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff\nstarted_at: 2025-10-08T12:49:22.565281+00:00\nduration: 0.212s\ntool_version: python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7\nstdout:\n--- C:\\x_runner_x\\x_make_py_mod_sideload_x\\x_cls_make_py_mod_sideload_x.py\t2025-10-07 17:48:34.345657+00:00\n+++ C:\\x_runner_x\\x_make_py_mod_sideload_x\\x_cls_make_py_mod_sideload_x.py\t2025-10-08 12:49:22.752733+00:00\n@@ -12,13 +12,11 @@\n import os\n from typing import Any\n\u2026\nstderr:\nwould reformat C:\\x_runner_x\\x_make_py_mod_sideload_x\\x_cls_make_py_mod_sideload_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.",
        "ruff_check failed for x_make_py_mod_sideload_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_mod_sideload_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:22.777729+00:00\nduration: 0.102s\ntool_version: ruff 0.14.0\nstdout:\nN801 Class name `x_cls_make_py_mod_sideload_x` should use CapWords convention\n  --> x_cls_make_py_mod_sideload_x.py:16:7\n   |\n16 | class x_cls_make_py_mod_sideload_x:\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\u2026\nstderr:\n<empty>",
        "mypy failed for x_make_py_mod_sideload_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_py_mod_sideload_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit\nstarted_at: 2025-10-08T12:49:22.880599+00:00\nduration: 0.374s\ntool_version: mypy 1.18.2 (compiled: yes)\nstdout:\nx_cls_make_py_mod_sideload_x.py:17: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_py_mod_sideload_x.py:83: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:84: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:85: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:86: error: Expression has type \"Any\"  [misc]\n\u2026\nstderr:\n<empty>",
        "ruff_fix failed for x_make_pypi_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pypi_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:24.373504+00:00\nduration: 0.101s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_pypi_x.py:14:29\n   |\n12 | import urllib.request\n13 | import uuid\n\u2026\nstderr:\n<empty>",
        "ruff_check failed for x_make_pypi_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_pypi_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:24.773293+00:00\nduration: 0.088s\ntool_version: ruff 0.14.0\nstdout:\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_pypi_x.py:14:29\n   |\n12 | import urllib.request\n13 | import uuid\n\u2026\nstderr:\n<empty>",
        "ruff_fix failed for x_make_yahw_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_yahw_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:26.390349+00:00\nduration: 0.087s\ntool_version: ruff 0.14.0\nstdout:\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_yahw_x.py:36:16\n   |\n34 |         try:\n35 |             print(msg)\n\u2026\nstderr:\n<empty>",
        "ruff_check failed for x_make_yahw_x (exit 1)\ncwd: C:\\x_runner_x\\x_make_yahw_x\ncommand: C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311\nstarted_at: 2025-10-08T12:49:26.692131+00:00\nduration: 0.084s\ntool_version: ruff 0.14.0\nstdout:\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_yahw_x.py:36:16\n   |\n34 |         try:\n35 |             print(msg)\n\u2026\nstderr:\n<empty>"
    ],
    "failures": [
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--fix",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_0_make_all_x",
            "duration_seconds": 0.13222880000830628,
            "ended_at": "2025-10-08T12:48:40.119662+00:00",
            "exit": 1,
            "repo": "x_0_make_all_x",
            "repo_hash": "374ab92b62521aa2f6dacf02cbe4625b650ae321c5bf74a42a11e474c7d60aa7",
            "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
            "started_at": "2025-10-08T12:48:39.987435+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> forceit.py:23:29\n   |\n21 | import shutil\n22 | import sys\n23 | from collections.abc import Iterable, Sequence\n   |                             ^^^^^^^^\n24 | from dataclasses import dataclass\n25 | from pathlib import Path\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> forceit.py:23:39\n   |\n21 | import shutil\n22 | import sys\n23 | from collections.abc import Iterable, Sequence\n   |                                       ^^^^^^^^\n24 | from dataclasses import dataclass\n25 | from pathlib import Path\n   |\nhelp: Move into type-checking block\n\nN806 Variable `_EXPECTED_ENTRY_LENGTH` in function should be lowercase\n   --> manifest.py:123:5\n    |\n122 | def _parse_entry(index: int, raw: Sequence[object]) -> ManifestEntry | None:\n123 |     _EXPECTED_ENTRY_LENGTH = 4\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n124 |     if len(raw) != _EXPECTED_ENTRY_LENGTH:\n125 |         log_error(\"publish_manifest.json: invalid entry length\", index, len(raw))\n    |\n\nINP001 File `tests\\test_forceit.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_forceit.py:1:1\n\nS101 Use of `assert` detected\n  --> tests\\test_forceit.py:25:9\n   |\n24 |         destinations = {item.destination.relative_to(temp / \"dest\") for item in plan}\n25 |         assert destinations == {Path(\"nested/file.txt\"), Path(\"nested/deep/inner.txt\")}\n   |         ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_forceit.py:37:9\n   |\n35 |         plan = build_copy_plan([source_file], dest_root)\n36 |         completed = perform_copy(plan, overwrite=False)\n37 |         assert (dest_root / \"note.txt\").read_text(encoding=\"utf-8\") == \"one\"\n   |         ^^^^^^\n38 |         assert completed == plan\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_forceit.py:38:9\n   |\n36 |         completed = perform_copy(plan, overwrite=False)\n37 |         assert (dest_root / \"note.txt\").read_text(encoding=\"utf-8\") == \"one\"\n38 |         assert completed == plan\n   |         ^^^^^^\n39 |\n40 |         # Update source and ensure no-overwrite skips the second copy\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_forceit.py:43:9\n   |\n41 |         _write(source_file, \"two\")\n42 |         skipped = perform_copy(plan, overwrite=False)\n43 |         assert skipped == []\n   |         ^^^^^^\n44 |         assert (dest_root / \"note.txt\").read_text(encoding=\"utf-8\") == \"one\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_forceit.py:44:9\n   |\n42 |         skipped = perform_copy(plan, overwrite=False)\n43 |         assert skipped == []\n44 |         assert (dest_root / \"note.txt\").read_text(encoding=\"utf-8\") == \"one\"\n   |         ^^^^^^\n   |\n\nS105 Possible hardcoded password assigned to: \"_TEST_PYPI_TOKEN_ENV\"\n   --> x_cls_make_all_x.py:184:24\n    |\n183 | _MANIFEST_PATH = Path(__file__).resolve().parent / \"publish_manifest.json\"\n184 | _TEST_PYPI_TOKEN_ENV = \"TEST_PYPI_TOKEN\"\n    |                        ^^^^^^^^^^^^^^^^^\n185 | try:\n186 |     _publish_manifest = load_manifest(_MANIFEST_PATH)\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_all_x.py:284:55\n    |\n282 |         return path_obj.name\n283 |\n284 |     def _set_force_reclone_attr(self, cloner: object, flag: bool) -> None:\n    |                                                       ^^^^\n285 |         if isinstance(cloner, SupportsForceReclone):\n286 |             with suppress(AttributeError, TypeError):\n    |\n\nC901 `clone_repos` is too complex (14 > 10)\n   --> x_cls_make_all_x.py:296:9\n    |\n295 |     # Step 3: clone repositories (moved logic from freestanding clone_repos)\n296 |     def clone_repos(self, ctx: OrchestratorContext | None) -> object:\n    |         ^^^^^^^^^^^\n297 |         cloner_cls = x_cls_make_github_clones_x\n298 |         target_dir = getattr(\n    |\n\nPLR0912 Too many branches (15 > 12)\n   --> x_cls_make_all_x.py:296:9\n    |\n295 |     # Step 3: clone repositories (moved logic from freestanding clone_repos)\n296 |     def clone_repos(self, ctx: OrchestratorContext | None) -> object:\n    |         ^^^^^^^^^^^\n297 |         cloner_cls = x_cls_make_github_clones_x\n298 |         target_dir = getattr(\n    |\n\nPLR0915 Too many statements (52 > 50)\n   --> x_cls_make_all_x.py:296:9\n    |\n295 |     # Step 3: clone repositories (moved logic from freestanding clone_repos)\n296 |     def clone_repos(self, ctx: OrchestratorContext | None) -> object:\n    |         ^^^^^^^^^^^\n297 |         cloner_cls = x_cls_make_github_clones_x\n298 |         target_dir = getattr(\n    |\n\nC901 `_locate_repo_main_and_ancillaries` is too complex (16 > 10)\n   --> x_cls_make_all_x.py:567:9\n    |\n565 |         return out\n566 |\n567 |     def _locate_repo_main_and_ancillaries(\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n568 |         self,\n569 |         cloner: object,\n    |\n\nPLR0912 Too many branches (16 > 12)\n   --> x_cls_make_all_x.py:567:9\n    |\n565 |         return out\n566 |\n567 |     def _locate_repo_main_and_ancillaries(\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n568 |         self,\n569 |         cloner: object,\n    |\n\nN803 Argument name `PublisherCls` should be lowercase\n   --> x_cls_make_all_x.py:638:9\n    |\n636 |     def _instantiate_publisher(\n637 |         self,\n638 |         PublisherCls: Callable[..., PublisherProtocol],\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n639 |         name: str,\n640 |         version: str,\n    |\n\nC901 `_publish_do_publish` is too complex (20 > 10)\n   --> x_cls_make_all_x.py:660:9\n    |\n658 |         return PublisherCls(name=name, version=version, **safe_kwargs)\n659 |\n660 |     def _publish_do_publish(\n    |         ^^^^^^^^^^^^^^^^^^^\n661 |         self,\n662 |         name: str,\n    |\n\nPLR0913 Too many arguments in function definition (9 > 5)\n   --> x_cls_make_all_x.py:660:9\n    |\n658 |         return PublisherCls(name=name, version=version, **safe_kwargs)\n659 |\n660 |     def _publish_do_publish(\n    |         ^^^^^^^^^^^^^^^^^^^\n661 |         self,\n662 |         name: str,\n    |\n\nPLR0912 Too many branches (14 > 12)\n   --> x_cls_make_all_x.py:660:9\n    |\n658 |         return PublisherCls(name=name, version=version, **safe_kwargs)\n659 |\n660 |     def _publish_do_publish(\n    |         ^^^^^^^^^^^^^^^^^^^\n661 |         self,\n662 |         name: str,\n    |\n\nPLR0915 Too many statements (65 > 50)\n   --> x_cls_make_all_x.py:660:9\n    |\n658 |         return PublisherCls(name=name, version=version, **safe_kwargs)\n659 |\n660 |     def _publish_do_publish(\n    |         ^^^^^^^^^^^^^^^^^^^\n661 |         self,\n662 |         name: str,\n    |\n\nARG002 Unused method argument: `cloner`\n   --> x_cls_make_all_x.py:667:9\n    |\n665 |         ancillary_files: list[str],\n666 |         *,\n667 |         cloner: object,\n    |         ^^^^^^\n668 |         ctx: OrchestratorContext | None,\n669 |         local_kwargs: dict[str, object],\n    |\n\nN806 Variable `PublisherCls` in function should be lowercase\n   --> x_cls_make_all_x.py:673:9\n    |\n671 |         published_artifacts: dict[str, dict[str, object]],\n672 |     ) -> None:\n673 |         PublisherCls = cast(\n    |         ^^^^^^^^^^^^\n674 |             \"Callable[..., PublisherProtocol]\",\n675 |             x_cls_make_pypi_x,\n    |\n\nPLR0913 Too many arguments in function definition (8 > 5)\n   --> x_cls_make_all_x.py:787:9\n    |\n785 |             _info(f\"publish skipped for {name} {version} (minimal stub)\")\n786 |\n787 |     def _publish_one(\n    |         ^^^^^^^^^^^^\n788 |         self,\n789 |         name: str,\n    |\n\nN803 Argument name `PipUpdatesCls` should be lowercase\n   --> x_cls_make_all_x.py:863:9\n    |\n861 |     def _instantiate_pipupdates(\n862 |         self,\n863 |         PipUpdatesCls: type[_PipUpdatesT],\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n864 |         *,\n865 |         ctx: object | None,\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_all_x.py:878:20\n    |\n876 |             try:\n877 |                 return PipUpdatesCls(**kwargs)\n878 |             except Exception as exc:\n    |                    ^^^^^^^^^\n879 |                 last_exc = exc\n880 |                 continue\n    |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n   --> x_cls_make_all_x.py:885:17\n    |\n883 |         except Exception as exc:\n884 |             if last_exc is not None:\n885 |                 raise last_exc\n    |                 ^^^^^^^^^^^^^^\n886 |             raise exc\n    |\n\nTRY201 Use `raise` without specifying exception name\n   --> x_cls_make_all_x.py:886:19\n    |\n884 |             if last_exc is not None:\n885 |                 raise last_exc\n886 |             raise exc\n    |                   ^^^\n887 |\n888 |     def _print_summary_and_detect_failures(\n    |\nhelp: Remove exception name\n\nARG002 Unused method argument: `published_versions`\n   --> x_cls_make_all_x.py:916:31\n    |\n915 |     def _locate_and_choose_packages(\n916 |         self, cloner: object, published_versions: dict[str, str | None]\n    |                               ^^^^^^^^^^^^^^^^^^\n917 |     ) -> tuple[list[str], Path, bool]:\n918 |         base_path = Path(self.repo_parent_root())\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> x_cls_make_all_x.py:958:9\n    |\n957 |     def _get_installed_versions(self, packages: list[str]) -> dict[str, str | None]:\n958 |         import importlib.metadata\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n959 |\n960 |         initial_installed: dict[str, str | None] = {}\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_all_x.py:967:20\n    |\n965 |                 initial_installed[pkg] = v\n966 |                 _info(f\"{pkg}: {v}\")\n967 |             except Exception as e:\n    |                    ^^^^^^^^^\n968 |                 initial_installed[pkg] = None\n969 |                 _info(f\"{pkg}: not installed ({e})\")\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_all_x.py:976:9\n    |\n974 |         mismatches: list[tuple[str, str, str | None]],\n975 |         pip_updates_script: Path,\n976 |         use_user_flag: bool,\n    |         ^^^^^^^^^^^^^\n977 |         final_installed: dict[str, str | None],\n978 |     ) -> int:\n    |\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_all_x.py:986:22\n    |\n984 |         )\n985 |         _info(f\"Retrying install for pinned versions: {' '.join(retry_cmd)}\")\n986 |         retry_proc = subprocess.run(\n    |                      ^^^^^^^^^^^^^^\n987 |             retry_cmd, capture_output=True, text=True, check=False\n988 |         )\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> x_cls_make_all_x.py:994:13\n    |\n992 |             _error(retry_proc.stderr.strip())\n993 |         try:\n994 |             import importlib.metadata as metadata_mod\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n995 |         except ImportError:\n996 |             for pkg_name, _, _ in mismatches:\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n    --> x_cls_make_all_x.py:1012:9\n     |\n1010 |         packages: list[str],\n1011 |         published_versions: dict[str, str | None],\n1012 |         use_user_flag: bool,\n     |         ^^^^^^^^^^^^^\n1013 |     ) -> None:\n1014 |         python = sys.executable\n     |\n\nS603 `subprocess` call: check for execution of untrusted input\n    --> x_cls_make_all_x.py:1032:24\n     |\n1030 |             _info(\"Fallback pip install:\", \" \".join(cmd))\n1031 |             try:\n1032 |                 proc = subprocess.run(cmd, capture_output=True, text=True, check=False)\n     |                        ^^^^^^^^^^^^^^\n1033 |                 if proc.stdout:\n1034 |                     _info(proc.stdout.strip())\n     |\n\nFBT001 Boolean-typed positional argument in function definition\n    --> x_cls_make_all_x.py:1100:48\n     |\n1099 |     def _override_use_user_flag(\n1100 |         self, ctx: OrchestratorContext | None, default: bool\n     |                                                ^^^^^^^\n1101 |     ) -> bool:\n1102 |         publish_opts = getattr(ctx, \"publish_opts\", None) if ctx else None\n     |\n\nARG002 Unused method argument: `script_path`\n    --> x_cls_make_all_x.py:1115:9\n     |\n1113 |         self,\n1114 |         packages: list[str],\n1115 |         script_path: Path,\n     |         ^^^^^^^^^^^\n1116 |         use_user_flag: bool,\n1117 |         ctx: OrchestratorContext | None,\n     |\n\nFBT001 Boolean-typed positional argument in function definition\n    --> x_cls_make_all_x.py:1116:9\n     |\n1114 |         packages: list[str],\n1115 |         script_path: Path,\n1116 |         use_user_flag: bool,\n     |         ^^^^^^^^^^^^^\n1117 |         ctx: OrchestratorContext | None,\n1118 |     ) -> tuple[bool, int | None]:\n     |\n\nFound 39 errors.\nNo fixes available (3 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_check",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "mypy",
                ".",
                "--strict",
                "--no-warn-unused-configs",
                "--show-error-codes",
                "--warn-return-any",
                "--warn-unreachable",
                "--disallow-any-unimported",
                "--disallow-any-expr",
                "--disallow-any-decorated",
                "--disallow-any-explicit"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "cwd": "C:\\x_runner_x\\x_0_make_all_x",
            "duration_seconds": 7.590125299990177,
            "ended_at": "2025-10-08T12:48:47.710431+00:00",
            "exit": 1,
            "repo": "x_0_make_all_x",
            "repo_hash": "374ab92b62521aa2f6dacf02cbe4625b650ae321c5bf74a42a11e474c7d60aa7",
            "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
            "started_at": "2025-10-08T12:48:40.120306+00:00",
            "stderr": "",
            "stdout": "forceit.py:126: error: Expression has type \"Any\"  [misc]\nforceit.py:128: error: Expression has type \"Any\"  [misc]\nforceit.py:129: error: Expression has type \"Any\"  [misc]\nmanifest.py:192: error: Expression has type \"Any\"  [misc]\nmanifest.py:196: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:52: error: Expression type contains \"Any\" (has type \"type[type]\")  [misc]\nx_cls_make_all_x.py:82: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:148: error: Statement is unreachable  [unreachable]\nx_cls_make_all_x.py:231: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_all_x.py:261: error: Expression type contains \"Any\" (has type \"Callable[..., VisitorProtocol]\")  [misc]\nx_cls_make_all_x.py:298: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:303: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:304: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:305: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:308: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:309: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:315: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:315: error: Expression type contains \"Any\" (has type \"Callable[..., object]\")  [misc]\nx_cls_make_all_x.py:317: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:318: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:319: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:320: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:329: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:329: error: Expression type contains \"Any\" (has type \"Callable[..., object]\")  [misc]\nx_cls_make_all_x.py:331: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:332: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:333: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:334: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_all_x.py:343: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:344: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:348: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:349: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:351: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:357: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:358: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:370: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:372: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:372: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:575: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:576: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:636: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:673: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_all_x.py:673: error: Expression type contains \"Any\" (has type \"Callable[..., PublisherProtocol]\")  [misc]\nx_cls_make_all_x.py:746: error: Expression type contains \"Any\" (has type \"Callable[..., PublisherProtocol]\")  [misc]\nx_cls_make_all_x.py:757: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:757: error: Expression type contains \"Any\" (has type \"Any | tuple[()]\")  [misc]\nx_cls_make_all_x.py:758: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\nx_cls_make_all_x.py:833: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_all_x.py:920: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:921: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:922: error: Expression has type \"Any\"  [misc]\nx_cls_make_all_x.py:936: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nx_cls_make_all_x.py:1102: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nx_cls_make_all_x.py:1103: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nFound 54 errors in 3 files (checked 5 source files)\n",
            "tool": "mypy",
            "tool_module": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "pyright",
                ".",
                "--level",
                "error"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error",
            "cwd": "C:\\x_runner_x\\x_0_make_all_x",
            "duration_seconds": 1.5602974999928847,
            "ended_at": "2025-10-08T12:48:49.271156+00:00",
            "exit": 1,
            "repo": "x_0_make_all_x",
            "repo_hash": "374ab92b62521aa2f6dacf02cbe4625b650ae321c5bf74a42a11e474c7d60aa7",
            "repo_path": "C:\\x_runner_x\\x_0_make_all_x",
            "started_at": "2025-10-08T12:48:47.710860+00:00",
            "stderr": "Error processing line 1 of C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\distutils-precedence.pth:\n\n  Traceback (most recent call last):\n    File \"<frozen site>\", line 207, in addpackage\n    File \"<string>\", line 1, in <module>\n  AttributeError: module '_distutils_hack' has no attribute 'add_shim'\n\nRemainder of file ignored\nError processing line 1 of C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\distutils-precedence.pth:\n\n  Traceback (most recent call last):\n    File \"<frozen site>\", line 207, in addpackage\n    File \"<string>\", line 1, in <module>\n  AttributeError: module '_distutils_hack' has no attribute 'add_shim'\n\nRemainder of file ignored\n",
            "stdout": "c:\\x_runner_x\\x_0_make_all_x\\manifest.py\n  c:\\x_runner_x\\x_0_make_all_x\\manifest.py:11:6 - error: Import \"x_make_common_x\" could not be resolved (reportMissingImports)\nc:\\x_runner_x\\x_0_make_all_x\\tests\\test_forceit.py\n  c:\\x_runner_x\\x_0_make_all_x\\tests\\test_forceit.py:7:6 - error: Import \"x_0_make_all_x.forceit\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_0_make_all_x\\tests\\test_forceit.py:52:21 - error: \"raises\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\nc:\\x_runner_x\\x_0_make_all_x\\x_cls_make_all_x.py\n  c:\\x_runner_x\\x_0_make_all_x\\x_cls_make_all_x.py:27:6 - error: Import \"x_make_common_x\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_0_make_all_x\\x_cls_make_all_x.py:35:6 - error: Import \"x_0_make_all_x.manifest\" could not be resolved (reportMissingImports)\n5 errors, 0 warnings, 0 informations\n",
            "tool": "pyright",
            "tool_module": "pyright",
            "tool_version": "pyright 1.1.406"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--fix",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "duration_seconds": 0.11235270000179298,
            "ended_at": "2025-10-08T12:48:49.797816+00:00",
            "exit": 1,
            "repo": "x_legatus_acta_schedae_x",
            "repo_hash": "8b9bd8670f31639839d13df034bf4fa2be0969f83cfe928151b54427786ff2a8",
            "repo_path": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "started_at": "2025-10-08T12:48:49.685463+00:00",
            "stderr": "",
            "stdout": "TC001 Move application import `.core.services.ai_service.AIService` into a type-checking block\n --> app.py:5:39\n  |\n3 | from dataclasses import dataclass\n4 |\n5 | from .core.services.ai_service import AIService\n  |                                       ^^^^^^^^^\n6 | from .core.services.collaboration_service import CollaborationService\n7 | from .core.services.scheduler_service import SchedulerService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.core.services.collaboration_service.CollaborationService` into a type-checking block\n --> app.py:6:50\n  |\n5 | from .core.services.ai_service import AIService\n6 | from .core.services.collaboration_service import CollaborationService\n  |                                                  ^^^^^^^^^^^^^^^^^^^^\n7 | from .core.services.scheduler_service import SchedulerService\n8 | from .core.services.search_service import SearchService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.core.services.scheduler_service.SchedulerService` into a type-checking block\n --> app.py:7:46\n  |\n5 | from .core.services.ai_service import AIService\n6 | from .core.services.collaboration_service import CollaborationService\n7 | from .core.services.scheduler_service import SchedulerService\n  |                                              ^^^^^^^^^^^^^^^^\n8 | from .core.services.search_service import SearchService\n9 | from .core.services.task_service import TaskService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.core.services.search_service.SearchService` into a type-checking block\n  --> app.py:8:43\n   |\n 6 | from .core.services.collaboration_service import CollaborationService\n 7 | from .core.services.scheduler_service import SchedulerService\n 8 | from .core.services.search_service import SearchService\n   |                                           ^^^^^^^^^^^^^\n 9 | from .core.services.task_service import TaskService\n10 | from .infrastructure.config import AppConfig, load_config\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `.core.services.task_service.TaskService` into a type-checking block\n  --> app.py:9:41\n   |\n 7 | from .core.services.scheduler_service import SchedulerService\n 8 | from .core.services.search_service import SearchService\n 9 | from .core.services.task_service import TaskService\n   |                                         ^^^^^^^^^^^\n10 | from .infrastructure.config import AppConfig, load_config\n11 | from .infrastructure.di import AppContext, build_context\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\domain\\events.py:4:22\n  |\n3 | from dataclasses import dataclass\n4 | from datetime import datetime\n  |                      ^^^^^^^^\n5 | from typing import Any, Protocol\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.task.Task` into a type-checking block\n --> core\\domain\\events.py:7:19\n  |\n5 | from typing import Any, Protocol\n6 |\n7 | from .task import Task\n  |                   ^^^^\n  |\nhelp: Move into type-checking block\n\nFBT001 Boolean-typed positional argument in function definition\n   --> core\\domain\\review.py:146:30\n    |\n144 |         self.due_at = entry.next_due\n145 |\n146 |     def mark_suspended(self, suspended: bool) -> None:\n    |                              ^^^^^^^^^\n147 |         self.suspended = suspended\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\domain\\task.py:26:15\n   |\n24 |     normalized = priority.lower()\n25 |     if normalized not in VALID_PRIORITIES:\n26 |         raise ValueError(f\"Invalid priority {priority}\")\n   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n27 |     return normalized\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> core\\domain\\task.py:26:26\n   |\n24 |     normalized = priority.lower()\n25 |     if normalized not in VALID_PRIORITIES:\n26 |         raise ValueError(f\"Invalid priority {priority}\")\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n27 |     return normalized\n   |\nhelp: Assign to variable; remove f-string literal\n\nC901 `_replace` is too complex (17 > 10)\n  --> core\\domain\\task.py:96:9\n   |\n94 |         return self.with_tags(remaining)\n95 |\n96 |     def _replace(self, **changes: object) -> Task:\n   |         ^^^^^^^^\n97 |         new_id = self.id\n98 |         if \"id\" in changes:\n   |\n\nPLR0912 Too many branches (17 > 12)\n  --> core\\domain\\task.py:96:9\n   |\n94 |         return self.with_tags(remaining)\n95 |\n96 |     def _replace(self, **changes: object) -> Task:\n   |         ^^^^^^^^\n97 |         new_id = self.id\n98 |         if \"id\" in changes:\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:101:23\n    |\n 99 |             id_candidate = changes[\"id\"]\n100 |             if not isinstance(id_candidate, str):\n101 |                 raise TypeError(\"id must be a string\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n102 |             new_id = id_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:101:33\n    |\n 99 |             id_candidate = changes[\"id\"]\n100 |             if not isinstance(id_candidate, str):\n101 |                 raise TypeError(\"id must be a string\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^\n102 |             new_id = id_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:108:23\n    |\n106 |             description_candidate = changes[\"description\"]\n107 |             if not isinstance(description_candidate, str):\n108 |                 raise TypeError(\"description must be a string\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n109 |             new_description = description_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:108:33\n    |\n106 |             description_candidate = changes[\"description\"]\n107 |             if not isinstance(description_candidate, str):\n108 |                 raise TypeError(\"description must be a string\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n109 |             new_description = description_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:115:23\n    |\n113 |             created_candidate = changes[\"created\"]\n114 |             if not isinstance(created_candidate, datetime):\n115 |                 raise TypeError(\"created must be a datetime\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n116 |             new_created = created_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:115:33\n    |\n113 |             created_candidate = changes[\"created\"]\n114 |             if not isinstance(created_candidate, datetime):\n115 |                 raise TypeError(\"created must be a datetime\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n116 |             new_created = created_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:122:23\n    |\n120 |             status_candidate = changes[\"status\"]\n121 |             if not isinstance(status_candidate, str):\n122 |                 raise TypeError(\"status must be a string\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n123 |             new_status = status_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:122:33\n    |\n120 |             status_candidate = changes[\"status\"]\n121 |             if not isinstance(status_candidate, str):\n122 |                 raise TypeError(\"status must be a string\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n123 |             new_status = status_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:129:23\n    |\n127 |             due_candidate = changes[\"due\"]\n128 |             if due_candidate is not None and not isinstance(due_candidate, datetime):\n129 |                 raise TypeError(\"due must be a datetime or None\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n130 |             new_due = due_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:129:33\n    |\n127 |             due_candidate = changes[\"due\"]\n128 |             if due_candidate is not None and not isinstance(due_candidate, datetime):\n129 |                 raise TypeError(\"due must be a datetime or None\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n130 |             new_due = due_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:142:23\n    |\n140 |                 new_tags = _normalize_tags(cast(\"Iterable[str]\", tags_candidate))\n141 |             else:\n142 |                 raise TypeError(\"tags must be an iterable of strings\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n143 |\n144 |         new_priority = self.priority\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:142:33\n    |\n140 |                 new_tags = _normalize_tags(cast(\"Iterable[str]\", tags_candidate))\n141 |             else:\n142 |                 raise TypeError(\"tags must be an iterable of strings\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n143 |\n144 |         new_priority = self.priority\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:150:23\n    |\n148 |                 priority_candidate, str\n149 |             ):\n150 |                 raise TypeError(\"priority must be a string or None\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n151 |             new_priority = _normalize_priority(priority_candidate)\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:150:33\n    |\n148 |                 priority_candidate, str\n149 |             ):\n150 |                 raise TypeError(\"priority must be a string or None\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n151 |             new_priority = _normalize_priority(priority_candidate)\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:165:19\n    |\n163 |     def validate(self) -> None:\n164 |         if not self.description:\n165 |             raise ValueError(\"Description empty\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n166 |         if self.status not in VALID_STATUSES:\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:165:30\n    |\n163 |     def validate(self) -> None:\n164 |         if not self.description:\n165 |             raise ValueError(\"Description empty\")\n    |                              ^^^^^^^^^^^^^^^^^^^\n166 |         if self.status not in VALID_STATUSES:\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:167:19\n    |\n165 |             raise ValueError(\"Description empty\")\n166 |         if self.status not in VALID_STATUSES:\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |         if self.priority and self.priority not in VALID_PRIORITIES:\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\domain\\task.py:167:30\n    |\n165 |             raise ValueError(\"Description empty\")\n166 |         if self.status not in VALID_STATUSES:\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |         if self.priority and self.priority not in VALID_PRIORITIES:\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n    |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:169:19\n    |\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n168 |         if self.priority and self.priority not in VALID_PRIORITIES:\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n170 |         if self.due and self.due < self.created:\n171 |             raise ValueError(\"Due date earlier than creation\")\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\domain\\task.py:169:30\n    |\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n168 |         if self.priority and self.priority not in VALID_PRIORITIES:\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n170 |         if self.due and self.due < self.created:\n171 |             raise ValueError(\"Due date earlier than creation\")\n    |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:171:19\n    |\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n170 |         if self.due and self.due < self.created:\n171 |             raise ValueError(\"Due date earlier than creation\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:171:30\n    |\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n170 |         if self.due and self.due < self.created:\n171 |             raise ValueError(\"Due date earlier than creation\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Assign to variable; remove string literal\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\ports\\review_repo.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\ports\\review_repo.py:6:1\n  |\n4 | from typing import Protocol\n5 |\n6 | from ..domain.review import ReviewRecord\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.review.ReviewRecord` into a type-checking block\n --> core\\ports\\review_repo.py:6:29\n  |\n4 | from typing import Protocol\n5 |\n6 | from ..domain.review import ReviewRecord\n  |                             ^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n --> core\\ports\\scheduler.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Callable\n  |                             ^^^^^^^^\n4 | from datetime import datetime\n5 | from typing import Any, Protocol\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\ports\\scheduler.py:4:22\n  |\n3 | from collections.abc import Callable\n4 | from datetime import datetime\n  |                      ^^^^^^^^\n5 | from typing import Any, Protocol\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\ports\\search_index.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\ports\\search_index.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\ports\\search_index.py:6:1\n  |\n4 | from typing import Protocol\n5 |\n6 | from ..domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n --> core\\ports\\search_index.py:6:27\n  |\n4 | from typing import Protocol\n5 |\n6 | from ..domain.task import Task\n  |                           ^^^^\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\ports\\task_repo.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import datetime\n5 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\ports\\task_repo.py:4:22\n  |\n3 | from collections.abc import Iterable\n4 | from datetime import datetime\n  |                      ^^^^^^^^\n5 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\ports\\task_repo.py:7:1\n  |\n5 | from typing import Protocol\n6 |\n7 | from ..domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n --> core\\ports\\task_repo.py:7:27\n  |\n5 | from typing import Protocol\n6 |\n7 | from ..domain.task import Task\n  |                           ^^^^\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\ai_briefing_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass\n5 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.ai_service.AIService` into a type-checking block\n --> core\\services\\ai_briefing_service.py:7:25\n  |\n5 | from datetime import UTC, datetime\n6 |\n7 | from .ai_service import AIService, TaskSummary\n  |                         ^^^^^^^^^\n8 | from .review_guidance_service import ReviewGuidance, ReviewGuidanceService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.ai_service.TaskSummary` into a type-checking block\n --> core\\services\\ai_briefing_service.py:7:36\n  |\n5 | from datetime import UTC, datetime\n6 |\n7 | from .ai_service import AIService, TaskSummary\n  |                                    ^^^^^^^^^^^\n8 | from .review_guidance_service import ReviewGuidance, ReviewGuidanceService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.review_guidance_service.ReviewGuidance` into a type-checking block\n --> core\\services\\ai_briefing_service.py:8:38\n  |\n7 | from .ai_service import AIService, TaskSummary\n8 | from .review_guidance_service import ReviewGuidance, ReviewGuidanceService\n  |                                      ^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.review_guidance_service.ReviewGuidanceService` into a type-checking block\n --> core\\services\\ai_briefing_service.py:8:54\n  |\n7 | from .ai_service import AIService, TaskSummary\n8 | from .review_guidance_service import ReviewGuidance, ReviewGuidanceService\n  |                                                      ^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nE501 Line too long (90 > 88)\n  --> core\\services\\ai_briefing_service.py:23:89\n   |\n22 | class AIBriefingService:\n23 |     \"\"\"Produces consolidated daily briefings blending AI summaries and review guidance.\"\"\"\n   |                                                                                         ^^\n24 |\n25 |     def __init__(\n   |\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\ai_service.py:4:29\n  |\n3 | from collections import Counter\n4 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n5 | from dataclasses import dataclass\n6 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\ai_service.py:8:1\n   |\n 6 | from datetime import UTC, datetime, timedelta\n 7 |\n 8 | from ..domain.events import EventDispatcher\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..domain.task import Task\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n  --> core\\services\\ai_service.py:8:29\n   |\n 6 | from datetime import UTC, datetime, timedelta\n 7 |\n 8 | from ..domain.events import EventDispatcher\n   |                             ^^^^^^^^^^^^^^^\n 9 | from ..domain.task import Task\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\ai_service.py:9:1\n   |\n 8 | from ..domain.events import EventDispatcher\n 9 | from ..domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n  --> core\\services\\ai_service.py:9:27\n   |\n 8 | from ..domain.events import EventDispatcher\n 9 | from ..domain.task import Task\n   |                           ^^^^\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\ai_service.py:10:1\n   |\n 8 | from ..domain.events import EventDispatcher\n 9 | from ..domain.task import Task\n10 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\ai_service.py:10:31\n   |\n 8 | from ..domain.events import EventDispatcher\n 9 | from ..domain.task import Task\n10 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nPERF401 Use a list comprehension to create a transformed list\n   --> core\\services\\ai_service.py:127:13\n    |\n125 |           upcoming_rows: list[UpcomingTask] = []\n126 |           for task in candidates[:count]:\n127 | /             upcoming_rows.append(\n128 | |                 UpcomingTask(\n129 | |                     task_id=task.id,\n130 | |                     description=task.description,\n131 | |                     due=task.due,\n132 | |                     priority=task.priority,\n133 | |                 )\n134 | |             )\n    | |_____________^\n135 |           return upcoming_rows\n    |\nhelp: Replace for loop with list comprehension\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> core\\services\\automation_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Mapping\n  |                             ^^^^^^^\n4 | from datetime import UTC, datetime\n5 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\automation_service.py:7:1\n  |\n5 | from typing import Any\n6 |\n7 | from ...infrastructure.automation import AutomationWebhookClient\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ...infrastructure.telemetry import TelemetryClient\n9 | from ..domain import events\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.automation.AutomationWebhookClient` into a type-checking block\n --> core\\services\\automation_service.py:7:42\n  |\n5 | from typing import Any\n6 |\n7 | from ...infrastructure.automation import AutomationWebhookClient\n  |                                          ^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ...infrastructure.telemetry import TelemetryClient\n9 | from ..domain import events\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\automation_service.py:8:1\n   |\n 7 | from ...infrastructure.automation import AutomationWebhookClient\n 8 | from ...infrastructure.telemetry import TelemetryClient\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.telemetry.TelemetryClient` into a type-checking block\n  --> core\\services\\automation_service.py:8:41\n   |\n 7 | from ...infrastructure.automation import AutomationWebhookClient\n 8 | from ...infrastructure.telemetry import TelemetryClient\n   |                                         ^^^^^^^^^^^^^^^\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\automation_service.py:9:1\n   |\n 7 | from ...infrastructure.automation import AutomationWebhookClient\n 8 | from ...infrastructure.telemetry import TelemetryClient\n 9 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..ports.task_repo import ITaskRepository\n11 | from .ai_service import AIService, TaskSummary\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\automation_service.py:10:1\n   |\n 8 | from ...infrastructure.telemetry import TelemetryClient\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from .ai_service import AIService, TaskSummary\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\automation_service.py:10:31\n   |\n 8 | from ...infrastructure.telemetry import TelemetryClient\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n11 | from .ai_service import AIService, TaskSummary\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `.ai_service.AIService` into a type-checking block\n  --> core\\services\\automation_service.py:11:25\n   |\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n11 | from .ai_service import AIService, TaskSummary\n   |                         ^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `.ai_service.TaskSummary` into a type-checking block\n  --> core\\services\\automation_service.py:11:36\n   |\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n11 | from .ai_service import AIService, TaskSummary\n   |                                    ^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\card_action_service.py:7:1\n  |\n5 | from urllib.parse import parse_qs, urlparse\n6 |\n7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..domain import events\n9 | from ..domain.events import EventDispatcher\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\card_action_service.py:7:1\n  |\n5 | from urllib.parse import parse_qs, urlparse\n6 |\n7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..domain import events\n9 | from ..domain.events import EventDispatcher\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...x_cls_legatus_acta_schedae_x.Notecard` into a type-checking block\n --> core\\services\\card_action_service.py:7:45\n  |\n5 | from urllib.parse import parse_qs, urlparse\n6 |\n7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n  |                                             ^^^^^^^^\n8 | from ..domain import events\n9 | from ..domain.events import EventDispatcher\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `...x_cls_legatus_acta_schedae_x.Storage` into a type-checking block\n --> core\\services\\card_action_service.py:7:55\n  |\n5 | from urllib.parse import parse_qs, urlparse\n6 |\n7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n  |                                                       ^^^^^^^\n8 | from ..domain import events\n9 | from ..domain.events import EventDispatcher\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\card_action_service.py:8:1\n   |\n 7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n 8 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..domain.events import EventDispatcher\n10 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\card_action_service.py:9:1\n   |\n 7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n 8 | from ..domain import events\n 9 | from ..domain.events import EventDispatcher\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n  --> core\\services\\card_action_service.py:9:29\n   |\n 7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n 8 | from ..domain import events\n 9 | from ..domain.events import EventDispatcher\n   |                             ^^^^^^^^^^^^^^^\n10 | from ..services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\card_action_service.py:10:1\n   |\n 8 | from ..domain import events\n 9 | from ..domain.events import EventDispatcher\n10 | from ..services.task_service import TaskService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..services.task_service.TaskService` into a type-checking block\n  --> core\\services\\card_action_service.py:10:37\n   |\n 8 | from ..domain import events\n 9 | from ..domain.events import EventDispatcher\n10 | from ..services.task_service import TaskService\n   |                                     ^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\card_action_service.py:123:15\n    |\n121 |             )\n122 |\n123 |         raise ValueError(f\"Unsupported task update action '{action}'\")\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |\n125 |     @staticmethod\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\services\\card_action_service.py:123:26\n    |\n121 |             )\n122 |\n123 |         raise ValueError(f\"Unsupported task update action '{action}'\")\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |\n125 |     @staticmethod\n    |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\card_action_service.py:129:19\n    |\n127 |         normalized = (task_update or \"\").strip().lower() or \"complete\"\n128 |         if normalized not in {\"complete\", \"none\"}:\n129 |             raise ValueError(\"task_update must be one of: 'complete', 'none'\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n130 |         return normalized\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\services\\card_action_service.py:129:30\n    |\n127 |         normalized = (task_update or \"\").strip().lower() or \"complete\"\n128 |         if normalized not in {\"complete\", \"none\"}:\n129 |             raise ValueError(\"task_update must be one of: 'complete', 'none'\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n130 |         return normalized\n    |\nhelp: Assign to variable; remove string literal\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> core\\services\\card_action_service.py:135:55\n    |\n133 |     def _extract_task_id(card: Notecard) -> str | None:\n134 |         for tag in card.tags:\n135 |             if tag.startswith(\"task:\") and len(tag) > 5:\n    |                                                       ^\n136 |                 return tag.split(\":\", 1)[1]\n137 |         if card.symbol_data:\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> core\\services\\card_action_service.py:144:20\n    |\n142 |                 if task_param:\n143 |                     return task_param[0]\n144 |             except Exception:\n    |                    ^^^^^^^^^\n145 |                 return None\n146 |         return None\n    |\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\collaboration_service.py:6:29\n  |\n4 | import json\n5 | import os\n6 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n7 | from dataclasses import asdict, dataclass\n8 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\collaboration_service.py:6:39\n  |\n4 | import json\n5 | import os\n6 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n7 | from dataclasses import asdict, dataclass\n8 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\collaboration_service.py:16:1\n   |\n14 | from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC\n15 |\n16 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n17 | from ..domain.task import Task\n18 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\collaboration_service.py:17:1\n   |\n16 | from ..domain import events\n17 | from ..domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n18 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\collaboration_service.py:18:1\n   |\n16 | from ..domain import events\n17 | from ..domain.task import Task\n18 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\collaboration_service.py:18:31\n   |\n16 | from ..domain import events\n17 | from ..domain.task import Task\n18 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\collaboration_service.py:80:19\n   |\n78 |         src_path = Path(source)\n79 |         if not src_path.exists():\n80 |             raise FileNotFoundError(f\"Sync bundle not found: {src_path}\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n81 |         bundle = json.loads(src_path.read_text(encoding=\"utf-8\"))\n82 |         salt_b64 = bundle.get(\"salt\")\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> core\\services\\collaboration_service.py:80:37\n   |\n78 |         src_path = Path(source)\n79 |         if not src_path.exists():\n80 |             raise FileNotFoundError(f\"Sync bundle not found: {src_path}\")\n   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n81 |         bundle = json.loads(src_path.read_text(encoding=\"utf-8\"))\n82 |         salt_b64 = bundle.get(\"salt\")\n   |\nhelp: Assign to variable; remove f-string literal\n\nTRY004 Prefer `TypeError` exception for invalid type\n  --> core\\services\\collaboration_service.py:85:13\n   |\n83 |         ciphertext = bundle.get(\"ciphertext\")\n84 |         if not isinstance(salt_b64, str) or not isinstance(ciphertext, str):\n85 |             raise ValueError(\"Malformed sync bundle\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n86 |         salt = base64.b64decode(salt_b64)\n87 |         decrypted = self._decrypt(ciphertext.encode(\"utf-8\"), passphrase, salt)\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\collaboration_service.py:85:19\n   |\n83 |         ciphertext = bundle.get(\"ciphertext\")\n84 |         if not isinstance(salt_b64, str) or not isinstance(ciphertext, str):\n85 |             raise ValueError(\"Malformed sync bundle\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n86 |         salt = base64.b64decode(salt_b64)\n87 |         decrypted = self._decrypt(ciphertext.encode(\"utf-8\"), passphrase, salt)\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> core\\services\\collaboration_service.py:85:30\n   |\n83 |         ciphertext = bundle.get(\"ciphertext\")\n84 |         if not isinstance(salt_b64, str) or not isinstance(ciphertext, str):\n85 |             raise ValueError(\"Malformed sync bundle\")\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^\n86 |         salt = base64.b64decode(salt_b64)\n87 |         decrypted = self._decrypt(ciphertext.encode(\"utf-8\"), passphrase, salt)\n   |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\collaboration_service.py:93:19\n   |\n91 |             json.JSONDecodeError\n92 |         ) as exc:  # pragma: no cover - defensive guard\n93 |             raise ValueError(\"Unable to decode sync payload\") from exc\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n94 |         imported_tasks: list[Task] = []\n95 |         for record in records:\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> core\\services\\collaboration_service.py:93:30\n   |\n91 |             json.JSONDecodeError\n92 |         ) as exc:  # pragma: no cover - defensive guard\n93 |             raise ValueError(\"Unable to decode sync payload\") from exc\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n94 |         imported_tasks: list[Task] = []\n95 |         for record in records:\n   |\nhelp: Assign to variable; remove string literal\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\plugin_bus.py:5:29\n  |\n3 | import inspect\n4 | import logging\n5 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n6 | from dataclasses import dataclass\n7 | from importlib import import_module\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\plugin_bus.py:5:39\n  |\n3 | import inspect\n4 | import logging\n5 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n6 | from dataclasses import dataclass\n7 | from importlib import import_module\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:10:1\n   |\n 8 | from typing import Any, Protocol, cast\n 9 |\n10 | from ...infrastructure.config import AppConfig\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.config.AppConfig` into a type-checking block\n  --> core\\services\\plugin_bus.py:10:38\n   |\n 8 | from typing import Any, Protocol, cast\n 9 |\n10 | from ...infrastructure.config import AppConfig\n   |                                      ^^^^^^^^^\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:11:1\n   |\n10 | from ...infrastructure.config import AppConfig\n11 | from ...infrastructure.telemetry import TelemetryClient\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.telemetry.TelemetryClient` into a type-checking block\n  --> core\\services\\plugin_bus.py:11:41\n   |\n10 | from ...infrastructure.config import AppConfig\n11 | from ...infrastructure.telemetry import TelemetryClient\n   |                                         ^^^^^^^^^^^^^^^\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:12:1\n   |\n10 | from ...infrastructure.config import AppConfig\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:13:1\n   |\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:13:1\n   |\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n  --> core\\services\\plugin_bus.py:13:29\n   |\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   |                             ^^^^^^^^^^^^^^^\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `..domain.events.EventSubscriber` into a type-checking block\n  --> core\\services\\plugin_bus.py:13:46\n   |\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   |                                              ^^^^^^^^^^^^^^^\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:14:1\n   |\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n15 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..services.ai_service.AIService` into a type-checking block\n  --> core\\services\\plugin_bus.py:14:35\n   |\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n   |                                   ^^^^^^^^^\n15 | from ..services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:15:1\n   |\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n16 |\n17 | DomainEventType = (\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..services.task_service.TaskService` into a type-checking block\n  --> core\\services\\plugin_bus.py:15:37\n   |\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |                                     ^^^^^^^^^^^\n16 |\n17 | DomainEventType = (\n   |\nhelp: Move into type-checking block\n\nPLR0913 Too many arguments in function definition (6 > 5)\n  --> core\\services\\plugin_bus.py:43:9\n   |\n42 | class PluginContext:\n43 |     def __init__(\n   |         ^^^^^^^^\n44 |         self,\n45 |         plugin_name: str,\n   |\n\nSIM108 Use ternary operator `plugin_instance = plugin_obj() if inspect.isclass(plugin_obj) else plugin_obj` instead of `if`-`else`-block\n   --> core\\services\\plugin_bus.py:171:9\n    |\n169 |               plugin_obj = module.plugin\n170 |\n171 | /         if inspect.isclass(plugin_obj):\n172 | |             plugin_instance = plugin_obj()\n173 | |         else:\n174 | |             plugin_instance = plugin_obj\n    | |________________________________________^\n175 |\n176 |           if not hasattr(plugin_instance, \"setup\"):\n    |\nhelp: Replace `if`-`else`-block with `plugin_instance = plugin_obj() if inspect.isclass(plugin_obj) else plugin_obj`\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\review_guidance_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass\n5 | from datetime import datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\services\\review_guidance_service.py:5:22\n  |\n3 | from collections.abc import Sequence\n4 | from dataclasses import dataclass\n5 | from datetime import datetime, timedelta\n  |                      ^^^^^^^^\n6 |\n7 | from ..domain.review import ReviewRecord\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.timedelta` into a type-checking block\n --> core\\services\\review_guidance_service.py:5:32\n  |\n3 | from collections.abc import Sequence\n4 | from dataclasses import dataclass\n5 | from datetime import datetime, timedelta\n  |                                ^^^^^^^^^\n6 |\n7 | from ..domain.review import ReviewRecord\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\review_guidance_service.py:7:1\n  |\n5 | from datetime import datetime, timedelta\n6 |\n7 | from ..domain.review import ReviewRecord\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..domain.task import Task\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.review.ReviewRecord` into a type-checking block\n --> core\\services\\review_guidance_service.py:7:29\n  |\n5 | from datetime import datetime, timedelta\n6 |\n7 | from ..domain.review import ReviewRecord\n  |                             ^^^^^^^^^^^^\n8 | from ..domain.task import Task\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\review_guidance_service.py:8:1\n  |\n7 | from ..domain.review import ReviewRecord\n8 | from ..domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n --> core\\services\\review_guidance_service.py:8:27\n  |\n7 | from ..domain.review import ReviewRecord\n8 | from ..domain.task import Task\n  |                           ^^^^\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.review_service.ReviewPlanItem` into a type-checking block\n --> core\\services\\review_guidance_service.py:9:29\n  |\n7 | from ..domain.review import ReviewRecord\n8 | from ..domain.task import Task\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |                             ^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.review_service.ReviewService` into a type-checking block\n --> core\\services\\review_guidance_service.py:9:45\n  |\n7 | from ..domain.review import ReviewRecord\n8 | from ..domain.task import Task\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |                                             ^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> core\\services\\review_guidance_service.py:75:31\n   |\n73 |                 score += 1.25\n74 |                 reasons.append(\"task due\")\n75 |             elif delta_days < 2:\n   |                               ^\n76 |                 score += 0.75\n77 |                 reasons.append(\"task due soon\")\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n  --> core\\services\\review_guidance_service.py:88:33\n   |\n86 |             reasons.append(\"recent card scan\")\n87 |\n88 |         if record.repetitions < 3:\n   |                                 ^\n89 |             score += 0.3\n90 |             reasons.append(f\"{record.repetitions} reps\")\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2.0` with a constant variable\n  --> core\\services\\review_guidance_service.py:92:33\n   |\n90 |             reasons.append(f\"{record.repetitions} reps\")\n91 |\n92 |         if record.ease_factor < 2.0:\n   |                                 ^^^\n93 |             score += 0.4\n94 |             reasons.append(\"low ease\")\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> core\\services\\review_guidance_service.py:113:27\n    |\n111 |         if task.status == \"completed\":\n112 |             return \"confirm archive\"\n113 |         if overdue_days > 2:\n    |                           ^\n114 |             return \"rescue overdue review\"\n115 |         if task.priority == \"high\":\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `0.5` with a constant variable\n   --> core\\services\\review_guidance_service.py:117:27\n    |\n115 |         if task.priority == \"high\":\n116 |             return \"review then commit\"\n117 |         if overdue_days > 0.5:\n    |                           ^^^\n118 |             return \"refresh context\"\n119 |         return \"review next\"\n    |\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:8:1\n   |\n 6 | from typing import Any, cast\n 7 |\n 8 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:9:1\n   |\n 8 | from ..domain import events\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:9:1\n   |\n 8 | from ..domain import events\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:10:1\n   |\n 8 | from ..domain import events\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ..ports.review_repo import IReviewRepository\n12 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n  --> core\\services\\review_service.py:10:27\n   |\n 8 | from ..domain import events\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n   |                           ^^^^\n11 | from ..ports.review_repo import IReviewRepository\n12 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:11:1\n   |\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.review_repo.IReviewRepository` into a type-checking block\n  --> core\\services\\review_service.py:11:33\n   |\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n   |                                 ^^^^^^^^^^^^^^^^^\n12 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:12:1\n   |\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n12 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\review_service.py:12:31\n   |\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n12 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nANN204 Missing return type annotation for special method `__init__`\n  --> core\\services\\review_service.py:35:9\n   |\n34 | class ReviewService:\n35 |     def __init__(\n   |         ^^^^^^^^\n36 |         self,\n37 |         repository: IReviewRepository,\n   |\nhelp: Add return type annotation: `None`\n\nC401 Unnecessary generator (rewrite as a set comprehension)\n   --> core\\services\\review_service.py:133:22\n    |\n131 |         moment = now or _now()\n132 |         results: list[ReviewPlanItem] = []\n133 |         tag_filter = set(t.lower() for t in tags) if tags else None\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n134 |         for record in self._repository.list():\n135 |             if record.suspended:\n    |\nhelp: Rewrite as a set comprehension\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> core\\services\\review_service.py:166:37\n    |\n164 |         context: Mapping[str, Any] | None = None,\n165 |     ) -> ReviewRecord:\n166 |         if quality < 0 or quality > 5:\n    |                                     ^\n167 |             raise ValueError(\"quality must be between 0 and 5\")\n168 |         reviewed_time = reviewed_at or _now()\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\review_service.py:167:19\n    |\n165 |     ) -> ReviewRecord:\n166 |         if quality < 0 or quality > 5:\n167 |             raise ValueError(\"quality must be between 0 and 5\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |         reviewed_time = reviewed_at or _now()\n169 |         if reviewed_time.tzinfo is None:\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\services\\review_service.py:167:30\n    |\n165 |     ) -> ReviewRecord:\n166 |         if quality < 0 or quality > 5:\n167 |             raise ValueError(\"quality must be between 0 and 5\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |         reviewed_time = reviewed_at or _now()\n169 |         if reviewed_time.tzinfo is None:\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\review_service.py:173:19\n    |\n171 |         task = self._task_repository.get(task_id)\n172 |         if task is None:\n173 |             raise KeyError(f\"Task {task_id} not found\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n174 |         record = self._repository.get(task_id)\n175 |         if record is None:\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\services\\review_service.py:173:28\n    |\n171 |         task = self._task_repository.get(task_id)\n172 |         if task is None:\n173 |             raise KeyError(f\"Task {task_id} not found\")\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n174 |         record = self._repository.get(task_id)\n175 |         if record is None:\n    |\nhelp: Assign to variable; remove f-string literal\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n   --> core\\services\\review_service.py:181:22\n    |\n179 |         )\n180 |         ease = max(1.3, ease)\n181 |         if quality < 3:\n    |                      ^\n182 |             repetitions = 0\n183 |             interval_days = 1.0\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> core\\services\\review_service.py:188:33\n    |\n186 |             if repetitions == 1:\n187 |                 interval_days = 1.0\n188 |             elif repetitions == 2:\n    |                                 ^\n189 |                 interval_days = 6.0\n190 |             else:\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> core\\services\\review_service.py:207:37\n    |\n205 |         return self._repository.save(record)\n206 |\n207 |     def suspend(self, task_id: str, suspended: bool) -> ReviewRecord:\n    |                                     ^^^^^^^^^\n208 |         task = self._task_repository.get(task_id)\n209 |         if task is None:\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\review_service.py:210:19\n    |\n208 |         task = self._task_repository.get(task_id)\n209 |         if task is None:\n210 |             raise KeyError(f\"Task {task_id} not found\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n211 |         record = self._repository.get(task_id)\n212 |         if record is None:\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\services\\review_service.py:210:28\n    |\n208 |         task = self._task_repository.get(task_id)\n209 |         if task is None:\n210 |             raise KeyError(f\"Task {task_id} not found\")\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n211 |         record = self._repository.get(task_id)\n212 |         if record is None:\n    |\nhelp: Assign to variable; remove f-string literal\n\nPLR0911 Too many return statements (7 > 6)\n   --> core\\services\\review_service.py:238:9\n    |\n237 |     @staticmethod\n238 |     def _infer_quality_from_scan(event: events.CardScanned) -> int:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n239 |         metadata = event.metadata or {}\n240 |         if event.task_error:\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `value`\n   --> core\\services\\review_service.py:266:28\n    |\n265 |     @staticmethod\n266 |     def _coerce_int(value: Any) -> int | None:\n    |                            ^^^\n267 |         if isinstance(value, bool):\n268 |             return 1 if value else 0\n    |\n\nRUF046 Value being cast to `int` is already an integer\n   --> core\\services\\review_service.py:270:20\n    |\n268 |             return 1 if value else 0\n269 |         if isinstance(value, (int, float)):\n270 |             return int(round(value))\n    |                    ^^^^^^^^^^^^^^^^^\n271 |         if isinstance(value, str):\n272 |             try:\n    |\nhelp: Remove unnecessary `int` call\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `value`\n   --> core\\services\\review_service.py:285:29\n    |\n283 |             return {}\n284 |\n285 |         def _convert(value: Any) -> Any:\n    |                             ^^^\n286 |             if isinstance(value, (str, int, float, bool)) or value is None:\n287 |                 return value\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_convert`\n   --> core\\services\\review_service.py:285:37\n    |\n283 |             return {}\n284 |\n285 |         def _convert(value: Any) -> Any:\n    |                                     ^^^\n286 |             if isinstance(value, (str, int, float, bool)) or value is None:\n287 |                 return value\n    |\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:5:1\n  |\n3 | from datetime import UTC, datetime\n4 |\n5 | from ...infrastructure.telemetry import TelemetryClient\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.telemetry.TelemetryClient` into a type-checking block\n --> core\\services\\scheduler_service.py:5:41\n  |\n3 | from datetime import UTC, datetime\n4 |\n5 | from ...infrastructure.telemetry import TelemetryClient\n  |                                         ^^^^^^^^^^^^^^^\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:6:1\n  |\n5 | from ...infrastructure.telemetry import TelemetryClient\n6 | from ..domain import events\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:7:1\n  |\n5 | from ...infrastructure.telemetry import TelemetryClient\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..ports.scheduler import IScheduler\n9 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n --> core\\services\\scheduler_service.py:7:29\n  |\n5 | from ...infrastructure.telemetry import TelemetryClient\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  |                             ^^^^^^^^^^^^^^^\n8 | from ..ports.scheduler import IScheduler\n9 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:8:1\n  |\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n9 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.scheduler.IScheduler` into a type-checking block\n --> core\\services\\scheduler_service.py:8:31\n  |\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n  |                               ^^^^^^^^^^\n9 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:9:1\n  |\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n9 | from ..ports.task_repo import ITaskRepository\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n --> core\\services\\scheduler_service.py:9:31\n  |\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n9 | from ..ports.task_repo import ITaskRepository\n  |                               ^^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\search_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\search_service.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from dataclasses import dataclass\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\search_service.py:6:1\n  |\n4 | from dataclasses import dataclass\n5 |\n6 | from ..domain import events\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..domain.events import EventDispatcher\n8 | from ..domain.task import Task\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\search_service.py:7:1\n  |\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..domain.task import Task\n9 | from ..ports.search_index import ISearchIndex\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n --> core\\services\\search_service.py:7:29\n  |\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  |                             ^^^^^^^^^^^^^^^\n8 | from ..domain.task import Task\n9 | from ..ports.search_index import ISearchIndex\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\search_service.py:8:1\n   |\n 6 | from ..domain import events\n 7 | from ..domain.events import EventDispatcher\n 8 | from ..domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..ports.search_index import ISearchIndex\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n  --> core\\services\\search_service.py:8:27\n   |\n 6 | from ..domain import events\n 7 | from ..domain.events import EventDispatcher\n 8 | from ..domain.task import Task\n   |                           ^^^^\n 9 | from ..ports.search_index import ISearchIndex\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\search_service.py:9:1\n   |\n 7 | from ..domain.events import EventDispatcher\n 8 | from ..domain.task import Task\n 9 | from ..ports.search_index import ISearchIndex\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.search_index.ISearchIndex` into a type-checking block\n  --> core\\services\\search_service.py:9:34\n   |\n 7 | from ..domain.events import EventDispatcher\n 8 | from ..domain.task import Task\n 9 | from ..ports.search_index import ISearchIndex\n   |                                  ^^^^^^^^^^^^\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\search_service.py:10:1\n   |\n 8 | from ..domain.task import Task\n 9 | from ..ports.search_index import ISearchIndex\n10 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\search_service.py:10:31\n   |\n 8 | from ..domain.task import Task\n 9 | from ..ports.search_index import ISearchIndex\n10 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\task_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from datetime import datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\task_service.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from datetime import datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\services\\task_service.py:4:22\n  |\n3 | from collections.abc import Iterable, Sequence\n4 | from datetime import datetime, timedelta\n  |                      ^^^^^^^^\n5 |\n6 | from ..domain import events\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.timedelta` into a type-checking block\n --> core\\services\\task_service.py:4:32\n  |\n3 | from collections.abc import Iterable, Sequence\n4 | from datetime import datetime, timedelta\n  |                                ^^^^^^^^^\n5 |\n6 | from ..domain import events\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\task_service.py:6:1\n  |\n4 | from datetime import datetime, timedelta\n5 |\n6 | from ..domain import events\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..domain.task import Task\n8 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\task_service.py:7:1\n  |\n6 | from ..domain import events\n7 | from ..domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\task_service.py:8:1\n  |\n6 | from ..domain import events\n7 | from ..domain.task import Task\n8 | from ..ports.task_repo import ITaskRepository\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n --> core\\services\\task_service.py:8:31\n  |\n6 | from ..domain import events\n7 | from ..domain.task import Task\n8 | from ..ports.task_repo import ITaskRepository\n  |                               ^^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nANN204 Missing return type annotation for special method `__init__`\n  --> core\\services\\task_service.py:12:9\n   |\n11 | class TaskService:\n12 |     def __init__(\n   |         ^^^^^^^^\n13 |         self, repo: ITaskRepository, dispatcher: events.EventDispatcher\n14 |     ):\n   |\nhelp: Add return type annotation: `None`\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\task_service.py:61:19\n   |\n59 |     ) -> Task:\n60 |         if until is None and delta is None:\n61 |             raise ValueError(\"Provide either until or delta\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n62 |         task = self._get_task(task_id)\n63 |         if until is not None:\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> core\\services\\task_service.py:61:30\n   |\n59 |     ) -> Task:\n60 |         if until is None and delta is None:\n61 |             raise ValueError(\"Provide either until or delta\")\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n62 |         task = self._get_task(task_id)\n63 |         if until is not None:\n   |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\task_service.py:67:23\n   |\n65 |         else:\n66 |             if delta is None:\n67 |                 raise ValueError(\"Delta required when until is not provided\")\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n68 |             updated = task.deferred(delta)\n69 |         updated.validate()\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> core\\services\\task_service.py:67:34\n   |\n65 |         else:\n66 |             if delta is None:\n67 |                 raise ValueError(\"Delta required when until is not provided\")\n   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n68 |             updated = task.deferred(delta)\n69 |         updated.validate()\n   |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\task_service.py:99:19\n    |\n 97 |         task = self._repo.get(task_id)\n 98 |         if not task:\n 99 |             raise KeyError(f\"Task {task_id} not found\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n100 |         return task\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\services\\task_service.py:99:28\n    |\n 97 |         task = self._repo.get(task_id)\n 98 |         if not task:\n 99 |             raise KeyError(f\"Task {task_id} not found\")\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n100 |         return task\n    |\nhelp: Assign to variable; remove f-string literal\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> infrastructure\\automation\\webhook_client.py:4:29\n  |\n3 | import logging\n4 | from collections.abc import Mapping, Sequence\n  |                             ^^^^^^^\n5 | from dataclasses import dataclass\n6 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> infrastructure\\automation\\webhook_client.py:4:38\n  |\n3 | import logging\n4 | from collections.abc import Mapping, Sequence\n  |                                      ^^^^^^^^\n5 | from dataclasses import dataclass\n6 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n  --> infrastructure\\automation\\webhook_client.py:70:18\n   |\n68 |                 )\n69 |                 continue\n70 |             ok = 200 <= response.status_code < 300\n   |                  ^^^\n71 |             if not ok:\n72 |                 logger.warning(\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `300` with a constant variable\n  --> infrastructure\\automation\\webhook_client.py:70:48\n   |\n68 |                 )\n69 |                 continue\n70 |             ok = 200 <= response.status_code < 300\n   |                                                ^^^\n71 |             if not ok:\n72 |                 logger.warning(\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> infrastructure\\automation\\webhook_client.py:91:9\n   |\n90 |       def __del__(self) -> None:  # pragma: no cover - defensive cleanup\n91 | /         try:\n92 | |             self.close()\n93 | |         except Exception:  # pragma: no cover - best effort cleanup\n94 | |             pass\n   | |________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> infrastructure\\automation\\webhook_client.py:93:9\n   |\n91 |           try:\n92 |               self.close()\n93 | /         except Exception:  # pragma: no cover - best effort cleanup\n94 | |             pass\n   | |________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> infrastructure\\automation\\webhook_client.py:93:16\n   |\n91 |         try:\n92 |             self.close()\n93 |         except Exception:  # pragma: no cover - best effort cleanup\n   |                ^^^^^^^^^\n94 |             pass\n   |\n\nINP001 File `infrastructure\\collaboration\\hub_client.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> infrastructure\\collaboration\\hub_client.py:1:1\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n  --> infrastructure\\collaboration\\hub_client.py:8:21\n   |\n 6 | from dataclasses import dataclass\n 7 | from datetime import datetime\n 8 | from pathlib import Path\n   |                     ^^^^\n 9 | from types import TracebackType\n10 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `types.TracebackType` into a type-checking block\n  --> infrastructure\\collaboration\\hub_client.py:9:19\n   |\n 7 | from datetime import datetime\n 8 | from pathlib import Path\n 9 | from types import TracebackType\n   |                   ^^^^^^^^^^^^^\n10 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `transport`\n  --> infrastructure\\collaboration\\hub_client.py:37:20\n   |\n35 |         *,\n36 |         timeout: float = 10.0,\n37 |         transport: Any | None = None,\n   |                    ^^^^^^^^^^\n38 |     ) -> None:\n39 |         self._client = httpx.Client(\n   |\n\nPYI034 `__enter__` methods in classes like `CollaborationHubClient` usually return `self` at runtime\n  --> infrastructure\\collaboration\\hub_client.py:46:9\n   |\n44 |         self._client.close()\n45 |\n46 |     def __enter__(self) -> CollaborationHubClient:\n   |         ^^^^^^^^^\n47 |         return self\n   |\nhelp: Use `Self` as return type\n\nPLR2004 Magic value used in comparison, consider replacing `404` with a constant variable\n  --> infrastructure\\collaboration\\hub_client.py:78:36\n   |\n76 |     def fetch_latest_bundle(self) -> BundleDownloadResult | None:\n77 |         response = self._client.get(\"/api/collab/bundles/latest\")\n78 |         if response.status_code == 404:\n   |                                    ^^^\n79 |             return None\n80 |         response.raise_for_status()\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `404` with a constant variable\n  --> infrastructure\\collaboration\\hub_client.py:85:36\n   |\n83 |     def fetch_bundle(self, bundle_id: str) -> BundleDownloadResult | None:\n84 |         response = self._client.get(f\"/api/collab/bundles/{bundle_id}\")\n85 |         if response.status_code == 404:\n   |                                    ^^^\n86 |             return None\n87 |         response.raise_for_status()\n   |\n\nTRY004 Prefer `TypeError` exception for invalid type\n   --> infrastructure\\collaboration\\hub_client.py:104:21\n    |\n102 |             for item in payload_list:\n103 |                 if not isinstance(item, Mapping):\n104 |                     raise ValueError(\"Unexpected bundle list entry\")\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:104:27\n    |\n102 |             for item in payload_list:\n103 |                 if not isinstance(item, Mapping):\n104 |                     raise ValueError(\"Unexpected bundle list entry\")\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:104:38\n    |\n102 |             for item in payload_list:\n103 |                 if not isinstance(item, Mapping):\n104 |                     raise ValueError(\"Unexpected bundle list entry\")\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:107:15\n    |\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n107 |         raise ValueError(\"Unexpected bundle list payload\")\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n108 |\n109 |     def prune_bundles(\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:107:26\n    |\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n107 |         raise ValueError(\"Unexpected bundle list payload\")\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n108 |\n109 |     def prune_bundles(\n    |\nhelp: Assign to variable; remove string literal\n\nTRY004 Prefer `TypeError` exception for invalid type\n   --> infrastructure\\collaboration\\hub_client.py:118:13\n    |\n116 |         payload = response.json()\n117 |         if not isinstance(payload, Mapping):\n118 |             raise ValueError(\"Unexpected prune payload\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n119 |         payload_mapping = cast(\"Mapping[str, Any]\", payload)\n120 |         removed_raw = payload_mapping.get(\"removed\", [])\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:118:19\n    |\n116 |         payload = response.json()\n117 |         if not isinstance(payload, Mapping):\n118 |             raise ValueError(\"Unexpected prune payload\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n119 |         payload_mapping = cast(\"Mapping[str, Any]\", payload)\n120 |         removed_raw = payload_mapping.get(\"removed\", [])\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:118:30\n    |\n116 |         payload = response.json()\n117 |         if not isinstance(payload, Mapping):\n118 |             raise ValueError(\"Unexpected prune payload\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n119 |         payload_mapping = cast(\"Mapping[str, Any]\", payload)\n120 |         removed_raw = payload_mapping.get(\"removed\", [])\n    |\nhelp: Assign to variable; remove string literal\n\nTRY004 Prefer `TypeError` exception for invalid type\n   --> infrastructure\\collaboration\\hub_client.py:123:13\n    |\n121 |         remaining_raw = payload_mapping.get(\"remaining\", 0)\n122 |         if not isinstance(removed_raw, list):\n123 |             raise ValueError(\"Unexpected removed bundles payload\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |         removed_items: list[Any] = list(removed_raw)\n125 |         removed: list[BundleUploadResult] = []\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:123:19\n    |\n121 |         remaining_raw = payload_mapping.get(\"remaining\", 0)\n122 |         if not isinstance(removed_raw, list):\n123 |             raise ValueError(\"Unexpected removed bundles payload\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |         removed_items: list[Any] = list(removed_raw)\n125 |         removed: list[BundleUploadResult] = []\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:123:30\n    |\n121 |         remaining_raw = payload_mapping.get(\"remaining\", 0)\n122 |         if not isinstance(removed_raw, list):\n123 |             raise ValueError(\"Unexpected removed bundles payload\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |         removed_items: list[Any] = list(removed_raw)\n125 |         removed: list[BundleUploadResult] = []\n    |\nhelp: Assign to variable; remove string literal\n\nTRY004 Prefer `TypeError` exception for invalid type\n   --> infrastructure\\collaboration\\hub_client.py:128:17\n    |\n126 |         for item in removed_items:\n127 |             if not isinstance(item, Mapping):\n128 |                 raise ValueError(\"Unexpected prune entry\")\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n129 |             removed.append(self._parse_upload(self._to_str_dict(item)))\n130 |         remaining = int(remaining_raw)\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:128:23\n    |\n126 |         for item in removed_items:\n127 |             if not isinstance(item, Mapping):\n128 |                 raise ValueError(\"Unexpected prune entry\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n129 |             removed.append(self._parse_upload(self._to_str_dict(item)))\n130 |         remaining = int(remaining_raw)\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:128:34\n    |\n126 |         for item in removed_items:\n127 |             if not isinstance(item, Mapping):\n128 |                 raise ValueError(\"Unexpected prune entry\")\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n129 |             removed.append(self._parse_upload(self._to_str_dict(item)))\n130 |         remaining = int(remaining_raw)\n    |\nhelp: Assign to variable; remove string literal\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `value`\n   --> infrastructure\\collaboration\\hub_client.py:166:32\n    |\n165 |     @staticmethod\n166 |     def _parse_datetime(value: Any) -> datetime:\n    |                                ^^^\n167 |         if isinstance(value, datetime):\n168 |             return value\n    |\n\nDTZ901 Use of `datetime.datetime.min` without timezone information\n   --> infrastructure\\collaboration\\hub_client.py:178:16\n    |\n176 |                     return parsed\n177 |                 return parsed\n178 |         return datetime.min\n    |                ^^^^^^^^^^^^\n179 |\n180 |     @staticmethod\n    |\nhelp: Replace with `datetime.datetime.min.replace(tzinfo=...)`\n\nINP001 File `infrastructure\\collaboration\\store.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> infrastructure\\collaboration\\store.py:1:1\n\nTC003 Move standard library import `builtins` into a type-checking block\n --> infrastructure\\collaboration\\store.py:3:8\n  |\n1 | from __future__ import annotations\n2 |\n3 | import builtins\n  |        ^^^^^^^^\n4 | import json\n5 | from collections.abc import Iterable, Mapping, Sequence\n  |\nhelp: Move into type-checking block\n\nANN204 Missing return type annotation for special method `__init__`\n  --> infrastructure\\collaboration\\store.py:26:9\n   |\n24 |     \"\"\"Persist encrypted collaboration bundles for later retrieval.\"\"\"\n25 |\n26 |     def __init__(self, directory: str | Path):\n   |         ^^^^^^^^\n27 |         self._directory = Path(directory)\n28 |         self._directory.mkdir(parents=True, exist_ok=True)\n   |\nhelp: Add return type annotation: `None`\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> infrastructure\\collaboration\\store.py:87:19\n   |\n85 |     def prune(self, keep: int) -> builtins.list[StoredBundle]:\n86 |         if keep < 0:\n87 |             raise ValueError(\"keep must be non-negative\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n88 |         entries = list(self._iter_entries())\n89 |         if not entries:\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> infrastructure\\collaboration\\store.py:87:30\n   |\n85 |     def prune(self, keep: int) -> builtins.list[StoredBundle]:\n86 |         if keep < 0:\n87 |             raise ValueError(\"keep must be non-negative\")\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n88 |         entries = list(self._iter_entries())\n89 |         if not entries:\n   |\nhelp: Assign to variable; remove string literal\n\nSIM105 Use `contextlib.suppress(FileNotFoundError)` instead of `try`-`except`-`pass`\n   --> infrastructure\\collaboration\\store.py:105:13\n    |\n103 |           ]\n104 |           for bundle in removed_bundles:\n105 | /             try:\n106 | |                 bundle.path.unlink()\n107 | |             except FileNotFoundError:\n108 | |                 pass\n    | |____________________^\n109 |           self._write_entries(keep_entries)\n110 |           return removed_bundles\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(FileNotFoundError): ...`\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> infrastructure\\config.py:4:29\n  |\n3 | import os\n4 | from collections.abc import Mapping\n  |                             ^^^^^^^\n5 | from dataclasses import dataclass, field\n6 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nFBT001 Boolean-typed positional argument in function definition\n  --> infrastructure\\config.py:13:35\n   |\n13 | def _read_bool(value: str | None, default: bool = False) -> bool:\n   |                                   ^^^^^^^\n14 |     if value is None:\n15 |         return default\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> infrastructure\\config.py:13:35\n   |\n13 | def _read_bool(value: str | None, default: bool = False) -> bool:\n   |                                   ^^^^^^^\n14 |     if value is None:\n15 |         return default\n   |\n\nC901 `load_config` is too complex (19 > 10)\n  --> infrastructure\\config.py:87:5\n   |\n87 | def load_config(env: Mapping[str, str] | None = None) -> AppConfig:\n   |     ^^^^^^^^^^^\n88 |     source_env: Mapping[str, str] = env if env is not None else os.environ\n89 |     overrides: dict[str, str] = {}\n   |\n\nPLR0912 Too many branches (18 > 12)\n  --> infrastructure\\config.py:87:5\n   |\n87 | def load_config(env: Mapping[str, str] | None = None) -> AppConfig:\n   |     ^^^^^^^^^^^\n88 |     source_env: Mapping[str, str] = env if env is not None else os.environ\n89 |     overrides: dict[str, str] = {}\n   |\n\nPLR0915 Too many statements (59 > 50)\n  --> infrastructure\\config.py:87:5\n   |\n87 | def load_config(env: Mapping[str, str] | None = None) -> AppConfig:\n   |     ^^^^^^^^^^^\n88 |     source_env: Mapping[str, str] = env if env is not None else os.environ\n89 |     overrides: dict[str, str] = {}\n   |\n\nFBT003 Boolean positional value in function call\n   --> infrastructure\\config.py:115:63\n    |\n113 |         )\n114 |\n115 |     log_json = _read_bool(source_env.get(\"LEGATUS_LOG_JSON\"), True)\n    |                                                               ^^^^\n116 |     if \"LEGATUS_LOG_JSON\" in source_env:\n117 |         overrides[\"LEGATUS_LOG_JSON\"] = source_env[\"LEGATUS_LOG_JSON\"]\n    |\n\nRET504 Unnecessary assignment to `cfg` before `return` statement\n   --> infrastructure\\config.py:196:12\n    |\n194 |         automation_webhooks=automation_webhooks,\n195 |     )\n196 |     return cfg\n    |            ^^^\n    |\nhelp: Remove unnecessary assignment\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> infrastructure\\di.py:4:29\n  |\n3 | import logging\n4 | from collections.abc import Sequence\n  |                             ^^^^^^^^\n5 | from dataclasses import dataclass\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\di.py:7:1\n  |\n5 | from dataclasses import dataclass\n6 |\n7 | from ..adapters.taskwarrior.tw_repository import TaskwarriorRepository\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..core.domain.events import EventDispatcher\n9 | from ..core.services.ai_briefing_service import AIBriefingService\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:8:1\n   |\n 7 | from ..adapters.taskwarrior.tw_repository import TaskwarriorRepository\n 8 | from ..core.domain.events import EventDispatcher\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..core.services.ai_briefing_service import AIBriefingService\n10 | from ..core.services.ai_service import AIService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:9:1\n   |\n 7 | from ..adapters.taskwarrior.tw_repository import TaskwarriorRepository\n 8 | from ..core.domain.events import EventDispatcher\n 9 | from ..core.services.ai_briefing_service import AIBriefingService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..core.services.ai_service import AIService\n11 | from ..core.services.automation_service import AutomationService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:10:1\n   |\n 8 | from ..core.domain.events import EventDispatcher\n 9 | from ..core.services.ai_briefing_service import AIBriefingService\n10 | from ..core.services.ai_service import AIService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ..core.services.automation_service import AutomationService\n12 | from ..core.services.collaboration_service import CollaborationService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:11:1\n   |\n 9 | from ..core.services.ai_briefing_service import AIBriefingService\n10 | from ..core.services.ai_service import AIService\n11 | from ..core.services.automation_service import AutomationService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | from ..core.services.collaboration_service import CollaborationService\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:12:1\n   |\n10 | from ..core.services.ai_service import AIService\n11 | from ..core.services.automation_service import AutomationService\n12 | from ..core.services.collaboration_service import CollaborationService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:13:1\n   |\n11 | from ..core.services.automation_service import AutomationService\n12 | from ..core.services.collaboration_service import CollaborationService\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n15 | from ..core.services.review_service import ReviewService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:13:1\n   |\n11 | from ..core.services.automation_service import AutomationService\n12 | from ..core.services.collaboration_service import CollaborationService\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n15 | from ..core.services.review_service import ReviewService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:14:1\n   |\n12 | from ..core.services.collaboration_service import CollaborationService\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n15 | from ..core.services.review_service import ReviewService\n16 | from ..core.services.scheduler_service import SchedulerService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:15:1\n   |\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n15 | from ..core.services.review_service import ReviewService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n16 | from ..core.services.scheduler_service import SchedulerService\n17 | from ..core.services.search_service import SearchService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:16:1\n   |\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n15 | from ..core.services.review_service import ReviewService\n16 | from ..core.services.scheduler_service import SchedulerService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n17 | from ..core.services.search_service import SearchService\n18 | from ..core.services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:17:1\n   |\n15 | from ..core.services.review_service import ReviewService\n16 | from ..core.services.scheduler_service import SchedulerService\n17 | from ..core.services.search_service import SearchService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n18 | from ..core.services.task_service import TaskService\n19 | from ..x_cls_legatus_acta_schedae_x import Storage\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:18:1\n   |\n16 | from ..core.services.scheduler_service import SchedulerService\n17 | from ..core.services.search_service import SearchService\n18 | from ..core.services.task_service import TaskService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n19 | from ..x_cls_legatus_acta_schedae_x import Storage\n20 | from .automation import AutomationWebhookClient\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:19:1\n   |\n17 | from ..core.services.search_service import SearchService\n18 | from ..core.services.task_service import TaskService\n19 | from ..x_cls_legatus_acta_schedae_x import Storage\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n20 | from .automation import AutomationWebhookClient\n21 | from .config import AppConfig\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `.config.AppConfig` into a type-checking block\n  --> infrastructure\\di.py:21:21\n   |\n19 | from ..x_cls_legatus_acta_schedae_x import Storage\n20 | from .automation import AutomationWebhookClient\n21 | from .config import AppConfig\n   |                     ^^^^^^^^^\n22 | from .review.json_repository import JsonReviewRepository\n23 | from .scheduler import ApschedulerScheduler\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `.config.AppConfig` into a type-checking block\n  --> infrastructure\\logging.py:8:21\n   |\n 6 | from typing import Any\n 7 |\n 8 | from .config import AppConfig\n   |                     ^^^^^^^^^\n 9 |\n10 | STRUCTURED_EXCLUDE = {\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\review\\json_repository.py:8:1\n  |\n6 | from typing import Any, cast\n7 |\n8 | from ...core.domain.review import ReviewRecord\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n9 | from ...core.ports.review_repo import IReviewRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\review\\json_repository.py:9:1\n  |\n8 | from ...core.domain.review import ReviewRecord\n9 | from ...core.ports.review_repo import IReviewRepository\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nANN204 Missing return type annotation for special method `__init__`\n  --> infrastructure\\review\\json_repository.py:13:9\n   |\n12 | class JsonReviewRepository(IReviewRepository):\n13 |     def __init__(self, path: str | Path):\n   |         ^^^^^^^^\n14 |         self._path = Path(path)\n15 |         self._path.parent.mkdir(parents=True, exist_ok=True)\n   |\nhelp: Add return type annotation: `None`\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n --> infrastructure\\scheduler\\apscheduler_adapter.py:5:29\n  |\n3 | import importlib\n4 | import logging\n5 | from collections.abc import Callable\n  |                             ^^^^^^^^\n6 | from datetime import datetime\n7 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> infrastructure\\scheduler\\apscheduler_adapter.py:6:22\n  |\n4 | import logging\n5 | from collections.abc import Callable\n6 | from datetime import datetime\n  |                      ^^^^^^^^\n7 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:9:1\n   |\n 7 | from typing import Any\n 8 |\n 9 | from ...core.ports.scheduler import IScheduler\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 |\n11 | BackgroundScheduler: Any | None\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nBLE001 Do not catch blind exception: `Exception`\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:16:8\n   |\n14 |         \"apscheduler.schedulers.background\"\n15 |     )\n16 | except Exception:  # pragma: no cover\n   |        ^^^^^^^^^\n17 |     BackgroundScheduler = None\n18 | else:\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:31:19\n   |\n29 |               BackgroundScheduler\n30 |           ):  # pragma: no cover - runtime guard\n31 |               raise RuntimeError(\n   |  ___________________^\n32 | |                 \"APScheduler is not installed; install apscheduler to enable scheduling\"\n33 | |             )\n   | |_____________^\n34 |           self._scheduler: Any = BackgroundScheduler(timezone=timezone)\n35 |           self._started = False\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:32:17\n   |\n30 |         ):  # pragma: no cover - runtime guard\n31 |             raise RuntimeError(\n32 |                 \"APScheduler is not installed; install apscheduler to enable scheduling\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n33 |             )\n34 |         self._scheduler: Any = BackgroundScheduler(timezone=timezone)\n   |\nhelp: Assign to variable; remove string literal\n\nBLE001 Do not catch blind exception: `Exception`\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:73:13\n   |\n71 |             self._scheduler.remove_job(job_id)\n72 |         except (\n73 |             Exception\n   |             ^^^^^^^^^\n74 |         ) as exc:  # pragma: no cover - APScheduler raises when job missing\n75 |             logger.debug(\"Failed to cancel job %s: %s\", job_id, exc)\n   |\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n --> infrastructure\\scheduler\\null_scheduler.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Callable\n  |                             ^^^^^^^^\n4 | from datetime import datetime\n5 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> infrastructure\\scheduler\\null_scheduler.py:4:22\n  |\n3 | from collections.abc import Callable\n4 | from datetime import datetime\n  |                      ^^^^^^^^\n5 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\scheduler\\null_scheduler.py:7:1\n  |\n5 | from typing import Any\n6 |\n7 | from ...core.ports.scheduler import IScheduler\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nARG002 Unused method argument: `func`\n  --> infrastructure\\scheduler\\null_scheduler.py:25:9\n   |\n23 |         job_id: str,\n24 |         run_at: datetime,\n25 |         func: Callable[..., Any],\n   |         ^^^^\n26 |         args: tuple[Any, ...] | None = None,\n27 |         kwargs: dict[str, Any] | None = None,\n   |\n\nARG002 Unused method argument: `args`\n  --> infrastructure\\scheduler\\null_scheduler.py:26:9\n   |\n24 |         run_at: datetime,\n25 |         func: Callable[..., Any],\n26 |         args: tuple[Any, ...] | None = None,\n   |         ^^^^\n27 |         kwargs: dict[str, Any] | None = None,\n28 |     ) -> str:\n   |\n\nARG002 Unused method argument: `kwargs`\n  --> infrastructure\\scheduler\\null_scheduler.py:27:9\n   |\n25 |         func: Callable[..., Any],\n26 |         args: tuple[Any, ...] | None = None,\n27 |         kwargs: dict[str, Any] | None = None,\n   |         ^^^^^^\n28 |     ) -> str:\n29 |         self._jobs[job_id] = run_at\n   |\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> infrastructure\\search\\memory_index.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass, field\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> infrastructure\\search\\memory_index.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from dataclasses import dataclass, field\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\search\\memory_index.py:6:1\n  |\n4 | from dataclasses import dataclass, field\n5 |\n6 | from ...core.domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ...core.ports.search_index import ISearchIndex\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.domain.task.Task` into a type-checking block\n --> infrastructure\\search\\memory_index.py:6:33\n  |\n4 | from dataclasses import dataclass, field\n5 |\n6 | from ...core.domain.task import Task\n  |                                 ^^^^\n7 | from ...core.ports.search_index import ISearchIndex\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\search\\memory_index.py:7:1\n  |\n6 | from ...core.domain.task import Task\n7 | from ...core.ports.search_index import ISearchIndex\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> infrastructure\\telemetry.py:4:29\n  |\n3 | import json\n4 | from collections.abc import Mapping\n  |                             ^^^^^^^\n5 | from datetime import UTC, datetime\n6 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nANN204 Missing return type annotation for special method `__init__`\n  --> infrastructure\\telemetry.py:10:9\n   |\n 9 | class TelemetryClient:\n10 |     def __init__(\n   |         ^^^^^^^^\n11 |         self, enabled: bool, path: str | None, flush_seconds: int = 5\n12 |     ):\n   |\nhelp: Add return type annotation: `None`\n\nFBT001 Boolean-typed positional argument in function definition\n  --> infrastructure\\telemetry.py:11:15\n   |\n 9 | class TelemetryClient:\n10 |     def __init__(\n11 |         self, enabled: bool, path: str | None, flush_seconds: int = 5\n   |               ^^^^^^^\n12 |     ):\n13 |         self._enabled = enabled and bool(path)\n   |\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> interface\\api\\server.py:7:22\n  |\n5 | import binascii\n6 | from dataclasses import asdict\n7 | from datetime import datetime\n  |                      ^^^^^^^^\n8 | from typing import Any, Literal, cast\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:13:1\n   |\n11 | from pydantic import BaseModel, Field\n12 |\n13 | from ...core.services.ai_service import AIService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ...core.services.card_action_service import (\n15 |     CardActionService,\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.services.ai_service.AIService` into a type-checking block\n  --> interface\\api\\server.py:13:41\n   |\n11 | from pydantic import BaseModel, Field\n12 |\n13 | from ...core.services.ai_service import AIService\n   |                                         ^^^^^^^^^\n14 | from ...core.services.card_action_service import (\n15 |     CardActionService,\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:14:1\n   |\n13 |   from ...core.services.ai_service import AIService\n14 | / from ...core.services.card_action_service import (\n15 | |     CardActionService,\n16 | |     CardNotFoundError,\n17 | | )\n   | |_^\n18 |   from ...infrastructure.collaboration.store import (\n19 |       CollaborationBundleStore,\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:14:1\n   |\n13 |   from ...core.services.ai_service import AIService\n14 | / from ...core.services.card_action_service import (\n15 | |     CardActionService,\n16 | |     CardNotFoundError,\n17 | | )\n   | |_^\n18 |   from ...infrastructure.collaboration.store import (\n19 |       CollaborationBundleStore,\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:18:1\n   |\n16 |       CardNotFoundError,\n17 |   )\n18 | / from ...infrastructure.collaboration.store import (\n19 | |     CollaborationBundleStore,\n20 | |     StoredBundle,\n21 | | )\n   | |_^\n22 |   from ...infrastructure.config import AppConfig, load_config\n23 |   from ...infrastructure.di import AppContext, build_context\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:18:1\n   |\n16 |       CardNotFoundError,\n17 |   )\n18 | / from ...infrastructure.collaboration.store import (\n19 | |     CollaborationBundleStore,\n20 | |     StoredBundle,\n21 | | )\n   | |_^\n22 |   from ...infrastructure.config import AppConfig, load_config\n23 |   from ...infrastructure.di import AppContext, build_context\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:22:1\n   |\n20 |     StoredBundle,\n21 | )\n22 | from ...infrastructure.config import AppConfig, load_config\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n23 | from ...infrastructure.di import AppContext, build_context\n24 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:22:1\n   |\n20 |     StoredBundle,\n21 | )\n22 | from ...infrastructure.config import AppConfig, load_config\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n23 | from ...infrastructure.di import AppContext, build_context\n24 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:23:1\n   |\n21 | )\n22 | from ...infrastructure.config import AppConfig, load_config\n23 | from ...infrastructure.di import AppContext, build_context\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n24 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:23:1\n   |\n21 | )\n22 | from ...infrastructure.config import AppConfig, load_config\n23 | from ...infrastructure.di import AppContext, build_context\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n24 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:24:1\n   |\n22 | from ...infrastructure.config import AppConfig, load_config\n23 | from ...infrastructure.di import AppContext, build_context\n24 | from ...infrastructure.logging import setup_logging\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nC901 `create_api_app` is too complex (14 > 10)\n   --> interface\\api\\server.py:118:5\n    |\n118 | def create_api_app(\n    |     ^^^^^^^^^^^^^^\n119 |     ctx: AppContext | None = None,\n120 |     cfg: AppConfig | None = None,\n    |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n   --> interface\\api\\server.py:155:13\n    |\n153 |             )\n154 |         except CardNotFoundError:\n155 |             raise HTTPException(status_code=404, detail=\"Card not found\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n156 |         except ValueError as exc:\n157 |             raise HTTPException(status_code=400, detail=str(exc)) from exc\n    |\n\nFAST002 FastAPI dependency without `Annotated`\n   --> interface\\api\\server.py:187:9\n    |\n185 |     @app.get(\"/api/collab/bundles\", response_model=list[BundleInfo])\n186 |     async def list_bundles(\n187 |         limit: int = Query(10, ge=0, le=100)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n188 |     ) -> list[BundleUploadResponse]:\n189 |         stored = bundle_store.list(limit=limit)\n    |\nhelp: Replace with `typing.Annotated`\n\nFAST002 FastAPI dependency without `Annotated`\n   --> interface\\api\\server.py:194:9\n    |\n192 |     @app.delete(\"/api/collab/bundles\", response_model=BundlePruneResponse)\n193 |     async def prune_bundles(\n194 |         keep: int = Query(10, ge=0, le=100)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n195 |     ) -> BundlePruneResponse:\n196 |         removed = bundle_store.prune(keep)\n    |\nhelp: Replace with `typing.Annotated`\n\nINP001 File `interface\\tui\\app.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> interface\\tui\\app.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> interface\\tui\\app.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC\n5 | from importlib import import_module\n  |\nhelp: Move into type-checking block\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:11:35\n   |\n10 |     class App:  # type: ignore[too-many-ancestors]\n11 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n12 |\n13 |         def run(self, *args: Any, **kwargs: Any) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:11:50\n   |\n10 |     class App:  # type: ignore[too-many-ancestors]\n11 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n12 |\n13 |         def run(self, *args: Any, **kwargs: Any) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:13:30\n   |\n11 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n12 |\n13 |         def run(self, *args: Any, **kwargs: Any) -> None: ...\n   |                              ^^^\n14 |\n15 |     class ComposeResult: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:13:45\n   |\n11 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n12 |\n13 |         def run(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                             ^^^\n14 |\n15 |     class ComposeResult: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:18:35\n   |\n17 |     class Binding:  # pragma: no cover - placeholder\n18 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n19 |\n20 |     class Footer:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:18:50\n   |\n17 |     class Binding:  # pragma: no cover - placeholder\n18 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n19 |\n20 |     class Footer:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:21:35\n   |\n20 |     class Footer:  # pragma: no cover\n21 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n22 |\n23 |     class Header:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:21:50\n   |\n20 |     class Footer:  # pragma: no cover\n21 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n22 |\n23 |     class Header:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:24:35\n   |\n23 |     class Header:  # pragma: no cover\n24 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n25 |\n26 |     class Input:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:24:50\n   |\n23 |     class Header:  # pragma: no cover\n24 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n25 |\n26 |     class Input:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:27:35\n   |\n26 |     class Input:  # pragma: no cover\n27 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n28 |\n29 |         def focus(self) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:27:50\n   |\n26 |     class Input:  # pragma: no cover\n27 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n28 |\n29 |         def focus(self) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:32:35\n   |\n31 |     class Static:  # pragma: no cover\n32 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n33 |\n34 |         def update(self, value: str) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:32:50\n   |\n31 |     class Static:  # pragma: no cover\n32 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n33 |\n34 |         def update(self, value: str) -> None: ...\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> interface\\tui\\app.py:51:15\n   |\n49 |           Static = cast(\"type[Any]\", _widgets.Static)\n50 |       except ModuleNotFoundError as exc:  # pragma: no cover\n51 |           raise RuntimeError(\n   |  _______________^\n52 | |             \"The 'textual' package is required for the TUI. Install it via 'pip install textual'.\"\n53 | |         ) from exc\n   | |_________^\n54 |\n55 |   from ...core.services.ai_service import TaskSummary\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> interface\\tui\\app.py:52:13\n   |\n50 |     except ModuleNotFoundError as exc:  # pragma: no cover\n51 |         raise RuntimeError(\n52 |             \"The 'textual' package is required for the TUI. Install it via 'pip install textual'.\"\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n53 |         ) from exc\n   |\nhelp: Assign to variable; remove string literal\n\nE501 Line too long (98 > 88)\n  --> interface\\tui\\app.py:52:89\n   |\n50 |     except ModuleNotFoundError as exc:  # pragma: no cover\n51 |         raise RuntimeError(\n52 |             \"The 'textual' package is required for the TUI. Install it via 'pip install textual'.\"\n   |                                                                                         ^^^^^^^^^^\n53 |         ) from exc\n   |\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\app.py:55:1\n   |\n53 |         ) from exc\n54 |\n55 | from ...core.services.ai_service import TaskSummary\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n56 | from .controller import TaskController, TaskFilters, TaskRow\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.services.ai_service.TaskSummary` into a type-checking block\n  --> interface\\tui\\app.py:55:41\n   |\n53 |         ) from exc\n54 |\n55 | from ...core.services.ai_service import TaskSummary\n   |                                         ^^^^^^^^^^^\n56 | from .controller import TaskController, TaskFilters, TaskRow\n   |\nhelp: Move into type-checking block\n\nE501 Line too long (99 > 88)\n  --> interface\\tui\\app.py:63:89\n   |\n62 |     def update_rows(self, rows: Iterable[TaskRow]) -> None:\n63 |         header = \"ID       Status     Due                Priority Tags                 Description\"\n   |                                                                                         ^^^^^^^^^^^\n64 |         lines = [header, \"-\" * len(header)]\n65 |         for row in rows:\n   |\n\nPERF401 Use `list.extend` to create a transformed list\n  --> interface\\tui\\app.py:66:13\n   |\n64 |           lines = [header, \"-\" * len(header)]\n65 |           for row in rows:\n66 | /             lines.append(\n67 | |                 f\"{row.id[:8]} {row.status.ljust(9)} \"\n68 | |                 f\"{row.due_display.ljust(18)} {row.priority_display.ljust(8)} \"\n69 | |                 f\"{row.tags_display[:18].ljust(18)} {row.description}\"\n70 | |             )\n   | |_____________^\n71 |           if len(lines) == 2:\n72 |               lines.append(\"(no tasks found)\")\n   |\nhelp: Replace for loop with list.extend\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> interface\\tui\\app.py:71:26\n   |\n69 |                 f\"{row.tags_display[:18].ljust(18)} {row.description}\"\n70 |             )\n71 |         if len(lines) == 2:\n   |                          ^\n72 |             lines.append(\"(no tasks found)\")\n73 |         self.update(\"\\n\".join(lines))\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> interface\\tui\\app.py:80:16\n   |\n79 |       TITLE = \"Legatus Acta Schedae \u00e2\u20ac\u201d TUI\"\n80 |       BINDINGS = [\n   |  ________________^\n81 | |         Binding(\"q\", \"quit\", \"Quit\"),\n82 | |         Binding(\"r\", \"refresh\", \"Refresh\"),\n83 | |         Binding(\"/\", \"focus_search\", \"Search\"),\n84 | |     ]\n   | |_____^\n85 |\n86 |       def __init__(self, controller: TaskController | None = None) -> None:\n   |\n\nANN201 Missing return type annotation for public function `compose`\n  --> interface\\tui\\app.py:95:9\n   |\n93 |         self._summary: Any | None = None\n94 |\n95 |     def compose(self):  # type: ignore[override]\n   |         ^^^^^^^\n96 |         yield Header(show_clock=True)\n97 |         summary: Any = Static(\"AI summary unavailable\", id=\"summary\")\n   |\nhelp: Add return type annotation\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `event`\n   --> interface\\tui\\app.py:125:41\n    |\n123 |             self._search.focus()\n124 |\n125 |     def on_input_submitted(self, event: Any) -> None:\n    |                                         ^^^\n126 |         if getattr(event, \"input\", None) is None:\n127 |             return\n    |\n\nE501 Line too long (104 > 88)\n   --> interface\\tui\\app.py:146:89\n    |\n144 |         top_tags = \", \".join(summary.top_tags) if summary.top_tags else \"-\"\n145 |         lines = [\n146 |             f\"Pending: {summary.pending} | Completed: {summary.completed} | Overdue: {summary.overdue}\",\n    |                                                                                         ^^^^^^^^^^^^^^^^\n147 |             f\"Top tags: {top_tags}\",\n148 |         ]\n    |\n\nE501 Line too long (109 > 88)\n   --> interface\\tui\\app.py:161:89\n    |\n159 |                 priority: str = item.priority or \"-\"\n160 |                 lines.append(\n161 |                     f\"  \u00e2\u20ac\u00a2 {item.description} (id={item.task_id[:8]}, due={due_display}, priority={priority})\"\n    |                                                                                         ^^^^^^^^^^^^^^^^^^^^^\n162 |                 )\n163 |         else:\n    |\n\nINP001 File `interface\\tui\\controller.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> interface\\tui\\controller.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> interface\\tui\\controller.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass\n5 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> interface\\tui\\controller.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from dataclasses import dataclass\n5 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> interface\\tui\\controller.py:7:1\n  |\n5 | from datetime import UTC, datetime, timedelta\n6 |\n7 | from ...core.domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ...core.services.ai_service import TaskSummary\n9 | from ...infrastructure.config import AppConfig, load_config\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.domain.task.Task` into a type-checking block\n --> interface\\tui\\controller.py:7:33\n  |\n5 | from datetime import UTC, datetime, timedelta\n6 |\n7 | from ...core.domain.task import Task\n  |                                 ^^^^\n8 | from ...core.services.ai_service import TaskSummary\n9 | from ...infrastructure.config import AppConfig, load_config\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:8:1\n   |\n 7 | from ...core.domain.task import Task\n 8 | from ...core.services.ai_service import TaskSummary\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.services.ai_service.TaskSummary` into a type-checking block\n  --> interface\\tui\\controller.py:8:41\n   |\n 7 | from ...core.domain.task import Task\n 8 | from ...core.services.ai_service import TaskSummary\n   |                                         ^^^^^^^^^^^\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:9:1\n   |\n 7 | from ...core.domain.task import Task\n 8 | from ...core.services.ai_service import TaskSummary\n 9 | from ...infrastructure.config import AppConfig, load_config\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ...infrastructure.di import AppContext, build_context\n11 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:9:1\n   |\n 7 | from ...core.domain.task import Task\n 8 | from ...core.services.ai_service import TaskSummary\n 9 | from ...infrastructure.config import AppConfig, load_config\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ...infrastructure.di import AppContext, build_context\n11 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:10:1\n   |\n 8 | from ...core.services.ai_service import TaskSummary\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:10:1\n   |\n 8 | from ...core.services.ai_service import TaskSummary\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:11:1\n   |\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n11 | from ...infrastructure.logging import setup_logging\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nANN202 Missing return type annotation for private function `sort_key`\n   --> interface\\tui\\controller.py:100:13\n    |\n 98 |             ]\n 99 |\n100 |         def sort_key(task: Task):\n    |             ^^^^^^^^\n101 |             due = task.due or datetime.max.replace(tzinfo=UTC)\n102 |             return (task.status != \"pending\", due, task.created)\n    |\nhelp: Add return type annotation\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> interface\\tui\\controller.py:141:19\n    |\n139 |     ) -> TaskRow:\n140 |         if days is None and not until:\n141 |             raise ValueError(\"Provide at least one defer option\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n142 |         delta = timedelta(days=days) if days is not None else None\n143 |         until_dt = _parse_due(until) if until else None\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> interface\\tui\\controller.py:141:30\n    |\n139 |     ) -> TaskRow:\n140 |         if days is None and not until:\n141 |             raise ValueError(\"Provide at least one defer option\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n142 |         delta = timedelta(days=days) if days is not None else None\n143 |         until_dt = _parse_due(until) if until else None\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> interface\\tui\\controller.py:163:15\n    |\n161 |             if task.id == task_id:\n162 |                 return TaskRow.from_task(task)\n163 |         raise KeyError(f\"Task {task_id} not found\")\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n164 |\n165 |     def ai_summary(self, top_n: int = 3) -> TaskSummary:\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> interface\\tui\\controller.py:163:24\n    |\n161 |             if task.id == task_id:\n162 |                 return TaskRow.from_task(task)\n163 |         raise KeyError(f\"Task {task_id} not found\")\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n164 |\n165 |     def ai_summary(self, top_n: int = 3) -> TaskSummary:\n    |\nhelp: Assign to variable; remove f-string literal\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> plugins\\ai_assistant.py:9:1\n   |\n 7 | from typing import Any\n 8 |\n 9 | from ..core.domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..core.domain.task import Task\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> plugins\\ai_assistant.py:10:1\n   |\n 9 | from ..core.domain import events\n10 | from ..core.domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..core.domain.task.Task` into a type-checking block\n  --> plugins\\ai_assistant.py:10:32\n   |\n 9 | from ..core.domain import events\n10 | from ..core.domain.task import Task\n   |                                ^^^^\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> plugins\\ai_assistant.py:11:1\n   |\n 9 | from ..core.domain import events\n10 | from ..core.domain.task import Task\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> plugins\\ai_assistant.py:11:1\n   |\n 9 | from ..core.domain import events\n10 | from ..core.domain.task import Task\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\calendar_sync.py:6:1\n  |\n4 | from datetime import UTC, datetime\n5 |\n6 | from ..core.domain import events\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\calendar_sync.py:7:1\n  |\n6 | from ..core.domain import events\n7 | from ..core.services.plugin_bus import Plugin, PluginContext\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\calendar_sync.py:7:1\n  |\n6 | from ..core.domain import events\n7 | from ..core.services.plugin_bus import Plugin, PluginContext\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:6:1\n  |\n4 | from datetime import UTC, datetime\n5 |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:6:1\n  |\n4 | from datetime import UTC, datetime\n5 |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:6:1\n  |\n4 | from datetime import UTC, datetime\n5 |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:7:1\n  |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n7 | from ..core.domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..core.domain.task.Task` into a type-checking block\n --> plugins\\task_scoring.py:7:32\n  |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n7 | from ..core.domain.task import Task\n  |                                ^^^^\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:8:1\n  |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:8:1\n  |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nINP001 File `tests\\conftest.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\conftest.py:1:1\n\nINP001 File `tests\\test_ai_briefing_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_ai_briefing_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> tests\\test_ai_briefing_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Sequence\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nARG002 Unused method argument: `now`\n  --> tests\\test_ai_briefing_service.py:25:18\n   |\n24 |     def summarize(\n25 |         self, *, now: datetime | None = None, top_n: int = 3\n   |                  ^^^\n26 |     ) -> TaskSummary:\n27 |         return self._summary\n   |\n\nARG002 Unused method argument: `top_n`\n  --> tests\\test_ai_briefing_service.py:25:47\n   |\n24 |     def summarize(\n25 |         self, *, now: datetime | None = None, top_n: int = 3\n   |                                               ^^^^^\n26 |     ) -> TaskSummary:\n27 |         return self._summary\n   |\n\nANN201 Missing return type annotation for public function `generate`\n  --> tests\\test_ai_briefing_service.py:34:9\n   |\n32 |         self._guidance = guidance\n33 |\n34 |     def generate(\n   |         ^^^^^^^^\n35 |         self,\n36 |         *,\n   |\nhelp: Add return type annotation\n\nARG002 Unused method argument: `now`\n  --> tests\\test_ai_briefing_service.py:37:9\n   |\n35 |         self,\n36 |         *,\n37 |         now: datetime | None = None,\n   |         ^^^\n38 |         limit: int | None = None,\n39 |         include_completed: bool = False,\n   |\n\nARG002 Unused method argument: `limit`\n  --> tests\\test_ai_briefing_service.py:38:9\n   |\n36 |         *,\n37 |         now: datetime | None = None,\n38 |         limit: int | None = None,\n   |         ^^^^^\n39 |         include_completed: bool = False,\n40 |         tags: Sequence[str] | None = None,\n   |\n\nARG002 Unused method argument: `include_completed`\n  --> tests\\test_ai_briefing_service.py:39:9\n   |\n37 |         now: datetime | None = None,\n38 |         limit: int | None = None,\n39 |         include_completed: bool = False,\n   |         ^^^^^^^^^^^^^^^^^\n40 |         tags: Sequence[str] | None = None,\n41 |     ):\n   |\n\nARG002 Unused method argument: `tags`\n  --> tests\\test_ai_briefing_service.py:40:9\n   |\n38 |         limit: int | None = None,\n39 |         include_completed: bool = False,\n40 |         tags: Sequence[str] | None = None,\n   |         ^^^^\n41 |     ):\n42 |         return list(self._guidance)\n   |\n\nE501 Line too long (100 > 88)\n  --> tests\\test_ai_briefing_service.py:78:89\n   |\n76 |     )\n77 |\n78 |     service = AIBriefingService(StubAIService(summary), StubReviewGuidanceService([guidance_entry]))  # type: ignore[arg-type]\n   |                                                                                         ^^^^^^^^^^^^\n79 |\n80 |     briefing = service.generate(now=now, limit=3)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_briefing_service.py:82:5\n   |\n80 |     briefing = service.generate(now=now, limit=3)\n81 |\n82 |     assert briefing.summary is summary\n   |     ^^^^^^\n83 |     assert briefing.guidance == [guidance_entry]\n84 |     assert briefing.generated_at == now\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_briefing_service.py:83:5\n   |\n82 |     assert briefing.summary is summary\n83 |     assert briefing.guidance == [guidance_entry]\n   |     ^^^^^^\n84 |     assert briefing.generated_at == now\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_briefing_service.py:84:5\n   |\n82 |     assert briefing.summary is summary\n83 |     assert briefing.guidance == [guidance_entry]\n84 |     assert briefing.generated_at == now\n   |     ^^^^^^\n   |\n\nINP001 File `tests\\test_ai_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_ai_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_ai_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:67:5\n   |\n65 |     summary = service.summarize(now=moment, top_n=2)\n66 |\n67 |     assert summary.pending == 2\n   |     ^^^^^^\n68 |     assert summary.completed == 1\n69 |     assert summary.overdue == 1\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> tests\\test_ai_service.py:67:31\n   |\n65 |     summary = service.summarize(now=moment, top_n=2)\n66 |\n67 |     assert summary.pending == 2\n   |                               ^\n68 |     assert summary.completed == 1\n69 |     assert summary.overdue == 1\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:68:5\n   |\n67 |     assert summary.pending == 2\n68 |     assert summary.completed == 1\n   |     ^^^^^^\n69 |     assert summary.overdue == 1\n70 |     assert summary.top_tags[0] == \"work\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:69:5\n   |\n67 |     assert summary.pending == 2\n68 |     assert summary.completed == 1\n69 |     assert summary.overdue == 1\n   |     ^^^^^^\n70 |     assert summary.top_tags[0] == \"work\"\n71 |     assert any(item.task_id == upcoming.id for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:70:5\n   |\n68 |     assert summary.completed == 1\n69 |     assert summary.overdue == 1\n70 |     assert summary.top_tags[0] == \"work\"\n   |     ^^^^^^\n71 |     assert any(item.task_id == upcoming.id for item in summary.upcoming)\n72 |     assert all(item.due and item.due >= moment for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:71:5\n   |\n69 |     assert summary.overdue == 1\n70 |     assert summary.top_tags[0] == \"work\"\n71 |     assert any(item.task_id == upcoming.id for item in summary.upcoming)\n   |     ^^^^^^\n72 |     assert all(item.due and item.due >= moment for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:72:5\n   |\n70 |     assert summary.top_tags[0] == \"work\"\n71 |     assert any(item.task_id == upcoming.id for item in summary.upcoming)\n72 |     assert all(item.due and item.due >= moment for item in summary.upcoming)\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:82:5\n   |\n80 |     prompts = service.draft_followups(task)\n81 |\n82 |     assert any(\"follow-up\" in prompt.lower() for prompt in prompts)\n   |     ^^^^^^\n83 |     assert any(\"meeting\" in prompt.lower() for prompt in prompts)\n84 |     assert \"account\" in prompts[0]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:83:5\n   |\n82 |     assert any(\"follow-up\" in prompt.lower() for prompt in prompts)\n83 |     assert any(\"meeting\" in prompt.lower() for prompt in prompts)\n   |     ^^^^^^\n84 |     assert \"account\" in prompts[0]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:84:5\n   |\n82 |     assert any(\"follow-up\" in prompt.lower() for prompt in prompts)\n83 |     assert any(\"meeting\" in prompt.lower() for prompt in prompts)\n84 |     assert \"account\" in prompts[0]\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:93:5\n   |\n91 |     ideas = service.brainstorm(\"quarterly planning\", variants=4)\n92 |\n93 |     assert len(ideas) == 4\n   |     ^^^^^^\n94 |     assert ideas[0].startswith(\"Plan:\")\n95 |     assert ideas[-1].startswith(\"Share:\")\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `4` with a constant variable\n  --> tests\\test_ai_service.py:93:26\n   |\n91 |     ideas = service.brainstorm(\"quarterly planning\", variants=4)\n92 |\n93 |     assert len(ideas) == 4\n   |                          ^\n94 |     assert ideas[0].startswith(\"Plan:\")\n95 |     assert ideas[-1].startswith(\"Share:\")\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:94:5\n   |\n93 |     assert len(ideas) == 4\n94 |     assert ideas[0].startswith(\"Plan:\")\n   |     ^^^^^^\n95 |     assert ideas[-1].startswith(\"Share:\")\n96 |     assert all(\"quarterly planning\" in idea for idea in ideas)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:95:5\n   |\n93 |     assert len(ideas) == 4\n94 |     assert ideas[0].startswith(\"Plan:\")\n95 |     assert ideas[-1].startswith(\"Share:\")\n   |     ^^^^^^\n96 |     assert all(\"quarterly planning\" in idea for idea in ideas)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:96:5\n   |\n94 |     assert ideas[0].startswith(\"Plan:\")\n95 |     assert ideas[-1].startswith(\"Share:\")\n96 |     assert all(\"quarterly planning\" in idea for idea in ideas)\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_ai_service.py:106:5\n    |\n104 |     ideas = service.brainstorm(\"ops review\", variants=variants)\n105 |\n106 |     assert len(ideas) == variants\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_api.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_api.py:1:1\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_api.py:6:21\n  |\n5 | import base64\n6 | from pathlib import Path\n  |                     ^^^^\n7 | from typing import Any, cast\n  |\nhelp: Move into type-checking block\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `api_client`\n  --> tests\\test_api.py:25:35\n   |\n24 | @pytest.fixture\n25 | def api_client(tmp_path: Path) -> Any:\n   |                                   ^^^\n26 |     cfg = load_config(\n27 |         {\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `api_client`\n  --> tests\\test_api.py:47:38\n   |\n47 | def test_health_endpoint(api_client: Any) -> None:\n   |                                      ^^^\n48 |     response = api_client.get(\"/health\")\n49 |     assert response.status_code == 200\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:49:5\n   |\n47 | def test_health_endpoint(api_client: Any) -> None:\n48 |     response = api_client.get(\"/health\")\n49 |     assert response.status_code == 200\n   |     ^^^^^^\n50 |     assert response.json()[\"status\"] == \"ok\"\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n  --> tests\\test_api.py:49:36\n   |\n47 | def test_health_endpoint(api_client: Any) -> None:\n48 |     response = api_client.get(\"/health\")\n49 |     assert response.status_code == 200\n   |                                    ^^^\n50 |     assert response.json()[\"status\"] == \"ok\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:50:5\n   |\n48 |     response = api_client.get(\"/health\")\n49 |     assert response.status_code == 200\n50 |     assert response.json()[\"status\"] == \"ok\"\n   |     ^^^^^^\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `api_client`\n  --> tests\\test_api.py:53:55\n   |\n53 | def test_scan_endpoint_returns_ai_summary(api_client: Any) -> None:\n   |                                                       ^^^\n54 |     ctx = api_client.app.state.ctx  # type: ignore[attr-defined]\n55 |     task = ctx.task_service.add_task(\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:71:5\n   |\n69 |     )\n70 |\n71 |     assert response.status_code == 200\n   |     ^^^^^^\n72 |     payload: dict[str, Any] = response.json()\n73 |     assert payload[\"card_id\"] == \"card-123\"\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n  --> tests\\test_api.py:71:36\n   |\n69 |     )\n70 |\n71 |     assert response.status_code == 200\n   |                                    ^^^\n72 |     payload: dict[str, Any] = response.json()\n73 |     assert payload[\"card_id\"] == \"card-123\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:73:5\n   |\n71 |     assert response.status_code == 200\n72 |     payload: dict[str, Any] = response.json()\n73 |     assert payload[\"card_id\"] == \"card-123\"\n   |     ^^^^^^\n74 |     assert payload[\"task\"][\"updated\"] is True\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:74:5\n   |\n72 |     payload: dict[str, Any] = response.json()\n73 |     assert payload[\"card_id\"] == \"card-123\"\n74 |     assert payload[\"task\"][\"updated\"] is True\n   |     ^^^^^^\n75 |\n76 |     summary = payload[\"ai_summary\"]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:77:5\n   |\n76 |     summary = payload[\"ai_summary\"]\n77 |     assert summary[\"pending\"] >= 0\n   |     ^^^^^^\n78 |     assert summary[\"completed\"] >= 0\n79 |     assert summary[\"top_tags\"]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:78:5\n   |\n76 |     summary = payload[\"ai_summary\"]\n77 |     assert summary[\"pending\"] >= 0\n78 |     assert summary[\"completed\"] >= 0\n   |     ^^^^^^\n79 |     assert summary[\"top_tags\"]\n80 |     assert isinstance(summary[\"upcoming\"], list)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:79:5\n   |\n77 |     assert summary[\"pending\"] >= 0\n78 |     assert summary[\"completed\"] >= 0\n79 |     assert summary[\"top_tags\"]\n   |     ^^^^^^\n80 |     assert isinstance(summary[\"upcoming\"], list)\n81 |     if summary[\"upcoming\"]:\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:80:5\n   |\n78 |     assert summary[\"completed\"] >= 0\n79 |     assert summary[\"top_tags\"]\n80 |     assert isinstance(summary[\"upcoming\"], list)\n   |     ^^^^^^\n81 |     if summary[\"upcoming\"]:\n82 |         first = summary[\"upcoming\"][0]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:83:9\n   |\n81 |     if summary[\"upcoming\"]:\n82 |         first = summary[\"upcoming\"][0]\n83 |         assert \"task_id\" in first and \"description\" in first\n   |         ^^^^^^\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_api.py:83:9\n   |\n81 |     if summary[\"upcoming\"]:\n82 |         first = summary[\"upcoming\"][0]\n83 |         assert \"task_id\" in first and \"description\" in first\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Break down assertion into multiple parts\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `api_client`\n  --> tests\\test_api.py:86:53\n   |\n86 | def test_collaboration_bundle_endpoints(api_client: Any) -> None:\n   |                                                     ^^^\n87 |     payload = base64.b64encode(b'{\"hello\": \"world\"}').decode(\"utf-8\")\n88 |     metadata = {\"label\": \"demo\"}\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:98:5\n    |\n 96 |         },\n 97 |     )\n 98 |     assert response.status_code == 201\n    |     ^^^^^^\n 99 |     created = response.json()\n100 |     bundle_id = created[\"bundle_id\"]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `201` with a constant variable\n   --> tests\\test_api.py:98:36\n    |\n 96 |         },\n 97 |     )\n 98 |     assert response.status_code == 201\n    |                                    ^^^\n 99 |     created = response.json()\n100 |     bundle_id = created[\"bundle_id\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:101:5\n    |\n 99 |     created = response.json()\n100 |     bundle_id = created[\"bundle_id\"]\n101 |     assert created[\"metadata\"] == metadata\n    |     ^^^^^^\n102 |\n103 |     payload_two = base64.b64encode(b'{\"hello\": \"second\"}').decode(\"utf-8\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:112:5\n    |\n110 |         },\n111 |     )\n112 |     assert response_two.status_code == 201\n    |     ^^^^^^\n113 |     created_two = response_two.json()\n114 |     bundle_id_two = created_two[\"bundle_id\"]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `201` with a constant variable\n   --> tests\\test_api.py:112:40\n    |\n110 |         },\n111 |     )\n112 |     assert response_two.status_code == 201\n    |                                        ^^^\n113 |     created_two = response_two.json()\n114 |     bundle_id_two = created_two[\"bundle_id\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:117:5\n    |\n116 |     latest = api_client.get(\"/api/collab/bundles/latest\")\n117 |     assert latest.status_code == 200\n    |     ^^^^^^\n118 |     latest_payload = latest.json()\n119 |     assert latest_payload[\"bundle_id\"] == bundle_id_two\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> tests\\test_api.py:117:34\n    |\n116 |     latest = api_client.get(\"/api/collab/bundles/latest\")\n117 |     assert latest.status_code == 200\n    |                                  ^^^\n118 |     latest_payload = latest.json()\n119 |     assert latest_payload[\"bundle_id\"] == bundle_id_two\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:119:5\n    |\n117 |     assert latest.status_code == 200\n118 |     latest_payload = latest.json()\n119 |     assert latest_payload[\"bundle_id\"] == bundle_id_two\n    |     ^^^^^^\n120 |     assert (\n121 |         base64.b64decode(latest_payload[\"payload\"]) == b'{\"hello\": \"second\"}'\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:120:5\n    |\n118 |     latest_payload = latest.json()\n119 |     assert latest_payload[\"bundle_id\"] == bundle_id_two\n120 |     assert (\n    |     ^^^^^^\n121 |         base64.b64decode(latest_payload[\"payload\"]) == b'{\"hello\": \"second\"}'\n122 |     )\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:125:5\n    |\n124 |     specific = api_client.get(f\"/api/collab/bundles/{bundle_id}\")\n125 |     assert specific.status_code == 200\n    |     ^^^^^^\n126 |     assert specific.json()[\"bundle_id\"] == bundle_id\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> tests\\test_api.py:125:36\n    |\n124 |     specific = api_client.get(f\"/api/collab/bundles/{bundle_id}\")\n125 |     assert specific.status_code == 200\n    |                                    ^^^\n126 |     assert specific.json()[\"bundle_id\"] == bundle_id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:126:5\n    |\n124 |     specific = api_client.get(f\"/api/collab/bundles/{bundle_id}\")\n125 |     assert specific.status_code == 200\n126 |     assert specific.json()[\"bundle_id\"] == bundle_id\n    |     ^^^^^^\n127 |\n128 |     listing = api_client.get(\"/api/collab/bundles?limit=5\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:129:5\n    |\n128 |     listing = api_client.get(\"/api/collab/bundles?limit=5\")\n129 |     assert listing.status_code == 200\n    |     ^^^^^^\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> tests\\test_api.py:129:35\n    |\n128 |     listing = api_client.get(\"/api/collab/bundles?limit=5\")\n129 |     assert listing.status_code == 200\n    |                                   ^^^\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:131:5\n    |\n129 |     assert listing.status_code == 200\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n    |     ^^^^^^\n132 |     assert len(listing_payload) >= 2\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:132:5\n    |\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n132 |     assert len(listing_payload) >= 2\n    |     ^^^^^^\n133 |\n134 |     prune = api_client.delete(\"/api/collab/bundles?keep=1\")\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> tests\\test_api.py:132:36\n    |\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n132 |     assert len(listing_payload) >= 2\n    |                                    ^\n133 |\n134 |     prune = api_client.delete(\"/api/collab/bundles?keep=1\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:135:5\n    |\n134 |     prune = api_client.delete(\"/api/collab/bundles?keep=1\")\n135 |     assert prune.status_code == 200\n    |     ^^^^^^\n136 |     pruned_payload = cast(\"dict[str, Any]\", prune.json())\n137 |     assert pruned_payload[\"remaining\"] == 1\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> tests\\test_api.py:135:33\n    |\n134 |     prune = api_client.delete(\"/api/collab/bundles?keep=1\")\n135 |     assert prune.status_code == 200\n    |                                 ^^^\n136 |     pruned_payload = cast(\"dict[str, Any]\", prune.json())\n137 |     assert pruned_payload[\"remaining\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:137:5\n    |\n135 |     assert prune.status_code == 200\n136 |     pruned_payload = cast(\"dict[str, Any]\", prune.json())\n137 |     assert pruned_payload[\"remaining\"] == 1\n    |     ^^^^^^\n138 |     expected_removed = max(len(listing_payload) - 1, 0)\n139 |     assert len(pruned_payload[\"removed\"]) == expected_removed\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:139:5\n    |\n137 |     assert pruned_payload[\"remaining\"] == 1\n138 |     expected_removed = max(len(listing_payload) - 1, 0)\n139 |     assert len(pruned_payload[\"removed\"]) == expected_removed\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_automation_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_automation_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_automation_service.py:4:29\n  |\n3 | import json\n4 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n5 | from datetime import UTC, datetime\n6 | from typing import cast\n  |\nhelp: Move into type-checking block\n\nE501 Line too long (89 > 88)\n  --> tests\\test_automation_service.py:73:89\n   |\n71 |             self.events: list[tuple[str, dict[str, object]]] = []\n72 |\n73 |         def track(self, event: str, properties: dict[str, object] | None = None) -> None:  # type: ignore[override]\n   |                                                                                         ^\n74 |             self.events.append((event, properties or {}))\n   |\n\nARG002 Unused method argument: `now`\n  --> tests\\test_automation_service.py:94:22\n   |\n92 |     class StubAIService:\n93 |         def summarize(\n94 |             self, *, now: datetime | None = None, top_n: int = 3\n   |                      ^^^\n95 |         ) -> TaskSummary:\n96 |             return summary\n   |\n\nARG002 Unused method argument: `top_n`\n  --> tests\\test_automation_service.py:94:51\n   |\n92 |     class StubAIService:\n93 |         def summarize(\n94 |             self, *, now: datetime | None = None, top_n: int = 3\n   |                                                   ^^^^^\n95 |         ) -> TaskSummary:\n96 |             return summary\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:112:5\n    |\n110 |     )\n111 |\n112 |     assert len(captured) == 1\n    |     ^^^^^^\n113 |     request = captured[0]\n114 |     assert request.url == httpx.URL(\"https://example.com/automation\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:114:5\n    |\n112 |     assert len(captured) == 1\n113 |     request = captured[0]\n114 |     assert request.url == httpx.URL(\"https://example.com/automation\")\n    |     ^^^^^^\n115 |     payload = json.loads(request.content.decode(\"utf-8\"))\n116 |     assert payload[\"event\"] == \"card_scanned\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:116:5\n    |\n114 |     assert request.url == httpx.URL(\"https://example.com/automation\")\n115 |     payload = json.loads(request.content.decode(\"utf-8\"))\n116 |     assert payload[\"event\"] == \"card_scanned\"\n    |     ^^^^^^\n117 |     inner = payload[\"payload\"]\n118 |     assert inner[\"task\"][\"id\"] == task.id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:118:5\n    |\n116 |     assert payload[\"event\"] == \"card_scanned\"\n117 |     inner = payload[\"payload\"]\n118 |     assert inner[\"task\"][\"id\"] == task.id\n    |     ^^^^^^\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:119:5\n    |\n117 |     inner = payload[\"payload\"]\n118 |     assert inner[\"task\"][\"id\"] == task.id\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n    |     ^^^^^^\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:120:5\n    |\n118 |     assert inner[\"task\"][\"id\"] == task.id\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n    |     ^^^^^^\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:121:5\n    |\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n    |     ^^^^^^\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n123 |     assert telemetry.events == [\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> tests\\test_automation_service.py:121:46\n    |\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n    |                                              ^\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n123 |     assert telemetry.events == [\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:122:5\n    |\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n    |     ^^^^^^\n123 |     assert telemetry.events == [\n124 |         (\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:123:5\n    |\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n123 |     assert telemetry.events == [\n    |     ^^^^^^\n124 |         (\n125 |             \"automation.dispatch\",\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:141:5\n    |\n139 |     service = AutomationService(dispatcher, repo, None)\n140 |\n141 |     assert service.enabled is False\n    |     ^^^^^^\n142 |     # Publishing should not raise\n143 |     dispatcher.publish(\n    |\n\nC408 Unnecessary `tuple()` call (rewrite as a literal)\n   --> tests\\test_automation_service.py:148:18\n    |\n146 |             task_id=None,\n147 |             action=\"scan\",\n148 |             tags=tuple(),\n    |                  ^^^^^^^\n149 |             metadata={},\n150 |             task_error=None,\n    |\nhelp: Rewrite as a literal\n\nINP001 File `tests\\test_card_action_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_card_action_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_card_action_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime\n5 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_card_action_service.py:5:21\n  |\n3 | from collections.abc import Iterable\n4 | from datetime import UTC, datetime\n5 | from pathlib import Path\n  |                     ^^^^\n6 |\n7 | import pytest\n  |\nhelp: Move into type-checking block\n\nANN202 Missing return type annotation for private function `_make_service`\n  --> tests\\test_card_action_service.py:47:5\n   |\n47 | def _make_service(tmp_path: Path):\n   |     ^^^^^^^^^^^^^\n48 |     storage = Storage(str(tmp_path / \"cards.db\"))\n49 |     dispatcher = events.EventDispatcher()\n   |\nhelp: Add return type annotation\n\nANN201 Missing return type annotation for public function `test_scan_completes_linked_task`\n  --> tests\\test_card_action_service.py:59:5\n   |\n59 | def test_scan_completes_linked_task(tmp_path: Path):\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n60 |     storage, repo, dispatcher, service = _make_service(tmp_path)\n61 |     task = Task.create(\"Demo task\")\n   |\nhelp: Add return type annotation: `None`\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:83:5\n   |\n82 |     saved = repo.get(task.id)\n83 |     assert saved is not None\n   |     ^^^^^^\n84 |     assert saved.status == \"completed\"\n85 |     assert result.card_status == \"completed\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:84:5\n   |\n82 |     saved = repo.get(task.id)\n83 |     assert saved is not None\n84 |     assert saved.status == \"completed\"\n   |     ^^^^^^\n85 |     assert result.card_status == \"completed\"\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:85:5\n   |\n83 |     assert saved is not None\n84 |     assert saved.status == \"completed\"\n85 |     assert result.card_status == \"completed\"\n   |     ^^^^^^\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:86:5\n   |\n84 |     assert saved.status == \"completed\"\n85 |     assert result.card_status == \"completed\"\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n   |     ^^^^^^\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n88 |     assert dispatcher_events and dispatcher_events[0].card_id == card.id\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:87:5\n   |\n85 |     assert result.card_status == \"completed\"\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n   |     ^^^^^^\n88 |     assert dispatcher_events and dispatcher_events[0].card_id == card.id\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:88:5\n   |\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n88 |     assert dispatcher_events and dispatcher_events[0].card_id == card.id\n   |     ^^^^^^\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_card_action_service.py:88:5\n   |\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n88 |     assert dispatcher_events and dispatcher_events[0].card_id == card.id\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Break down assertion into multiple parts\n\nANN201 Missing return type annotation for public function `test_scan_without_task_tag_marks_card`\n  --> tests\\test_card_action_service.py:91:5\n   |\n91 | def test_scan_without_task_tag_marks_card(tmp_path: Path):\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n92 |     storage, _, _, service = _make_service(tmp_path)\n93 |     card = Notecard(\n   |\nhelp: Add return type annotation: `None`\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:104:5\n    |\n102 |     result = service.handle_scan(card.id, task_update=\"none\")\n103 |\n104 |     assert result.card_status == \"acted\"\n    |     ^^^^^^\n105 |     assert result.task.updated is False\n106 |     stored = storage.get_card(card.id)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:105:5\n    |\n104 |     assert result.card_status == \"acted\"\n105 |     assert result.task.updated is False\n    |     ^^^^^^\n106 |     stored = storage.get_card(card.id)\n107 |     assert stored is not None\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:107:5\n    |\n105 |     assert result.task.updated is False\n106 |     stored = storage.get_card(card.id)\n107 |     assert stored is not None\n    |     ^^^^^^\n108 |     assert stored.status == \"acted\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:108:5\n    |\n106 |     stored = storage.get_card(card.id)\n107 |     assert stored is not None\n108 |     assert stored.status == \"acted\"\n    |     ^^^^^^\n    |\n\nANN201 Missing return type annotation for public function `test_scan_missing_card_raises`\n   --> tests\\test_card_action_service.py:111:5\n    |\n111 | def test_scan_missing_card_raises(tmp_path: Path):\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n112 |     _, _, _, service = _make_service(tmp_path)\n113 |     with pytest.raises(CardNotFoundError):\n    |\nhelp: Add return type annotation: `None`\n\nANN201 Missing return type annotation for public function `test_scan_with_missing_task_records_error`\n   --> tests\\test_card_action_service.py:117:5\n    |\n117 | def test_scan_with_missing_task_records_error(tmp_path: Path):\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n118 |     storage, _, _, service = _make_service(tmp_path)\n119 |     card = Notecard(\n    |\nhelp: Add return type annotation: `None`\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:130:5\n    |\n128 |     result = service.handle_scan(card.id)\n129 |\n130 |     assert result.task.error == \"task_not_found\"\n    |     ^^^^^^\n131 |     assert result.card_status == \"acted\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:131:5\n    |\n130 |     assert result.task.error == \"task_not_found\"\n131 |     assert result.card_status == \"acted\"\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_cli_ai_briefing.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_cli_ai_briefing.py:1:1\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_cli_ai_briefing.py:4:21\n  |\n3 | from datetime import UTC, datetime, timedelta\n4 | from pathlib import Path\n  |                     ^^^^\n5 | from typing import Any, Protocol, cast\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `pytest` into a type-checking block\n --> tests\\test_cli_ai_briefing.py:7:8\n  |\n5 | from typing import Any, Protocol, cast\n6 |\n7 | import pytest\n  |        ^^^^^^\n8 | from typer.testing import CliRunner  # type: ignore[import-not-found]\n9 | from x_legatus_acta_schedae_x.core.domain.review import ReviewRecord\n  |\nhelp: Move into type-checking block\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `app`\n  --> tests\\test_cli_ai_briefing.py:40:27\n   |\n39 | class _CliRunner(Protocol):\n40 |     def invoke(self, app: Any, args: list[str]) -> _CliResult: ...\n   |                           ^^^\n   |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_ai_briefing.py:100:5\n    |\n 98 |     ctx = StubContext(briefing)\n 99 |\n100 |     from x_legatus_acta_schedae_x import interface\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n101 |\n102 |     interface.cli.main  # type: ignore[attr-defined]\n    |\n\nB018 Found useless expression. Either assign it to a variable or remove it.\n   --> tests\\test_cli_ai_briefing.py:102:5\n    |\n100 |     from x_legatus_acta_schedae_x import interface\n101 |\n102 |     interface.cli.main  # type: ignore[attr-defined]\n    |     ^^^^^^^^^^^^^^^^^^\n103 |\n104 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_ai_briefing.py:104:5\n    |\n102 |     interface.cli.main  # type: ignore[attr-defined]\n103 |\n104 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n105 |\n106 |     monkeypatch.setattr(cli_main, \"_ctx\", lambda: ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:114:5\n    |\n112 |     )\n113 |\n114 |     assert result.exit_code == 0\n    |     ^^^^^^\n115 |     assert \"AI Daily Briefing\" in result.stdout\n116 |     assert \"Pending:   4\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:115:5\n    |\n114 |     assert result.exit_code == 0\n115 |     assert \"AI Daily Briefing\" in result.stdout\n    |     ^^^^^^\n116 |     assert \"Pending:   4\" in result.stdout\n117 |     assert \"delegate follow-up\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:116:5\n    |\n114 |     assert result.exit_code == 0\n115 |     assert \"AI Daily Briefing\" in result.stdout\n116 |     assert \"Pending:   4\" in result.stdout\n    |     ^^^^^^\n117 |     assert \"delegate follow-up\" in result.stdout\n118 |     assert output_path.exists()\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:117:5\n    |\n115 |     assert \"AI Daily Briefing\" in result.stdout\n116 |     assert \"Pending:   4\" in result.stdout\n117 |     assert \"delegate follow-up\" in result.stdout\n    |     ^^^^^^\n118 |     assert output_path.exists()\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:118:5\n    |\n116 |     assert \"Pending:   4\" in result.stdout\n117 |     assert \"delegate follow-up\" in result.stdout\n118 |     assert output_path.exists()\n    |     ^^^^^^\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n120 |     assert \"AI Daily Briefing\" in written\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:120:5\n    |\n118 |     assert output_path.exists()\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n120 |     assert \"AI Daily Briefing\" in written\n    |     ^^^^^^\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:121:5\n    |\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n120 |     assert \"AI Daily Briefing\" in written\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n    |     ^^^^^^\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n123 |     assert ctx.telemetry.events[0][1][\"guidance\"] == 1\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n   --> tests\\test_cli_ai_briefing.py:121:57\n    |\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n120 |     assert \"AI Daily Briefing\" in written\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n    |                                                         ^\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n123 |     assert ctx.telemetry.events[0][1][\"guidance\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:122:5\n    |\n120 |     assert \"AI Daily Briefing\" in written\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n    |     ^^^^^^\n123 |     assert ctx.telemetry.events[0][1][\"guidance\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:123:5\n    |\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n123 |     assert ctx.telemetry.events[0][1][\"guidance\"] == 1\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_cli_collab.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_cli_collab.py:1:1\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `app`\n  --> tests\\test_cli_collab.py:94:27\n   |\n93 | class _CliRunner(Protocol):\n94 |     def invoke(self, app: Any, args: list[str]) -> _CliResult: ...\n   |                           ^^^\n   |\n\nPYI034 `__enter__` methods in classes like `StubPushClient` usually return `self` at runtime\n   --> tests\\test_cli_collab.py:102:9\n    |\n100 |         self.uploads = uploads\n101 |\n102 |     def __enter__(self) -> StubPushClient:\n    |         ^^^^^^^^^\n103 |         return self\n    |\nhelp: Use `Self` as return type\n\nANN001 Missing type annotation for function argument `exc_type`\n   --> tests\\test_cli_collab.py:105:24\n    |\n103 |         return self\n104 |\n105 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                        ^^^^^^^^\n106 |         return None\n    |\n\nANN001 Missing type annotation for function argument `exc`\n   --> tests\\test_cli_collab.py:105:34\n    |\n103 |         return self\n104 |\n105 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                  ^^^\n106 |         return None\n    |\n\nANN001 Missing type annotation for function argument `tb`\n   --> tests\\test_cli_collab.py:105:39\n    |\n103 |         return self\n104 |\n105 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                       ^^\n106 |         return None\n    |\n\nPYI034 `__enter__` methods in classes like `StubPullClient` usually return `self` at runtime\n   --> tests\\test_cli_collab.py:139:9\n    |\n137 |         self.fetch_specific: list[str] = []\n138 |\n139 |     def __enter__(self) -> StubPullClient:\n    |         ^^^^^^^^^\n140 |         return self\n    |\nhelp: Use `Self` as return type\n\nANN001 Missing type annotation for function argument `exc_type`\n   --> tests\\test_cli_collab.py:142:24\n    |\n140 |         return self\n141 |\n142 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                        ^^^^^^^^\n143 |         return None\n    |\n\nANN001 Missing type annotation for function argument `exc`\n   --> tests\\test_cli_collab.py:142:34\n    |\n140 |         return self\n141 |\n142 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                  ^^^\n143 |         return None\n    |\n\nANN001 Missing type annotation for function argument `tb`\n   --> tests\\test_cli_collab.py:142:39\n    |\n140 |         return self\n141 |\n142 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                       ^^\n143 |         return None\n    |\n\nARG002 Unused method argument: `args`\n   --> tests\\test_cli_collab.py:145:28\n    |\n143 |         return None\n144 |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n    |                            ^^^^\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:145:34\n    |\n143 |         return None\n144 |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n    |                                  ^^^\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |\n\nARG002 Unused method argument: `kwargs`\n   --> tests\\test_cli_collab.py:145:41\n    |\n143 |         return None\n144 |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n    |                                         ^^^^^^\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:145:49\n    |\n143 |         return None\n144 |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n    |                                                 ^^^\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> tests\\test_cli_collab.py:146:15\n    |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n147 |\n148 |     def fetch_latest_bundle(self) -> BundleDownloadResult | None:\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> tests\\test_cli_collab.py:146:30\n    |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n147 |\n148 |     def fetch_latest_bundle(self) -> BundleDownloadResult | None:\n    |\nhelp: Assign to variable; remove string literal\n\nPYI034 `__enter__` methods in classes like `StubHistoryClient` usually return `self` at runtime\n   --> tests\\test_cli_collab.py:175:9\n    |\n173 |         self._prune_remaining = prune_remaining\n174 |\n175 |     def __enter__(self) -> StubHistoryClient:\n    |         ^^^^^^^^^\n176 |         return self\n    |\nhelp: Use `Self` as return type\n\nANN001 Missing type annotation for function argument `exc_type`\n   --> tests\\test_cli_collab.py:178:24\n    |\n176 |         return self\n177 |\n178 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                        ^^^^^^^^\n179 |         return None\n    |\n\nANN001 Missing type annotation for function argument `exc`\n   --> tests\\test_cli_collab.py:178:34\n    |\n176 |         return self\n177 |\n178 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                  ^^^\n179 |         return None\n    |\n\nANN001 Missing type annotation for function argument `tb`\n   --> tests\\test_cli_collab.py:178:39\n    |\n176 |         return self\n177 |\n178 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                       ^^\n179 |         return None\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_ctx`\n   --> tests\\test_cli_collab.py:241:19\n    |\n239 |     uploads: list[dict[str, Any]] = []\n240 |\n241 |     def _ctx() -> Any:\n    |                   ^^^\n242 |         return ctx\n    |\n\nARG001 Unused function argument: `args`\n   --> tests\\test_cli_collab.py:245:25\n    |\n244 |     def _client_factory(\n245 |         base_url: str, *args: Any, **kwargs: Any\n    |                         ^^^^\n246 |     ) -> StubPushClient:\n247 |         return StubPushClient(base_url, uploads)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:245:31\n    |\n244 |     def _client_factory(\n245 |         base_url: str, *args: Any, **kwargs: Any\n    |                               ^^^\n246 |     ) -> StubPushClient:\n247 |         return StubPushClient(base_url, uploads)\n    |\n\nARG001 Unused function argument: `kwargs`\n   --> tests\\test_cli_collab.py:245:38\n    |\n244 |     def _client_factory(\n245 |         base_url: str, *args: Any, **kwargs: Any\n    |                                      ^^^^^^\n246 |     ) -> StubPushClient:\n247 |         return StubPushClient(base_url, uploads)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:245:46\n    |\n244 |     def _client_factory(\n245 |         base_url: str, *args: Any, **kwargs: Any\n    |                                              ^^^\n246 |     ) -> StubPushClient:\n247 |         return StubPushClient(base_url, uploads)\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_collab.py:249:5\n    |\n247 |         return StubPushClient(base_url, uploads)\n248 |\n249 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n250 |\n251 |     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:270:5\n    |\n268 |     )\n269 |\n270 |     assert result.exit_code == 0\n    |     ^^^^^^\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:271:5\n    |\n270 |     assert result.exit_code == 0\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n    |     ^^^^^^\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n273 |     assert service.exports[0][\"limit\"] == 3\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:272:5\n    |\n270 |     assert result.exit_code == 0\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n    |     ^^^^^^\n273 |     assert service.exports[0][\"limit\"] == 3\n274 |     assert uploads\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:272:5\n    |\n270 |     assert result.exit_code == 0\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n273 |     assert service.exports[0][\"limit\"] == 3\n274 |     assert uploads\n    |\nhelp: Break down assertion into multiple parts\n\nS105 Possible hardcoded password assigned to: \"passphrase\"\n   --> tests\\test_cli_collab.py:272:68\n    |\n270 |     assert result.exit_code == 0\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n    |                                                                    ^^^^^^^^\n273 |     assert service.exports[0][\"limit\"] == 3\n274 |     assert uploads\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:273:5\n    |\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n273 |     assert service.exports[0][\"limit\"] == 3\n    |     ^^^^^^\n274 |     assert uploads\n275 |     metadata = uploads[0][\"metadata\"]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n   --> tests\\test_cli_collab.py:273:43\n    |\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n273 |     assert service.exports[0][\"limit\"] == 3\n    |                                           ^\n274 |     assert uploads\n275 |     metadata = uploads[0][\"metadata\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:274:5\n    |\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n273 |     assert service.exports[0][\"limit\"] == 3\n274 |     assert uploads\n    |     ^^^^^^\n275 |     metadata = uploads[0][\"metadata\"]\n276 |     assert metadata[\"tasks\"] == 2\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:276:5\n    |\n274 |     assert uploads\n275 |     metadata = uploads[0][\"metadata\"]\n276 |     assert metadata[\"tasks\"] == 2\n    |     ^^^^^^\n277 |     assert metadata[\"include_completed\"] is True\n278 |     ai_meta = metadata[\"ai_summary\"]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> tests\\test_cli_collab.py:276:33\n    |\n274 |     assert uploads\n275 |     metadata = uploads[0][\"metadata\"]\n276 |     assert metadata[\"tasks\"] == 2\n    |                                 ^\n277 |     assert metadata[\"include_completed\"] is True\n278 |     ai_meta = metadata[\"ai_summary\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:277:5\n    |\n275 |     metadata = uploads[0][\"metadata\"]\n276 |     assert metadata[\"tasks\"] == 2\n277 |     assert metadata[\"include_completed\"] is True\n    |     ^^^^^^\n278 |     ai_meta = metadata[\"ai_summary\"]\n279 |     assert ai_meta[\"pending\"] == summary.pending\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:279:5\n    |\n277 |     assert metadata[\"include_completed\"] is True\n278 |     ai_meta = metadata[\"ai_summary\"]\n279 |     assert ai_meta[\"pending\"] == summary.pending\n    |     ^^^^^^\n280 |     assert ai_meta[\"completed\"] == summary.completed\n281 |     assert ai_meta[\"overdue\"] == summary.overdue\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:280:5\n    |\n278 |     ai_meta = metadata[\"ai_summary\"]\n279 |     assert ai_meta[\"pending\"] == summary.pending\n280 |     assert ai_meta[\"completed\"] == summary.completed\n    |     ^^^^^^\n281 |     assert ai_meta[\"overdue\"] == summary.overdue\n282 |     assert ai_meta[\"top_tags\"] == summary.top_tags\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:281:5\n    |\n279 |     assert ai_meta[\"pending\"] == summary.pending\n280 |     assert ai_meta[\"completed\"] == summary.completed\n281 |     assert ai_meta[\"overdue\"] == summary.overdue\n    |     ^^^^^^\n282 |     assert ai_meta[\"top_tags\"] == summary.top_tags\n283 |     expected_due = (\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:282:5\n    |\n280 |     assert ai_meta[\"completed\"] == summary.completed\n281 |     assert ai_meta[\"overdue\"] == summary.overdue\n282 |     assert ai_meta[\"top_tags\"] == summary.top_tags\n    |     ^^^^^^\n283 |     expected_due = (\n284 |         summary.upcoming[0].due.isoformat()\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:288:5\n    |\n286 |         else None\n287 |     )\n288 |     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n    |     ^^^^^^\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:289:5\n    |\n287 |     )\n288 |     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n    |     ^^^^^^\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:290:5\n    |\n288 |     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n    |     ^^^^^^\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:290:5\n    |\n288 |     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:291:5\n    |\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n    |     ^^^^^^\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n293 |     assert telemetry.events[0][1][\"completed\"] == summary.completed\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:292:5\n    |\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n    |     ^^^^^^\n293 |     assert telemetry.events[0][1][\"completed\"] == summary.completed\n294 |     assert telemetry.events[0][1][\"overdue\"] == summary.overdue\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:293:5\n    |\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n293 |     assert telemetry.events[0][1][\"completed\"] == summary.completed\n    |     ^^^^^^\n294 |     assert telemetry.events[0][1][\"overdue\"] == summary.overdue\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:294:5\n    |\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n293 |     assert telemetry.events[0][1][\"completed\"] == summary.completed\n294 |     assert telemetry.events[0][1][\"overdue\"] == summary.overdue\n    |     ^^^^^^\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_ctx`\n   --> tests\\test_cli_collab.py:321:19\n    |\n319 |     )\n320 |\n321 |     def _ctx() -> Any:\n    |                   ^^^\n322 |         return ctx\n    |\n\nARG001 Unused function argument: `args`\n   --> tests\\test_cli_collab.py:325:25\n    |\n324 |     def _client_factory(\n325 |         base_url: str, *args: Any, **kwargs: Any\n    |                         ^^^^\n326 |     ) -> StubPullClient:\n327 |         return StubPullClient(base_url, download)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:325:31\n    |\n324 |     def _client_factory(\n325 |         base_url: str, *args: Any, **kwargs: Any\n    |                               ^^^\n326 |     ) -> StubPullClient:\n327 |         return StubPullClient(base_url, download)\n    |\n\nARG001 Unused function argument: `kwargs`\n   --> tests\\test_cli_collab.py:325:38\n    |\n324 |     def _client_factory(\n325 |         base_url: str, *args: Any, **kwargs: Any\n    |                                      ^^^^^^\n326 |     ) -> StubPullClient:\n327 |         return StubPullClient(base_url, download)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:325:46\n    |\n324 |     def _client_factory(\n325 |         base_url: str, *args: Any, **kwargs: Any\n    |                                              ^^^\n326 |     ) -> StubPullClient:\n327 |         return StubPullClient(base_url, download)\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_collab.py:329:5\n    |\n327 |         return StubPullClient(base_url, download)\n328 |\n329 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n330 |\n331 |     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:347:5\n    |\n345 |     )\n346 |\n347 |     assert result.exit_code == 0\n    |     ^^^^^^\n348 |     assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n349 |     assert (\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:348:5\n    |\n347 |     assert result.exit_code == 0\n348 |     assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n    |     ^^^^^^\n349 |     assert (\n350 |         service.import_calls\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:349:5\n    |\n347 |     assert result.exit_code == 0\n348 |     assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n349 |     assert (\n    |     ^^^^^^\n350 |         service.import_calls\n351 |         and service.import_calls[0][\"passphrase\"] == \"secret\"\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:349:5\n    |\n347 |       assert result.exit_code == 0\n348 |       assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n349 | /     assert (\n350 | |         service.import_calls\n351 | |         and service.import_calls[0][\"passphrase\"] == \"secret\"\n352 | |     )\n    | |_____^\n353 |       assert service.import_calls[0][\"overwrite_existing\"] is True\n354 |       assert service.import_calls[0][\"payload\"] == payload\n    |\nhelp: Break down assertion into multiple parts\n\nS105 Possible hardcoded password assigned to: \"passphrase\"\n   --> tests\\test_cli_collab.py:351:54\n    |\n349 |     assert (\n350 |         service.import_calls\n351 |         and service.import_calls[0][\"passphrase\"] == \"secret\"\n    |                                                      ^^^^^^^^\n352 |     )\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:353:5\n    |\n351 |         and service.import_calls[0][\"passphrase\"] == \"secret\"\n352 |     )\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n    |     ^^^^^^\n354 |     assert service.import_calls[0][\"payload\"] == payload\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:354:5\n    |\n352 |     )\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n354 |     assert service.import_calls[0][\"payload\"] == payload\n    |     ^^^^^^\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:355:5\n    |\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n354 |     assert service.import_calls[0][\"payload\"] == payload\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n    |     ^^^^^^\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n357 |     assert telemetry.events[0][1][\"from_latest\"] is True\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:355:5\n    |\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n354 |     assert service.import_calls[0][\"payload\"] == payload\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n357 |     assert telemetry.events[0][1][\"from_latest\"] is True\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:356:5\n    |\n354 |     assert service.import_calls[0][\"payload\"] == payload\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n    |     ^^^^^^\n357 |     assert telemetry.events[0][1][\"from_latest\"] is True\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:357:5\n    |\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n357 |     assert telemetry.events[0][1][\"from_latest\"] is True\n    |     ^^^^^^\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_ctx`\n   --> tests\\test_cli_collab.py:392:19\n    |\n390 |     clients: list[StubHistoryClient] = []\n391 |\n392 |     def _ctx() -> Any:\n    |                   ^^^\n393 |         return ctx\n    |\n\nARG001 Unused function argument: `args`\n   --> tests\\test_cli_collab.py:396:25\n    |\n395 |     def _client_factory(\n396 |         base_url: str, *args: Any, **kwargs: Any\n    |                         ^^^^\n397 |     ) -> StubHistoryClient:\n398 |         client = StubHistoryClient(base_url, bundles)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:396:31\n    |\n395 |     def _client_factory(\n396 |         base_url: str, *args: Any, **kwargs: Any\n    |                               ^^^\n397 |     ) -> StubHistoryClient:\n398 |         client = StubHistoryClient(base_url, bundles)\n    |\n\nARG001 Unused function argument: `kwargs`\n   --> tests\\test_cli_collab.py:396:38\n    |\n395 |     def _client_factory(\n396 |         base_url: str, *args: Any, **kwargs: Any\n    |                                      ^^^^^^\n397 |     ) -> StubHistoryClient:\n398 |         client = StubHistoryClient(base_url, bundles)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:396:46\n    |\n395 |     def _client_factory(\n396 |         base_url: str, *args: Any, **kwargs: Any\n    |                                              ^^^\n397 |     ) -> StubHistoryClient:\n398 |         client = StubHistoryClient(base_url, bundles)\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_collab.py:402:5\n    |\n400 |         return client\n401 |\n402 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n403 |\n404 |     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:419:5\n    |\n417 |     )\n418 |\n419 |     assert result.exit_code == 0\n    |     ^^^^^^\n420 |     assert \"AI Daily Briefing\" not in result.stdout\n421 |     assert \"bundle-1\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:420:5\n    |\n419 |     assert result.exit_code == 0\n420 |     assert \"AI Daily Briefing\" not in result.stdout\n    |     ^^^^^^\n421 |     assert \"bundle-1\" in result.stdout\n422 |     assert '\"note\": \"demo\"' in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:421:5\n    |\n419 |     assert result.exit_code == 0\n420 |     assert \"AI Daily Briefing\" not in result.stdout\n421 |     assert \"bundle-1\" in result.stdout\n    |     ^^^^^^\n422 |     assert '\"note\": \"demo\"' in result.stdout\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:422:5\n    |\n420 |     assert \"AI Daily Briefing\" not in result.stdout\n421 |     assert \"bundle-1\" in result.stdout\n422 |     assert '\"note\": \"demo\"' in result.stdout\n    |     ^^^^^^\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:423:5\n    |\n421 |     assert \"bundle-1\" in result.stdout\n422 |     assert '\"note\": \"demo\"' in result.stdout\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n    |     ^^^^^^\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n425 |     assert clients and clients[0].limits == [1]\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:423:5\n    |\n421 |     assert \"bundle-1\" in result.stdout\n422 |     assert '\"note\": \"demo\"' in result.stdout\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n425 |     assert clients and clients[0].limits == [1]\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:424:5\n    |\n422 |     assert '\"note\": \"demo\"' in result.stdout\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n    |     ^^^^^^\n425 |     assert clients and clients[0].limits == [1]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:425:5\n    |\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n425 |     assert clients and clients[0].limits == [1]\n    |     ^^^^^^\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:425:5\n    |\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n425 |     assert clients and clients[0].limits == [1]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Break down assertion into multiple parts\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_ctx`\n   --> tests\\test_cli_collab.py:451:19\n    |\n449 |     clients: list[StubHistoryClient] = []\n450 |\n451 |     def _ctx() -> Any:\n    |                   ^^^\n452 |         return ctx\n    |\n\nARG001 Unused function argument: `args`\n   --> tests\\test_cli_collab.py:455:25\n    |\n454 |     def _client_factory(\n455 |         base_url: str, *args: Any, **kwargs: Any\n    |                         ^^^^\n456 |     ) -> StubHistoryClient:\n457 |         client = StubHistoryClient(\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:455:31\n    |\n454 |     def _client_factory(\n455 |         base_url: str, *args: Any, **kwargs: Any\n    |                               ^^^\n456 |     ) -> StubHistoryClient:\n457 |         client = StubHistoryClient(\n    |\n\nARG001 Unused function argument: `kwargs`\n   --> tests\\test_cli_collab.py:455:38\n    |\n454 |     def _client_factory(\n455 |         base_url: str, *args: Any, **kwargs: Any\n    |                                      ^^^^^^\n456 |     ) -> StubHistoryClient:\n457 |         client = StubHistoryClient(\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:455:46\n    |\n454 |     def _client_factory(\n455 |         base_url: str, *args: Any, **kwargs: Any\n    |                                              ^^^\n456 |     ) -> StubHistoryClient:\n457 |         client = StubHistoryClient(\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_collab.py:466:5\n    |\n464 |         return client\n465 |\n466 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n467 |\n468 |     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:483:5\n    |\n481 |     )\n482 |\n483 |     assert result.exit_code == 0\n    |     ^^^^^^\n484 |     assert \"Removed 1 bundle\" in result.stdout\n485 |     assert \"bundle-9\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:484:5\n    |\n483 |     assert result.exit_code == 0\n484 |     assert \"Removed 1 bundle\" in result.stdout\n    |     ^^^^^^\n485 |     assert \"bundle-9\" in result.stdout\n486 |     assert \"Remaining bundles\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:485:5\n    |\n483 |     assert result.exit_code == 0\n484 |     assert \"Removed 1 bundle\" in result.stdout\n485 |     assert \"bundle-9\" in result.stdout\n    |     ^^^^^^\n486 |     assert \"Remaining bundles\" in result.stdout\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:486:5\n    |\n484 |     assert \"Removed 1 bundle\" in result.stdout\n485 |     assert \"bundle-9\" in result.stdout\n486 |     assert \"Remaining bundles\" in result.stdout\n    |     ^^^^^^\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:487:5\n    |\n485 |     assert \"bundle-9\" in result.stdout\n486 |     assert \"Remaining bundles\" in result.stdout\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n    |     ^^^^^^\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:487:5\n    |\n485 |     assert \"bundle-9\" in result.stdout\n486 |     assert \"Remaining bundles\" in result.stdout\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:488:5\n    |\n486 |     assert \"Remaining bundles\" in result.stdout\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n    |     ^^^^^^\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n490 |     assert clients and clients[0].prune_calls == [2]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:489:5\n    |\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n    |     ^^^^^^\n490 |     assert clients and clients[0].prune_calls == [2]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> tests\\test_cli_collab.py:489:51\n    |\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n    |                                                   ^\n490 |     assert clients and clients[0].prune_calls == [2]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:490:5\n    |\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n490 |     assert clients and clients[0].prune_calls == [2]\n    |     ^^^^^^\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:490:5\n    |\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n490 |     assert clients and clients[0].prune_calls == [2]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Break down assertion into multiple parts\n\nINP001 File `tests\\test_collaboration_hub.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_collaboration_hub.py:1:1\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> tests\\test_collaboration_hub.py:5:29\n  |\n3 | import base64\n4 | import json\n5 | from collections.abc import Mapping\n  |                             ^^^^^^^\n6 | from datetime import UTC, datetime\n7 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_collaboration_hub.py:7:21\n  |\n5 | from collections.abc import Mapping\n6 | from datetime import UTC, datetime\n7 | from pathlib import Path\n  |                     ^^^^\n8 | from typing import Any, cast\n  |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:28:5\n   |\n27 |     latest = store.latest()\n28 |     assert latest is not None\n   |     ^^^^^^\n29 |     assert latest.bundle_id == stored.bundle_id\n30 |     assert latest.path.read_bytes() == payload\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:29:5\n   |\n27 |     latest = store.latest()\n28 |     assert latest is not None\n29 |     assert latest.bundle_id == stored.bundle_id\n   |     ^^^^^^\n30 |     assert latest.path.read_bytes() == payload\n31 |     fetched = store.get(stored.bundle_id)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:30:5\n   |\n28 |     assert latest is not None\n29 |     assert latest.bundle_id == stored.bundle_id\n30 |     assert latest.path.read_bytes() == payload\n   |     ^^^^^^\n31 |     fetched = store.get(stored.bundle_id)\n32 |     assert fetched is not None\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:32:5\n   |\n30 |     assert latest.path.read_bytes() == payload\n31 |     fetched = store.get(stored.bundle_id)\n32 |     assert fetched is not None\n   |     ^^^^^^\n33 |     assert fetched.bundle_id == stored.bundle_id\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:33:5\n   |\n31 |     fetched = store.get(stored.bundle_id)\n32 |     assert fetched is not None\n33 |     assert fetched.bundle_id == stored.bundle_id\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:43:5\n   |\n41 |     bundles = store.list()\n42 |\n43 |     assert len(bundles) == 2\n   |     ^^^^^^\n44 |     assert bundles[0].bundle_id == second.bundle_id\n45 |     assert bundles[0].stored_at >= bundles[1].stored_at\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> tests\\test_collaboration_hub.py:43:28\n   |\n41 |     bundles = store.list()\n42 |\n43 |     assert len(bundles) == 2\n   |                            ^\n44 |     assert bundles[0].bundle_id == second.bundle_id\n45 |     assert bundles[0].stored_at >= bundles[1].stored_at\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:44:5\n   |\n43 |     assert len(bundles) == 2\n44 |     assert bundles[0].bundle_id == second.bundle_id\n   |     ^^^^^^\n45 |     assert bundles[0].stored_at >= bundles[1].stored_at\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:45:5\n   |\n43 |     assert len(bundles) == 2\n44 |     assert bundles[0].bundle_id == second.bundle_id\n45 |     assert bundles[0].stored_at >= bundles[1].stored_at\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:56:5\n   |\n54 |     removed = store.prune(keep=2)\n55 |\n56 |     assert len(removed) == 1\n   |     ^^^^^^\n57 |     assert removed[0].bundle_id == first.bundle_id\n58 |     remaining = store.list()\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:57:5\n   |\n56 |     assert len(removed) == 1\n57 |     assert removed[0].bundle_id == first.bundle_id\n   |     ^^^^^^\n58 |     remaining = store.list()\n59 |     assert [bundle.bundle_id for bundle in remaining] == [\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:59:5\n   |\n57 |     assert removed[0].bundle_id == first.bundle_id\n58 |     remaining = store.list()\n59 |     assert [bundle.bundle_id for bundle in remaining] == [\n   |     ^^^^^^\n60 |         third.bundle_id,\n61 |         second.bundle_id,\n   |\n\nC901 `test_hub_client_push_and_pull` is too complex (12 > 10)\n  --> tests\\test_collaboration_hub.py:65:5\n   |\n65 | def test_hub_client_push_and_pull(tmp_path: Path) -> None:\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n66 |     bundle_path = tmp_path / \"payload.json\"\n67 |     bundle_bytes = b'{\"hello\": \"world\"}'\n   |\n\nPLR0915 Too many statements (64 > 50)\n  --> tests\\test_collaboration_hub.py:65:5\n   |\n65 | def test_hub_client_push_and_pull(tmp_path: Path) -> None:\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n66 |     bundle_path = tmp_path / \"payload.json\"\n67 |     bundle_bytes = b'{\"hello\": \"world\"}'\n   |\n\nC901 `_handler` is too complex (11 > 10)\n  --> tests\\test_collaboration_hub.py:72:9\n   |\n70 |     state: dict[str, dict[str, object]] = {}\n71 |\n72 |     def _handler(request: httpx.Request) -> httpx.Response:\n   |         ^^^^^^^^\n73 |         if (\n74 |             request.method == \"POST\"\n   |\n\nPLR0911 Too many return statements (8 > 6)\n  --> tests\\test_collaboration_hub.py:72:9\n   |\n70 |     state: dict[str, dict[str, object]] = {}\n71 |\n72 |     def _handler(request: httpx.Request) -> httpx.Response:\n   |         ^^^^^^^^\n73 |         if (\n74 |             request.method == \"POST\"\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:191:9\n    |\n189 |             bundle_path, source=\"tester\", metadata={\"note\": \"demo\"}\n190 |         )\n191 |         assert upload.bundle_id == \"bundle-1\"\n    |         ^^^^^^\n192 |         assert upload.size == len(bundle_bytes)\n193 |         assert upload.metadata == {\"note\": \"demo\"}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:192:9\n    |\n190 |         )\n191 |         assert upload.bundle_id == \"bundle-1\"\n192 |         assert upload.size == len(bundle_bytes)\n    |         ^^^^^^\n193 |         assert upload.metadata == {\"note\": \"demo\"}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:193:9\n    |\n191 |         assert upload.bundle_id == \"bundle-1\"\n192 |         assert upload.size == len(bundle_bytes)\n193 |         assert upload.metadata == {\"note\": \"demo\"}\n    |         ^^^^^^\n194 |\n195 |         history: list[BundleUploadResult] = client.list_bundles(limit=5)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:196:9\n    |\n195 |         history: list[BundleUploadResult] = client.list_bundles(limit=5)\n196 |         assert len(history) == 1\n    |         ^^^^^^\n197 |         assert history[0].bundle_id == upload.bundle_id\n198 |         assert history[0].metadata == {\"note\": \"demo\"}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:197:9\n    |\n195 |         history: list[BundleUploadResult] = client.list_bundles(limit=5)\n196 |         assert len(history) == 1\n197 |         assert history[0].bundle_id == upload.bundle_id\n    |         ^^^^^^\n198 |         assert history[0].metadata == {\"note\": \"demo\"}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:198:9\n    |\n196 |         assert len(history) == 1\n197 |         assert history[0].bundle_id == upload.bundle_id\n198 |         assert history[0].metadata == {\"note\": \"demo\"}\n    |         ^^^^^^\n199 |\n200 |         download = client.fetch_latest_bundle()\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:201:9\n    |\n200 |         download = client.fetch_latest_bundle()\n201 |         assert download is not None\n    |         ^^^^^^\n202 |         assert download.bundle_id == upload.bundle_id\n203 |         assert download.payload == bundle_bytes\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:202:9\n    |\n200 |         download = client.fetch_latest_bundle()\n201 |         assert download is not None\n202 |         assert download.bundle_id == upload.bundle_id\n    |         ^^^^^^\n203 |         assert download.payload == bundle_bytes\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:203:9\n    |\n201 |         assert download is not None\n202 |         assert download.bundle_id == upload.bundle_id\n203 |         assert download.payload == bundle_bytes\n    |         ^^^^^^\n204 |\n205 |         fetched = client.fetch_bundle(upload.bundle_id)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:206:9\n    |\n205 |         fetched = client.fetch_bundle(upload.bundle_id)\n206 |         assert fetched is not None\n    |         ^^^^^^\n207 |         assert fetched.bundle_id == upload.bundle_id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:207:9\n    |\n205 |         fetched = client.fetch_bundle(upload.bundle_id)\n206 |         assert fetched is not None\n207 |         assert fetched.bundle_id == upload.bundle_id\n    |         ^^^^^^\n208 |\n209 |         removed, remaining = client.prune_bundles(keep=0)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:210:9\n    |\n209 |         removed, remaining = client.prune_bundles(keep=0)\n210 |         assert len(removed) == 1\n    |         ^^^^^^\n211 |         assert removed[0].bundle_id == upload.bundle_id\n212 |         assert remaining == 0\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:211:9\n    |\n209 |         removed, remaining = client.prune_bundles(keep=0)\n210 |         assert len(removed) == 1\n211 |         assert removed[0].bundle_id == upload.bundle_id\n    |         ^^^^^^\n212 |         assert remaining == 0\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:212:9\n    |\n210 |         assert len(removed) == 1\n211 |         assert removed[0].bundle_id == upload.bundle_id\n212 |         assert remaining == 0\n    |         ^^^^^^\n    |\n\nINP001 File `tests\\test_collaboration_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_collaboration_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_collaboration_service.py:4:29\n  |\n3 | import json\n4 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n5 | from datetime import UTC, datetime\n6 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_collaboration_service.py:6:21\n  |\n4 | from collections.abc import Iterable\n5 | from datetime import UTC, datetime\n6 | from pathlib import Path\n  |                     ^^^^\n7 |\n8 | import pytest\n  |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:60:5\n   |\n58 |     )\n59 |\n60 |     assert result.count == 1\n   |     ^^^^^^\n61 |     assert result.path.exists()\n62 |     payload = json.loads(result.path.read_text(encoding=\"utf-8\"))\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:61:5\n   |\n60 |     assert result.count == 1\n61 |     assert result.path.exists()\n   |     ^^^^^^\n62 |     payload = json.loads(result.path.read_text(encoding=\"utf-8\"))\n63 |     assert payload[\"tasks\"] == 1\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:63:5\n   |\n61 |     assert result.path.exists()\n62 |     payload = json.loads(result.path.read_text(encoding=\"utf-8\"))\n63 |     assert payload[\"tasks\"] == 1\n   |     ^^^^^^\n64 |     assert payload.get(\"ciphertext\")\n65 |     assert payload[\"ciphertext\"] != json.dumps([{\"id\": task.id}])\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:64:5\n   |\n62 |     payload = json.loads(result.path.read_text(encoding=\"utf-8\"))\n63 |     assert payload[\"tasks\"] == 1\n64 |     assert payload.get(\"ciphertext\")\n   |     ^^^^^^\n65 |     assert payload[\"ciphertext\"] != json.dumps([{\"id\": task.id}])\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:65:5\n   |\n63 |     assert payload[\"tasks\"] == 1\n64 |     assert payload.get(\"ciphertext\")\n65 |     assert payload[\"ciphertext\"] != json.dumps([{\"id\": task.id}])\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:89:5\n   |\n87 |     imported = target_service.import_tasks(export_path, \"secret\")\n88 |\n89 |     assert len(imported) == 1\n   |     ^^^^^^\n90 |     restored = target_repo.get(task.id)\n91 |     assert restored is not None and restored.description == task.description\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:91:5\n   |\n89 |     assert len(imported) == 1\n90 |     restored = target_repo.get(task.id)\n91 |     assert restored is not None and restored.description == task.description\n   |     ^^^^^^\n92 |     assert imported[0].tags == task.tags\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_collaboration_service.py:91:5\n   |\n89 |     assert len(imported) == 1\n90 |     restored = target_repo.get(task.id)\n91 |     assert restored is not None and restored.description == task.description\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n92 |     assert imported[0].tags == task.tags\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:92:5\n   |\n90 |     restored = target_repo.get(task.id)\n91 |     assert restored is not None and restored.description == task.description\n92 |     assert imported[0].tags == task.tags\n   |     ^^^^^^\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:93:5\n   |\n91 |     assert restored is not None and restored.description == task.description\n92 |     assert imported[0].tags == task.tags\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |     ^^^^^^\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_collaboration_service.py:93:5\n   |\n91 |     assert restored is not None and restored.description == task.description\n92 |     assert imported[0].tags == task.tags\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_service.py:112:5\n    |\n110 |         export_path, \"secret\", overwrite_existing=False\n111 |     )\n112 |     assert len(imported) == 0\n    |     ^^^^^^\n113 |     stored = repo_updated.get(task.id)\n114 |     assert stored is not None and stored.description == \"Different\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_service.py:114:5\n    |\n112 |     assert len(imported) == 0\n113 |     stored = repo_updated.get(task.id)\n114 |     assert stored is not None and stored.description == \"Different\"\n    |     ^^^^^^\n115 |\n116 |     imported_overwrite = target_service.import_tasks(\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_collaboration_service.py:114:5\n    |\n112 |     assert len(imported) == 0\n113 |     stored = repo_updated.get(task.id)\n114 |     assert stored is not None and stored.description == \"Different\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n115 |\n116 |     imported_overwrite = target_service.import_tasks(\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_service.py:119:5\n    |\n117 |         export_path, \"secret\", overwrite_existing=True\n118 |     )\n119 |     assert len(imported_overwrite) == 1\n    |     ^^^^^^\n120 |     stored_overwrite = repo_updated.get(task.id)\n121 |     assert (\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_service.py:121:5\n    |\n119 |     assert len(imported_overwrite) == 1\n120 |     stored_overwrite = repo_updated.get(task.id)\n121 |     assert (\n    |     ^^^^^^\n122 |         stored_overwrite is not None\n123 |         and stored_overwrite.description == \"Original\"\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_collaboration_service.py:121:5\n    |\n119 |       assert len(imported_overwrite) == 1\n120 |       stored_overwrite = repo_updated.get(task.id)\n121 | /     assert (\n122 | |         stored_overwrite is not None\n123 | |         and stored_overwrite.description == \"Original\"\n124 | |     )\n    | |_____^\n    |\nhelp: Break down assertion into multiple parts\n\nB017 Do not assert blind exception: `Exception`\n   --> tests\\test_collaboration_service.py:136:10\n    |\n135 |     target_service, _ = _make_service(InMemoryTaskRepository())\n136 |     with pytest.raises(Exception):\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n137 |         target_service.import_tasks(export_path, \"wrong\")\n    |\n\nPT011 `pytest.raises(Exception)` is too broad, set the `match` parameter or use a more specific exception\n   --> tests\\test_collaboration_service.py:136:24\n    |\n135 |     target_service, _ = _make_service(InMemoryTaskRepository())\n136 |     with pytest.raises(Exception):\n    |                        ^^^^^^^^^\n137 |         target_service.import_tasks(export_path, \"wrong\")\n    |\n\nINP001 File `tests\\test_plugin_ai_assistant.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_plugin_ai_assistant.py:1:1\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.task.Task` into a type-checking block\n  --> tests\\test_plugin_ai_assistant.py:10:55\n   |\n 9 | from x_legatus_acta_schedae_x.core.domain import events\n10 | from x_legatus_acta_schedae_x.core.domain.task import Task\n   |                                                       ^^^^\n11 | from x_legatus_acta_schedae_x.core.ports.task_repo import ITaskRepository\n12 | from x_legatus_acta_schedae_x.core.services.ai_service import AIService\n   |\nhelp: Move into type-checking block\n\nPT009 Use a regular `assert` instead of unittest-style `assertTrue`\n  --> tests\\test_plugin_ai_assistant.py:75:9\n   |\n73 |         self.dispatcher.publish(scan_event)\n74 |\n75 |         self.assertTrue(self.suggestions_path.exists())\n   |         ^^^^^^^^^^^^^^^\n76 |         entries = [\n77 |             json.loads(line)\n   |\nhelp: Replace `assertTrue(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:84:9\n   |\n82 |         ]\n83 |         event_types = {entry[\"event\"] for entry in entries}\n84 |         self.assertIn(\"task_created\", event_types)\n   |         ^^^^^^^^^^^^^\n85 |         self.assertIn(\"tasks_imported\", event_types)\n86 |         self.assertIn(\"card_scanned\", event_types)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:85:9\n   |\n83 |         event_types = {entry[\"event\"] for entry in entries}\n84 |         self.assertIn(\"task_created\", event_types)\n85 |         self.assertIn(\"tasks_imported\", event_types)\n   |         ^^^^^^^^^^^^^\n86 |         self.assertIn(\"card_scanned\", event_types)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:86:9\n   |\n84 |         self.assertIn(\"task_created\", event_types)\n85 |         self.assertIn(\"tasks_imported\", event_types)\n86 |         self.assertIn(\"card_scanned\", event_types)\n   |         ^^^^^^^^^^^^^\n87 |\n88 |         summary_events = [\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:93:9\n   |\n91 |             if evt.startswith(\"plugin.ai_assistant\")\n92 |         ]\n93 |         self.assertIn(\"plugin.ai_assistant.task_created\", summary_events)\n   |         ^^^^^^^^^^^^^\n94 |         self.assertIn(\"plugin.ai_assistant.import_summary\", summary_events)\n95 |         self.assertIn(\"plugin.ai_assistant.card_followups\", summary_events)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:94:9\n   |\n92 |         ]\n93 |         self.assertIn(\"plugin.ai_assistant.task_created\", summary_events)\n94 |         self.assertIn(\"plugin.ai_assistant.import_summary\", summary_events)\n   |         ^^^^^^^^^^^^^\n95 |         self.assertIn(\"plugin.ai_assistant.card_followups\", summary_events)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:95:9\n   |\n93 |         self.assertIn(\"plugin.ai_assistant.task_created\", summary_events)\n94 |         self.assertIn(\"plugin.ai_assistant.import_summary\", summary_events)\n95 |         self.assertIn(\"plugin.ai_assistant.card_followups\", summary_events)\n   |         ^^^^^^^^^^^^^\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nANN202 Missing return type annotation for private function `list`\n   --> tests\\test_plugin_ai_assistant.py:109:9\n    |\n107 |         return self._tasks.get(task_id)\n108 |\n109 |     def list(self, status: str | None = None):\n    |         ^^^^\n110 |         for task in self._tasks.values():\n111 |             if status and task.status != status:\n    |\nhelp: Add return type annotation\n\nINP001 File `tests\\test_plugin_calendar_sync.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_plugin_calendar_sync.py:1:1\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_calendar_sync.py:83:9\n   |\n81 |             if event.startswith(\"plugin.calendar_sync\")\n82 |         ]\n83 |         self.assertIn(\"plugin.calendar_sync.synced\", events)\n   |         ^^^^^^^^^^^^^\n84 |         self.assertIn(\"plugin.calendar_sync.reminder\", events)\n85 |         self.assertIn(\"plugin.calendar_sync.unscheduled\", events)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_calendar_sync.py:84:9\n   |\n82 |         ]\n83 |         self.assertIn(\"plugin.calendar_sync.synced\", events)\n84 |         self.assertIn(\"plugin.calendar_sync.reminder\", events)\n   |         ^^^^^^^^^^^^^\n85 |         self.assertIn(\"plugin.calendar_sync.unscheduled\", events)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_calendar_sync.py:85:9\n   |\n83 |         self.assertIn(\"plugin.calendar_sync.synced\", events)\n84 |         self.assertIn(\"plugin.calendar_sync.reminder\", events)\n85 |         self.assertIn(\"plugin.calendar_sync.unscheduled\", events)\n   |         ^^^^^^^^^^^^^\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nANN202 Missing return type annotation for private function `list`\n   --> tests\\test_plugin_calendar_sync.py:103:9\n    |\n101 |         return self._tasks.get(task_id)\n102 |\n103 |     def list(self, status: str | None = None):\n    |         ^^^^\n104 |         for task in self._tasks.values():\n105 |             if status and task.status != status:\n    |\nhelp: Add return type annotation\n\nINP001 File `tests\\test_review_guidance_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_review_guidance_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_review_guidance_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.review.ReviewRecord` into a type-checking block\n  --> tests\\test_review_guidance_service.py:8:57\n   |\n 6 | from x_legatus_acta_schedae_x.core.domain import events\n 7 | from x_legatus_acta_schedae_x.core.domain.events import CardScanned\n 8 | from x_legatus_acta_schedae_x.core.domain.review import ReviewRecord\n   |                                                         ^^^^^^^^^^^^\n 9 | from x_legatus_acta_schedae_x.core.domain.task import Task\n10 | from x_legatus_acta_schedae_x.core.ports.review_repo import IReviewRepository\n   |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:129:5\n    |\n127 |     recommendations = guidance.generate(now=now, limit=2)\n128 |\n129 |     assert recommendations\n    |     ^^^^^^\n130 |     assert recommendations[0].task.id == high_task.id\n131 |     assert any(\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:130:5\n    |\n129 |     assert recommendations\n130 |     assert recommendations[0].task.id == high_task.id\n    |     ^^^^^^\n131 |     assert any(\n132 |         \"priority high\" in reason for reason in recommendations[0].reasons\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:131:5\n    |\n129 |     assert recommendations\n130 |     assert recommendations[0].task.id == high_task.id\n131 |     assert any(\n    |     ^^^^^^\n132 |         \"priority high\" in reason for reason in recommendations[0].reasons\n133 |     )\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:134:5\n    |\n132 |         \"priority high\" in reason for reason in recommendations[0].reasons\n133 |     )\n134 |     assert recommendations[0].suggested_action in {\n    |     ^^^^^^\n135 |         \"review then commit\",\n136 |         \"rescue overdue review\",\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:168:5\n    |\n166 |     recommendations = guidance.generate(now=now, limit=1)\n167 |\n168 |     assert recommendations\n    |     ^^^^^^\n169 |     rec = recommendations[0]\n170 |     assert rec.task.id == task.id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:170:5\n    |\n168 |     assert recommendations\n169 |     rec = recommendations[0]\n170 |     assert rec.task.id == task.id\n    |     ^^^^^^\n171 |     assert any(\"recent card scan\" in reason for reason in rec.reasons)\n172 |     assert rec.last_source == \"card_scan\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:171:5\n    |\n169 |     rec = recommendations[0]\n170 |     assert rec.task.id == task.id\n171 |     assert any(\"recent card scan\" in reason for reason in rec.reasons)\n    |     ^^^^^^\n172 |     assert rec.last_source == \"card_scan\"\n173 |     assert rec.last_reviewed_at is not None\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:172:5\n    |\n170 |     assert rec.task.id == task.id\n171 |     assert any(\"recent card scan\" in reason for reason in rec.reasons)\n172 |     assert rec.last_source == \"card_scan\"\n    |     ^^^^^^\n173 |     assert rec.last_reviewed_at is not None\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:173:5\n    |\n171 |     assert any(\"recent card scan\" in reason for reason in rec.reasons)\n172 |     assert rec.last_source == \"card_scan\"\n173 |     assert rec.last_reviewed_at is not None\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:192:5\n    |\n191 |     recommendations = guidance.generate(now=now, limit=3)\n192 |     assert len(recommendations) == 3\n    |     ^^^^^^\n193 |     # Scores should be sorted descending\n194 |     scores = [item.score for item in recommendations]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n   --> tests\\test_review_guidance_service.py:192:36\n    |\n191 |     recommendations = guidance.generate(now=now, limit=3)\n192 |     assert len(recommendations) == 3\n    |                                    ^\n193 |     # Scores should be sorted descending\n194 |     scores = [item.score for item in recommendations]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:195:5\n    |\n193 |     # Scores should be sorted descending\n194 |     scores = [item.score for item in recommendations]\n195 |     assert scores == sorted(scores, reverse=True)\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_review_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_review_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_review_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nPT013 Incorrect import of `pytest`; use `import pytest` instead\n --> tests\\test_review_service.py:6:1\n  |\n4 | from datetime import UTC, datetime, timedelta\n5 |\n6 | from pytest import approx, fixture  # type: ignore[import]\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from x_legatus_acta_schedae_x.core.domain import events\n8 | from x_legatus_acta_schedae_x.core.domain.events import CardScanned\n  |\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.review.ReviewRecord` into a type-checking block\n  --> tests\\test_review_service.py:9:57\n   |\n 7 | from x_legatus_acta_schedae_x.core.domain import events\n 8 | from x_legatus_acta_schedae_x.core.domain.events import CardScanned\n 9 | from x_legatus_acta_schedae_x.core.domain.review import ReviewRecord\n   |                                                         ^^^^^^^^^^^^\n10 | from x_legatus_acta_schedae_x.core.domain.task import Task\n11 | from x_legatus_acta_schedae_x.core.ports.review_repo import IReviewRepository\n   |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n  --> tests\\test_review_service.py:83:5\n   |\n82 |     record = service.get_record(task.id)\n83 |     assert record is not None\n   |     ^^^^^^\n84 |     assert record.due_at == task.created\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_review_service.py:84:5\n   |\n82 |     record = service.get_record(task.id)\n83 |     assert record is not None\n84 |     assert record.due_at == task.created\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:99:5\n    |\n 97 |         task.id, quality=5, reviewed_at=first_review_time\n 98 |     )\n 99 |     assert approx(record.interval_days, rel=1e-3) == 1.0\n    |     ^^^^^^\n100 |     assert record.repetitions == 1\n101 |     assert record.last_reviewed_at == first_review_time\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:100:5\n    |\n 98 |     )\n 99 |     assert approx(record.interval_days, rel=1e-3) == 1.0\n100 |     assert record.repetitions == 1\n    |     ^^^^^^\n101 |     assert record.last_reviewed_at == first_review_time\n102 |     assert record.history[-1].quality == 5\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:101:5\n    |\n 99 |     assert approx(record.interval_days, rel=1e-3) == 1.0\n100 |     assert record.repetitions == 1\n101 |     assert record.last_reviewed_at == first_review_time\n    |     ^^^^^^\n102 |     assert record.history[-1].quality == 5\n103 |     assert record.history[-1].source == \"manual\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:102:5\n    |\n100 |     assert record.repetitions == 1\n101 |     assert record.last_reviewed_at == first_review_time\n102 |     assert record.history[-1].quality == 5\n    |     ^^^^^^\n103 |     assert record.history[-1].source == \"manual\"\n104 |     assert record.history[-1].context == {}\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> tests\\test_review_service.py:102:42\n    |\n100 |     assert record.repetitions == 1\n101 |     assert record.last_reviewed_at == first_review_time\n102 |     assert record.history[-1].quality == 5\n    |                                          ^\n103 |     assert record.history[-1].source == \"manual\"\n104 |     assert record.history[-1].context == {}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:103:5\n    |\n101 |     assert record.last_reviewed_at == first_review_time\n102 |     assert record.history[-1].quality == 5\n103 |     assert record.history[-1].source == \"manual\"\n    |     ^^^^^^\n104 |     assert record.history[-1].context == {}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:104:5\n    |\n102 |     assert record.history[-1].quality == 5\n103 |     assert record.history[-1].source == \"manual\"\n104 |     assert record.history[-1].context == {}\n    |     ^^^^^^\n105 |\n106 |     second_time = first_review_time + timedelta(days=2)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:108:5\n    |\n106 |     second_time = first_review_time + timedelta(days=2)\n107 |     record = service.record_review(task.id, quality=5, reviewed_at=second_time)\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n    |     ^^^^^^\n109 |     assert record.repetitions == 2\n110 |     assert record.history[-1].reviewed_at == second_time\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `6.0` with a constant variable\n   --> tests\\test_review_service.py:108:54\n    |\n106 |     second_time = first_review_time + timedelta(days=2)\n107 |     record = service.record_review(task.id, quality=5, reviewed_at=second_time)\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n    |                                                      ^^^\n109 |     assert record.repetitions == 2\n110 |     assert record.history[-1].reviewed_at == second_time\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:109:5\n    |\n107 |     record = service.record_review(task.id, quality=5, reviewed_at=second_time)\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n109 |     assert record.repetitions == 2\n    |     ^^^^^^\n110 |     assert record.history[-1].reviewed_at == second_time\n111 |     assert record.history[-1].source == \"manual\"\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> tests\\test_review_service.py:109:34\n    |\n107 |     record = service.record_review(task.id, quality=5, reviewed_at=second_time)\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n109 |     assert record.repetitions == 2\n    |                                  ^\n110 |     assert record.history[-1].reviewed_at == second_time\n111 |     assert record.history[-1].source == \"manual\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:110:5\n    |\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n109 |     assert record.repetitions == 2\n110 |     assert record.history[-1].reviewed_at == second_time\n    |     ^^^^^^\n111 |     assert record.history[-1].source == \"manual\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:111:5\n    |\n109 |     assert record.repetitions == 2\n110 |     assert record.history[-1].reviewed_at == second_time\n111 |     assert record.history[-1].source == \"manual\"\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:124:5\n    |\n123 |     due_items = service.due_reviews(now=past + timedelta(days=2))\n124 |     assert len(due_items) == 1\n    |     ^^^^^^\n125 |     assert due_items[0].task.id == task.id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:125:5\n    |\n123 |     due_items = service.due_reviews(now=past + timedelta(days=2))\n124 |     assert len(due_items) == 1\n125 |     assert due_items[0].task.id == task.id\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:137:5\n    |\n136 |     record = service.get_record(task.id)\n137 |     assert record is not None\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:151:5\n    |\n150 |     record = service.get_record(task.id)\n151 |     assert record is not None\n    |     ^^^^^^\n152 |     assert record.repetitions == 1\n153 |     last_entry = record.history[-1]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:152:5\n    |\n150 |     record = service.get_record(task.id)\n151 |     assert record is not None\n152 |     assert record.repetitions == 1\n    |     ^^^^^^\n153 |     last_entry = record.history[-1]\n154 |     assert last_entry.source == \"task_completed\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:154:5\n    |\n152 |     assert record.repetitions == 1\n153 |     last_entry = record.history[-1]\n154 |     assert last_entry.source == \"task_completed\"\n    |     ^^^^^^\n155 |     assert last_entry.quality == 5\n156 |     assert \"description\" in last_entry.context\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:155:5\n    |\n153 |     last_entry = record.history[-1]\n154 |     assert last_entry.source == \"task_completed\"\n155 |     assert last_entry.quality == 5\n    |     ^^^^^^\n156 |     assert \"description\" in last_entry.context\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> tests\\test_review_service.py:155:34\n    |\n153 |     last_entry = record.history[-1]\n154 |     assert last_entry.source == \"task_completed\"\n155 |     assert last_entry.quality == 5\n    |                                  ^\n156 |     assert \"description\" in last_entry.context\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:156:5\n    |\n154 |     assert last_entry.source == \"task_completed\"\n155 |     assert last_entry.quality == 5\n156 |     assert \"description\" in last_entry.context\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:185:5\n    |\n184 |     record = service.get_record(task.id)\n185 |     assert record is not None\n    |     ^^^^^^\n186 |     assert record.repetitions == 1\n187 |     entry = record.history[-1]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:186:5\n    |\n184 |     record = service.get_record(task.id)\n185 |     assert record is not None\n186 |     assert record.repetitions == 1\n    |     ^^^^^^\n187 |     entry = record.history[-1]\n188 |     assert entry.source == \"card_scan\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:188:5\n    |\n186 |     assert record.repetitions == 1\n187 |     entry = record.history[-1]\n188 |     assert entry.source == \"card_scan\"\n    |     ^^^^^^\n189 |     assert entry.quality == 4\n190 |     assert entry.reviewed_at == timestamp\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:189:5\n    |\n187 |     entry = record.history[-1]\n188 |     assert entry.source == \"card_scan\"\n189 |     assert entry.quality == 4\n    |     ^^^^^^\n190 |     assert entry.reviewed_at == timestamp\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `4` with a constant variable\n   --> tests\\test_review_service.py:189:29\n    |\n187 |     entry = record.history[-1]\n188 |     assert entry.source == \"card_scan\"\n189 |     assert entry.quality == 4\n    |                             ^\n190 |     assert entry.reviewed_at == timestamp\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:190:5\n    |\n188 |     assert entry.source == \"card_scan\"\n189 |     assert entry.quality == 4\n190 |     assert entry.reviewed_at == timestamp\n    |     ^^^^^^\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n192 |     assert entry.context[\"metadata\"][\"reader\"] == \"qrbot\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:191:5\n    |\n189 |     assert entry.quality == 4\n190 |     assert entry.reviewed_at == timestamp\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n    |     ^^^^^^\n192 |     assert entry.context[\"metadata\"][\"reader\"] == \"qrbot\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:192:5\n    |\n190 |     assert entry.reviewed_at == timestamp\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n192 |     assert entry.context[\"metadata\"][\"reader\"] == \"qrbot\"\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:215:5\n    |\n214 |     record = service.get_record(task.id)\n215 |     assert record is not None\n    |     ^^^^^^\n216 |     entry = record.history[-1]\n217 |     assert entry.source == \"card_scan\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:217:5\n    |\n215 |     assert record is not None\n216 |     entry = record.history[-1]\n217 |     assert entry.source == \"card_scan\"\n    |     ^^^^^^\n218 |     assert entry.quality == 1\n219 |     assert entry.context[\"task_error\"] == \"task_not_found\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:218:5\n    |\n216 |     entry = record.history[-1]\n217 |     assert entry.source == \"card_scan\"\n218 |     assert entry.quality == 1\n    |     ^^^^^^\n219 |     assert entry.context[\"task_error\"] == \"task_not_found\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:219:5\n    |\n217 |     assert entry.source == \"card_scan\"\n218 |     assert entry.quality == 1\n219 |     assert entry.context[\"task_error\"] == \"task_not_found\"\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_scheduler_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_scheduler_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n --> tests\\test_scheduler_service.py:4:29\n  |\n3 | import unittest\n4 | from collections.abc import Callable, Iterable, Mapping\n  |                             ^^^^^^^^\n5 | from datetime import UTC, datetime, timedelta\n6 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_scheduler_service.py:4:39\n  |\n3 | import unittest\n4 | from collections.abc import Callable, Iterable, Mapping\n  |                                       ^^^^^^^^\n5 | from datetime import UTC, datetime, timedelta\n6 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> tests\\test_scheduler_service.py:4:49\n  |\n3 | import unittest\n4 | from collections.abc import Callable, Iterable, Mapping\n  |                                                 ^^^^^^^\n5 | from datetime import UTC, datetime, timedelta\n6 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.events` into a type-checking block\n  --> tests\\test_scheduler_service.py:8:60\n   |\n 6 | from typing import Any\n 7 |\n 8 | from x_legatus_acta_schedae_x.core.domain import events as domain_events\n   |                                                            ^^^^^^^^^^^^^\n 9 | from x_legatus_acta_schedae_x.core.domain.events import (\n10 |     EventDispatcher,\n   |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.task.Task` into a type-checking block\n  --> tests\\test_scheduler_service.py:13:55\n   |\n11 |     TaskReminderTriggered,\n12 | )\n13 | from x_legatus_acta_schedae_x.core.domain.task import Task\n   |                                                       ^^^^\n14 | from x_legatus_acta_schedae_x.core.ports.scheduler import IScheduler\n15 | from x_legatus_acta_schedae_x.core.ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nC408 Unnecessary `tuple()` call (rewrite as a literal)\n  --> tests\\test_scheduler_service.py:74:52\n   |\n72 |         kwargs: dict[str, Any] | None = None,\n73 |     ) -> str:\n74 |         self.jobs[job_id] = (run_at, func, args or tuple(), kwargs or {})\n   |                                                    ^^^^^^^\n75 |         return job_id\n   |\nhelp: Rewrite as a literal\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n   --> tests\\test_scheduler_service.py:114:9\n    |\n112 |         task = self.task_service.add_task(\"Prepare deck\", due=due)\n113 |         job_id = f\"task-reminder-{task.id}\"\n114 |         self.assertIn(job_id, self.scheduler.jobs)\n    |         ^^^^^^^^^^^^^\n115 |         self.assertTrue(self.scheduler.started)\n    |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertTrue`\n   --> tests\\test_scheduler_service.py:115:9\n    |\n113 |         job_id = f\"task-reminder-{task.id}\"\n114 |         self.assertIn(job_id, self.scheduler.jobs)\n115 |         self.assertTrue(self.scheduler.started)\n    |         ^^^^^^^^^^^^^^^\n116 |\n117 |     def test_cancel_on_completion(self) -> None:\n    |\nhelp: Replace `assertTrue(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertNotIn`\n   --> tests\\test_scheduler_service.py:122:9\n    |\n120 |         self.task_service.complete_task(task.id)\n121 |         job_id = f\"task-reminder-{task.id}\"\n122 |         self.assertNotIn(job_id, self.scheduler.jobs)\n    |         ^^^^^^^^^^^^^^^^\n123 |\n124 |     def test_trigger_emits_event(self) -> None:\n    |\nhelp: Replace `assertNotIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n   --> tests\\test_scheduler_service.py:136:9\n    |\n134 |         job_id = f\"task-reminder-{task.id}\"\n135 |         self.scheduler.trigger(job_id)\n136 |         self.assertEqual(1, len(captured))\n    |         ^^^^^^^^^^^^^^^^\n137 |         self.assertEqual(task.id, captured[0].task.id)\n138 |         self.assertIn(\n    |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n   --> tests\\test_scheduler_service.py:137:9\n    |\n135 |         self.scheduler.trigger(job_id)\n136 |         self.assertEqual(1, len(captured))\n137 |         self.assertEqual(task.id, captured[0].task.id)\n    |         ^^^^^^^^^^^^^^^^\n138 |         self.assertIn(\n139 |             \"task.reminder.triggered\",\n    |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n   --> tests\\test_scheduler_service.py:138:9\n    |\n136 |         self.assertEqual(1, len(captured))\n137 |         self.assertEqual(task.id, captured[0].task.id)\n138 |         self.assertIn(\n    |         ^^^^^^^^^^^^^\n139 |             \"task.reminder.triggered\",\n140 |             [name for name, _ in self.telemetry.events],\n    |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nINP001 File `tests\\test_search_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_search_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_search_service.py:4:29\n  |\n3 | import unittest\n4 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n5 | from datetime import UTC\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.task.Task` into a type-checking block\n  --> tests\\test_search_service.py:8:55\n   |\n 7 | from x_legatus_acta_schedae_x.core.domain.events import EventDispatcher\n 8 | from x_legatus_acta_schedae_x.core.domain.task import Task\n   |                                                       ^^^^\n 9 | from x_legatus_acta_schedae_x.core.ports.task_repo import ITaskRepository\n10 | from x_legatus_acta_schedae_x.core.services.search_service import SearchService\n   |\nhelp: Move into type-checking block\n\nANN201 Missing return type annotation for public function `now`\n  --> tests\\test_search_service.py:36:9\n   |\n34 |         return task\n35 |\n36 |     def now(self):\n   |         ^^^\n37 |         from datetime import datetime\n   |\nhelp: Add return type annotation\n\nPLC0415 `import` should be at the top-level of a file\n  --> tests\\test_search_service.py:37:9\n   |\n36 |     def now(self):\n37 |         from datetime import datetime\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n38 |\n39 |         return datetime.now(UTC)\n   |\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_search_service.py:57:9\n   |\n56 |         matches = self.search_service.search(text=\"report\")\n57 |         self.assertEqual(1, len(matches))\n   |         ^^^^^^^^^^^^^^^^\n58 |         self.assertIn(\"report\", matches[0].description.lower())\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_search_service.py:58:9\n   |\n56 |         matches = self.search_service.search(text=\"report\")\n57 |         self.assertEqual(1, len(matches))\n58 |         self.assertIn(\"report\", matches[0].description.lower())\n   |         ^^^^^^^^^^^^^\n59 |\n60 |     def test_search_filters_status_and_tags(self) -> None:\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_search_service.py:70:9\n   |\n69 |         completed = self.search_service.search(status=\"completed\")\n70 |         self.assertEqual([second.id], [task.id for task in completed])\n   |         ^^^^^^^^^^^^^^^^\n71 |\n72 |         tag_filtered = self.search_service.search(tags=[\"finance\"])\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_search_service.py:73:9\n   |\n72 |         tag_filtered = self.search_service.search(tags=[\"finance\"])\n73 |         self.assertEqual([first.id], [task.id for task in tag_filtered])\n   |         ^^^^^^^^^^^^^^^^\n74 |\n75 |     def test_search_updates_after_edit(self) -> None:\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_search_service.py:80:9\n   |\n79 |         matches = self.search_service.search(text=\"retrospective\")\n80 |         self.assertEqual([task.id], [t.id for t in matches])\n   |         ^^^^^^^^^^^^^^^^\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nINP001 File `tests\\test_task_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_task_service.py:1:1\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.events` into a type-checking block\n --> tests\\test_task_service.py:7:60\n  |\n5 | from typing import cast\n6 |\n7 | from x_legatus_acta_schedae_x.core.domain import events as domain_events\n  |                                                            ^^^^^^^^^^^^^\n8 | from x_legatus_acta_schedae_x.core.domain.events import (\n9 |     EventDispatcher,\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.task.Task` into a type-checking block\n  --> tests\\test_task_service.py:12:55\n   |\n10 |     TaskUpdated,\n11 | )\n12 | from x_legatus_acta_schedae_x.core.domain.task import Task\n   |                                                       ^^^^\n13 | from x_legatus_acta_schedae_x.core.ports.task_repo import ITaskRepository\n14 | from x_legatus_acta_schedae_x.core.services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nANN201 Missing return type annotation for public function `list`\n  --> tests\\test_task_service.py:28:9\n   |\n26 |         return self.storage.get(task_id)\n27 |\n28 |     def list(self, status: str | None = None):\n   |         ^^^^\n29 |         tasks = list(self.storage.values())\n30 |         if status:\n   |\nhelp: Add return type annotation\n\nANN201 Missing return type annotation for public function `now`\n  --> tests\\test_task_service.py:38:9\n   |\n36 |         return task\n37 |\n38 |     def now(self):\n   |         ^^^\n39 |         from datetime import datetime\n   |\nhelp: Add return type annotation\n\nPLC0415 `import` should be at the top-level of a file\n  --> tests\\test_task_service.py:39:9\n   |\n38 |     def now(self):\n39 |         from datetime import datetime\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n40 |\n41 |         return datetime.now(UTC)\n   |\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:53:9\n   |\n51 |         task = self.service.add_task(\"Original\")\n52 |         updated = self.service.edit_task(task.id, \"Rewritten\")\n53 |         self.assertEqual(\"Rewritten\", updated.description)\n   |         ^^^^^^^^^^^^^^^^\n54 |\n55 |     def test_defer_with_delta(self) -> None:\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIsNotNone`\n  --> tests\\test_task_service.py:59:9\n   |\n57 |         updated = self.service.defer_task(task.id, delta=timedelta(days=2))\n58 |         due = updated.due\n59 |         self.assertIsNotNone(due)\n   |         ^^^^^^^^^^^^^^^^^^^^\n60 |         due_dt = cast(\"datetime\", due)\n61 |         self.assertGreaterEqual(due_dt, task.created)\n   |\nhelp: Replace `assertIsNotNone(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertGreaterEqual`\n  --> tests\\test_task_service.py:61:9\n   |\n59 |         self.assertIsNotNone(due)\n60 |         due_dt = cast(\"datetime\", due)\n61 |         self.assertGreaterEqual(due_dt, task.created)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n62 |\n63 |     def test_prioritize_task(self) -> None:\n   |\nhelp: Replace `assertGreaterEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:66:9\n   |\n64 |         task = self.service.add_task(\"Critical bug\")\n65 |         updated = self.service.prioritize_task(task.id, \"high\")\n66 |         self.assertEqual(\"high\", updated.priority)\n   |         ^^^^^^^^^^^^^^^^\n67 |\n68 |     def test_tag_management(self) -> None:\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_task_service.py:71:9\n   |\n69 |         task = self.service.add_task(\"Tag me\")\n70 |         with_tags = self.service.add_tags(task.id, [\"alpha\", \"beta\"])\n71 |         self.assertIn(\"alpha\", with_tags.tags)\n   |         ^^^^^^^^^^^^^\n72 |         stripped = self.service.remove_tags(with_tags.id, [\"alpha\"])\n73 |         self.assertNotIn(\"alpha\", stripped.tags)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertNotIn`\n  --> tests\\test_task_service.py:73:9\n   |\n71 |         self.assertIn(\"alpha\", with_tags.tags)\n72 |         stripped = self.service.remove_tags(with_tags.id, [\"alpha\"])\n73 |         self.assertNotIn(\"alpha\", stripped.tags)\n   |         ^^^^^^^^^^^^^^^^\n74 |         replaced = self.service.set_tags(stripped.id, [\"gamma\"])\n75 |         self.assertEqual({\"gamma\"}, set(replaced.tags))\n   |\nhelp: Replace `assertNotIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:75:9\n   |\n73 |         self.assertNotIn(\"alpha\", stripped.tags)\n74 |         replaced = self.service.set_tags(stripped.id, [\"gamma\"])\n75 |         self.assertEqual({\"gamma\"}, set(replaced.tags))\n   |         ^^^^^^^^^^^^^^^^\n76 |\n77 |     def test_task_updated_event_publishes(self) -> None:\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:87:9\n   |\n85 |         task = self.service.add_task(\"Event sample\")\n86 |         self.service.edit_task(task.id, \"Edited\")\n87 |         self.assertEqual(1, len(captured))\n   |         ^^^^^^^^^^^^^^^^\n88 |         self.assertEqual(\"Edited\", captured[0].description)\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:88:9\n   |\n86 |         self.service.edit_task(task.id, \"Edited\")\n87 |         self.assertEqual(1, len(captured))\n88 |         self.assertEqual(\"Edited\", captured[0].description)\n   |         ^^^^^^^^^^^^^^^^\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nINP001 File `tests\\test_tui_controller.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_tui_controller.py:1:1\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:23:5\n   |\n22 |     pending = controller.list_tasks(TaskFilters(status=\"pending\"))\n23 |     assert _find_row(pending, created.id)\n   |     ^^^^^^\n24 |\n25 |     controller.complete_task(created.id)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:27:5\n   |\n25 |     controller.complete_task(created.id)\n26 |     completed = controller.list_tasks(TaskFilters(status=\"completed\"))\n27 |     assert _find_row(completed, created.id)\n   |     ^^^^^^\n28 |\n29 |     search = controller.list_tasks(TaskFilters(text=\"demo\"))\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:30:5\n   |\n29 |     search = controller.list_tasks(TaskFilters(text=\"demo\"))\n30 |     assert _find_row(search, created.id)\n   |     ^^^^^^\n31 |\n32 |     tags = controller.available_tags()\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:33:5\n   |\n32 |     tags = controller.available_tags()\n33 |     assert \"demo\" in tags\n   |     ^^^^^^\n34 |     assert \"tui\" in tags\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:34:5\n   |\n32 |     tags = controller.available_tags()\n33 |     assert \"demo\" in tags\n34 |     assert \"tui\" in tags\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:48:5\n   |\n46 |     summary = controller.ai_summary(top_n=5)\n47 |\n48 |     assert summary.pending >= 1\n   |     ^^^^^^\n49 |     assert summary.completed >= 1\n50 |     assert summary.top_tags\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:49:5\n   |\n48 |     assert summary.pending >= 1\n49 |     assert summary.completed >= 1\n   |     ^^^^^^\n50 |     assert summary.top_tags\n51 |     assert any(item.task_id == focus.id for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:50:5\n   |\n48 |     assert summary.pending >= 1\n49 |     assert summary.completed >= 1\n50 |     assert summary.top_tags\n   |     ^^^^^^\n51 |     assert any(item.task_id == focus.id for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:51:5\n   |\n49 |     assert summary.completed >= 1\n50 |     assert summary.top_tags\n51 |     assert any(item.task_id == focus.id for item in summary.upcoming)\n   |     ^^^^^^\n   |\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> tui\\__init__.py:3:1\n  |\n1 | \"\"\"Textual TUI entrypoints for Legatus Acta Schedae.\"\"\"\n2 |\n3 | from ..interface.tui.app import LegatusTuiApp, run\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 |\n5 | __all__ = [\"LegatusTuiApp\", \"run\"]\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> tui\\__init__.py:3:1\n  |\n1 | \"\"\"Textual TUI entrypoints for Legatus Acta Schedae.\"\"\"\n2 |\n3 | from ..interface.tui.app import LegatusTuiApp, run\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 |\n5 | __all__ = [\"LegatusTuiApp\", \"run\"]\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_legatus_acta_schedae_x.py:15:29\n   |\n13 | import tempfile\n14 | import uuid\n15 | from collections.abc import Callable, Iterable\n   |                             ^^^^^^^^\n16 | from dataclasses import asdict, dataclass, field\n17 | from typing import Any, Protocol, cast\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_legatus_acta_schedae_x.py:15:39\n   |\n13 | import tempfile\n14 | import uuid\n15 | from collections.abc import Callable, Iterable\n   |                                       ^^^^^^^^\n16 | from dataclasses import asdict, dataclass, field\n17 | from typing import Any, Protocol, cast\n   |\nhelp: Move into type-checking block\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_legatus_acta_schedae_x.py:27:8\n   |\n25 |     qrcode = importlib.import_module(\"qrcode\")\n26 |     _QR_AVAILABLE = True\n27 | except Exception:\n   |        ^^^^^^^^^\n28 |     qrcode = None\n29 |     _QR_AVAILABLE = False\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_legatus_acta_schedae_x.py:35:28\n   |\n35 | def _truthy_env(name: str, default: bool = False) -> bool:\n   |                            ^^^^^^^\n36 |     v = os.environ.get(name)\n37 |     if v is None:\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> x_cls_legatus_acta_schedae_x.py:35:28\n   |\n35 | def _truthy_env(name: str, default: bool = False) -> bool:\n   |                            ^^^^^^^\n36 |     v = os.environ.get(name)\n37 |     if v is None:\n   |\n\nPTH100 `os.path.abspath()` should be replaced by `Path.resolve()`\n  --> x_cls_legatus_acta_schedae_x.py:48:16\n   |\n46 |         return env\n47 |     try:\n48 |         return os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n   |                ^^^^^^^^^^^^^^^\n49 |     except Exception:\n50 |         return r\"c:\\x_runner_x\"\n   |\nhelp: Replace with `Path(...).resolve()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n  --> x_cls_legatus_acta_schedae_x.py:48:32\n   |\n46 |         return env\n47 |     try:\n48 |         return os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n   |                                ^^^^^^^^^^^^\n49 |     except Exception:\n50 |         return r\"c:\\x_runner_x\"\n   |\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n  --> x_cls_legatus_acta_schedae_x.py:48:45\n   |\n46 |         return env\n47 |     try:\n48 |         return os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n   |                                             ^^^^^^^^^^^^^^^\n49 |     except Exception:\n50 |         return r\"c:\\x_runner_x\"\n   |\nhelp: Replace with `Path(...).parent`\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_legatus_acta_schedae_x.py:49:12\n   |\n47 |     try:\n48 |         return os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n49 |     except Exception:\n   |            ^^^^^^^^^\n50 |         return r\"c:\\x_runner_x\"\n   |\n\nARG002 Unused method argument: `html_str`\n  --> x_cls_legatus_acta_schedae_x.py:87:22\n   |\n86 |     # Dev fallback for PDF via wkhtmltopdf when enabled\n87 |     def to_pdf(self, html_str: str, out_path: str) -> None:\n   |                      ^^^^^^^^\n88 |         # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n89 |         raise RuntimeError(\n   |\n\nARG002 Unused method argument: `out_path`\n  --> x_cls_legatus_acta_schedae_x.py:87:37\n   |\n86 |     # Dev fallback for PDF via wkhtmltopdf when enabled\n87 |     def to_pdf(self, html_str: str, out_path: str) -> None:\n   |                                     ^^^^^^^^\n88 |         # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n89 |         raise RuntimeError(\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_legatus_acta_schedae_x.py:89:15\n   |\n87 |       def to_pdf(self, html_str: str, out_path: str) -> None:\n88 |           # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n89 |           raise RuntimeError(\n   |  _______________^\n90 | |             \"PDF export not available (no PDF engine configured)\"\n91 | |         )\n   | |_________^\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> x_cls_legatus_acta_schedae_x.py:90:13\n   |\n88 |         # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n89 |         raise RuntimeError(\n90 |             \"PDF export not available (no PDF engine configured)\"\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n91 |         )\n   |\nhelp: Assign to variable; remove string literal\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n   --> x_cls_legatus_acta_schedae_x.py:107:20\n    |\n105 |             or (\n106 |                 _DEFAULT_WKHTMLTOPDF_PATH\n107 |                 if os.path.isfile(_DEFAULT_WKHTMLTOPDF_PATH)\n    |                    ^^^^^^^^^^^^^^\n108 |                 else None\n109 |             )\n    |\nhelp: Replace with `Path(...).is_file()`\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n   --> x_cls_legatus_acta_schedae_x.py:122:33\n    |\n120 |         dpi: int = 300,\n121 |     ) -> None:\n122 |         if not self._bin or not os.path.isfile(self._bin):\n    |                                 ^^^^^^^^^^^^^^\n123 |             raise RuntimeError(\n124 |                 \"wkhtmltopdf not configured (set X_WKHTMLTOPDF_PATH or WKHTMLTOPDF_BIN)\"\n    |\nhelp: Replace with `Path(...).is_file()`\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_legatus_acta_schedae_x.py:123:19\n    |\n121 |       ) -> None:\n122 |           if not self._bin or not os.path.isfile(self._bin):\n123 |               raise RuntimeError(\n    |  ___________________^\n124 | |                 \"wkhtmltopdf not configured (set X_WKHTMLTOPDF_PATH or WKHTMLTOPDF_BIN)\"\n125 | |             )\n    | |_____________^\n126 |           # Write HTML to a temp file and invoke wkhtmltopdf with explicit sizing\n127 |           with tempfile.NamedTemporaryFile(\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_legatus_acta_schedae_x.py:124:17\n    |\n122 |         if not self._bin or not os.path.isfile(self._bin):\n123 |             raise RuntimeError(\n124 |                 \"wkhtmltopdf not configured (set X_WKHTMLTOPDF_PATH or WKHTMLTOPDF_BIN)\"\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n125 |             )\n126 |         # Write HTML to a temp file and invoke wkhtmltopdf with explicit sizing\n    |\nhelp: Assign to variable; remove string literal\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:133:13\n    |\n131 |             tmp_path = tmp.name\n132 |         try:\n133 |             os.makedirs(\n    |             ^^^^^^^^^^^\n134 |                 os.path.dirname(os.path.abspath(out_path)) or \".\",\n135 |                 exist_ok=True,\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:134:17\n    |\n132 |         try:\n133 |             os.makedirs(\n134 |                 os.path.dirname(os.path.abspath(out_path)) or \".\",\n    |                 ^^^^^^^^^^^^^^^\n135 |                 exist_ok=True,\n136 |             )\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH100 `os.path.abspath()` should be replaced by `Path.resolve()`\n   --> x_cls_legatus_acta_schedae_x.py:134:33\n    |\n132 |         try:\n133 |             os.makedirs(\n134 |                 os.path.dirname(os.path.abspath(out_path)) or \".\",\n    |                                 ^^^^^^^^^^^^^^^\n135 |                 exist_ok=True,\n136 |             )\n    |\nhelp: Replace with `Path(...).resolve()`\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_legatus_acta_schedae_x.py:166:13\n    |\n164 |                 ]\n165 |             args += [tmp_path, out_path]\n166 |             subprocess.run(args, check=True, capture_output=True, text=True)\n    |             ^^^^^^^^^^^^^^\n167 |         finally:\n168 |             try:\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_legatus_acta_schedae_x.py:168:13\n    |\n166 |               subprocess.run(args, check=True, capture_output=True, text=True)\n167 |           finally:\n168 | /             try:\n169 | |                 os.remove(tmp_path)\n170 | |             except Exception:\n171 | |                 pass\n    | |____________________^\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nPTH107 `os.remove()` should be replaced by `Path.unlink()`\n   --> x_cls_legatus_acta_schedae_x.py:169:17\n    |\n167 |         finally:\n168 |             try:\n169 |                 os.remove(tmp_path)\n    |                 ^^^^^^^^^\n170 |             except Exception:\n171 |                 pass\n    |\nhelp: Replace with `Path(...).unlink()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:170:13\n    |\n168 |               try:\n169 |                   os.remove(tmp_path)\n170 | /             except Exception:\n171 | |                 pass\n    | |____________________^\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:170:20\n    |\n168 |             try:\n169 |                 os.remove(tmp_path)\n170 |             except Exception:\n    |                    ^^^^^^^^^\n171 |                 pass\n    |\n\nC901 `_load_from_manifest` is too complex (37 > 10)\n   --> x_cls_legatus_acta_schedae_x.py:179:9\n    |\n177 |         self._inner, self._has_pdf = self._load_from_manifest(base_folder)\n178 |\n179 |     def _load_from_manifest(\n    |         ^^^^^^^^^^^^^^^^^^^\n180 |         self, base_folder: str\n181 |     ) -> tuple[MarkdownLike, bool]:\n    |\n\nPLR0912 Too many branches (19 > 12)\n   --> x_cls_legatus_acta_schedae_x.py:179:9\n    |\n177 |         self._inner, self._has_pdf = self._load_from_manifest(base_folder)\n178 |\n179 |     def _load_from_manifest(\n    |         ^^^^^^^^^^^^^^^^^^^\n180 |         self, base_folder: str\n181 |     ) -> tuple[MarkdownLike, bool]:\n    |\n\nPLR0915 Too many statements (100 > 50)\n   --> x_cls_legatus_acta_schedae_x.py:179:9\n    |\n177 |         self._inner, self._has_pdf = self._load_from_manifest(base_folder)\n178 |\n179 |     def _load_from_manifest(\n    |         ^^^^^^^^^^^^^^^^^^^\n180 |         self, base_folder: str\n181 |     ) -> tuple[MarkdownLike, bool]:\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:185:13\n    |\n183 |         env_manifest = os.environ.get(\"X_MANIFEST_PATH\")\n184 |         candidates = [\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n    |             ^^^^^^^^^^^^\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:186:13\n    |\n184 |         candidates = [\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n    |             ^^^^^^^^^^^^\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n188 |             *([env_manifest] if env_manifest else []),\n    |\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:186:26\n    |\n184 |         candidates = [\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n    |                          ^^^^^^^^^^^^^^^\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n188 |             *([env_manifest] if env_manifest else []),\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:187:13\n    |\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n    |             ^^^^^^^^^^^^\n188 |             *([env_manifest] if env_manifest else []),\n189 |         ]\n    |\n\nPTH109 `os.getcwd()` should be replaced by `Path.cwd()`\n   --> x_cls_legatus_acta_schedae_x.py:187:26\n    |\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n    |                          ^^^^^^^^^\n188 |             *([env_manifest] if env_manifest else []),\n189 |         ]\n    |\nhelp: Replace with `Path.cwd()`\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `obj`\n   --> x_cls_legatus_acta_schedae_x.py:194:26\n    |\n192 |         cls_name: str | None = None\n193 |\n194 |         def extract(obj: Any) -> tuple[str | None, str | None]:\n    |                          ^^^\n195 |             if not isinstance(obj, dict):\n196 |                 return (None, None)\n    |\n\nFBT003 Boolean positional value in function call\n   --> x_cls_legatus_acta_schedae_x.py:210:42\n    |\n209 |         def _dbg(msg: str) -> None:\n210 |             if _truthy_env(\"X_MD_DEBUG\", False):\n    |                                          ^^^^^\n211 |                 print(f\"[MD] {msg}\")\n    |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n   --> x_cls_legatus_acta_schedae_x.py:215:36\n    |\n213 |         for path in candidates:\n214 |             try:\n215 |                 if not path or not os.path.isfile(path):\n    |                                    ^^^^^^^^^^^^^^\n216 |                     _dbg(f\"manifest not found: {path}\")\n217 |                     continue\n    |\nhelp: Replace with `Path(...).is_file()`\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_legatus_acta_schedae_x.py:219:22\n    |\n217 |                     continue\n218 |                 _dbg(f\"reading manifest: {path}\")\n219 |                 with open(path, encoding=\"utf-8\") as fh:\n    |                      ^^^^\n220 |                     data = json.load(fh)\n221 |                 if isinstance(data, list):\n    |\nhelp: Replace with `Path.open()`\n\nPLR2004 Magic value used in comparison, consider replacing `4` with a constant variable\n   --> x_cls_legatus_acta_schedae_x.py:225:46\n    |\n223 |                         if (\n224 |                             isinstance(item, (list, tuple))\n225 |                             and len(item) == 4\n    |                                              ^\n226 |                             and isinstance(item[3], dict)\n227 |                         ):\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:240:20\n    |\n238 |                     _dbg(f\"resolved adapter {mod_name}.{cls_name}\")\n239 |                     break\n240 |             except Exception as e:\n    |                    ^^^^^^^^^\n241 |                 errs.append(f\"{path}: {e}\")\n242 |                 _dbg(f\"error reading manifest {path}: {e}\")\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> x_cls_legatus_acta_schedae_x.py:249:13\n    |\n248 |         try:\n249 |             import importlib\n    |             ^^^^^^^^^^^^^^^^\n250 |\n251 |             mod = importlib.import_module(mod_name)\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:255:16\n    |\n253 |             inst: Any = klass()\n254 |             _dbg(f\"loaded adapter instance: {mod_name}.{cls_name}\")\n255 |         except Exception as e:\n    |                ^^^^^^^^^\n256 |             _dbg(f\"failed to load adapter {mod_name}.{cls_name}: {e}\")\n257 |             return (_FallbackMarkdown(), False)\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_legatus_acta_schedae_x.py:275:19\n    |\n273 |               html_func = html_reset\n274 |           if html_func is None:\n275 |               raise RuntimeError(\n    |  ___________________^\n276 | |                 \"Markdown maker lacks a usable to_html()/convert() interface\"\n277 | |             )\n    | |_____________^\n278 |\n279 |           # Build typed PDF function\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_legatus_acta_schedae_x.py:276:17\n    |\n274 |         if html_func is None:\n275 |             raise RuntimeError(\n276 |                 \"Markdown maker lacks a usable to_html()/convert() interface\"\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n277 |             )\n    |\nhelp: Assign to variable; remove string literal\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:288:24\n    |\n286 |                 try:\n287 |                     tp(html_str, out_path)\n288 |                 except Exception:\n    |                        ^^^^^^^^^\n289 |                     with tempfile.NamedTemporaryFile(\n290 |                         \"w\", delete=False, suffix=\".html\", encoding=\"utf-8\"\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_legatus_acta_schedae_x.py:297:25\n    |\n295 |                           tp(tmp_path, out_path)\n296 |                       finally:\n297 | /                         try:\n298 | |                             os.remove(tmp_path)\n299 | |                         except Exception:\n300 | |                             pass\n    | |________________________________^\n301 |\n302 |               pdf_func = _call_to_pdf\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nPTH107 `os.remove()` should be replaced by `Path.unlink()`\n   --> x_cls_legatus_acta_schedae_x.py:298:29\n    |\n296 |                     finally:\n297 |                         try:\n298 |                             os.remove(tmp_path)\n    |                             ^^^^^^^^^\n299 |                         except Exception:\n300 |                             pass\n    |\nhelp: Replace with `Path(...).unlink()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:299:25\n    |\n297 |                           try:\n298 |                               os.remove(tmp_path)\n299 | /                         except Exception:\n300 | |                             pass\n    | |________________________________^\n301 |\n302 |               pdf_func = _call_to_pdf\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:299:32\n    |\n297 |                         try:\n298 |                             os.remove(tmp_path)\n299 |                         except Exception:\n    |                                ^^^^^^^^^\n300 |                             pass\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_legatus_acta_schedae_x.py:317:21\n    |\n315 |                       exp(tmp_path, out_path)\n316 |                   finally:\n317 | /                     try:\n318 | |                         os.remove(tmp_path)\n319 | |                     except Exception:\n320 | |                         pass\n    | |____________________________^\n321 |\n322 |               pdf_func = export_pdf_html\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nPTH107 `os.remove()` should be replaced by `Path.unlink()`\n   --> x_cls_legatus_acta_schedae_x.py:318:25\n    |\n316 |                 finally:\n317 |                     try:\n318 |                         os.remove(tmp_path)\n    |                         ^^^^^^^^^\n319 |                     except Exception:\n320 |                         pass\n    |\nhelp: Replace with `Path(...).unlink()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:319:21\n    |\n317 |                       try:\n318 |                           os.remove(tmp_path)\n319 | /                     except Exception:\n320 | |                         pass\n    | |____________________________^\n321 |\n322 |               pdf_func = export_pdf_html\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:319:28\n    |\n317 |                     try:\n318 |                         os.remove(tmp_path)\n319 |                     except Exception:\n    |                            ^^^^^^^^^\n320 |                         pass\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_legatus_acta_schedae_x.py:338:27\n    |\n336 |             def to_pdf(self, html_str: str, out_path: str) -> None:\n337 |                 if self._p is None:\n338 |                     raise RuntimeError(\"PDF exporter not available\")\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n339 |                 self._p(html_str, out_path)\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_legatus_acta_schedae_x.py:338:40\n    |\n336 |             def to_pdf(self, html_str: str, out_path: str) -> None:\n337 |                 if self._p is None:\n338 |                     raise RuntimeError(\"PDF exporter not available\")\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n339 |                 self._p(html_str, out_path)\n    |\nhelp: Assign to variable; remove string literal\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:392:9\n    |\n390 |     def __init__(self, db_path: str) -> None:\n391 |         self.db_path = db_path\n392 |         os.makedirs(os.path.dirname(db_path), exist_ok=True)\n    |         ^^^^^^^^^^^\n393 |         # JSONL paths (append-only for easy inspection)\n394 |         data_dir = os.path.dirname(self.db_path)\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:392:21\n    |\n390 |     def __init__(self, db_path: str) -> None:\n391 |         self.db_path = db_path\n392 |         os.makedirs(os.path.dirname(db_path), exist_ok=True)\n    |                     ^^^^^^^^^^^^^^^\n393 |         # JSONL paths (append-only for easy inspection)\n394 |         data_dir = os.path.dirname(self.db_path)\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:394:20\n    |\n392 |         os.makedirs(os.path.dirname(db_path), exist_ok=True)\n393 |         # JSONL paths (append-only for easy inspection)\n394 |         data_dir = os.path.dirname(self.db_path)\n    |                    ^^^^^^^^^^^^^^^\n395 |         self.json_cards_path = os.path.join(data_dir, \"cards.jsonl\")\n396 |         self.json_actions_path = os.path.join(data_dir, \"actions.jsonl\")\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:395:32\n    |\n393 |         # JSONL paths (append-only for easy inspection)\n394 |         data_dir = os.path.dirname(self.db_path)\n395 |         self.json_cards_path = os.path.join(data_dir, \"cards.jsonl\")\n    |                                ^^^^^^^^^^^^\n396 |         self.json_actions_path = os.path.join(data_dir, \"actions.jsonl\")\n397 |         self._ensure_schema()\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:396:34\n    |\n394 |         data_dir = os.path.dirname(self.db_path)\n395 |         self.json_cards_path = os.path.join(data_dir, \"cards.jsonl\")\n396 |         self.json_actions_path = os.path.join(data_dir, \"actions.jsonl\")\n    |                                  ^^^^^^^^^^^^\n397 |         self._ensure_schema()\n    |\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_legatus_acta_schedae_x.py:443:18\n    |\n441 |     def _append_jsonl(self, path: str, obj: dict[str, Any]) -> None:\n442 |         try:\n443 |             with open(path, \"a\", encoding=\"utf-8\") as fh:\n    |                  ^^^^\n444 |                 fh.write(json.dumps(obj, ensure_ascii=False) + \"\\n\")\n445 |         except Exception:\n    |\nhelp: Replace with `Path.open()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:445:9\n    |\n443 |               with open(path, \"a\", encoding=\"utf-8\") as fh:\n444 |                   fh.write(json.dumps(obj, ensure_ascii=False) + \"\\n\")\n445 | /         except Exception:\n446 | |             # Best-effort JSON logging; do not block DB operations\n447 | |             pass\n    | |________________^\n448 |\n449 |       def insert_card(self, card: Notecard) -> None:\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:445:16\n    |\n443 |             with open(path, \"a\", encoding=\"utf-8\") as fh:\n444 |                 fh.write(json.dumps(obj, ensure_ascii=False) + \"\\n\")\n445 |         except Exception:\n    |                ^^^^^^^^^\n446 |             # Best-effort JSON logging; do not block DB operations\n447 |             pass\n    |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_legatus_acta_schedae_x.py:607:17\n    |\n605 |           if \"cards\" in payload:\n606 |               for c in payload[\"cards\"]:\n607 | /                 result.append(\n608 | |                     {\n609 | |                         \"front_md\": c.get(\"front_md\", \"\"),\n610 | |                         \"back_md\": c.get(\"back_md\"),\n611 | |                         \"tags\": list(\n612 | |                             set([*(global_tags), *(c.get(\"tags\", []) or [])])\n613 | |                         ),\n614 | |                     }\n615 | |                 )\n    | |_________________^\n616 |               return result\n617 |           if \"qa\" in payload:\n    |\nhelp: Replace for loop with list.extend\n\nC405 Unnecessary list literal (rewrite as a set literal)\n   --> x_cls_legatus_acta_schedae_x.py:612:29\n    |\n610 |                         \"back_md\": c.get(\"back_md\"),\n611 |                         \"tags\": list(\n612 |                             set([*(global_tags), *(c.get(\"tags\", []) or [])])\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n613 |                         ),\n614 |                     }\n    |\nhelp: Rewrite as a set literal\n\nC405 Unnecessary list literal (rewrite as a set literal)\n   --> x_cls_legatus_acta_schedae_x.py:655:24\n    |\n653 |                 front = f\"# Task\\n**{t.get('title','')}**\"\n654 |                 back = t.get(\"details\", \"\")\n655 |                 tags = set([*(global_tags), *(t.get(\"tags\", []) or [])])\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n656 |                 task_id = t.get(\"task_id\")\n657 |                 if task_id:\n    |\nhelp: Rewrite as a set literal\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_legatus_acta_schedae_x.py:700:17\n    |\n698 |           if \"appointments\" in payload:\n699 |               for a in payload[\"appointments\"]:\n700 | /                 result.append(\n701 | |                     {\n702 | |                         \"front_md\": mk_front(a),\n703 | |                         \"back_md\": mk_back(a),\n704 | |                         \"tags\": list(\n705 | |                             set([*(global_tags), *(a.get(\"tags\", []) or [])])\n706 | |                         ),\n707 | |                     }\n708 | |                 )\n    | |_________________^\n709 |               return result\n710 |           result.append(\n    |\nhelp: Replace for loop with list.extend\n\nC405 Unnecessary list literal (rewrite as a set literal)\n   --> x_cls_legatus_acta_schedae_x.py:705:29\n    |\n703 |                         \"back_md\": mk_back(a),\n704 |                         \"tags\": list(\n705 |                             set([*(global_tags), *(a.get(\"tags\", []) or [])])\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n706 |                         ),\n707 |                     }\n    |\nhelp: Rewrite as a set literal\n\nPTH100 `os.path.abspath()` should be replaced by `Path.resolve()`\n   --> x_cls_legatus_acta_schedae_x.py:741:24\n    |\n739 |         self.base_dir = base_dir or _base_dir_default()\n740 |         # All output under this folder to satisfy co-location requirement\n741 |         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n    |                        ^^^^^^^^^^^^^^^\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n    |\nhelp: Replace with `Path(...).resolve()`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:741:40\n    |\n739 |         self.base_dir = base_dir or _base_dir_default()\n740 |         # All output under this folder to satisfy co-location requirement\n741 |         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n    |                                        ^^^^^^^^^^^^^^^\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:742:24\n    |\n740 |         # All output under this folder to satisfy co-location requirement\n741 |         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n    |                        ^^^^^^^^^^^^\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:743:9\n    |\n741 |         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n    |         ^^^^^^^^^^^\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n745 |         os.makedirs(self.media_dir, exist_ok=True)\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:744:26\n    |\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n    |                          ^^^^^^^^^^^^\n745 |         os.makedirs(self.media_dir, exist_ok=True)\n746 |         self.db_path = db_path or os.path.join(\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:745:9\n    |\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n745 |         os.makedirs(self.media_dir, exist_ok=True)\n    |         ^^^^^^^^^^^\n746 |         self.db_path = db_path or os.path.join(\n747 |             self.pkg_dir, \"data\", \"cards.db\"\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:746:35\n    |\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n745 |         os.makedirs(self.media_dir, exist_ok=True)\n746 |         self.db_path = db_path or os.path.join(\n    |                                   ^^^^^^^^^^^^\n747 |             self.pkg_dir, \"data\", \"cards.db\"\n748 |         )\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:749:9\n    |\n747 |             self.pkg_dir, \"data\", \"cards.db\"\n748 |         )\n749 |         os.makedirs(os.path.dirname(self.db_path), exist_ok=True)\n    |         ^^^^^^^^^^^\n750 |         self.storage = Storage(self.db_path)\n751 |         # Prefer base_dir for manifest lookup; still searches package/CWD/env\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:749:21\n    |\n747 |             self.pkg_dir, \"data\", \"cards.db\"\n748 |         )\n749 |         os.makedirs(os.path.dirname(self.db_path), exist_ok=True)\n    |                     ^^^^^^^^^^^^^^^\n750 |         self.storage = Storage(self.db_path)\n751 |         # Prefer base_dir for manifest lookup; still searches package/CWD/env\n    |\nhelp: Replace with `Path(...).parent`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:771:20\n    |\n769 |             try:\n770 |                 return _to_inches(float(val), unit)\n771 |             except Exception:\n    |                    ^^^^^^^^^\n772 |                 return 0.0\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:885:17\n    |\n883 |                   try:\n884 |                       return max(0.0, _to_inches(float(val), unit))\n885 | /                 except Exception:\n886 | |                     pass\n    | |________________________^\n887 |           return 0.25 if sheet is not None else 0.0\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:885:24\n    |\n883 |                 try:\n884 |                     return max(0.0, _to_inches(float(val), unit))\n885 |                 except Exception:\n    |                        ^^^^^^^^^\n886 |                     pass\n887 |         return 0.25 if sheet is not None else 0.0\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:912:20\n    |\n910 |             try:\n911 |                 return max(0.0, _to_inches(float(val), unit))\n912 |             except Exception:\n    |                    ^^^^^^^^^\n913 |                 return default\n    |\n\nSIM108 Use ternary operator `s = \"3x5\" if not spec else str(spec).strip().lower()` instead of `if`-`else`-block\n   --> x_cls_legatus_acta_schedae_x.py:933:9\n    |\n931 |       # --- size parsing (restored) ---\n932 |       def _parse_size_spec(self, spec: str) -> tuple[float, float]:\n933 | /         if not spec:\n934 | |             s = \"3x5\"\n935 | |         else:\n936 | |             s = str(spec).strip().lower()\n    | |_________________________________________^\n937 |\n938 |           # Parse using existing flexible logic, then hard-restrict.\n    |\nhelp: Replace `if`-`else`-block with `s = \"3x5\" if not spec else str(spec).strip().lower()`\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_legatus_acta_schedae_x.py:978:15\n    |\n976 |               return (6.0, 4.0)\n977 |\n978 |           raise ValueError(\n    |  _______________^\n979 | |             f\"Only 3x5 and 4x6 sizes are supported (got: {w:.2f}x{h:.2f} in)\"\n980 | |         )\n    | |_________^\n981 |\n982 |       def make(\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> x_cls_legatus_acta_schedae_x.py:979:13\n    |\n978 |         raise ValueError(\n979 |             f\"Only 3x5 and 4x6 sizes are supported (got: {w:.2f}x{h:.2f} in)\"\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n980 |         )\n    |\nhelp: Assign to variable; remove f-string literal\n\nPLR0913 Too many arguments in function definition (8 > 5)\n   --> x_cls_legatus_acta_schedae_x.py:982:9\n    |\n980 |         )\n981 |\n982 |     def make(\n    |         ^^^^\n983 |         self,\n984 |         kind: str,\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n    --> x_cls_legatus_acta_schedae_x.py:1053:20\n     |\n1051 |         for c in cards:\n1052 |             html_out = self._render_card_html(c, sheet=sheet)\n1053 |             path = os.path.join(self.out_dir, self._output_filename(c, \"html\"))\n     |                    ^^^^^^^^^^^^\n1054 |             with open(path, \"w\", encoding=\"utf-8\") as f:\n1055 |                 f.write(html_out)\n     |\n\nPTH123 `open()` should be replaced by `Path.open()`\n    --> x_cls_legatus_acta_schedae_x.py:1054:18\n     |\n1052 |             html_out = self._render_card_html(c, sheet=sheet)\n1053 |             path = os.path.join(self.out_dir, self._output_filename(c, \"html\"))\n1054 |             with open(path, \"w\", encoding=\"utf-8\") as f:\n     |                  ^^^^\n1055 |                 f.write(html_out)\n1056 |             paths.append(path)\n     |\nhelp: Replace with `Path.open()`\n\nC901 `export_pdf` is too complex (14 > 10)\n    --> x_cls_legatus_acta_schedae_x.py:1059:9\n     |\n1057 |         return paths\n1058 |\n1059 |     def export_pdf(self, cards: Iterable[Notecard]) -> list[str]:\n     |         ^^^^^^^^^^\n1060 |         \"\"\"\n1061 |         Export grouped duplex PDFs by size:\n     |\n\nE501 Line too long (91 > 88)\n    --> x_cls_legatus_acta_schedae_x.py:1065:89\n     |\n1063 |             * fronts PDF: all odd-indexed cards (in given order)\n1064 |             * backs  PDF: all even-indexed cards (in given order)\n1065 |         Each page contains the front content of a single card. Card back_md is not included\n     |                                                                                         ^^^\n1066 |         in duplex PDFs to support simple double-sided printing.\n1067 |         \"\"\"\n     |\n\nFBT003 Boolean positional value in function call\n    --> x_cls_legatus_acta_schedae_x.py:1071:36\n     |\n1069 |         sheet = self._sheet_size()\n1070 |         force_wk = sheet is not None or _truthy_env(\n1071 |             \"X_FORCE_WKHTMLTOPDF\", False\n     |                                    ^^^^^\n1072 |         )\n     |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n    --> x_cls_legatus_acta_schedae_x.py:1133:29\n     |\n1131 | </html>\n1132 | \"\"\"\n1133 |                 html_path = os.path.join(\n     |                             ^^^^^^^^^^^^\n1134 |                     self.out_dir, f\"duplex_{size_key}_{label}.html\"\n1135 |                 )\n     |\n\nPTH123 `open()` should be replaced by `Path.open()`\n    --> x_cls_legatus_acta_schedae_x.py:1136:22\n     |\n1134 |                     self.out_dir, f\"duplex_{size_key}_{label}.html\"\n1135 |                 )\n1136 |                 with open(html_path, \"w\", encoding=\"utf-8\") as fh:\n     |                      ^^^^\n1137 |                     fh.write(doc_html)\n     |\nhelp: Replace with `Path.open()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n    --> x_cls_legatus_acta_schedae_x.py:1140:28\n     |\n1139 |                 # Export to PDF\n1140 |                 pdf_path = os.path.join(\n     |                            ^^^^^^^^^^^^\n1141 |                     self.out_dir, f\"duplex_{size_key}_{label}.pdf\"\n1142 |                 )\n     |\n\nBLE001 Do not catch blind exception: `Exception`\n    --> x_cls_legatus_acta_schedae_x.py:1151:28\n     |\n1149 |                     try:\n1150 |                         self.md.to_pdf(doc_html, pdf_path)\n1151 |                     except Exception as e_md:\n     |                            ^^^^^^^^^\n1152 |                         try:\n1153 |                             self._pdf.to_pdf(\n     |\n\nBLE001 Do not catch blind exception: `Exception`\n    --> x_cls_legatus_acta_schedae_x.py:1160:32\n     |\n1158 |                                 dpi=300,\n1159 |                             )\n1160 |                         except Exception as e_bin:\n     |                                ^^^^^^^^^\n1161 |                             raise RuntimeError(\n1162 |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n     |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n    --> x_cls_legatus_acta_schedae_x.py:1161:29\n     |\n1159 |                               )\n1160 |                           except Exception as e_bin:\n1161 | /                             raise RuntimeError(\n1162 | |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n1163 | |                             )\n     | |_____________________________^\n1164 |                   else:\n1165 |                       try:\n     |\n\nTRY003 Avoid specifying long messages outside the exception class\n    --> x_cls_legatus_acta_schedae_x.py:1161:35\n     |\n1159 |                               )\n1160 |                           except Exception as e_bin:\n1161 |                               raise RuntimeError(\n     |  ___________________________________^\n1162 | |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n1163 | |                             )\n     | |_____________________________^\n1164 |                   else:\n1165 |                       try:\n     |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n    --> x_cls_legatus_acta_schedae_x.py:1162:33\n     |\n1160 |                         except Exception as e_bin:\n1161 |                             raise RuntimeError(\n1162 |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1163 |                             )\n1164 |                 else:\n     |\nhelp: Assign to variable; remove f-string literal\n\nE501 Line too long (104 > 88)\n    --> x_cls_legatus_acta_schedae_x.py:1162:89\n     |\n1160 |                         except Exception as e_bin:\n1161 |                             raise RuntimeError(\n1162 |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n     |                                                                                         ^^^^^^^^^^^^^^^^\n1163 |                             )\n1164 |                 else:\n     |\n\nBLE001 Do not catch blind exception: `Exception`\n    --> x_cls_legatus_acta_schedae_x.py:1173:28\n     |\n1171 |                             dpi=300,\n1172 |                         )\n1173 |                     except Exception as e_bin:\n     |                            ^^^^^^^^^\n1174 |                         raise RuntimeError(\n1175 |                             f\"PDF export failed (wkhtmltopdf error: {e_bin})\"\n     |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n    --> x_cls_legatus_acta_schedae_x.py:1174:25\n     |\n1172 |                           )\n1173 |                       except Exception as e_bin:\n1174 | /                         raise RuntimeError(\n1175 | |                             f\"PDF export failed (wkhtmltopdf error: {e_bin})\"\n1176 | |                         )\n     | |_________________________^\n1177 |\n1178 |                   paths_local.append(pdf_path)\n     |\n\nTRY003 Avoid specifying long messages outside the exception class\n    --> x_cls_legatus_acta_schedae_x.py:1174:31\n     |\n1172 |                           )\n1173 |                       except Exception as e_bin:\n1174 |                           raise RuntimeError(\n     |  _______________________________^\n1175 | |                             f\"PDF export failed (wkhtmltopdf error: {e_bin})\"\n1176 | |                         )\n     | |_________________________^\n1177 |\n1178 |                   paths_local.append(pdf_path)\n     |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n    --> x_cls_legatus_acta_schedae_x.py:1175:29\n     |\n1173 |                     except Exception as e_bin:\n1174 |                         raise RuntimeError(\n1175 |                             f\"PDF export failed (wkhtmltopdf error: {e_bin})\"\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1176 |                         )\n     |\nhelp: Assign to variable; remove f-string literal\n\nFBT003 Boolean positional value in function call\n    --> x_cls_legatus_acta_schedae_x.py:1212:58\n     |\n1210 |             code_text = f\"NCX:{c.id[:8].upper()}\"\n1211 |\n1212 |         debug_frame = _truthy_env(\"X_PRINT_DEBUG_FRAME\", False)\n     |                                                          ^^^^^\n1213 |         border_css = (\n1214 |             \"5px dashed #e33\" if debug_frame else \"5px solid #000\"\n     |\n\nE501 Line too long (190 > 88)\n    --> x_cls_legatus_acta_schedae_x.py:1262:89\n     |\n1260 | \u00e2\u20ac\u00a6\n1261 | \u00e2\u20ac\u00a6\n1262 | \u00e2\u20ac\u00a6dding: 2px 6px; border-radius: 6px; font-size: 10px; background: #eef2f7; color: #334; border: 1px solid #ccd5e0; }}\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1263 | \u00e2\u20ac\u00a6\n1264 | \u00e2\u20ac\u00a6\n     |\n\nE501 Line too long (95 > 88)\n    --> x_cls_legatus_acta_schedae_x.py:1273:89\n     |\n1271 |             .content {{ font-size: 14px; line-height: 1.35; }}\n1272 |             .footer-tags {{\n1273 |                 position: absolute; left: 0.25in; bottom: 0.15in; font-size: 10px; color: #666;\n     |                                                                                         ^^^^^^^\n1274 |             }}\n1275 |             .page-break {{ page-break-after: always; }}\n     |\n\nFLY002 Consider `f\"{b1}{b2}{b3}{b4}\"` instead of string join\n    --> x_cls_legatus_acta_schedae_x.py:1351:16\n     |\n1349 |         b3 = f'<span class=\"badge\">v{html.escape(ver)}</span>' if ver else \"\"\n1350 |         b4 = f'<span class=\"badge\">{html.escape(n)}</span>' if n else \"\"\n1351 |         return \"\".join([b1, b2, b3, b4])\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^\n1352 |\n1353 |     def _qr_data_uri(self, payload: str) -> str:\n     |\nhelp: Replace with `f\"{b1}{b2}{b3}{b4}\"`\n\nTRY003 Avoid specifying long messages outside the exception class\n    --> x_cls_legatus_acta_schedae_x.py:1356:19\n     |\n1354 |         # Guard for optional dependency; helps type-checkers and runtime safety\n1355 |         if qrcode is None:\n1356 |             raise RuntimeError(\"QR code generation not available\")\n     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1357 |         img = qrcode.make(payload)\n1358 |         buf = io.BytesIO()\n     |\n\nEM101 Exception must not use a string literal, assign to variable first\n    --> x_cls_legatus_acta_schedae_x.py:1356:32\n     |\n1354 |         # Guard for optional dependency; helps type-checkers and runtime safety\n1355 |         if qrcode is None:\n1356 |             raise RuntimeError(\"QR code generation not available\")\n     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1357 |         img = qrcode.make(payload)\n1358 |         buf = io.BytesIO()\n     |\nhelp: Assign to variable; remove string literal\n\nERA001 Found commented-out code\n    --> x_cls_legatus_acta_schedae_x.py:1373:5\n     |\n1371 |     maker.set_print_shift(y_mm=4)\n1372 |     # Example horizontal tweak (uncomment to nudge right 2mm):\n1373 |     # maker.set_print_shift(x_mm=2)\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1374 |\n1375 |     # Flashcards set with series metadata\n     |\nhelp: Remove commented-out code\n\nC901 `_ncx_set_print_shift` is too complex (12 > 10)\n    --> x_cls_legatus_acta_schedae_x.py:1451:9\n     |\n1449 | if not hasattr(x_cls_legatus_acta_schedae_x, \"set_print_shift\"):\n1450 |\n1451 |     def _ncx_set_print_shift(\n     |         ^^^^^^^^^^^^^^^^^^^^\n1452 |         self,\n1453 |         *,\n     |\n\nPLR0913 Too many arguments in function definition (6 > 5)\n    --> x_cls_legatus_acta_schedae_x.py:1451:9\n     |\n1449 | if not hasattr(x_cls_legatus_acta_schedae_x, \"set_print_shift\"):\n1450 |\n1451 |     def _ncx_set_print_shift(\n     |         ^^^^^^^^^^^^^^^^^^^^\n1452 |         self,\n1453 |         *,\n     |\n\nPLR0912 Too many branches (14 > 12)\n    --> x_cls_legatus_acta_schedae_x.py:1451:9\n     |\n1449 | if not hasattr(x_cls_legatus_acta_schedae_x, \"set_print_shift\"):\n1450 |\n1451 |     def _ncx_set_print_shift(\n     |         ^^^^^^^^^^^^^^^^^^^^\n1452 |         self,\n1453 |         *,\n     |\n\nANN001 Missing type annotation for function argument `self`\n    --> x_cls_legatus_acta_schedae_x.py:1452:9\n     |\n1451 |     def _ncx_set_print_shift(\n1452 |         self,\n     |         ^^^^\n1453 |         *,\n1454 |         x_mm: float | None = None,\n     |\n\nANN001 Missing type annotation for function argument `self`\n    --> x_cls_legatus_acta_schedae_x.py:1487:30\n     |\n1485 |                 self.shift_y_in += yv  # type: ignore[attr-defined]\n1486 |\n1487 |     def _ncx_get_print_shift(self) -> tuple[float, float]:\n     |                              ^^^^\n1488 |         return (\n1489 |             getattr(self, \"shift_x_in\", 0.0),\n     |\n\nPGH003 Use specific rule codes when ignoring type issues\n    --> x_cls_legatus_acta_schedae_x.py:1493:74\n     |\n1491 |         )\n1492 |\n1493 |     x_cls_legatus_acta_schedae_x.set_print_shift = _ncx_set_print_shift  # type: ignore\n     |                                                                          ^^^^^^^^^^^^^^\n1494 |     x_cls_legatus_acta_schedae_x.get_print_shift = _ncx_get_print_shift  # type: ignore\n     |\n\nPGH003 Use specific rule codes when ignoring type issues\n    --> x_cls_legatus_acta_schedae_x.py:1494:74\n     |\n1493 |     x_cls_legatus_acta_schedae_x.set_print_shift = _ncx_set_print_shift  # type: ignore\n1494 |     x_cls_legatus_acta_schedae_x.get_print_shift = _ncx_get_print_shift  # type: ignore\n     |                                                                          ^^^^^^^^^^^^^^\n     |\n\nFound 869 errors.\nNo fixes available (334 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_fix",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "black",
                ".",
                "--line-length",
                "88",
                "--target-version",
                "py311",
                "--check",
                "--diff"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff",
            "cwd": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "duration_seconds": 2.681439900014084,
            "ended_at": "2025-10-08T12:48:52.480755+00:00",
            "exit": 1,
            "repo": "x_legatus_acta_schedae_x",
            "repo_hash": "8b9bd8670f31639839d13df034bf4fa2be0969f83cfe928151b54427786ff2a8",
            "repo_path": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "started_at": "2025-10-08T12:48:49.799319+00:00",
            "stderr": "would reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\events.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_briefing_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\review.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\automation_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\card_action_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_guidance_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\plugin_bus.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\search_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\collaboration_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\task_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\logging.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\di.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\scheduler\\apscheduler_adapter.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\review\\json_repository.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\telemetry.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\config.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\calendar_sync.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\controller.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\ai_assistant.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\app.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py\nwould reformat C:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n40 files would be reformatted, 37 files would be left unchanged.\n",
            "stdout": "--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\events.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\events.py\t2025-10-08 12:48:50.427176+00:00\n@@ -60,13 +60,11 @@\n \n class EventDispatcher:\n     def __init__(self) -> None:\n         self._subs: dict[type[Any], list[EventSubscriber]] = {}\n \n-    def subscribe(\n-        self, event_type: type[Any], handler: EventSubscriber\n-    ) -> None:\n+    def subscribe(self, event_type: type[Any], handler: EventSubscriber) -> None:\n         self._subs.setdefault(event_type, []).append(handler)\n \n     def publish(self, event: DomainEvent) -> None:\n         for etype, handlers in self._subs.items():\n             if isinstance(event, etype):\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_briefing_service.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_briefing_service.py\t2025-10-08 12:48:50.482474+00:00\n@@ -44,11 +44,9 @@\n             now=moment,\n             limit=limit,\n             include_completed=include_completed,\n             tags=tags,\n         )\n-        return AIBriefing(\n-            generated_at=moment, summary=summary, guidance=list(guidance)\n-        )\n+        return AIBriefing(generated_at=moment, summary=summary, guidance=list(guidance))\n \n \n __all__ = [\"AIBriefing\", \"AIBriefingService\"]\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\review.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\domain\\review.py\t2025-10-08 12:48:50.552706+00:00\n@@ -50,20 +50,16 @@\n         next_due = datetime.fromisoformat(data[\"next_due\"])\n         context_candidate = data.get(\"context\")\n         context_value: dict[str, Any]\n         if isinstance(context_candidate, Mapping):\n             context_mapping = cast(\"Mapping[object, Any]\", context_candidate)\n-            context_value = {\n-                str(key): value for key, value in context_mapping.items()\n-            }\n+            context_value = {str(key): value for key, value in context_mapping.items()}\n         else:\n             context_value = {}\n         source_raw = data.get(\"source\")\n         source_value = (\n-            str(source_raw)\n-            if isinstance(source_raw, str) and source_raw\n-            else \"manual\"\n+            str(source_raw) if isinstance(source_raw, str) and source_raw else \"manual\"\n         )\n         return ReviewHistoryEntry(\n             reviewed_at=_ensure_tzaware(reviewed_at),\n             quality=int(data[\"quality\"]),\n             next_due=_ensure_tzaware(next_due),\n@@ -100,13 +96,11 @@\n         return {\n             \"task_id\": self.task_id,\n             \"created_at\": self.created_at.isoformat(),\n             \"due_at\": self.due_at.isoformat(),\n             \"last_reviewed_at\": (\n-                self.last_reviewed_at.isoformat()\n-                if self.last_reviewed_at\n-                else None\n+                self.last_reviewed_at.isoformat() if self.last_reviewed_at else None\n             ),\n             \"repetitions\": self.repetitions,\n             \"interval_days\": self.interval_days,\n             \"ease_factor\": self.ease_factor,\n             \"history\": [entry.to_dict() for entry in self.history],\n@@ -117,12 +111,11 @@\n     def from_dict(data: dict[str, Any]) -> ReviewRecord:\n         created_at = datetime.fromisoformat(data[\"created_at\"])\n         due_at = datetime.fromisoformat(data[\"due_at\"])\n         last_reviewed = data.get(\"last_reviewed_at\")\n         history_entries = [\n-            ReviewHistoryEntry.from_dict(entry)\n-            for entry in data.get(\"history\", [])\n+            ReviewHistoryEntry.from_dict(entry) for entry in data.get(\"history\", [])\n         ]\n         return ReviewRecord(\n             task_id=data[\"task_id\"],\n             created_at=_ensure_tzaware(created_at),\n             due_at=_ensure_tzaware(due_at),\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\automation_service.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\automation_service.py\t2025-10-08 12:48:50.561931+00:00\n@@ -31,13 +31,11 @@\n         ai_service: AIService | None = None,\n     ) -> None:\n         self._dispatcher = dispatcher\n         self._task_repository = task_repository\n         self._webhook_client = webhook_client\n-        self._enabled = webhook_client is not None and bool(\n-            webhook_client.endpoints\n-        )\n+        self._enabled = webhook_client is not None and bool(webhook_client.endpoints)\n         self._telemetry = telemetry\n         self._ai_service = ai_service\n         if self._enabled:\n             dispatcher.subscribe(events.CardScanned, self._on_card_scanned)\n \n@@ -79,13 +77,11 @@\n                     \"delivered\": delivered,\n                     \"failed\": failures,\n                 },\n             )\n \n-    def _task_payload(\n-        self, event: events.CardScanned\n-    ) -> Mapping[str, Any] | None:\n+    def _task_payload(self, event: events.CardScanned) -> Mapping[str, Any] | None:\n         if not event.task_id:\n             return None\n         task = self._task_repository.get(event.task_id)\n         if task is None:\n             return None\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_service.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\ai_service.py\t2025-10-08 12:48:50.588644+00:00\n@@ -34,13 +34,11 @@\n         self, repository: ITaskRepository, dispatcher: EventDispatcher\n     ) -> None:\n         self._repository = repository\n         self._dispatcher = dispatcher\n \n-    def summarize(\n-        self, *, now: datetime | None = None, top_n: int = 3\n-    ) -> TaskSummary:\n+    def summarize(self, *, now: datetime | None = None, top_n: int = 3) -> TaskSummary:\n         snapshot = list(self._repository.list())\n         moment = now or datetime.now(UTC)\n         pending = sum(1 for task in snapshot if task.status != \"completed\")\n         completed = sum(1 for task in snapshot if task.status == \"completed\")\n         overdue = sum(\n@@ -71,13 +69,11 @@\n         if \"meeting\" in lowered or \"meet\" in lowered:\n             base_prompts.append(\n                 \"Prepare a meeting recap with action items for attendees.\"\n             )\n         if \"write\" in lowered or \"draft\" in lowered:\n-            base_prompts.append(\n-                \"Outline the key sections to polish the written draft.\"\n-            )\n+            base_prompts.append(\"Outline the key sections to polish the written draft.\")\n         if \"review\" in lowered:\n             base_prompts.append(\n                 \"List the checklist items to complete the review efficiently.\"\n             )\n         if not base_prompts:\n@@ -115,13 +111,11 @@\n     ) -> list[UpcomingTask]:\n         horizon = moment + timedelta(days=7)\n         candidates = [\n             task\n             for task in tasks\n-            if task.status != \"completed\"\n-            and task.due\n-            and moment <= task.due <= horizon\n+            if task.status != \"completed\" and task.due and moment <= task.due <= horizon\n         ]\n         candidates.sort(key=lambda t: (t.due, t.priority or \"\", t.created))\n         upcoming_rows: list[UpcomingTask] = []\n         for task in candidates[:count]:\n             upcoming_rows.append(\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\card_action_service.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\card_action_service.py\t2025-10-08 12:48:50.591326+00:00\n@@ -92,18 +92,14 @@\n             tags=list(card.tags),\n             task=update_result,\n             metadata=meta,\n         )\n \n-    def _apply_task_update(\n-        self, card: Notecard, action: str\n-    ) -> TaskUpdateResult:\n+    def _apply_task_update(self, card: Notecard, action: str) -> TaskUpdateResult:\n         task_id = self._extract_task_id(card)\n         if not task_id or action == \"none\":\n-            return TaskUpdateResult(\n-                task_id=task_id, action=None, updated=False\n-            )\n+            return TaskUpdateResult(task_id=task_id, action=None, updated=False)\n \n         if action == \"complete\":\n             try:\n                 task = self._task_service.complete_task(task_id)\n             except KeyError:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_guidance_service.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_guidance_service.py\t2025-10-08 12:48:50.596027+00:00\n@@ -64,13 +64,11 @@\n             }.get(priority, 0.5)\n             score += priority_boost\n             reasons.append(f\"priority {priority}\")\n \n         if task.due:\n-            delta_days = (\n-                task.due - item.reference_time\n-            ).total_seconds() / 86400.0\n+            delta_days = (task.due - item.reference_time).total_seconds() / 86400.0\n             if delta_days <= 0:\n                 score += 1.25\n                 reasons.append(\"task due\")\n             elif delta_days < 2:\n                 score += 0.75\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\plugin_bus.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\plugin_bus.py\t2025-10-08 12:48:50.636711+00:00\n@@ -74,13 +74,11 @@\n \n     @property\n     def ai_service(self) -> AIService:\n         return self._ai_service\n \n-    def subscribe(\n-        self, event_type: DomainEventType, handler: EventSubscriber\n-    ) -> None:\n+    def subscribe(self, event_type: DomainEventType, handler: EventSubscriber) -> None:\n         self._dispatcher.subscribe(event_type, handler)\n \n \n class PluginBus:\n     def __init__(\n@@ -124,13 +122,11 @@\n                 version=getattr(plugin, \"version\", \"0.0.0\"),\n                 module=plugin.__class__.__module__,\n                 spec=spec,\n             )\n             self._plugins.append(loaded)\n-            self._logger.info(\n-                \"Loaded plugin %s %s\", loaded.name, loaded.version\n-            )\n+            self._logger.info(\"Loaded plugin %s %s\", loaded.name, loaded.version)\n             self._telemetry.track(\n                 \"plugin.loaded\",\n                 {\n                     \"name\": loaded.name,\n                     \"version\": loaded.version,\n@@ -172,13 +168,11 @@\n             plugin_instance = plugin_obj()\n         else:\n             plugin_instance = plugin_obj\n \n         if not hasattr(plugin_instance, \"setup\"):\n-            self._logger.error(\n-                \"Plugin %s is missing required setup method\", spec\n-            )\n+            self._logger.error(\"Plugin %s is missing required setup method\", spec)\n             return None\n \n         return cast(\"Plugin\", plugin_instance)\n \n     @property\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\search_service.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\search_service.py\t2025-10-08 12:48:50.663092+00:00\n@@ -37,13 +37,11 @@\n         text: str | None = None,\n         status: str | None = None,\n         tags: Sequence[str] | None = None,\n         limit: int | None = None,\n     ) -> list[Task]:\n-        filters = SearchFilters(\n-            text=text, status=status, tags=tags, limit=limit\n-        )\n+        filters = SearchFilters(text=text, status=status, tags=tags, limit=limit)\n         return self._index.search(\n             text=filters.text,\n             status=filters.status,\n             tags=filters.tags,\n             limit=filters.limit,\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\collaboration_service.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\collaboration_service.py\t2025-10-08 12:48:50.683356+00:00\n@@ -45,13 +45,11 @@\n         *,\n         include_completed: bool = True,\n         limit: int | None = None,\n     ) -> ExportResult:\n         tasks = list(\n-            self._select_tasks(\n-                include_completed=include_completed, limit=limit\n-            )\n+            self._select_tasks(include_completed=include_completed, limit=limit)\n         )\n         payload = json.dumps(\n             [self._task_to_dict(task) for task in tasks], default=str\n         ).encode(\"utf-8\")\n         salt = os.urandom(16)\n@@ -85,13 +83,11 @@\n             raise ValueError(\"Malformed sync bundle\")\n         salt = base64.b64decode(salt_b64)\n         decrypted = self._decrypt(ciphertext.encode(\"utf-8\"), passphrase, salt)\n         try:\n             records = json.loads(decrypted.decode(\"utf-8\"))\n-        except (\n-            json.JSONDecodeError\n-        ) as exc:  # pragma: no cover - defensive guard\n+        except json.JSONDecodeError as exc:  # pragma: no cover - defensive guard\n             raise ValueError(\"Unable to decode sync payload\") from exc\n         imported_tasks: list[Task] = []\n         for record in records:\n             task = self._dict_to_task(record)\n             existing = self._repository.get(task.id)\n@@ -99,13 +95,11 @@\n                 continue\n             self._repository.save(task)\n             imported_tasks.append(task)\n         if imported_tasks:\n             self._dispatcher.publish(\n-                events.TasksImported(\n-                    tasks=tuple(imported_tasks), source=str(src_path)\n-                )\n+                events.TasksImported(tasks=tuple(imported_tasks), source=str(src_path))\n             )\n         return imported_tasks\n \n     def _select_tasks(\n         self,\n@@ -159,26 +153,20 @@\n         created = (\n             datetime.fromisoformat(created_raw)\n             if isinstance(created_raw, str)\n             else datetime.now(UTC)\n         )\n-        due = (\n-            datetime.fromisoformat(due_raw)\n-            if isinstance(due_raw, str)\n-            else None\n-        )\n+        due = datetime.fromisoformat(due_raw) if isinstance(due_raw, str) else None\n         description = str(data.get(\"description\", \"\"))\n         status = str(data.get(\"status\", \"pending\"))\n         priority = data.get(\"priority\")\n         priority_value = str(priority) if isinstance(priority, str) else None\n         tags_raw = data.get(\"tags\")\n         tags_value: Sequence[str]\n         if isinstance(tags_raw, list):\n             tags_value = [\n-                str(t)\n-                for t in cast(\"list[object]\", tags_raw)\n-                if isinstance(t, str)\n+                str(t) for t in cast(\"list[object]\", tags_raw) if isinstance(t, str)\n             ]\n         else:\n             tags_value = []\n         return Task(\n             id=str(data.get(\"id\", \"\")),\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py\t2025-10-08 12:48:50.704944+00:00\n@@ -40,13 +40,11 @@\n \n     @property\n     def endpoints(self) -> tuple[str, ...]:\n         return tuple(self._endpoints)\n \n-    def dispatch(\n-        self, event: str, payload: Mapping[str, Any]\n-    ) -> list[DispatchResult]:\n+    def dispatch(self, event: str, payload: Mapping[str, Any]) -> list[DispatchResult]:\n         if not self._endpoints:\n             return []\n         payload_dict: dict[str, Any] = dict(payload)\n         envelope: dict[str, Any] = {\n             \"event\": event,\n@@ -56,17 +54,13 @@\n         results: list[DispatchResult] = []\n         for url in self._endpoints:\n             try:\n                 response = self._client.post(url, json=envelope)\n             except httpx.HTTPError as exc:\n-                logger.warning(\n-                    \"Automation webhook dispatch failed\", exc_info=exc\n-                )\n+                logger.warning(\"Automation webhook dispatch failed\", exc_info=exc)\n                 results.append(\n-                    DispatchResult(\n-                        url=url, status_code=None, ok=False, error=str(exc)\n-                    )\n+                    DispatchResult(url=url, status_code=None, ok=False, error=str(exc))\n                 )\n                 continue\n             ok = 200 <= response.status_code < 300\n             if not ok:\n                 logger.warning(\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\task_service.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\task_service.py\t2025-10-08 12:48:50.718088+00:00\n@@ -7,13 +7,11 @@\n from ..domain.task import Task\n from ..ports.task_repo import ITaskRepository\n \n \n class TaskService:\n-    def __init__(\n-        self, repo: ITaskRepository, dispatcher: events.EventDispatcher\n-    ):\n+    def __init__(self, repo: ITaskRepository, dispatcher: events.EventDispatcher):\n         self._repo = repo\n         self._dispatcher = dispatcher\n \n     def add_task(\n         self,\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\logging.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\logging.py\t2025-10-08 12:48:50.745265+00:00\n@@ -30,17 +30,13 @@\n     \"processName\",\n }\n \n \n class StructuredFormatter(logging.Formatter):\n-    def format(\n-        self, record: logging.LogRecord\n-    ) -> str:  # pragma: no cover - formatters\n+    def format(self, record: logging.LogRecord) -> str:  # pragma: no cover - formatters\n         base: dict[str, Any] = {\n-            \"timestamp\": datetime.fromtimestamp(\n-                record.created, tz=UTC\n-            ).isoformat(),\n+            \"timestamp\": datetime.fromtimestamp(record.created, tz=UTC).isoformat(),\n             \"level\": record.levelname,\n             \"logger\": record.name,\n             \"message\": record.getMessage(),\n         }\n         for key, value in record.__dict__.items():\n@@ -61,10 +57,8 @@\n     handler = logging.StreamHandler()\n     if cfg.log_json:\n         handler.setFormatter(StructuredFormatter())\n     else:\n         handler.setFormatter(\n-            logging.Formatter(\n-                \"%(asctime)s %(levelname)s %(name)s :: %(message)s\"\n-            )\n+            logging.Formatter(\"%(asctime)s %(levelname)s %(name)s :: %(message)s\")\n         )\n     root.addHandler(handler)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\di.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\di.py\t2025-10-08 12:48:50.778090+00:00\n@@ -66,13 +66,11 @@\n         task_repository=repo,\n         dispatcher=dispatcher,\n     )\n     review_guidance_service = ReviewGuidanceService(review_service)\n     ai_service = AIService(repository=repo, dispatcher=dispatcher)\n-    ai_briefing_service = AIBriefingService(\n-        ai_service, review_guidance_service\n-    )\n+    ai_briefing_service = AIBriefingService(ai_service, review_guidance_service)\n     automation_service: AutomationService | None = None\n     if cfg.automation_webhooks:\n         automation_client = AutomationWebhookClient(cfg.automation_webhooks)\n         automation_service = AutomationService(\n             dispatcher,\n@@ -89,18 +87,14 @@\n         ai_service=ai_service,\n     )\n     loaded_plugins = plugin_bus.load(cfg.plugins)\n     scheduler_service: SchedulerService | None = None\n     card_storage = Storage(cfg.cards_db_path)\n-    collaboration_service = CollaborationService(\n-        repository=repo, dispatcher=dispatcher\n-    )\n+    collaboration_service = CollaborationService(repository=repo, dispatcher=dispatcher)\n     if cfg.scheduler_enabled:\n         try:\n-            scheduler_adapter = ApschedulerScheduler(\n-                timezone=cfg.scheduler_timezone\n-            )\n+            scheduler_adapter = ApschedulerScheduler(timezone=cfg.scheduler_timezone)\n         except RuntimeError:\n             logging.getLogger(\"x_legatus.scheduler\").warning(\n                 \"Scheduler disabled because APScheduler is not installed\"\n             )\n         else:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\scheduler\\apscheduler_adapter.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\scheduler\\apscheduler_adapter.py\t2025-10-08 12:48:50.788076+00:00\n@@ -8,19 +8,15 @@\n \n from ...core.ports.scheduler import IScheduler\n \n BackgroundScheduler: Any | None\n try:  # pragma: no cover - optional dependency\n-    background_module = importlib.import_module(\n-        \"apscheduler.schedulers.background\"\n-    )\n+    background_module = importlib.import_module(\"apscheduler.schedulers.background\")\n except Exception:  # pragma: no cover\n     BackgroundScheduler = None\n else:\n-    BackgroundScheduler = getattr(\n-        background_module, \"BackgroundScheduler\", None\n-    )\n+    BackgroundScheduler = getattr(background_module, \"BackgroundScheduler\", None)\n \n logger = logging.getLogger(__name__)\n \n \n class ApschedulerScheduler(IScheduler):\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\review\\json_repository.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\review\\json_repository.py\t2025-10-08 12:48:50.797823+00:00\n@@ -58,11 +58,9 @@\n             }\n             records[task_id] = ReviewRecord.from_dict(normalised)\n         return records\n \n     def _write(self, data: dict[str, ReviewRecord]) -> None:\n-        serialised = {\n-            task_id: record.to_dict() for task_id, record in data.items()\n-        }\n+        serialised = {task_id: record.to_dict() for task_id, record in data.items()}\n         tmp_path = self._path.with_suffix(self._path.suffix + \".tmp\")\n         tmp_path.write_text(json.dumps(serialised, indent=2), encoding=\"utf-8\")\n         tmp_path.replace(self._path)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py\t2025-10-08 12:48:50.805133+00:00\n@@ -85,16 +85,12 @@\n         if response.status_code == 404:\n             return None\n         response.raise_for_status()\n         return self._parse_download(response.json())\n \n-    def list_bundles(\n-        self, *, limit: int | None = None\n-    ) -> list[BundleUploadResult]:\n-        params: dict[str, Any] | None = (\n-            {\"limit\": limit} if limit is not None else None\n-        )\n+    def list_bundles(self, *, limit: int | None = None) -> list[BundleUploadResult]:\n+        params: dict[str, Any] | None = {\"limit\": limit} if limit is not None else None\n         response = self._client.get(\"/api/collab/bundles\", params=params)\n         response.raise_for_status()\n         payload = response.json()\n         if isinstance(payload, list):\n             payload_list: list[Any] = list(payload)\n@@ -104,16 +100,12 @@\n                     raise ValueError(\"Unexpected bundle list entry\")\n                 results.append(self._parse_upload(self._to_str_dict(item)))\n             return results\n         raise ValueError(\"Unexpected bundle list payload\")\n \n-    def prune_bundles(\n-        self, *, keep: int\n-    ) -> tuple[list[BundleUploadResult], int]:\n-        response = self._client.delete(\n-            \"/api/collab/bundles\", params={\"keep\": keep}\n-        )\n+    def prune_bundles(self, *, keep: int) -> tuple[list[BundleUploadResult], int]:\n+        response = self._client.delete(\"/api/collab/bundles\", params={\"keep\": keep})\n         response.raise_for_status()\n         payload = response.json()\n         if not isinstance(payload, Mapping):\n             raise ValueError(\"Unexpected prune payload\")\n         payload_mapping = cast(\"Mapping[str, Any]\", payload)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\telemetry.py\t2025-10-08 03:37:30.086900+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\telemetry.py\t2025-10-08 12:48:50.826460+00:00\n@@ -5,13 +5,11 @@\n from datetime import UTC, datetime\n from pathlib import Path\n \n \n class TelemetryClient:\n-    def __init__(\n-        self, enabled: bool, path: str | None, flush_seconds: int = 5\n-    ):\n+    def __init__(self, enabled: bool, path: str | None, flush_seconds: int = 5):\n         self._enabled = enabled and bool(path)\n         self._path = Path(path) if path else None\n         self._flush_seconds = flush_seconds\n         if self._enabled and self._path:\n             self._path.parent.mkdir(parents=True, exist_ok=True)\n@@ -22,13 +20,11 @@\n \n     @property\n     def path(self) -> Path | None:\n         return self._path\n \n-    def track(\n-        self, event: str, properties: Mapping[str, object] | None = None\n-    ) -> None:\n+    def track(self, event: str, properties: Mapping[str, object] | None = None) -> None:\n         if not self._enabled or not self._path:\n             return\n         entry: dict[str, object] = {\n             \"timestamp\": datetime.now(UTC).isoformat(),\n             \"event\": event,\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\config.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\config.py\t2025-10-08 12:48:50.839482+00:00\n@@ -72,18 +72,14 @@\n     plugins: list[str] = field(default_factory=_default_plugins)\n     scheduler_enabled: bool = field(default_factory=_default_scheduler_enabled)\n     scheduler_timezone: str | None = None\n     review_store_path: str = field(default_factory=_default_review_store_path)\n     cards_db_path: str = field(default_factory=_default_cards_db_path)\n-    collaboration_bundle_path: str = field(\n-        default_factory=_default_collab_path\n-    )\n+    collaboration_bundle_path: str = field(default_factory=_default_collab_path)\n     collaboration_hub_dir: str = field(default_factory=_default_collab_hub_dir)\n     collaboration_endpoint: str | None = None\n-    automation_webhooks: list[str] = field(\n-        default_factory=_default_automation_webhooks\n-    )\n+    automation_webhooks: list[str] = field(default_factory=_default_automation_webhooks)\n \n \n def load_config(env: Mapping[str, str] | None = None) -> AppConfig:\n     source_env: Mapping[str, str] = env if env is not None else os.environ\n     overrides: dict[str, str] = {}\n@@ -106,13 +102,11 @@\n \n     telemetry_path = source_env.get(\"LEGATUS_TELEMETRY_PATH\")\n     if telemetry_path:\n         overrides[\"LEGATUS_TELEMETRY_PATH\"] = telemetry_path\n     if telemetry_enabled and not telemetry_path:\n-        telemetry_path = str(\n-            (_package_root() / \"data\" / \"telemetry.jsonl\").resolve()\n-        )\n+        telemetry_path = str((_package_root() / \"data\" / \"telemetry.jsonl\").resolve())\n \n     log_json = _read_bool(source_env.get(\"LEGATUS_LOG_JSON\"), True)\n     if \"LEGATUS_LOG_JSON\" in source_env:\n         overrides[\"LEGATUS_LOG_JSON\"] = source_env[\"LEGATUS_LOG_JSON\"]\n \n@@ -145,25 +139,19 @@\n         \"LEGATUS_REVIEW_STORE\", _default_review_store_path()\n     )\n     if \"LEGATUS_REVIEW_STORE\" in source_env:\n         overrides[\"LEGATUS_REVIEW_STORE\"] = review_store_path\n \n-    cards_db_path = source_env.get(\n-        \"LEGATUS_CARDS_DB\", _default_cards_db_path()\n-    )\n+    cards_db_path = source_env.get(\"LEGATUS_CARDS_DB\", _default_cards_db_path())\n     if \"LEGATUS_CARDS_DB\" in source_env:\n         overrides[\"LEGATUS_CARDS_DB\"] = cards_db_path\n \n-    collab_bundle_path = source_env.get(\n-        \"LEGATUS_COLLAB_BUNDLE\", _default_collab_path()\n-    )\n+    collab_bundle_path = source_env.get(\"LEGATUS_COLLAB_BUNDLE\", _default_collab_path())\n     if \"LEGATUS_COLLAB_BUNDLE\" in source_env:\n         overrides[\"LEGATUS_COLLAB_BUNDLE\"] = collab_bundle_path\n \n-    collab_hub_dir = source_env.get(\n-        \"LEGATUS_COLLAB_HUB_DIR\", _default_collab_hub_dir()\n-    )\n+    collab_hub_dir = source_env.get(\"LEGATUS_COLLAB_HUB_DIR\", _default_collab_hub_dir())\n     if \"LEGATUS_COLLAB_HUB_DIR\" in source_env:\n         overrides[\"LEGATUS_COLLAB_HUB_DIR\"] = collab_hub_dir\n \n     collab_endpoint = source_env.get(\"LEGATUS_COLLAB_ENDPOINT\")\n     if collab_endpoint:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py\t2025-10-08 12:48:50.856892+00:00\n@@ -90,19 +90,15 @@\n             return []\n         sorted_entries = sorted(entries, key=self._entry_stored_at)\n         if keep >= len(sorted_entries):\n             return []\n         split_index = len(sorted_entries) - keep if keep else 0\n-        remove_entries = (\n-            sorted_entries[:split_index] if keep else sorted_entries\n-        )\n+        remove_entries = sorted_entries[:split_index] if keep else sorted_entries\n         keep_entries: Sequence[dict[str, object]] = (\n             sorted_entries[split_index:] if keep else []\n         )\n-        removed_bundles = [\n-            self._build_bundle(entry) for entry in remove_entries\n-        ]\n+        removed_bundles = [self._build_bundle(entry) for entry in remove_entries]\n         for bundle in removed_bundles:\n             try:\n                 bundle.path.unlink()\n             except FileNotFoundError:\n                 pass\n@@ -136,15 +132,11 @@\n         if isinstance(stored_at_raw, str):\n             try:\n                 parsed = datetime.fromisoformat(stored_at_raw)\n             except ValueError:\n                 return datetime.now(UTC)\n-            return (\n-                parsed\n-                if parsed.tzinfo\n-                else parsed.replace(tzinfo=UTC)\n-            )\n+            return parsed if parsed.tzinfo else parsed.replace(tzinfo=UTC)\n         if isinstance(stored_at_raw, datetime):\n             return (\n                 stored_at_raw\n                 if stored_at_raw.tzinfo\n                 else stored_at_raw.replace(tzinfo=UTC)\n@@ -165,13 +157,11 @@\n         source_value = entry.get(\"source\")\n         source = str(source_value) if isinstance(source_value, str) else None\n         metadata_entry = entry.get(\"metadata\")\n         metadata: dict[str, object]\n         if isinstance(metadata_entry, Mapping):\n-            metadata = {\n-                str(key): value for key, value in metadata_entry.items()\n-            }\n+            metadata = {str(key): value for key, value in metadata_entry.items()}\n         else:\n             metadata = {}\n         size_value = entry.get(\"size\")\n         size = (\n             int(size_value)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_service.py\t2025-10-07 20:32:44.727790+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\review_service.py\t2025-10-08 12:48:50.883230+00:00\n@@ -40,17 +40,13 @@\n     ):\n         self._repository = repository\n         self._task_repository = task_repository\n         self._dispatcher = dispatcher\n         self._dispatcher.subscribe(events.TaskCreated, self._on_task_created)\n-        self._dispatcher.subscribe(\n-            events.TaskCompleted, self._on_task_completed\n-        )\n+        self._dispatcher.subscribe(events.TaskCompleted, self._on_task_completed)\n         self._dispatcher.subscribe(events.CardScanned, self._on_card_scanned)\n-        self._dispatcher.subscribe(\n-            events.TasksImported, self._on_tasks_imported\n-        )\n+        self._dispatcher.subscribe(events.TasksImported, self._on_tasks_imported)\n         self._bootstrap_existing_tasks()\n \n     def _bootstrap_existing_tasks(self) -> None:\n         for task in self._task_repository.list():\n             self.ensure_record(task)\n@@ -284,15 +280,11 @@\n \n         def _convert(value: Any) -> Any:\n             if isinstance(value, (str, int, float, bool)) or value is None:\n                 return value\n             if isinstance(value, datetime):\n-                normalized = (\n-                    value\n-                    if value.tzinfo\n-                    else value.replace(tzinfo=UTC)\n-                )\n+                normalized = value if value.tzinfo else value.replace(tzinfo=UTC)\n                 return normalized.astimezone(UTC).isoformat()\n             if isinstance(value, Mapping):\n                 mapping_value = cast(\"Mapping[object, Any]\", value)\n                 return {str(k): _convert(v) for k, v in mapping_value.items()}\n             if isinstance(value, (list, tuple, set)):\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\calendar_sync.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\calendar_sync.py\t2025-10-08 12:48:50.928501+00:00\n@@ -40,13 +40,11 @@\n         ctx.subscribe(events.TaskCreated, _handle)\n         ctx.subscribe(events.TaskUpdated, _handle)\n         ctx.subscribe(events.TaskCompleted, _handle)\n         ctx.subscribe(events.TaskReminderTriggered, _handle)\n \n-    def _sync(\n-        self, task_id: str, due: datetime | None, ctx: PluginContext\n-    ) -> None:\n+    def _sync(self, task_id: str, due: datetime | None, ctx: PluginContext) -> None:\n         if due is None:\n             self._synced_tasks.pop(task_id, None)\n             ctx.logger.debug(\n                 \"Task %s removed from calendar due to missing due date\",\n                 task_id,\n@@ -66,13 +64,11 @@\n             {\n                 \"task_id\": task_id,\n                 \"due_at\": normalized.isoformat(),\n             },\n         )\n-        ctx.logger.debug(\n-            \"Task %s synced to calendar at %s\", task_id, normalized\n-        )\n+        ctx.logger.debug(\"Task %s synced to calendar at %s\", task_id, normalized)\n \n     def _unsync(self, task_id: str, ctx: PluginContext) -> None:\n         if task_id in self._synced_tasks:\n             self._synced_tasks.pop(task_id, None)\n             ctx.telemetry.track(\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py\t2025-10-08 12:48:50.968730+00:00\n@@ -19,13 +19,11 @@\n \n class StubAIService:\n     def __init__(self, summary: TaskSummary) -> None:\n         self._summary = summary\n \n-    def summarize(\n-        self, *, now: datetime | None = None, top_n: int = 3\n-    ) -> TaskSummary:\n+    def summarize(self, *, now: datetime | None = None, top_n: int = 3) -> TaskSummary:\n         return self._summary\n \n \n class StubReviewGuidanceService:\n     def __init__(self, guidance: list[ReviewGuidance]) -> None:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\controller.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\controller.py\t2025-10-08 12:48:50.986002+00:00\n@@ -40,18 +40,14 @@\n \n     @classmethod\n     def from_task(cls, task: Task) -> TaskRow:\n         due_display = \"-\"\n         if task.due:\n-            due_display = task.due.astimezone(UTC).strftime(\n-                \"%Y-%m-%d %H:%M\"\n-            )\n+            due_display = task.due.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n         priority_display = task.priority or \"-\"\n         tags_display = \",\".join(sorted(task.tags)) or \"-\"\n-        created_display = task.created.astimezone(UTC).strftime(\n-            \"%Y-%m-%d %H:%M\"\n-        )\n+        created_display = task.created.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n         return cls(\n             id=task.id,\n             description=task.description,\n             status=task.status,\n             due_display=due_display,\n@@ -77,13 +73,11 @@\n \n     def list_tasks(self, filters: TaskFilters | None = None) -> list[TaskRow]:\n         filters = filters or TaskFilters()\n         tasks: Iterable[Task]\n         if filters.text:\n-            tag_filter: Sequence[str] | None = (\n-                [filters.tag] if filters.tag else None\n-            )\n+            tag_filter: Sequence[str] | None = [filters.tag] if filters.tag else None\n             tasks = self._ctx.search_service.search(\n                 text=filters.text,\n                 status=filters.status,\n                 tags=tag_filter,\n                 limit=None,\n@@ -91,13 +85,11 @@\n         else:\n             tasks = self._ctx.task_service.list_tasks(status=filters.status)\n             if filters.tag:\n                 tasks = [t for t in tasks if filters.tag in t.tags]\n         if filters.priority:\n-            tasks = [\n-                t for t in tasks if (t.priority or \"-\") == filters.priority\n-            ]\n+            tasks = [t for t in tasks if (t.priority or \"-\") == filters.priority]\n \n         def sort_key(task: Task):\n             due = task.due or datetime.max.replace(tzinfo=UTC)\n             return (task.status != \"pending\", due, task.created)\n \n@@ -139,13 +131,11 @@\n     ) -> TaskRow:\n         if days is None and not until:\n             raise ValueError(\"Provide at least one defer option\")\n         delta = timedelta(days=days) if days is not None else None\n         until_dt = _parse_due(until) if until else None\n-        task = self._ctx.task_service.defer_task(\n-            task_id, until=until_dt, delta=delta\n-        )\n+        task = self._ctx.task_service.defer_task(task_id, until=until_dt, delta=delta)\n         return TaskRow.from_task(task)\n \n     def prioritize_task(self, task_id: str, priority: str | None) -> TaskRow:\n         task = self._ctx.task_service.prioritize_task(task_id, priority)\n         return TaskRow.from_task(task)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\ai_assistant.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\plugins\\ai_assistant.py\t2025-10-08 12:48:50.994764+00:00\n@@ -62,13 +62,11 @@\n                     \"pending\": summary.pending,\n                     \"completed\": summary.completed,\n                     \"overdue\": summary.overdue,\n                     \"top_tags\": summary.top_tags,\n                 },\n-                \"suggestions\": [\n-                    entry for entry in suggestions if entry[\"prompts\"]\n-                ],\n+                \"suggestions\": [entry for entry in suggestions if entry[\"prompts\"]],\n             }\n         )\n \n     def _handle_card_scanned(self, event: events.DomainEvent) -> None:\n         if not isinstance(event, events.CardScanned):\n@@ -77,13 +75,11 @@\n             return\n         try:\n             task = self._ctx.task_service.get_task(event.task_id)\n         except KeyError:\n             return\n-        prompts = self._ctx.ai_service.draft_followups(task)[\n-            : self._max_prompts\n-        ]\n+        prompts = self._ctx.ai_service.draft_followups(task)[: self._max_prompts]\n         if not prompts:\n             return\n         self._ctx.telemetry.track(\n             \"plugin.ai_assistant.card_followups\",\n             {\n@@ -126,13 +122,11 @@\n         )\n \n     # Helpers ------------------------------------------------------------------------\n \n     def _build_prompt_entry(self, task: Task, origin: str) -> dict[str, Any]:\n-        prompts = self._ctx.ai_service.draft_followups(task)[\n-            : self._max_prompts\n-        ]\n+        prompts = self._ctx.ai_service.draft_followups(task)[: self._max_prompts]\n         return {\n             \"task_id\": task.id,\n             \"description\": task.description,\n             \"origin\": origin,\n             \"tags\": sorted(task.tags),\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\app.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\tui\\app.py\t2025-10-08 12:48:50.996689+00:00\n@@ -37,13 +37,11 @@\n if not TYPE_CHECKING:\n     try:  # pragma: no cover - dependency guard\n         _textual_app = import_module(\"textual.app\")\n         App = cast(\"type[Any]\", _textual_app.App)\n         ComposeResult = cast(\"type[Any]\", _textual_app.ComposeResult)\n-        Binding = cast(\n-            \"type[Any]\", import_module(\"textual.binding\").Binding\n-        )\n+        Binding = cast(\"type[Any]\", import_module(\"textual.binding\").Binding)\n         _widgets = import_module(\"textual.widgets\")\n         Footer = cast(\"type[Any]\", _widgets.Footer)\n         Header = cast(\"type[Any]\", _widgets.Header)\n         Input = cast(\"type[Any]\", _widgets.Input)\n         Static = cast(\"type[Any]\", _widgets.Static)\n@@ -148,13 +146,11 @@\n         ]\n         if summary.upcoming:\n             lines.append(\"Upcoming (\u00e2\u2030\u00a47d):\")\n             for item in summary.upcoming:\n                 due_display = (\n-                    item.due.astimezone(UTC).strftime(\n-                        \"%Y-%m-%d %H:%M\"\n-                    )\n+                    item.due.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n                     if item.due\n                     else \"-\"\n                 )\n                 priority: str = item.priority or \"-\"\n                 lines.append(\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py\t2025-10-08 12:48:51.037011+00:00\n@@ -63,16 +63,12 @@\n     task: TaskUpdatePayload\n     ai_summary: AISummaryPayload\n \n \n class BundleUploadRequest(BaseModel):\n-    payload: str = Field(\n-        ..., description=\"Base64-encoded encrypted bundle content\"\n-    )\n-    source: str | None = Field(\n-        None, description=\"Origin identifier for the upload\"\n-    )\n+    payload: str = Field(..., description=\"Base64-encoded encrypted bundle content\")\n+    source: str | None = Field(None, description=\"Origin identifier for the upload\")\n     metadata: dict[str, Any] | None = Field(\n         None, description=\"Additional metadata to store with the bundle\"\n     )\n \n \n@@ -124,13 +120,11 @@\n         config = cfg or load_config()\n         setup_logging(config)\n         local_ctx = build_context(config)\n     service = _build_service(local_ctx)\n     ai_service = _build_ai_service(local_ctx)\n-    bundle_store = CollaborationBundleStore(\n-        local_ctx.config.collaboration_hub_dir\n-    )\n+    bundle_store = CollaborationBundleStore(local_ctx.config.collaboration_hub_dir)\n \n     app = FastAPI(\n         title=\"Legatus Automations API\",\n         version=\"0.1.0\",\n         summary=\"Webhook endpoints to connect card scans with automations.\",\n@@ -188,13 +182,11 @@\n     ) -> list[BundleUploadResponse]:\n         stored = bundle_store.list(limit=limit)\n         return [_bundle_upload_response(bundle) for bundle in stored]\n \n     @app.delete(\"/api/collab/bundles\", response_model=BundlePruneResponse)\n-    async def prune_bundles(\n-        keep: int = Query(10, ge=0, le=100)\n-    ) -> BundlePruneResponse:\n+    async def prune_bundles(keep: int = Query(10, ge=0, le=100)) -> BundlePruneResponse:\n         removed = bundle_store.prune(keep)\n         remaining = bundle_store.list()\n         return BundlePruneResponse(\n             removed=[_bundle_upload_response(bundle) for bundle in removed],\n             remaining=len(remaining),\n@@ -217,13 +209,11 @@\n         stored = bundle_store.save(\n             payload, source=request.source, metadata=request.metadata\n         )\n         return _bundle_upload_response(stored)\n \n-    @app.get(\n-        \"/api/collab/bundles/latest\", response_model=BundleDownloadResponse\n-    )\n+    @app.get(\"/api/collab/bundles/latest\", response_model=BundleDownloadResponse)\n     async def download_latest_bundle() -> BundleDownloadResponse:\n         stored = bundle_store.latest()\n         if stored is None:\n             raise HTTPException(\n                 status_code=404, detail=\"No collaboration bundles available\"\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py\t2025-10-08 12:48:51.100189+00:00\n@@ -50,13 +50,11 @@\n     assert response.json()[\"status\"] == \"ok\"\n \n \n def test_scan_endpoint_returns_ai_summary(api_client: Any) -> None:\n     ctx = api_client.app.state.ctx  # type: ignore[attr-defined]\n-    task = ctx.task_service.add_task(\n-        \"API test task\", tags=[\"api\"], priority=\"high\"\n-    )\n+    task = ctx.task_service.add_task(\"API test task\", tags=[\"api\"], priority=\"high\")\n     note = Notecard(\n         id=\"card-123\",\n         type=\"task\",\n         front_md=\"Follow up\",\n         tags=[f\"task:{task.id}\"],\n@@ -115,13 +113,11 @@\n \n     latest = api_client.get(\"/api/collab/bundles/latest\")\n     assert latest.status_code == 200\n     latest_payload = latest.json()\n     assert latest_payload[\"bundle_id\"] == bundle_id_two\n-    assert (\n-        base64.b64decode(latest_payload[\"payload\"]) == b'{\"hello\": \"second\"}'\n-    )\n+    assert base64.b64decode(latest_payload[\"payload\"]) == b'{\"hello\": \"second\"}'\n \n     specific = api_client.get(f\"/api/collab/bundles/{bundle_id}\")\n     assert specific.status_code == 200\n     assert specific.json()[\"bundle_id\"] == bundle_id\n \n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py\t2025-10-07 20:32:44.743538+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py\t2025-10-08 12:48:51.118004+00:00\n@@ -23,13 +23,11 @@\n \n class StubTelemetry:\n     def __init__(self) -> None:\n         self.events: list[tuple[str, dict[str, object]]] = []\n \n-    def track(\n-        self, event: str, properties: dict[str, object] | None = None\n-    ) -> None:\n+    def track(self, event: str, properties: dict[str, object] | None = None) -> None:\n         self.events.append((event, properties or {}))\n \n \n class _CliResult(Protocol):\n     exit_code: int\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py\t2025-10-08 12:48:51.217671+00:00\n@@ -116,14 +116,11 @@\n     imported_overwrite = target_service.import_tasks(\n         export_path, \"secret\", overwrite_existing=True\n     )\n     assert len(imported_overwrite) == 1\n     stored_overwrite = repo_updated.get(task.id)\n-    assert (\n-        stored_overwrite is not None\n-        and stored_overwrite.description == \"Original\"\n-    )\n+    assert stored_overwrite is not None and stored_overwrite.description == \"Original\"\n \n \n def test_import_fails_with_wrong_passphrase(tmp_path: Path) -> None:\n     repo = InMemoryTaskRepository()\n     service, _ = _make_service(repo)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py\t2025-10-08 12:48:51.218234+00:00\n@@ -39,13 +39,11 @@\n         ]\n         self.dispatcher = events.EventDispatcher()\n         self.telemetry = RecordingTelemetry()\n         self.repo = _InMemoryTaskRepository()\n         self.task_service = TaskService(self.repo, self.dispatcher)\n-        self.ai_service = AIService(\n-            repository=self.repo, dispatcher=self.dispatcher\n-        )\n+        self.ai_service = AIService(repository=self.repo, dispatcher=self.dispatcher)\n         self.plugin_bus = PluginBus(\n             self.dispatcher,\n             self.telemetry,\n             self.config,\n             task_service=self.task_service,\n@@ -73,13 +71,11 @@\n         self.dispatcher.publish(scan_event)\n \n         self.assertTrue(self.suggestions_path.exists())\n         entries = [\n             json.loads(line)\n-            for line in self.suggestions_path.read_text(\n-                encoding=\"utf-8\"\n-            ).splitlines()\n+            for line in self.suggestions_path.read_text(encoding=\"utf-8\").splitlines()\n             if line\n         ]\n         event_types = {entry[\"event\"] for entry in entries}\n         self.assertIn(\"task_created\", event_types)\n         self.assertIn(\"tasks_imported\", event_types)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py\t2025-10-08 12:48:51.224502+00:00\n@@ -41,13 +41,11 @@\n             review_store_path=str(data_dir / \"reviews.json\"),\n             collaboration_bundle_path=str(data_dir / \"bundle.json\"),\n         )\n         self.repo = _InMemoryTaskRepository()\n         self.task_service = TaskService(self.repo, self.dispatcher)\n-        self.ai_service = AIService(\n-            repository=self.repo, dispatcher=self.dispatcher\n-        )\n+        self.ai_service = AIService(repository=self.repo, dispatcher=self.dispatcher)\n         self.plugin_bus = PluginBus(\n             self.dispatcher,\n             self.telemetry,\n             self.config,\n             task_service=self.task_service,\n@@ -58,17 +56,13 @@\n     def tearDown(self) -> None:\n         self.telemetry.events.clear()\n         self.tempdir.cleanup()\n \n     def test_calendar_sync_tracks_events(self) -> None:\n-        task = Task.create(\n-            \"Prep meeting\", due=datetime.now(UTC) + timedelta(hours=2)\n-        )\n+        task = Task.create(\"Prep meeting\", due=datetime.now(UTC) + timedelta(hours=2))\n         self.dispatcher.publish(TaskCreated(task))\n-        updated = (\n-            task.with_due(task.due + timedelta(hours=1)) if task.due else task\n-        )\n+        updated = task.with_due(task.due + timedelta(hours=1)) if task.due else task\n         self.dispatcher.publish(TaskUpdated(updated))\n         reminder = TaskReminderTriggered(\n             task=updated, due_at=updated.due or datetime.now(UTC)\n         )\n         self.dispatcher.publish(reminder)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py\t2025-10-08 12:48:51.239629+00:00\n@@ -18,13 +18,11 @@\n \n \n def test_bundle_store_roundtrip(tmp_path: Path) -> None:\n     store = CollaborationBundleStore(tmp_path)\n     payload = b'{\"task\": \"demo\"}'\n-    stored = store.save(\n-        payload, source=\"unit\", metadata={\"label\": \"roundtrip\"}\n-    )\n+    stored = store.save(payload, source=\"unit\", metadata={\"label\": \"roundtrip\"})\n \n     latest = store.latest()\n     assert latest is not None\n     assert latest.bundle_id == stored.bundle_id\n     assert latest.path.read_bytes() == payload\n@@ -68,14 +66,11 @@\n     bundle_path.write_bytes(bundle_bytes)\n \n     state: dict[str, dict[str, object]] = {}\n \n     def _handler(request: httpx.Request) -> httpx.Response:\n-        if (\n-            request.method == \"POST\"\n-            and request.url.path == \"/api/collab/bundles\"\n-        ):\n+        if request.method == \"POST\" and request.url.path == \"/api/collab/bundles\":\n             body = json.loads(request.content.decode(\"utf-8\"))\n             decoded = base64.b64decode(body[\"payload\"].encode(\"utf-8\"))\n             stored_at = datetime.now(UTC).isoformat()\n             bundle_id = \"bundle-1\"\n             state[\"bundle\"] = {\n@@ -92,30 +87,23 @@\n                 \"source\": body.get(\"source\"),\n                 \"metadata\": body.get(\"metadata\", {}),\n             }\n             return httpx.Response(201, json=bundle_upload_response)\n \n-        if (\n-            request.method == \"GET\"\n-            and request.url.path == \"/api/collab/bundles\"\n-        ):\n+        if request.method == \"GET\" and request.url.path == \"/api/collab/bundles\":\n             bundle = state.get(\"bundle\")\n             if not bundle:\n                 return httpx.Response(200, json=[])\n             payload_bytes_obj = bundle.get(\"payload_bytes\")\n             payload_size = (\n-                len(payload_bytes_obj)\n-                if isinstance(payload_bytes_obj, bytes)\n-                else 0\n+                len(payload_bytes_obj) if isinstance(payload_bytes_obj, bytes) else 0\n             )\n             metadata_obj = bundle.get(\"metadata\", {})\n             metadata: dict[str, object]\n             if isinstance(metadata_obj, dict):\n                 metadata_mapping = cast(\"Mapping[Any, object]\", metadata_obj)\n-                metadata = {\n-                    str(key): value for key, value in metadata_mapping.items()\n-                }\n+                metadata = {str(key): value for key, value in metadata_mapping.items()}\n             else:\n                 metadata = {}\n             list_payload: dict[str, object] = {\n                 \"bundle_id\": bundle.get(\"bundle_id\"),\n                 \"stored_at\": bundle.get(\"stored_at\"),\n@@ -131,27 +119,22 @@\n             bundle = state.get(\"bundle\")\n             if not bundle:\n                 return httpx.Response(404, json={\"detail\": \"not found\"})\n             payload_bytes = bundle.get(\"payload_bytes\")\n             if not isinstance(payload_bytes, bytes):\n-                return httpx.Response(\n-                    500, json={\"detail\": \"invalid bundle payload\"}\n-                )\n+                return httpx.Response(500, json={\"detail\": \"invalid bundle payload\"})\n             download_payload: dict[str, object] = {\n                 \"bundle_id\": bundle[\"bundle_id\"],\n                 \"stored_at\": bundle[\"stored_at\"],\n                 \"size\": len(payload_bytes),\n                 \"source\": bundle[\"source\"],\n                 \"metadata\": bundle[\"metadata\"],\n                 \"payload\": base64.b64encode(payload_bytes).decode(\"utf-8\"),\n             }\n             return httpx.Response(200, json=download_payload)\n \n-        if (\n-            request.method == \"DELETE\"\n-            and request.url.path == \"/api/collab/bundles\"\n-        ):\n+        if request.method == \"DELETE\" and request.url.path == \"/api/collab/bundles\":\n             keep_param = request.url.params.get(\"keep\")\n             keep = int(keep_param) if keep_param is not None else 0\n             bundle = state.get(\"bundle\")\n             removed: list[dict[str, Any]] = []\n             if bundle and keep == 0:\n@@ -180,13 +163,11 @@\n \n         return httpx.Response(500, json={\"detail\": \"unexpected request\"})\n \n     transport = httpx.MockTransport(_handler)\n \n-    with CollaborationHubClient(\n-        \"http://testserver\", transport=transport\n-    ) as client:\n+    with CollaborationHubClient(\"http://testserver\", transport=transport) as client:\n         upload: BundleUploadResult = client.push_bundle(\n             bundle_path, source=\"tester\", metadata={\"note\": \"demo\"}\n         )\n         assert upload.bundle_id == \"bundle-1\"\n         assert upload.size == len(bundle_bytes)\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py\t2025-10-08 12:48:51.311849+00:00\n@@ -56,16 +56,12 @@\n         matches = self.search_service.search(text=\"report\")\n         self.assertEqual(1, len(matches))\n         self.assertIn(\"report\", matches[0].description.lower())\n \n     def test_search_filters_status_and_tags(self) -> None:\n-        first = self.task_service.add_task(\n-            \"File expenses\", tags=[\"finance\", \"work\"]\n-        )\n-        second = self.task_service.add_task(\n-            \"Book flights\", tags=[\"travel\", \"work\"]\n-        )\n+        first = self.task_service.add_task(\"File expenses\", tags=[\"finance\", \"work\"])\n+        second = self.task_service.add_task(\"Book flights\", tags=[\"travel\", \"work\"])\n         self.task_service.complete_task(second.id)\n \n         completed = self.search_service.search(status=\"completed\")\n         self.assertEqual([second.id], [task.id for task in completed])\n \n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py\t2025-10-08 12:48:51.334659+00:00\n@@ -126,13 +126,11 @@\n \n     recommendations = guidance.generate(now=now, limit=2)\n \n     assert recommendations\n     assert recommendations[0].task.id == high_task.id\n-    assert any(\n-        \"priority high\" in reason for reason in recommendations[0].reasons\n-    )\n+    assert any(\"priority high\" in reason for reason in recommendations[0].reasons)\n     assert recommendations[0].suggested_action in {\n         \"review then commit\",\n         \"rescue overdue review\",\n     }\n \n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py\t2025-10-08 12:48:51.373047+00:00\n@@ -48,13 +48,11 @@\n class FakeScheduler(IScheduler):\n     def __init__(self) -> None:\n         self.started = False\n         self.jobs: dict[\n             str,\n-            tuple[\n-                datetime, Callable[..., None], tuple[Any, ...], dict[str, Any]\n-            ],\n+            tuple[datetime, Callable[..., None], tuple[Any, ...], dict[str, Any]],\n         ] = {}\n \n     def start(self) -> None:\n         self.started = True\n \n@@ -85,13 +83,11 @@\n class RecordingTelemetry(TelemetryClient):\n     def __init__(self) -> None:\n         super().__init__(enabled=False, path=None)\n         self.events: list[tuple[str, Mapping[str, object]]] = []\n \n-    def track(\n-        self, event: str, properties: Mapping[str, object] | None = None\n-    ) -> None:\n+    def track(self, event: str, properties: Mapping[str, object] | None = None) -> None:\n         self.events.append((event, dict(properties or {})))\n \n \n class SchedulerServiceTests(unittest.TestCase):\n     def setUp(self) -> None:\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py\t2025-10-08 12:48:51.376432+00:00\n@@ -91,13 +91,11 @@\n     task = Task.create(\"Learn CLI\")\n     task_repo.add(task)\n     service = ReviewService(review_repo, task_repo, dispatcher)\n \n     first_review_time = task.created\n-    record = service.record_review(\n-        task.id, quality=5, reviewed_at=first_review_time\n-    )\n+    record = service.record_review(task.id, quality=5, reviewed_at=first_review_time)\n     assert approx(record.interval_days, rel=1e-3) == 1.0\n     assert record.repetitions == 1\n     assert record.last_reviewed_at == first_review_time\n     assert record.history[-1].quality == 5\n     assert record.history[-1].source == \"manual\"\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py\t2025-10-08 12:48:51.446090+00:00\n@@ -26,13 +26,11 @@\n \n class StubTelemetry:\n     def __init__(self) -> None:\n         self.events: list[tuple[str, dict[str, Any]]] = []\n \n-    def track(\n-        self, event: str, properties: dict[str, Any] | None = None\n-    ) -> None:\n+    def track(self, event: str, properties: dict[str, Any] | None = None) -> None:\n         self.events.append((event, dict(properties or {})))\n \n \n class StubCollaborationService:\n     def __init__(self) -> None:\n@@ -176,21 +174,17 @@\n         return self\n \n     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n         return None\n \n-    def list_bundles(\n-        self, *, limit: int | None = None\n-    ) -> list[BundleUploadResult]:\n+    def list_bundles(self, *, limit: int | None = None) -> list[BundleUploadResult]:\n         self.limits.append(limit)\n         if limit is None:\n             return self.bundles\n         return self.bundles[: max(limit, 0)]\n \n-    def prune_bundles(\n-        self, *, keep: int\n-    ) -> tuple[list[BundleUploadResult], int]:\n+    def prune_bundles(self, *, keep: int) -> tuple[list[BundleUploadResult], int]:\n         self.prune_calls.append(keep)\n         return (self._prune_removed, self._prune_remaining)\n \n \n class StubAIService:\n@@ -239,13 +233,11 @@\n     uploads: list[dict[str, Any]] = []\n \n     def _ctx() -> Any:\n         return ctx\n \n-    def _client_factory(\n-        base_url: str, *args: Any, **kwargs: Any\n-    ) -> StubPushClient:\n+    def _client_factory(base_url: str, *args: Any, **kwargs: Any) -> StubPushClient:\n         return StubPushClient(base_url, uploads)\n \n     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n \n     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n@@ -279,13 +271,11 @@\n     assert ai_meta[\"pending\"] == summary.pending\n     assert ai_meta[\"completed\"] == summary.completed\n     assert ai_meta[\"overdue\"] == summary.overdue\n     assert ai_meta[\"top_tags\"] == summary.top_tags\n     expected_due = (\n-        summary.upcoming[0].due.isoformat()\n-        if summary.upcoming[0].due\n-        else None\n+        summary.upcoming[0].due.isoformat() if summary.upcoming[0].due else None\n     )\n     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n     assert uploads[0][\"source\"] == \"unit-test\"\n     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n@@ -319,13 +309,11 @@\n     )\n \n     def _ctx() -> Any:\n         return ctx\n \n-    def _client_factory(\n-        base_url: str, *args: Any, **kwargs: Any\n-    ) -> StubPullClient:\n+    def _client_factory(base_url: str, *args: Any, **kwargs: Any) -> StubPullClient:\n         return StubPullClient(base_url, download)\n \n     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n \n     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n@@ -344,14 +332,11 @@\n         ],\n     )\n \n     assert result.exit_code == 0\n     assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n-    assert (\n-        service.import_calls\n-        and service.import_calls[0][\"passphrase\"] == \"secret\"\n-    )\n+    assert service.import_calls and service.import_calls[0][\"passphrase\"] == \"secret\"\n     assert service.import_calls[0][\"overwrite_existing\"] is True\n     assert service.import_calls[0][\"payload\"] == payload\n     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n     assert telemetry.events[0][1][\"from_latest\"] is True\n@@ -390,13 +375,11 @@\n     clients: list[StubHistoryClient] = []\n \n     def _ctx() -> Any:\n         return ctx\n \n-    def _client_factory(\n-        base_url: str, *args: Any, **kwargs: Any\n-    ) -> StubHistoryClient:\n+    def _client_factory(base_url: str, *args: Any, **kwargs: Any) -> StubHistoryClient:\n         client = StubHistoryClient(base_url, bundles)\n         clients.append(client)\n         return client\n \n     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n@@ -449,13 +432,11 @@\n     clients: list[StubHistoryClient] = []\n \n     def _ctx() -> Any:\n         return ctx\n \n-    def _client_factory(\n-        base_url: str, *args: Any, **kwargs: Any\n-    ) -> StubHistoryClient:\n+    def _client_factory(base_url: str, *args: Any, **kwargs: Any) -> StubHistoryClient:\n         client = StubHistoryClient(\n             base_url,\n             [],\n             prune_removed=[removed_bundle],\n             prune_remaining=2,\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py\t2025-10-08 07:44:07.149831+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py\t2025-10-08 12:48:51.713021+00:00\n@@ -145,28 +145,18 @@\n     \"--tag\",\n     \"-t\",\n     help=\"Filter by tag; repeat for multiple\",\n )\n \n-TAG_ADD_ARGUMENT = typer.Argument(\n-    ..., help=\"Tags to add\"\n-)\n-TAG_REMOVE_ARGUMENT = typer.Argument(\n-    ..., help=\"Tags to remove\"\n-)\n-TAG_SET_ARGUMENT = typer.Argument(\n-    ..., help=\"Replace tags\"\n-)\n-BRAINSTORM_TOPIC_ARGUMENT = typer.Argument(\n-    ..., help=\"Focus topic for brainstorming\"\n-)\n-PRIORITY_ARGUMENT = typer.Argument(\n-    ..., help=\"low|medium|high\"\n-)\n-COLLAB_BUNDLE_ARGUMENT = typer.Argument(\n-    ..., help=\"Encrypted bundle to import\"\n-)\n+TAG_ADD_ARGUMENT = typer.Argument(..., help=\"Tags to add\")\n+TAG_REMOVE_ARGUMENT = typer.Argument(..., help=\"Tags to remove\")\n+TAG_SET_ARGUMENT = typer.Argument(..., help=\"Replace tags\")\n+BRAINSTORM_TOPIC_ARGUMENT = typer.Argument(..., help=\"Focus topic for brainstorming\")\n+PRIORITY_ARGUMENT = typer.Argument(..., help=\"low|medium|high\")\n+COLLAB_BUNDLE_ARGUMENT = typer.Argument(..., help=\"Encrypted bundle to import\")\n+\n+\n def _ctx() -> AppContext:\n     cfg = load_config()\n     setup_logging(cfg)\n     return build_context(cfg)\n \n@@ -194,11 +184,10 @@\n \n \n def _bundle_not_found(bundle_id: str, base_url: str) -> NoReturn:\n     message = f\"Bundle {bundle_id} not found on {base_url}\"\n     _bad_parameter(message)\n-\n \n \n def _parse_due(value: str | None) -> datetime | None:\n     if not value:\n         return None\n@@ -234,21 +223,18 @@\n         \"==========\",\n         f\"Pending tasks:   {summary.pending}\",\n         f\"Completed tasks: {summary.completed}\",\n         f\"Overdue tasks:   {summary.overdue}\",\n         \"\",\n-        \"Top tags: \"\n-        + (\", \".join(summary.top_tags) if summary.top_tags else \"-\"),\n+        \"Top tags: \" + (\", \".join(summary.top_tags) if summary.top_tags else \"-\"),\n     ]\n     if summary.upcoming:\n         lines.append(\"\")\n         lines.append(\"Upcoming focus (7d horizon):\")\n         for item in summary.upcoming:\n             due = (\n-                item.due.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n-                if item.due\n-                else \"-\"\n+                item.due.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\") if item.due else \"-\"\n             )\n             priority = item.priority or \"-\"\n             summary_line = (\n                 f\"- {item.description} \"\n                 f\"(id={item.task_id[:8]}, due={due}, priority={priority})\"\n@@ -260,13 +246,11 @@\n def _format_briefing(briefing: AIBriefing) -> str:\n     summary = briefing.summary\n     lines: list[str] = []\n     lines.append(\"AI Daily Briefing\")\n     lines.append(\"=================\")\n-    generated_at = briefing.generated_at.astimezone(UTC).strftime(\n-        \"%Y-%m-%d %H:%M %Z\"\n-    )\n+    generated_at = briefing.generated_at.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M %Z\")\n     lines.append(f\"Generated: {generated_at}\")\n     lines.append(\"\")\n     lines.append(\"Snapshot\")\n     lines.append(\"--------\")\n     lines.append(f\"Pending:   {summary.pending}\")\n@@ -279,13 +263,11 @@\n         lines.append(\"\")\n         lines.append(\"Upcoming focus (7d)\")\n         lines.append(\"-------------------\")\n         for item in summary.upcoming:\n             due = (\n-                item.due.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n-                if item.due\n-                else \"-\"\n+                item.due.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\") if item.due else \"-\"\n             )\n             priority = item.priority or \"-\"\n             summary_line = (\n                 f\"- {item.description} \"\n                 f\"(id={item.task_id[:8]}, due={due}, priority={priority})\"\n@@ -298,13 +280,11 @@\n     if not guidance:\n         lines.append(\"No review guidance available.\")\n     else:\n         for insight in guidance:\n             score = f\"{insight.score:.2f}\"\n-            due = insight.record.due_at.astimezone(UTC).strftime(\n-                \"%Y-%m-%d %H:%M\"\n-            )\n+            due = insight.record.due_at.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n             insight_line = (\n                 f\"- {insight.task.description} \"\n                 f\"(score={score}, due={due}, action={insight.suggested_action})\"\n             )\n             lines.append(insight_line)\n@@ -318,13 +298,11 @@\n     confirm: bool = False,\n     prompt_text: str = \"Passphrase\",\n ) -> str:\n     if value:\n         return value\n-    secret = typer.prompt(\n-        prompt_text, hide_input=True, confirmation_prompt=confirm\n-    )\n+    secret = typer.prompt(prompt_text, hide_input=True, confirmation_prompt=confirm)\n     if not secret:\n         message = \"Passphrase is required\"\n         _bad_parameter(message)\n     return secret\n \n@@ -410,13 +388,11 @@\n @app.command()\n def add(\n     description: str,\n     due: str = typer.Option(None, help=\"ISO datetime\"),\n     tags: str = typer.Option(\"\", help=\"Comma tags\"),\n-    priority: str | None = typer.Option(\n-        None, help=\"Priority: low|medium|high\"\n-    ),\n+    priority: str | None = typer.Option(None, help=\"Priority: low|medium|high\"),\n ) -> None:\n     ctx = _ctx()\n     due_dt = _parse_due(due)\n     tag_list = [t for t in tags.split(\",\") if t] if tags else []\n     task = ctx.task_service.add_task(\n@@ -442,25 +418,21 @@\n     ctx = _ctx()\n     tasks = list(ctx.task_service.list_tasks(status=status))\n     if tag:\n         tasks = [t for t in tasks if tag in t.tags]\n     if priority:\n-        tasks = [\n-            t for t in tasks if (t.priority or \"\").lower() == priority.lower()\n-        ]\n+        tasks = [t for t in tasks if (t.priority or \"\").lower() == priority.lower()]\n     if tasks:\n         typer.echo(_format_tasks(tasks))\n     else:\n         typer.echo(\"No tasks found\")\n     _record(ctx, \"task.list\", status=status, tag=tag, priority=priority)\n \n \n @app.command()\n def search(\n-    text: str = typer.Option(\n-        \"\", help=\"Substring match against task description\"\n-    ),\n+    text: str = typer.Option(\"\", help=\"Substring match against task description\"),\n     status: str | None = typer.Option(None, help=\"Filter by status\"),\n     tag: list[str] | None = SEARCH_TAG_OPTION,\n     limit: int = typer.Option(20, help=\"Maximum number of results\"),\n ) -> None:\n     ctx = _ctx()\n@@ -507,13 +479,11 @@\n \n @app.command()\n def defer(\n     task_id: str,\n     until: str = typer.Option(None, help=\"ISO datetime to defer until\"),\n-    days: int | None = typer.Option(\n-        None, help=\"Number of days to push the due date\"\n-    ),\n+    days: int | None = typer.Option(None, help=\"Number of days to push the due date\"),\n ) -> None:\n     ctx = _ctx()\n     due = _parse_due(until)\n     if due and days is not None:\n         message = \"Provide either --until or --days, not both\"\n@@ -565,22 +535,16 @@\n             \"Description\"\n         )\n         lines = [header, \"-\" * len(header)]\n         for item in items:\n             tid = item.task.id[:8]\n-            due_str = item.record.due_at.astimezone(UTC).strftime(\n-                \"%Y-%m-%d %H:%M\"\n-            )\n+            due_str = item.record.due_at.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n             overdue_hours = max(0.0, item.overdue.total_seconds() / 3600.0)\n-            overdue_display = (\n-                f\"{overdue_hours:6.1f}h\" if overdue_hours else \"  -   \"\n-            )\n+            overdue_display = f\"{overdue_hours:6.1f}h\" if overdue_hours else \"  -   \"\n             interval_display = f\"{item.record.interval_days:7.2f}d\"\n             reps_display = f\"{item.record.repetitions:3d}\"\n-            last_source = (\n-                item.record.history[-1].source if item.record.history else \"-\"\n-            )\n+            last_source = item.record.history[-1].source if item.record.history else \"-\"\n             source_display = last_source[:11].ljust(11)\n             queue_line = (\n                 f\"{tid} {due_str} {overdue_display} {interval_display} \"\n                 f\"{reps_display} {source_display} {item.task.description}\"\n             )\n@@ -596,13 +560,11 @@\n     )\n \n \n @review_app.command(\"focus\")\n def review_focus(\n-    limit: int = typer.Option(\n-        5, help=\"Maximum number of guidance entries to display\"\n-    ),\n+    limit: int = typer.Option(5, help=\"Maximum number of guidance entries to display\"),\n     include_completed: bool = REVIEW_FOCUS_INCLUDE_COMPLETED_OPTION,  # noqa: FBT001\n     tag: list[str] | None = REVIEW_TAG_OPTION,\n ) -> None:\n     ctx = _ctx()\n     tags = [t for t in (tag or []) if t]\n@@ -629,25 +591,19 @@\n     )\n     lines = [header, \"-\" * len(header)]\n     for insight in insights:\n         tid = insight.task.id[:8]\n         score_display = f\"{insight.score:5.2f}\"\n-        due_str = insight.record.due_at.astimezone(UTC).strftime(\n-            \"%Y-%m-%d %H:%M\"\n-        )\n+        due_str = insight.record.due_at.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n         overdue_hours = max(insight.overdue.total_seconds() / 3600.0, 0.0)\n-        overdue_display = (\n-            f\"{overdue_hours:6.1f}h\" if overdue_hours else \"  -   \"\n-        )\n+        overdue_display = f\"{overdue_hours:6.1f}h\" if overdue_hours else \"  -   \"\n         priority_display = (insight.task.priority or \"-\").ljust(7)\n         last_review_time = insight.last_reviewed_at\n         if last_review_time and last_review_time.tzinfo is None:\n             last_review_time = last_review_time.replace(tzinfo=UTC)\n         last_str = (\n-            last_review_time.astimezone(UTC).strftime(\n-                \"%Y-%m-%d %H:%M\"\n-            )\n+            last_review_time.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n             if last_review_time\n             else \"-\"\n         )\n         action_display = insight.suggested_action[:18].ljust(18)\n         focus_line = (\n@@ -680,13 +636,11 @@\n \n \n @review_app.command(\"log\")\n def review_log(\n     task_id: str,\n-    quality: int = typer.Option(\n-        ..., min=0, max=5, help=\"Review quality score (0-5)\"\n-    ),\n+    quality: int = typer.Option(..., min=0, max=5, help=\"Review quality score (0-5)\"),\n     reviewed_at: str | None = typer.Option(\n         None, help=\"Override review timestamp (ISO datetime)\"\n     ),\n ) -> None:\n     ctx = _ctx()\n@@ -718,12 +672,11 @@\n     ctx = _ctx()\n     record = ctx.review_service.suspend(task_id, suspended=suspend)\n     state = \"suspended\" if suspend else \"active\"\n     due_str = record.due_at.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n     schedule_message = (\n-        f\"Review schedule for {task_id[:8]} is now {state} \"\n-        f\"(next due {due_str})\"\n+        f\"Review schedule for {task_id[:8]} is now {state} \" f\"(next due {due_str})\"\n     )\n     typer.echo(schedule_message)\n     _record(ctx, \"review.suspend\", task_id=task_id, suspended=suspend)\n \n \n@@ -796,34 +749,28 @@\n         \"telemetry_enabled\": cfg.telemetry_enabled,\n         \"telemetry_writable\": bool(cfg.telemetry_path),\n         \"scheduler_enabled\": cfg.scheduler_enabled,\n         \"scheduler_active\": bool(ctx.scheduler_service),\n         \"review_store_exists\": Path(cfg.review_store_path).exists(),\n-        \"review_store_parent_exists\": Path(\n-            cfg.review_store_path\n-        ).parent.exists(),\n+        \"review_store_parent_exists\": Path(cfg.review_store_path).parent.exists(),\n         \"cards_db_exists\": Path(cfg.cards_db_path).exists(),\n         \"cards_db_parent_exists\": Path(cfg.cards_db_path).parent.exists(),\n         \"collaboration_bundle_parent_exists\": Path(\n             cfg.collaboration_bundle_path\n         ).parent.exists(),\n         \"automation_webhooks_configured\": bool(cfg.automation_webhooks),\n     }\n     if cfg.taskwarrior_data_dir:\n-        checks[\"taskwarrior_data_dir_exists\"] = Path(\n-            cfg.taskwarrior_data_dir\n-        ).exists()\n+        checks[\"taskwarrior_data_dir_exists\"] = Path(cfg.taskwarrior_data_dir).exists()\n     if cfg.telemetry_path:\n         telemetry_path = Path(cfg.telemetry_path)\n         checks[\"telemetry_dir_exists\"] = telemetry_path.parent.exists()\n     bundle_path = Path(cfg.collaboration_bundle_path)\n     checks[\"collaboration_bundle_exists\"] = bundle_path.exists()\n     hub_dir = Path(cfg.collaboration_hub_dir)\n     checks[\"collaboration_hub_dir_exists\"] = hub_dir.exists()\n-    checks[\"collaboration_endpoint_configured\"] = bool(\n-        cfg.collaboration_endpoint\n-    )\n+    checks[\"collaboration_endpoint_configured\"] = bool(cfg.collaboration_endpoint)\n     typer.echo(json.dumps(checks, indent=2, default=str))\n     _record(ctx, \"config.doctor\", **checks)\n \n \n @automation_app.command(\"endpoints\")\n@@ -900,13 +847,11 @@\n     )\n \n \n @collab_app.command(\"push\")\n def collab_push(\n-    endpoint: str | None = typer.Option(\n-        None, help=\"Collaboration hub base URL\"\n-    ),\n+    endpoint: str | None = typer.Option(None, help=\"Collaboration hub base URL\"),\n     passphrase: str | None = typer.Option(\n         None, help=\"Passphrase used to encrypt the bundle\"\n     ),\n     include_completed: bool = COLLAB_EXPORT_INCLUDE_COMPLETED_OPTION,  # noqa: FBT001\n     limit: int | None = COLLAB_EXPORT_LIMIT_OPTION,\n@@ -933,13 +878,11 @@\n         }\n         for item in summary.upcoming[:3]\n     ]\n     if upcoming_items:\n         summary_payload[\"upcoming\"] = upcoming_items\n-    with tempfile.NamedTemporaryFile(\n-        \"w\", delete=False, suffix=\".json\"\n-    ) as temp_file:\n+    with tempfile.NamedTemporaryFile(\"w\", delete=False, suffix=\".json\") as temp_file:\n         temp_path = Path(temp_file.name)\n     export: ExportResult\n     upload: BundleUploadResult\n     try:\n         export = ctx.collaboration_service.export_tasks(\n@@ -958,13 +901,11 @@\n                         \"include_completed\": include_completed,\n                         \"ai_summary\": summary_payload,\n                     },\n                 )\n         except (httpx.HTTPError, ValueError) as exc:\n-            error_message = (\n-                f\"Failed to push bundle to {base_url}: {exc}\"\n-            )\n+            error_message = f\"Failed to push bundle to {base_url}: {exc}\"\n             _bad_parameter(error_message, exc=exc)\n         typer.echo(\n             f\"Uploaded bundle {upload.bundle_id} ({upload.size} bytes) to {base_url}\"\n         )\n         _record(\n@@ -983,48 +924,37 @@\n     finally:\n         with suppress(OSError):\n             temp_path.unlink()\n \n \n-\n @collab_app.command(\"history\")\n def collab_history(\n-    endpoint: str | None = typer.Option(\n-        None, help=\"Collaboration hub base URL\"\n-    ),\n-    limit: int = typer.Option(\n-        10, help=\"Maximum number of bundles to list\", min=0\n-    ),\n+    endpoint: str | None = typer.Option(None, help=\"Collaboration hub base URL\"),\n+    limit: int = typer.Option(10, help=\"Maximum number of bundles to list\", min=0),\n ) -> None:\n     ctx = _ctx()\n     base_url = _require_endpoint(endpoint, ctx.config.collaboration_endpoint)\n     try:\n         with CollaborationHubClient(base_url) as client:\n             bundles = client.list_bundles(limit=limit)\n     except (httpx.HTTPError, ValueError) as exc:\n-        error_message = (\n-            f\"Failed to fetch bundle history from {base_url}: {exc}\"\n-        )\n+        error_message = f\"Failed to fetch bundle history from {base_url}: {exc}\"\n         _bad_parameter(error_message, exc=exc)\n \n     if not bundles:\n         typer.echo(\"No remote collaboration bundles available.\")\n         _record(ctx, \"collab.history\", endpoint=base_url, count=0, limit=limit)\n         return\n \n     header = \"ID        Stored (UTC)        Size  Source      Metadata\"\n     lines = [header, \"-\" * len(header)]\n     for bundle in bundles:\n-        stored = bundle.stored_at.astimezone(UTC).strftime(\n-            \"%Y-%m-%d %H:%M\"\n-        )\n+        stored = bundle.stored_at.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n         size_display = f\"{bundle.size:5d}\"\n         source_display = (bundle.source or \"-\")[:10].ljust(10)\n         metadata_display = (\n-            json.dumps(bundle.metadata, default=str)\n-            if bundle.metadata\n-            else \"-\"\n+            json.dumps(bundle.metadata, default=str) if bundle.metadata else \"-\"\n         )\n         line = (\n             f\"{bundle.bundle_id[:8]} {stored} {size_display} \"\n             f\"{source_display} {metadata_display}\"\n         )\n@@ -1039,13 +969,11 @@\n     )\n \n \n @collab_app.command(\"pull\")\n def collab_pull(\n-    endpoint: str | None = typer.Option(\n-        None, help=\"Collaboration hub base URL\"\n-    ),\n+    endpoint: str | None = typer.Option(None, help=\"Collaboration hub base URL\"),\n     passphrase: str | None = typer.Option(\n         None, help=\"Passphrase used to decrypt the bundle\"\n     ),\n     overwrite_existing: bool = COLLAB_PULL_OVERWRITE_OPTION,  # noqa: FBT001\n     bundle_id: str | None = COLLAB_PULL_BUNDLE_ID_OPTION,\n@@ -1077,13 +1005,11 @@\n     tasks = ctx.collaboration_service.import_tasks(\n         destination,\n         secret,\n         overwrite_existing=overwrite_existing,\n     )\n-    typer.echo(\n-        f\"Imported {len(tasks)} task(s) from bundle {download.bundle_id}\"\n-    )\n+    typer.echo(f\"Imported {len(tasks)} task(s) from bundle {download.bundle_id}\")\n     _record(\n         ctx,\n         \"collab.pull\",\n         endpoint=base_url,\n         bundle_id=download.bundle_id,\n@@ -1093,13 +1019,11 @@\n     )\n \n \n @collab_app.command(\"prune\")\n def collab_prune(\n-    endpoint: str | None = typer.Option(\n-        None, help=\"Collaboration hub base URL\"\n-    ),\n+    endpoint: str | None = typer.Option(None, help=\"Collaboration hub base URL\"),\n     keep: int = typer.Option(\n         10, help=\"Number of most recent bundles to keep\", min=0, max=100\n     ),\n ) -> None:\n     ctx = _ctx()\n@@ -1114,16 +1038,12 @@\n     if not removed:\n         typer.echo(\"No bundles pruned.\")\n     else:\n         typer.echo(f\"Removed {len(removed)} bundle(s):\")\n         for item in removed:\n-            stored = item.stored_at.astimezone(UTC).strftime(\n-                \"%Y-%m-%d %H:%M\"\n-            )\n-            typer.echo(\n-                f\"- {item.bundle_id} at {stored} (size={item.size} bytes)\"\n-            )\n+            stored = item.stored_at.astimezone(UTC).strftime(\"%Y-%m-%d %H:%M\")\n+            typer.echo(f\"- {item.bundle_id} at {stored} (size={item.size} bytes)\")\n     typer.echo(f\"Remaining bundles on hub: {remaining}\")\n     _record(\n         ctx,\n         \"collab.prune\",\n         endpoint=base_url,\n--- C:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py\t2025-10-07 20:32:44.759358+00:00\n+++ C:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py\t2025-10-08 12:48:52.080001+00:00\n@@ -84,13 +84,11 @@\n         )\n \n     # Dev fallback for PDF via wkhtmltopdf when enabled\n     def to_pdf(self, html_str: str, out_path: str) -> None:\n         # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n-        raise RuntimeError(\n-            \"PDF export not available (no PDF engine configured)\"\n-        )\n+        raise RuntimeError(\"PDF export not available (no PDF engine configured)\")\n \n \n # Built-in PDF adapter using wkhtmltopdf (subprocess)\n _DEFAULT_WKHTMLTOPDF_PATH = r\"C:\\Program Files\\wkhtmltopdf\\bin\\wkhtmltopdf.exe\"\n \n@@ -174,13 +172,11 @@\n class _MarkdownAdapter:\n     def __init__(self, base_folder: str) -> None:\n         # Track whether the adapter provides a PDF exporter\n         self._inner, self._has_pdf = self._load_from_manifest(base_folder)\n \n-    def _load_from_manifest(\n-        self, base_folder: str\n-    ) -> tuple[MarkdownLike, bool]:\n+    def _load_from_manifest(self, base_folder: str) -> tuple[MarkdownLike, bool]:\n         # Search common locations and optional explicit path\n         env_manifest = os.environ.get(\"X_MANIFEST_PATH\")\n         candidates = [\n             os.path.join(base_folder, \"publish_manifest.json\"),\n             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n@@ -298,13 +294,11 @@\n                             os.remove(tmp_path)\n                         except Exception:\n                             pass\n \n             pdf_func = _call_to_pdf\n-        elif hasattr(inst, \"export_pdf\") and callable(\n-            inst.export_pdf\n-        ):\n+        elif hasattr(inst, \"export_pdf\") and callable(inst.export_pdf):\n             exp = cast(\"Callable[[str, str], None]\", inst.export_pdf)\n \n             def export_pdf_html(html_str: str, out_path: str) -> None:\n                 with tempfile.NamedTemporaryFile(\n                     \"w\", delete=False, suffix=\".html\", encoding=\"utf-8\"\n@@ -474,22 +468,18 @@\n         # Also append to JSON for easy inspection (preserve original field names)\n         self._append_jsonl(self.json_cards_path, d)\n \n     def update_status(self, card_id: str, status: str) -> None:\n         with self._conn() as cx:\n-            cx.execute(\n-                \"UPDATE cards SET status=? WHERE id=?\", (status, card_id)\n-            )\n+            cx.execute(\"UPDATE cards SET status=? WHERE id=?\", (status, card_id))\n         self._append_jsonl(\n             self.json_actions_path,\n             {\n                 \"card_id\": card_id,\n                 \"action_type\": \"status_update\",\n                 \"meta\": {\"status\": status},\n-                \"created_at\": _dt.datetime.now(_dt.UTC).isoformat(\n-                    timespec=\"seconds\"\n-                ),\n+                \"created_at\": _dt.datetime.now(_dt.UTC).isoformat(timespec=\"seconds\"),\n             },\n         )\n \n     def insert_action(\n         self, card_id: str, action_type: str, meta: dict[str, Any]\n@@ -503,13 +493,11 @@\n             self.json_actions_path,\n             {\n                 \"card_id\": card_id,\n                 \"action_type\": action_type,\n                 \"meta\": meta or {},\n-                \"created_at\": _dt.datetime.now(_dt.UTC).isoformat(\n-                    timespec=\"seconds\"\n-                ),\n+                \"created_at\": _dt.datetime.now(_dt.UTC).isoformat(timespec=\"seconds\"),\n             },\n         )\n \n     def get_card(self, card_id: str) -> Notecard | None:\n         with self._conn() as cx:\n@@ -569,13 +557,11 @@\n class Notecard:\n     id: str\n     type: str\n     front_md: str\n     back_md: str | None = None\n-    size: str = (\n-        \"3x5\"  # accepts: \"WxH\" (in|mm|cm), aliases, suffix p/l for orientation\n-    )\n+    size: str = \"3x5\"  # accepts: \"WxH\" (in|mm|cm), aliases, suffix p/l for orientation\n     tags: list[str] = field(default_factory=list)\n     symbol_type: str = \"qr\"  # \"qr\" or \"code\"\n     symbol_data: str | None = None  # payload/URI encoded in symbol\n     status: str = \"new\"  # \"new\" | \"acted\" | \"completed\"\n     created_at: str = field(\n@@ -606,27 +592,21 @@\n             for c in payload[\"cards\"]:\n                 result.append(\n                     {\n                         \"front_md\": c.get(\"front_md\", \"\"),\n                         \"back_md\": c.get(\"back_md\"),\n-                        \"tags\": list(\n-                            set([*(global_tags), *(c.get(\"tags\", []) or [])])\n-                        ),\n+                        \"tags\": list(set([*(global_tags), *(c.get(\"tags\", []) or [])])),\n                     }\n                 )\n             return result\n         if \"qa\" in payload:\n             for pair in payload[\"qa\"]:\n                 front = (\n-                    pair[0]\n-                    if isinstance(pair, (list, tuple)) and len(pair) > 0\n-                    else \"\"\n+                    pair[0] if isinstance(pair, (list, tuple)) and len(pair) > 0 else \"\"\n                 )\n                 back = (\n-                    pair[1]\n-                    if isinstance(pair, (list, tuple)) and len(pair) > 1\n-                    else \"\"\n+                    pair[1] if isinstance(pair, (list, tuple)) and len(pair) > 1 else \"\"\n                 )\n                 result.append(\n                     {\n                         \"front_md\": front,\n                         \"back_md\": back,\n@@ -699,13 +679,11 @@\n             for a in payload[\"appointments\"]:\n                 result.append(\n                     {\n                         \"front_md\": mk_front(a),\n                         \"back_md\": mk_back(a),\n-                        \"tags\": list(\n-                            set([*(global_tags), *(a.get(\"tags\", []) or [])])\n-                        ),\n+                        \"tags\": list(set([*(global_tags), *(a.get(\"tags\", []) or [])])),\n                     }\n                 )\n             return result\n         result.append(\n             {\n@@ -731,23 +709,19 @@\n \n # ---------- Orchestrator ----------\n \n \n class x_cls_legatus_acta_schedae_x:  # noqa: N801\n-    def __init__(\n-        self, base_dir: str | None = None, db_path: str | None = None\n-    ) -> None:\n+    def __init__(self, base_dir: str | None = None, db_path: str | None = None) -> None:\n         self.base_dir = base_dir or _base_dir_default()\n         # All output under this folder to satisfy co-location requirement\n         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n         os.makedirs(self.out_dir, exist_ok=True)\n         self.media_dir = os.path.join(self.out_dir, \"media\")\n         os.makedirs(self.media_dir, exist_ok=True)\n-        self.db_path = db_path or os.path.join(\n-            self.pkg_dir, \"data\", \"cards.db\"\n-        )\n+        self.db_path = db_path or os.path.join(self.pkg_dir, \"data\", \"cards.db\")\n         os.makedirs(os.path.dirname(self.db_path), exist_ok=True)\n         self.storage = Storage(self.db_path)\n         # Prefer base_dir for manifest lookup; still searches package/CWD/env\n         self.md = _MarkdownAdapter(self.base_dir)\n         self._pdf = _PDFAdapter()  # built-in PDF adapter using wkhtmltopdf\n@@ -824,15 +798,11 @@\n         t = re.sub(r\"-{2,}\", \"-\", t).strip(\"-\")\n         return t or \"card\"\n \n     def _output_filename(self, c: Notecard, ext: str) -> str:\n         base = self._slug(c.series_name or c.type or \"card\")\n-        tags = (\n-            \"-\".join(self._slug(t) for t in (c.tags or [])[:3])\n-            if c.tags\n-            else \"\"\n-        )\n+        tags = \"-\".join(self._slug(t) for t in (c.tags or [])[:3]) if c.tags else \"\"\n         idx = f\"{c.index:02d}\" if isinstance(c.index, int) else \"\"\n         short = (c.id.split(\"-\")[0] if c.id else \"\")[:8].upper()\n         parts = [p for p in [base, tags, idx, short] if p]\n         name = \"_\".join(parts)[:120]\n         return f\"{name}.{ext}\"\n@@ -852,13 +822,11 @@\n             return None\n         if raw in (\"letter\", \"us-letter\"):\n             return (8.5, 11.0)\n         if raw in (\"a4\", \"iso-a4\"):\n             return (8.27, 11.69)\n-        m = re.match(\n-            r\"^\\s*(\\d+(?:\\.\\d+)?)\\s*x\\s*(\\d+(?:\\.\\d+)?)(mm|cm|in)?\\s*$\", raw\n-        )\n+        m = re.match(r\"^\\s*(\\d+(?:\\.\\d+)?)\\s*x\\s*(\\d+(?:\\.\\d+)?)(mm|cm|in)?\\s*$\", raw)\n         if m:\n             w_raw, h_raw, unit = m.groups()\n             unit = unit or \"in\"\n             return (\n                 _to_inches(float(w_raw), unit),\n@@ -939,13 +907,11 @@\n         orient: str | None = None\n         if s.endswith((\"p\", \"l\")):\n             orient, s = s[-1], s[:-1]\n \n         # Try strict \"WxH\" with optional unit\n-        m = re.match(\n-            r\"^\\s*(\\d+(?:\\.\\d+)?)\\s*x\\s*(\\d+(?:\\.\\d+)?)(mm|cm|in)?\\s*$\", s\n-        )\n+        m = re.match(r\"^\\s*(\\d+(?:\\.\\d+)?)\\s*x\\s*(\\d+(?:\\.\\d+)?)(mm|cm|in)?\\s*$\", s)\n         if m:\n             w_raw, h_raw, unit = m.groups()\n             unit = unit or \"in\"\n             w = _to_inches(float(w_raw), unit)\n             h = _to_inches(float(h_raw), unit)\n@@ -996,13 +962,11 @@\n         total = len(raw_cards)\n         set_id = series_id or str(uuid.uuid4())\n         cards: list[Notecard] = []\n \n         global_tags = [\n-            t.strip().lower()\n-            for t in (tags or [])\n-            if isinstance(t, str) and t.strip()\n+            t.strip().lower() for t in (tags or []) if isinstance(t, str) and t.strip()\n         ]\n         for idx, rc in enumerate(raw_cards, start=1):\n             card_id = str(uuid.uuid4())\n             payload_uri = f\"ncx://card/{card_id}?scan=1\"\n             joined_tags = global_tags + [\n@@ -1065,13 +1029,11 @@\n         Each page contains the front content of a single card. Card back_md is not included\n         in duplex PDFs to support simple double-sided printing.\n         \"\"\"\n         out_paths: list[str] = []\n         sheet = self._sheet_size()\n-        force_wk = sheet is not None or _truthy_env(\n-            \"X_FORCE_WKHTMLTOPDF\", False\n-        )\n+        force_wk = sheet is not None or _truthy_env(\"X_FORCE_WKHTMLTOPDF\", False)\n \n         # Group cards by normalized size key (\"3x5\" or \"4x6\")\n         groups: dict[str, list[Notecard]] = {\"3x5\": [], \"4x6\": []}\n         for c in cards:\n             w_in, h_in = self._parse_size_spec(c.size)\n@@ -1088,13 +1050,11 @@\n             )\n             style_s = m_style.group(1) if m_style else \"<style></style>\"\n             body_s = m_body.group(1).strip() if m_body else \"\"\n             return (style_s, body_s)\n \n-        def _write_duplex_set(\n-            size_key: str, subset: list[Notecard]\n-        ) -> list[str]:\n+        def _write_duplex_set(size_key: str, subset: list[Notecard]) -> list[str]:\n             if not subset:\n                 return []\n             # Split into odds/evens based on per-size order\n             odds: list[Notecard] = []\n             evens: list[Notecard] = []\n@@ -1110,13 +1070,11 @@\n                     seq[0], sheet=sheet, both_sides=False\n                 )\n                 style_s, body_first = _extract_style_and_body(first_html)\n                 bodies = [body_first]\n                 for c in seq[1:]:\n-                    h = self._render_card_html(\n-                        c, sheet=sheet, both_sides=False\n-                    )\n+                    h = self._render_card_html(c, sheet=sheet, both_sides=False)\n                     _, b = _extract_style_and_body(h)\n                     bodies.append(b)\n \n                 doc_html = f\"\"\"<!doctype html>\n <html>\n@@ -1135,13 +1093,11 @@\n                 )\n                 with open(html_path, \"w\", encoding=\"utf-8\") as fh:\n                     fh.write(doc_html)\n \n                 # Export to PDF\n-                pdf_path = os.path.join(\n-                    self.out_dir, f\"duplex_{size_key}_{label}.pdf\"\n-                )\n+                pdf_path = os.path.join(self.out_dir, f\"duplex_{size_key}_{label}.pdf\")\n                 w_in, h_in = (5.0, 3.0) if size_key == \"3x5\" else (6.0, 4.0)\n                 if (\n                     not force_wk\n                     and getattr(self.md, \"can_pdf\", None)\n                     and self.md.can_pdf()\n@@ -1339,15 +1295,11 @@\n         kind = (c.type or \"\").strip().lower()\n         series = c.series_name or \"\"\n         ver = c.series_version or \"\"\n         n = f\"{c.index} of {c.total}\" if c.index and c.total else \"\"\n         b1 = f'<span class=\"badge\">{html.escape(kind)}</span>' if kind else \"\"\n-        b2 = (\n-            f'<span class=\"badge\">{html.escape(series)}</span>'\n-            if series\n-            else \"\"\n-        )\n+        b2 = f'<span class=\"badge\">{html.escape(series)}</span>' if series else \"\"\n         b3 = f'<span class=\"badge\">v{html.escape(ver)}</span>' if ver else \"\"\n         b4 = f'<span class=\"badge\">{html.escape(n)}</span>' if n else \"\"\n         return \"\".join([b1, b2, b3, b4])\n \n     def _qr_data_uri(self, payload: str) -> str:\n",
            "tool": "black",
            "tool_module": "black",
            "tool_version": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "duration_seconds": 0.12565010000253096,
            "ended_at": "2025-10-08T12:48:52.607102+00:00",
            "exit": 1,
            "repo": "x_legatus_acta_schedae_x",
            "repo_hash": "8b9bd8670f31639839d13df034bf4fa2be0969f83cfe928151b54427786ff2a8",
            "repo_path": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "started_at": "2025-10-08T12:48:52.481453+00:00",
            "stderr": "",
            "stdout": "TC001 Move application import `.core.services.ai_service.AIService` into a type-checking block\n --> app.py:5:39\n  |\n3 | from dataclasses import dataclass\n4 |\n5 | from .core.services.ai_service import AIService\n  |                                       ^^^^^^^^^\n6 | from .core.services.collaboration_service import CollaborationService\n7 | from .core.services.scheduler_service import SchedulerService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.core.services.collaboration_service.CollaborationService` into a type-checking block\n --> app.py:6:50\n  |\n5 | from .core.services.ai_service import AIService\n6 | from .core.services.collaboration_service import CollaborationService\n  |                                                  ^^^^^^^^^^^^^^^^^^^^\n7 | from .core.services.scheduler_service import SchedulerService\n8 | from .core.services.search_service import SearchService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.core.services.scheduler_service.SchedulerService` into a type-checking block\n --> app.py:7:46\n  |\n5 | from .core.services.ai_service import AIService\n6 | from .core.services.collaboration_service import CollaborationService\n7 | from .core.services.scheduler_service import SchedulerService\n  |                                              ^^^^^^^^^^^^^^^^\n8 | from .core.services.search_service import SearchService\n9 | from .core.services.task_service import TaskService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.core.services.search_service.SearchService` into a type-checking block\n  --> app.py:8:43\n   |\n 6 | from .core.services.collaboration_service import CollaborationService\n 7 | from .core.services.scheduler_service import SchedulerService\n 8 | from .core.services.search_service import SearchService\n   |                                           ^^^^^^^^^^^^^\n 9 | from .core.services.task_service import TaskService\n10 | from .infrastructure.config import AppConfig, load_config\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `.core.services.task_service.TaskService` into a type-checking block\n  --> app.py:9:41\n   |\n 7 | from .core.services.scheduler_service import SchedulerService\n 8 | from .core.services.search_service import SearchService\n 9 | from .core.services.task_service import TaskService\n   |                                         ^^^^^^^^^^^\n10 | from .infrastructure.config import AppConfig, load_config\n11 | from .infrastructure.di import AppContext, build_context\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\domain\\events.py:4:22\n  |\n3 | from dataclasses import dataclass\n4 | from datetime import datetime\n  |                      ^^^^^^^^\n5 | from typing import Any, Protocol\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.task.Task` into a type-checking block\n --> core\\domain\\events.py:7:19\n  |\n5 | from typing import Any, Protocol\n6 |\n7 | from .task import Task\n  |                   ^^^^\n  |\nhelp: Move into type-checking block\n\nFBT001 Boolean-typed positional argument in function definition\n   --> core\\domain\\review.py:146:30\n    |\n144 |         self.due_at = entry.next_due\n145 |\n146 |     def mark_suspended(self, suspended: bool) -> None:\n    |                              ^^^^^^^^^\n147 |         self.suspended = suspended\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\domain\\task.py:26:15\n   |\n24 |     normalized = priority.lower()\n25 |     if normalized not in VALID_PRIORITIES:\n26 |         raise ValueError(f\"Invalid priority {priority}\")\n   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n27 |     return normalized\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> core\\domain\\task.py:26:26\n   |\n24 |     normalized = priority.lower()\n25 |     if normalized not in VALID_PRIORITIES:\n26 |         raise ValueError(f\"Invalid priority {priority}\")\n   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n27 |     return normalized\n   |\nhelp: Assign to variable; remove f-string literal\n\nC901 `_replace` is too complex (17 > 10)\n  --> core\\domain\\task.py:96:9\n   |\n94 |         return self.with_tags(remaining)\n95 |\n96 |     def _replace(self, **changes: object) -> Task:\n   |         ^^^^^^^^\n97 |         new_id = self.id\n98 |         if \"id\" in changes:\n   |\n\nPLR0912 Too many branches (17 > 12)\n  --> core\\domain\\task.py:96:9\n   |\n94 |         return self.with_tags(remaining)\n95 |\n96 |     def _replace(self, **changes: object) -> Task:\n   |         ^^^^^^^^\n97 |         new_id = self.id\n98 |         if \"id\" in changes:\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:101:23\n    |\n 99 |             id_candidate = changes[\"id\"]\n100 |             if not isinstance(id_candidate, str):\n101 |                 raise TypeError(\"id must be a string\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n102 |             new_id = id_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:101:33\n    |\n 99 |             id_candidate = changes[\"id\"]\n100 |             if not isinstance(id_candidate, str):\n101 |                 raise TypeError(\"id must be a string\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^\n102 |             new_id = id_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:108:23\n    |\n106 |             description_candidate = changes[\"description\"]\n107 |             if not isinstance(description_candidate, str):\n108 |                 raise TypeError(\"description must be a string\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n109 |             new_description = description_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:108:33\n    |\n106 |             description_candidate = changes[\"description\"]\n107 |             if not isinstance(description_candidate, str):\n108 |                 raise TypeError(\"description must be a string\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n109 |             new_description = description_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:115:23\n    |\n113 |             created_candidate = changes[\"created\"]\n114 |             if not isinstance(created_candidate, datetime):\n115 |                 raise TypeError(\"created must be a datetime\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n116 |             new_created = created_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:115:33\n    |\n113 |             created_candidate = changes[\"created\"]\n114 |             if not isinstance(created_candidate, datetime):\n115 |                 raise TypeError(\"created must be a datetime\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n116 |             new_created = created_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:122:23\n    |\n120 |             status_candidate = changes[\"status\"]\n121 |             if not isinstance(status_candidate, str):\n122 |                 raise TypeError(\"status must be a string\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n123 |             new_status = status_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:122:33\n    |\n120 |             status_candidate = changes[\"status\"]\n121 |             if not isinstance(status_candidate, str):\n122 |                 raise TypeError(\"status must be a string\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n123 |             new_status = status_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:129:23\n    |\n127 |             due_candidate = changes[\"due\"]\n128 |             if due_candidate is not None and not isinstance(due_candidate, datetime):\n129 |                 raise TypeError(\"due must be a datetime or None\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n130 |             new_due = due_candidate\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:129:33\n    |\n127 |             due_candidate = changes[\"due\"]\n128 |             if due_candidate is not None and not isinstance(due_candidate, datetime):\n129 |                 raise TypeError(\"due must be a datetime or None\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n130 |             new_due = due_candidate\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:142:23\n    |\n140 |                 new_tags = _normalize_tags(cast(\"Iterable[str]\", tags_candidate))\n141 |             else:\n142 |                 raise TypeError(\"tags must be an iterable of strings\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n143 |\n144 |         new_priority = self.priority\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:142:33\n    |\n140 |                 new_tags = _normalize_tags(cast(\"Iterable[str]\", tags_candidate))\n141 |             else:\n142 |                 raise TypeError(\"tags must be an iterable of strings\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n143 |\n144 |         new_priority = self.priority\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:150:23\n    |\n148 |                 priority_candidate, str\n149 |             ):\n150 |                 raise TypeError(\"priority must be a string or None\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n151 |             new_priority = _normalize_priority(priority_candidate)\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:150:33\n    |\n148 |                 priority_candidate, str\n149 |             ):\n150 |                 raise TypeError(\"priority must be a string or None\")\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n151 |             new_priority = _normalize_priority(priority_candidate)\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:165:19\n    |\n163 |     def validate(self) -> None:\n164 |         if not self.description:\n165 |             raise ValueError(\"Description empty\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n166 |         if self.status not in VALID_STATUSES:\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:165:30\n    |\n163 |     def validate(self) -> None:\n164 |         if not self.description:\n165 |             raise ValueError(\"Description empty\")\n    |                              ^^^^^^^^^^^^^^^^^^^\n166 |         if self.status not in VALID_STATUSES:\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:167:19\n    |\n165 |             raise ValueError(\"Description empty\")\n166 |         if self.status not in VALID_STATUSES:\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |         if self.priority and self.priority not in VALID_PRIORITIES:\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\domain\\task.py:167:30\n    |\n165 |             raise ValueError(\"Description empty\")\n166 |         if self.status not in VALID_STATUSES:\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |         if self.priority and self.priority not in VALID_PRIORITIES:\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n    |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:169:19\n    |\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n168 |         if self.priority and self.priority not in VALID_PRIORITIES:\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n170 |         if self.due and self.due < self.created:\n171 |             raise ValueError(\"Due date earlier than creation\")\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\domain\\task.py:169:30\n    |\n167 |             raise ValueError(f\"Invalid status {self.status}\")\n168 |         if self.priority and self.priority not in VALID_PRIORITIES:\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n170 |         if self.due and self.due < self.created:\n171 |             raise ValueError(\"Due date earlier than creation\")\n    |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\domain\\task.py:171:19\n    |\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n170 |         if self.due and self.due < self.created:\n171 |             raise ValueError(\"Due date earlier than creation\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\domain\\task.py:171:30\n    |\n169 |             raise ValueError(f\"Invalid priority {self.priority}\")\n170 |         if self.due and self.due < self.created:\n171 |             raise ValueError(\"Due date earlier than creation\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Assign to variable; remove string literal\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\ports\\review_repo.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\ports\\review_repo.py:6:1\n  |\n4 | from typing import Protocol\n5 |\n6 | from ..domain.review import ReviewRecord\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.review.ReviewRecord` into a type-checking block\n --> core\\ports\\review_repo.py:6:29\n  |\n4 | from typing import Protocol\n5 |\n6 | from ..domain.review import ReviewRecord\n  |                             ^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n --> core\\ports\\scheduler.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Callable\n  |                             ^^^^^^^^\n4 | from datetime import datetime\n5 | from typing import Any, Protocol\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\ports\\scheduler.py:4:22\n  |\n3 | from collections.abc import Callable\n4 | from datetime import datetime\n  |                      ^^^^^^^^\n5 | from typing import Any, Protocol\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\ports\\search_index.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\ports\\search_index.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\ports\\search_index.py:6:1\n  |\n4 | from typing import Protocol\n5 |\n6 | from ..domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n --> core\\ports\\search_index.py:6:27\n  |\n4 | from typing import Protocol\n5 |\n6 | from ..domain.task import Task\n  |                           ^^^^\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\ports\\task_repo.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import datetime\n5 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\ports\\task_repo.py:4:22\n  |\n3 | from collections.abc import Iterable\n4 | from datetime import datetime\n  |                      ^^^^^^^^\n5 | from typing import Protocol\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\ports\\task_repo.py:7:1\n  |\n5 | from typing import Protocol\n6 |\n7 | from ..domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n --> core\\ports\\task_repo.py:7:27\n  |\n5 | from typing import Protocol\n6 |\n7 | from ..domain.task import Task\n  |                           ^^^^\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\ai_briefing_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass\n5 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.ai_service.AIService` into a type-checking block\n --> core\\services\\ai_briefing_service.py:7:25\n  |\n5 | from datetime import UTC, datetime\n6 |\n7 | from .ai_service import AIService, TaskSummary\n  |                         ^^^^^^^^^\n8 | from .review_guidance_service import ReviewGuidance, ReviewGuidanceService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.ai_service.TaskSummary` into a type-checking block\n --> core\\services\\ai_briefing_service.py:7:36\n  |\n5 | from datetime import UTC, datetime\n6 |\n7 | from .ai_service import AIService, TaskSummary\n  |                                    ^^^^^^^^^^^\n8 | from .review_guidance_service import ReviewGuidance, ReviewGuidanceService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.review_guidance_service.ReviewGuidance` into a type-checking block\n --> core\\services\\ai_briefing_service.py:8:38\n  |\n7 | from .ai_service import AIService, TaskSummary\n8 | from .review_guidance_service import ReviewGuidance, ReviewGuidanceService\n  |                                      ^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.review_guidance_service.ReviewGuidanceService` into a type-checking block\n --> core\\services\\ai_briefing_service.py:8:54\n  |\n7 | from .ai_service import AIService, TaskSummary\n8 | from .review_guidance_service import ReviewGuidance, ReviewGuidanceService\n  |                                                      ^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nE501 Line too long (90 > 88)\n  --> core\\services\\ai_briefing_service.py:23:89\n   |\n22 | class AIBriefingService:\n23 |     \"\"\"Produces consolidated daily briefings blending AI summaries and review guidance.\"\"\"\n   |                                                                                         ^^\n24 |\n25 |     def __init__(\n   |\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\ai_service.py:4:29\n  |\n3 | from collections import Counter\n4 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n5 | from dataclasses import dataclass\n6 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\ai_service.py:8:1\n   |\n 6 | from datetime import UTC, datetime, timedelta\n 7 |\n 8 | from ..domain.events import EventDispatcher\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..domain.task import Task\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n  --> core\\services\\ai_service.py:8:29\n   |\n 6 | from datetime import UTC, datetime, timedelta\n 7 |\n 8 | from ..domain.events import EventDispatcher\n   |                             ^^^^^^^^^^^^^^^\n 9 | from ..domain.task import Task\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\ai_service.py:9:1\n   |\n 8 | from ..domain.events import EventDispatcher\n 9 | from ..domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n  --> core\\services\\ai_service.py:9:27\n   |\n 8 | from ..domain.events import EventDispatcher\n 9 | from ..domain.task import Task\n   |                           ^^^^\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\ai_service.py:10:1\n   |\n 8 | from ..domain.events import EventDispatcher\n 9 | from ..domain.task import Task\n10 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\ai_service.py:10:31\n   |\n 8 | from ..domain.events import EventDispatcher\n 9 | from ..domain.task import Task\n10 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nPERF401 Use a list comprehension to create a transformed list\n   --> core\\services\\ai_service.py:127:13\n    |\n125 |           upcoming_rows: list[UpcomingTask] = []\n126 |           for task in candidates[:count]:\n127 | /             upcoming_rows.append(\n128 | |                 UpcomingTask(\n129 | |                     task_id=task.id,\n130 | |                     description=task.description,\n131 | |                     due=task.due,\n132 | |                     priority=task.priority,\n133 | |                 )\n134 | |             )\n    | |_____________^\n135 |           return upcoming_rows\n    |\nhelp: Replace for loop with list comprehension\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> core\\services\\automation_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Mapping\n  |                             ^^^^^^^\n4 | from datetime import UTC, datetime\n5 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\automation_service.py:7:1\n  |\n5 | from typing import Any\n6 |\n7 | from ...infrastructure.automation import AutomationWebhookClient\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ...infrastructure.telemetry import TelemetryClient\n9 | from ..domain import events\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.automation.AutomationWebhookClient` into a type-checking block\n --> core\\services\\automation_service.py:7:42\n  |\n5 | from typing import Any\n6 |\n7 | from ...infrastructure.automation import AutomationWebhookClient\n  |                                          ^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ...infrastructure.telemetry import TelemetryClient\n9 | from ..domain import events\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\automation_service.py:8:1\n   |\n 7 | from ...infrastructure.automation import AutomationWebhookClient\n 8 | from ...infrastructure.telemetry import TelemetryClient\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.telemetry.TelemetryClient` into a type-checking block\n  --> core\\services\\automation_service.py:8:41\n   |\n 7 | from ...infrastructure.automation import AutomationWebhookClient\n 8 | from ...infrastructure.telemetry import TelemetryClient\n   |                                         ^^^^^^^^^^^^^^^\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\automation_service.py:9:1\n   |\n 7 | from ...infrastructure.automation import AutomationWebhookClient\n 8 | from ...infrastructure.telemetry import TelemetryClient\n 9 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..ports.task_repo import ITaskRepository\n11 | from .ai_service import AIService, TaskSummary\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\automation_service.py:10:1\n   |\n 8 | from ...infrastructure.telemetry import TelemetryClient\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from .ai_service import AIService, TaskSummary\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\automation_service.py:10:31\n   |\n 8 | from ...infrastructure.telemetry import TelemetryClient\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n11 | from .ai_service import AIService, TaskSummary\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `.ai_service.AIService` into a type-checking block\n  --> core\\services\\automation_service.py:11:25\n   |\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n11 | from .ai_service import AIService, TaskSummary\n   |                         ^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `.ai_service.TaskSummary` into a type-checking block\n  --> core\\services\\automation_service.py:11:36\n   |\n 9 | from ..domain import events\n10 | from ..ports.task_repo import ITaskRepository\n11 | from .ai_service import AIService, TaskSummary\n   |                                    ^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\card_action_service.py:7:1\n  |\n5 | from urllib.parse import parse_qs, urlparse\n6 |\n7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..domain import events\n9 | from ..domain.events import EventDispatcher\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\card_action_service.py:7:1\n  |\n5 | from urllib.parse import parse_qs, urlparse\n6 |\n7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..domain import events\n9 | from ..domain.events import EventDispatcher\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...x_cls_legatus_acta_schedae_x.Notecard` into a type-checking block\n --> core\\services\\card_action_service.py:7:45\n  |\n5 | from urllib.parse import parse_qs, urlparse\n6 |\n7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n  |                                             ^^^^^^^^\n8 | from ..domain import events\n9 | from ..domain.events import EventDispatcher\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `...x_cls_legatus_acta_schedae_x.Storage` into a type-checking block\n --> core\\services\\card_action_service.py:7:55\n  |\n5 | from urllib.parse import parse_qs, urlparse\n6 |\n7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n  |                                                       ^^^^^^^\n8 | from ..domain import events\n9 | from ..domain.events import EventDispatcher\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\card_action_service.py:8:1\n   |\n 7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n 8 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..domain.events import EventDispatcher\n10 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\card_action_service.py:9:1\n   |\n 7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n 8 | from ..domain import events\n 9 | from ..domain.events import EventDispatcher\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n  --> core\\services\\card_action_service.py:9:29\n   |\n 7 | from ...x_cls_legatus_acta_schedae_x import Notecard, Storage\n 8 | from ..domain import events\n 9 | from ..domain.events import EventDispatcher\n   |                             ^^^^^^^^^^^^^^^\n10 | from ..services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\card_action_service.py:10:1\n   |\n 8 | from ..domain import events\n 9 | from ..domain.events import EventDispatcher\n10 | from ..services.task_service import TaskService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..services.task_service.TaskService` into a type-checking block\n  --> core\\services\\card_action_service.py:10:37\n   |\n 8 | from ..domain import events\n 9 | from ..domain.events import EventDispatcher\n10 | from ..services.task_service import TaskService\n   |                                     ^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\card_action_service.py:123:15\n    |\n121 |             )\n122 |\n123 |         raise ValueError(f\"Unsupported task update action '{action}'\")\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |\n125 |     @staticmethod\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\services\\card_action_service.py:123:26\n    |\n121 |             )\n122 |\n123 |         raise ValueError(f\"Unsupported task update action '{action}'\")\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |\n125 |     @staticmethod\n    |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\card_action_service.py:129:19\n    |\n127 |         normalized = (task_update or \"\").strip().lower() or \"complete\"\n128 |         if normalized not in {\"complete\", \"none\"}:\n129 |             raise ValueError(\"task_update must be one of: 'complete', 'none'\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n130 |         return normalized\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\services\\card_action_service.py:129:30\n    |\n127 |         normalized = (task_update or \"\").strip().lower() or \"complete\"\n128 |         if normalized not in {\"complete\", \"none\"}:\n129 |             raise ValueError(\"task_update must be one of: 'complete', 'none'\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n130 |         return normalized\n    |\nhelp: Assign to variable; remove string literal\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> core\\services\\card_action_service.py:135:55\n    |\n133 |     def _extract_task_id(card: Notecard) -> str | None:\n134 |         for tag in card.tags:\n135 |             if tag.startswith(\"task:\") and len(tag) > 5:\n    |                                                       ^\n136 |                 return tag.split(\":\", 1)[1]\n137 |         if card.symbol_data:\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> core\\services\\card_action_service.py:144:20\n    |\n142 |                 if task_param:\n143 |                     return task_param[0]\n144 |             except Exception:\n    |                    ^^^^^^^^^\n145 |                 return None\n146 |         return None\n    |\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\collaboration_service.py:6:29\n  |\n4 | import json\n5 | import os\n6 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n7 | from dataclasses import asdict, dataclass\n8 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\collaboration_service.py:6:39\n  |\n4 | import json\n5 | import os\n6 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n7 | from dataclasses import asdict, dataclass\n8 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\collaboration_service.py:16:1\n   |\n14 | from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC\n15 |\n16 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n17 | from ..domain.task import Task\n18 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\collaboration_service.py:17:1\n   |\n16 | from ..domain import events\n17 | from ..domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n18 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\collaboration_service.py:18:1\n   |\n16 | from ..domain import events\n17 | from ..domain.task import Task\n18 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\collaboration_service.py:18:31\n   |\n16 | from ..domain import events\n17 | from ..domain.task import Task\n18 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\collaboration_service.py:80:19\n   |\n78 |         src_path = Path(source)\n79 |         if not src_path.exists():\n80 |             raise FileNotFoundError(f\"Sync bundle not found: {src_path}\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n81 |         bundle = json.loads(src_path.read_text(encoding=\"utf-8\"))\n82 |         salt_b64 = bundle.get(\"salt\")\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> core\\services\\collaboration_service.py:80:37\n   |\n78 |         src_path = Path(source)\n79 |         if not src_path.exists():\n80 |             raise FileNotFoundError(f\"Sync bundle not found: {src_path}\")\n   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n81 |         bundle = json.loads(src_path.read_text(encoding=\"utf-8\"))\n82 |         salt_b64 = bundle.get(\"salt\")\n   |\nhelp: Assign to variable; remove f-string literal\n\nTRY004 Prefer `TypeError` exception for invalid type\n  --> core\\services\\collaboration_service.py:85:13\n   |\n83 |         ciphertext = bundle.get(\"ciphertext\")\n84 |         if not isinstance(salt_b64, str) or not isinstance(ciphertext, str):\n85 |             raise ValueError(\"Malformed sync bundle\")\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n86 |         salt = base64.b64decode(salt_b64)\n87 |         decrypted = self._decrypt(ciphertext.encode(\"utf-8\"), passphrase, salt)\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\collaboration_service.py:85:19\n   |\n83 |         ciphertext = bundle.get(\"ciphertext\")\n84 |         if not isinstance(salt_b64, str) or not isinstance(ciphertext, str):\n85 |             raise ValueError(\"Malformed sync bundle\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n86 |         salt = base64.b64decode(salt_b64)\n87 |         decrypted = self._decrypt(ciphertext.encode(\"utf-8\"), passphrase, salt)\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> core\\services\\collaboration_service.py:85:30\n   |\n83 |         ciphertext = bundle.get(\"ciphertext\")\n84 |         if not isinstance(salt_b64, str) or not isinstance(ciphertext, str):\n85 |             raise ValueError(\"Malformed sync bundle\")\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^\n86 |         salt = base64.b64decode(salt_b64)\n87 |         decrypted = self._decrypt(ciphertext.encode(\"utf-8\"), passphrase, salt)\n   |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\collaboration_service.py:93:19\n   |\n91 |             json.JSONDecodeError\n92 |         ) as exc:  # pragma: no cover - defensive guard\n93 |             raise ValueError(\"Unable to decode sync payload\") from exc\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n94 |         imported_tasks: list[Task] = []\n95 |         for record in records:\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> core\\services\\collaboration_service.py:93:30\n   |\n91 |             json.JSONDecodeError\n92 |         ) as exc:  # pragma: no cover - defensive guard\n93 |             raise ValueError(\"Unable to decode sync payload\") from exc\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n94 |         imported_tasks: list[Task] = []\n95 |         for record in records:\n   |\nhelp: Assign to variable; remove string literal\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\plugin_bus.py:5:29\n  |\n3 | import inspect\n4 | import logging\n5 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n6 | from dataclasses import dataclass\n7 | from importlib import import_module\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\plugin_bus.py:5:39\n  |\n3 | import inspect\n4 | import logging\n5 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n6 | from dataclasses import dataclass\n7 | from importlib import import_module\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:10:1\n   |\n 8 | from typing import Any, Protocol, cast\n 9 |\n10 | from ...infrastructure.config import AppConfig\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.config.AppConfig` into a type-checking block\n  --> core\\services\\plugin_bus.py:10:38\n   |\n 8 | from typing import Any, Protocol, cast\n 9 |\n10 | from ...infrastructure.config import AppConfig\n   |                                      ^^^^^^^^^\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:11:1\n   |\n10 | from ...infrastructure.config import AppConfig\n11 | from ...infrastructure.telemetry import TelemetryClient\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.telemetry.TelemetryClient` into a type-checking block\n  --> core\\services\\plugin_bus.py:11:41\n   |\n10 | from ...infrastructure.config import AppConfig\n11 | from ...infrastructure.telemetry import TelemetryClient\n   |                                         ^^^^^^^^^^^^^^^\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:12:1\n   |\n10 | from ...infrastructure.config import AppConfig\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:13:1\n   |\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:13:1\n   |\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n  --> core\\services\\plugin_bus.py:13:29\n   |\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   |                             ^^^^^^^^^^^^^^^\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `..domain.events.EventSubscriber` into a type-checking block\n  --> core\\services\\plugin_bus.py:13:46\n   |\n11 | from ...infrastructure.telemetry import TelemetryClient\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n   |                                              ^^^^^^^^^^^^^^^\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:14:1\n   |\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n15 | from ..services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..services.ai_service.AIService` into a type-checking block\n  --> core\\services\\plugin_bus.py:14:35\n   |\n12 | from ..domain import events\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n   |                                   ^^^^^^^^^\n15 | from ..services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\plugin_bus.py:15:1\n   |\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n16 |\n17 | DomainEventType = (\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..services.task_service.TaskService` into a type-checking block\n  --> core\\services\\plugin_bus.py:15:37\n   |\n13 | from ..domain.events import EventDispatcher, EventSubscriber\n14 | from ..services.ai_service import AIService\n15 | from ..services.task_service import TaskService\n   |                                     ^^^^^^^^^^^\n16 |\n17 | DomainEventType = (\n   |\nhelp: Move into type-checking block\n\nPLR0913 Too many arguments in function definition (6 > 5)\n  --> core\\services\\plugin_bus.py:43:9\n   |\n42 | class PluginContext:\n43 |     def __init__(\n   |         ^^^^^^^^\n44 |         self,\n45 |         plugin_name: str,\n   |\n\nSIM108 Use ternary operator `plugin_instance = plugin_obj() if inspect.isclass(plugin_obj) else plugin_obj` instead of `if`-`else`-block\n   --> core\\services\\plugin_bus.py:171:9\n    |\n169 |               plugin_obj = module.plugin\n170 |\n171 | /         if inspect.isclass(plugin_obj):\n172 | |             plugin_instance = plugin_obj()\n173 | |         else:\n174 | |             plugin_instance = plugin_obj\n    | |________________________________________^\n175 |\n176 |           if not hasattr(plugin_instance, \"setup\"):\n    |\nhelp: Replace `if`-`else`-block with `plugin_instance = plugin_obj() if inspect.isclass(plugin_obj) else plugin_obj`\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\review_guidance_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass\n5 | from datetime import datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\services\\review_guidance_service.py:5:22\n  |\n3 | from collections.abc import Sequence\n4 | from dataclasses import dataclass\n5 | from datetime import datetime, timedelta\n  |                      ^^^^^^^^\n6 |\n7 | from ..domain.review import ReviewRecord\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.timedelta` into a type-checking block\n --> core\\services\\review_guidance_service.py:5:32\n  |\n3 | from collections.abc import Sequence\n4 | from dataclasses import dataclass\n5 | from datetime import datetime, timedelta\n  |                                ^^^^^^^^^\n6 |\n7 | from ..domain.review import ReviewRecord\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\review_guidance_service.py:7:1\n  |\n5 | from datetime import datetime, timedelta\n6 |\n7 | from ..domain.review import ReviewRecord\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..domain.task import Task\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.review.ReviewRecord` into a type-checking block\n --> core\\services\\review_guidance_service.py:7:29\n  |\n5 | from datetime import datetime, timedelta\n6 |\n7 | from ..domain.review import ReviewRecord\n  |                             ^^^^^^^^^^^^\n8 | from ..domain.task import Task\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\review_guidance_service.py:8:1\n  |\n7 | from ..domain.review import ReviewRecord\n8 | from ..domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n --> core\\services\\review_guidance_service.py:8:27\n  |\n7 | from ..domain.review import ReviewRecord\n8 | from ..domain.task import Task\n  |                           ^^^^\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.review_service.ReviewPlanItem` into a type-checking block\n --> core\\services\\review_guidance_service.py:9:29\n  |\n7 | from ..domain.review import ReviewRecord\n8 | from ..domain.task import Task\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |                             ^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nTC001 Move application import `.review_service.ReviewService` into a type-checking block\n --> core\\services\\review_guidance_service.py:9:45\n  |\n7 | from ..domain.review import ReviewRecord\n8 | from ..domain.task import Task\n9 | from .review_service import ReviewPlanItem, ReviewService\n  |                                             ^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> core\\services\\review_guidance_service.py:75:31\n   |\n73 |                 score += 1.25\n74 |                 reasons.append(\"task due\")\n75 |             elif delta_days < 2:\n   |                               ^\n76 |                 score += 0.75\n77 |                 reasons.append(\"task due soon\")\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n  --> core\\services\\review_guidance_service.py:88:33\n   |\n86 |             reasons.append(\"recent card scan\")\n87 |\n88 |         if record.repetitions < 3:\n   |                                 ^\n89 |             score += 0.3\n90 |             reasons.append(f\"{record.repetitions} reps\")\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2.0` with a constant variable\n  --> core\\services\\review_guidance_service.py:92:33\n   |\n90 |             reasons.append(f\"{record.repetitions} reps\")\n91 |\n92 |         if record.ease_factor < 2.0:\n   |                                 ^^^\n93 |             score += 0.4\n94 |             reasons.append(\"low ease\")\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> core\\services\\review_guidance_service.py:113:27\n    |\n111 |         if task.status == \"completed\":\n112 |             return \"confirm archive\"\n113 |         if overdue_days > 2:\n    |                           ^\n114 |             return \"rescue overdue review\"\n115 |         if task.priority == \"high\":\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `0.5` with a constant variable\n   --> core\\services\\review_guidance_service.py:117:27\n    |\n115 |         if task.priority == \"high\":\n116 |             return \"review then commit\"\n117 |         if overdue_days > 0.5:\n    |                           ^^^\n118 |             return \"refresh context\"\n119 |         return \"review next\"\n    |\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:8:1\n   |\n 6 | from typing import Any, cast\n 7 |\n 8 | from ..domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:9:1\n   |\n 8 | from ..domain import events\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:9:1\n   |\n 8 | from ..domain import events\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:10:1\n   |\n 8 | from ..domain import events\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ..ports.review_repo import IReviewRepository\n12 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n  --> core\\services\\review_service.py:10:27\n   |\n 8 | from ..domain import events\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n   |                           ^^^^\n11 | from ..ports.review_repo import IReviewRepository\n12 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:11:1\n   |\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.review_repo.IReviewRepository` into a type-checking block\n  --> core\\services\\review_service.py:11:33\n   |\n 9 | from ..domain.review import ReviewHistoryEntry, ReviewRecord\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n   |                                 ^^^^^^^^^^^^^^^^^\n12 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\review_service.py:12:1\n   |\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n12 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\review_service.py:12:31\n   |\n10 | from ..domain.task import Task\n11 | from ..ports.review_repo import IReviewRepository\n12 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nANN204 Missing return type annotation for special method `__init__`\n  --> core\\services\\review_service.py:35:9\n   |\n34 | class ReviewService:\n35 |     def __init__(\n   |         ^^^^^^^^\n36 |         self,\n37 |         repository: IReviewRepository,\n   |\nhelp: Add return type annotation: `None`\n\nC401 Unnecessary generator (rewrite as a set comprehension)\n   --> core\\services\\review_service.py:133:22\n    |\n131 |         moment = now or _now()\n132 |         results: list[ReviewPlanItem] = []\n133 |         tag_filter = set(t.lower() for t in tags) if tags else None\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n134 |         for record in self._repository.list():\n135 |             if record.suspended:\n    |\nhelp: Rewrite as a set comprehension\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> core\\services\\review_service.py:166:37\n    |\n164 |         context: Mapping[str, Any] | None = None,\n165 |     ) -> ReviewRecord:\n166 |         if quality < 0 or quality > 5:\n    |                                     ^\n167 |             raise ValueError(\"quality must be between 0 and 5\")\n168 |         reviewed_time = reviewed_at or _now()\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\review_service.py:167:19\n    |\n165 |     ) -> ReviewRecord:\n166 |         if quality < 0 or quality > 5:\n167 |             raise ValueError(\"quality must be between 0 and 5\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |         reviewed_time = reviewed_at or _now()\n169 |         if reviewed_time.tzinfo is None:\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> core\\services\\review_service.py:167:30\n    |\n165 |     ) -> ReviewRecord:\n166 |         if quality < 0 or quality > 5:\n167 |             raise ValueError(\"quality must be between 0 and 5\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |         reviewed_time = reviewed_at or _now()\n169 |         if reviewed_time.tzinfo is None:\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\review_service.py:173:19\n    |\n171 |         task = self._task_repository.get(task_id)\n172 |         if task is None:\n173 |             raise KeyError(f\"Task {task_id} not found\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n174 |         record = self._repository.get(task_id)\n175 |         if record is None:\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\services\\review_service.py:173:28\n    |\n171 |         task = self._task_repository.get(task_id)\n172 |         if task is None:\n173 |             raise KeyError(f\"Task {task_id} not found\")\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n174 |         record = self._repository.get(task_id)\n175 |         if record is None:\n    |\nhelp: Assign to variable; remove f-string literal\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n   --> core\\services\\review_service.py:181:22\n    |\n179 |         )\n180 |         ease = max(1.3, ease)\n181 |         if quality < 3:\n    |                      ^\n182 |             repetitions = 0\n183 |             interval_days = 1.0\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> core\\services\\review_service.py:188:33\n    |\n186 |             if repetitions == 1:\n187 |                 interval_days = 1.0\n188 |             elif repetitions == 2:\n    |                                 ^\n189 |                 interval_days = 6.0\n190 |             else:\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> core\\services\\review_service.py:207:37\n    |\n205 |         return self._repository.save(record)\n206 |\n207 |     def suspend(self, task_id: str, suspended: bool) -> ReviewRecord:\n    |                                     ^^^^^^^^^\n208 |         task = self._task_repository.get(task_id)\n209 |         if task is None:\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\review_service.py:210:19\n    |\n208 |         task = self._task_repository.get(task_id)\n209 |         if task is None:\n210 |             raise KeyError(f\"Task {task_id} not found\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n211 |         record = self._repository.get(task_id)\n212 |         if record is None:\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\services\\review_service.py:210:28\n    |\n208 |         task = self._task_repository.get(task_id)\n209 |         if task is None:\n210 |             raise KeyError(f\"Task {task_id} not found\")\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n211 |         record = self._repository.get(task_id)\n212 |         if record is None:\n    |\nhelp: Assign to variable; remove f-string literal\n\nPLR0911 Too many return statements (7 > 6)\n   --> core\\services\\review_service.py:238:9\n    |\n237 |     @staticmethod\n238 |     def _infer_quality_from_scan(event: events.CardScanned) -> int:\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n239 |         metadata = event.metadata or {}\n240 |         if event.task_error:\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `value`\n   --> core\\services\\review_service.py:266:28\n    |\n265 |     @staticmethod\n266 |     def _coerce_int(value: Any) -> int | None:\n    |                            ^^^\n267 |         if isinstance(value, bool):\n268 |             return 1 if value else 0\n    |\n\nRUF046 Value being cast to `int` is already an integer\n   --> core\\services\\review_service.py:270:20\n    |\n268 |             return 1 if value else 0\n269 |         if isinstance(value, (int, float)):\n270 |             return int(round(value))\n    |                    ^^^^^^^^^^^^^^^^^\n271 |         if isinstance(value, str):\n272 |             try:\n    |\nhelp: Remove unnecessary `int` call\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `value`\n   --> core\\services\\review_service.py:285:29\n    |\n283 |             return {}\n284 |\n285 |         def _convert(value: Any) -> Any:\n    |                             ^^^\n286 |             if isinstance(value, (str, int, float, bool)) or value is None:\n287 |                 return value\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_convert`\n   --> core\\services\\review_service.py:285:37\n    |\n283 |             return {}\n284 |\n285 |         def _convert(value: Any) -> Any:\n    |                                     ^^^\n286 |             if isinstance(value, (str, int, float, bool)) or value is None:\n287 |                 return value\n    |\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:5:1\n  |\n3 | from datetime import UTC, datetime\n4 |\n5 | from ...infrastructure.telemetry import TelemetryClient\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...infrastructure.telemetry.TelemetryClient` into a type-checking block\n --> core\\services\\scheduler_service.py:5:41\n  |\n3 | from datetime import UTC, datetime\n4 |\n5 | from ...infrastructure.telemetry import TelemetryClient\n  |                                         ^^^^^^^^^^^^^^^\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:6:1\n  |\n5 | from ...infrastructure.telemetry import TelemetryClient\n6 | from ..domain import events\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:7:1\n  |\n5 | from ...infrastructure.telemetry import TelemetryClient\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..ports.scheduler import IScheduler\n9 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n --> core\\services\\scheduler_service.py:7:29\n  |\n5 | from ...infrastructure.telemetry import TelemetryClient\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  |                             ^^^^^^^^^^^^^^^\n8 | from ..ports.scheduler import IScheduler\n9 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:8:1\n  |\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n9 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.scheduler.IScheduler` into a type-checking block\n --> core\\services\\scheduler_service.py:8:31\n  |\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n  |                               ^^^^^^^^^^\n9 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\scheduler_service.py:9:1\n  |\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n9 | from ..ports.task_repo import ITaskRepository\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n --> core\\services\\scheduler_service.py:9:31\n  |\n7 | from ..domain.events import EventDispatcher\n8 | from ..ports.scheduler import IScheduler\n9 | from ..ports.task_repo import ITaskRepository\n  |                               ^^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\search_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\search_service.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from dataclasses import dataclass\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\search_service.py:6:1\n  |\n4 | from dataclasses import dataclass\n5 |\n6 | from ..domain import events\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..domain.events import EventDispatcher\n8 | from ..domain.task import Task\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\search_service.py:7:1\n  |\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..domain.task import Task\n9 | from ..ports.search_index import ISearchIndex\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.events.EventDispatcher` into a type-checking block\n --> core\\services\\search_service.py:7:29\n  |\n6 | from ..domain import events\n7 | from ..domain.events import EventDispatcher\n  |                             ^^^^^^^^^^^^^^^\n8 | from ..domain.task import Task\n9 | from ..ports.search_index import ISearchIndex\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\search_service.py:8:1\n   |\n 6 | from ..domain import events\n 7 | from ..domain.events import EventDispatcher\n 8 | from ..domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..ports.search_index import ISearchIndex\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..domain.task.Task` into a type-checking block\n  --> core\\services\\search_service.py:8:27\n   |\n 6 | from ..domain import events\n 7 | from ..domain.events import EventDispatcher\n 8 | from ..domain.task import Task\n   |                           ^^^^\n 9 | from ..ports.search_index import ISearchIndex\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\search_service.py:9:1\n   |\n 7 | from ..domain.events import EventDispatcher\n 8 | from ..domain.task import Task\n 9 | from ..ports.search_index import ISearchIndex\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.search_index.ISearchIndex` into a type-checking block\n  --> core\\services\\search_service.py:9:34\n   |\n 7 | from ..domain.events import EventDispatcher\n 8 | from ..domain.task import Task\n 9 | from ..ports.search_index import ISearchIndex\n   |                                  ^^^^^^^^^^^^\n10 | from ..ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> core\\services\\search_service.py:10:1\n   |\n 8 | from ..domain.task import Task\n 9 | from ..ports.search_index import ISearchIndex\n10 | from ..ports.task_repo import ITaskRepository\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n  --> core\\services\\search_service.py:10:31\n   |\n 8 | from ..domain.task import Task\n 9 | from ..ports.search_index import ISearchIndex\n10 | from ..ports.task_repo import ITaskRepository\n   |                               ^^^^^^^^^^^^^^^\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> core\\services\\task_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from datetime import datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> core\\services\\task_service.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from datetime import datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> core\\services\\task_service.py:4:22\n  |\n3 | from collections.abc import Iterable, Sequence\n4 | from datetime import datetime, timedelta\n  |                      ^^^^^^^^\n5 |\n6 | from ..domain import events\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.timedelta` into a type-checking block\n --> core\\services\\task_service.py:4:32\n  |\n3 | from collections.abc import Iterable, Sequence\n4 | from datetime import datetime, timedelta\n  |                                ^^^^^^^^^\n5 |\n6 | from ..domain import events\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\task_service.py:6:1\n  |\n4 | from datetime import datetime, timedelta\n5 |\n6 | from ..domain import events\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..domain.task import Task\n8 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\task_service.py:7:1\n  |\n6 | from ..domain import events\n7 | from ..domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..ports.task_repo import ITaskRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> core\\services\\task_service.py:8:1\n  |\n6 | from ..domain import events\n7 | from ..domain.task import Task\n8 | from ..ports.task_repo import ITaskRepository\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..ports.task_repo.ITaskRepository` into a type-checking block\n --> core\\services\\task_service.py:8:31\n  |\n6 | from ..domain import events\n7 | from ..domain.task import Task\n8 | from ..ports.task_repo import ITaskRepository\n  |                               ^^^^^^^^^^^^^^^\n  |\nhelp: Move into type-checking block\n\nANN204 Missing return type annotation for special method `__init__`\n  --> core\\services\\task_service.py:12:9\n   |\n11 | class TaskService:\n12 |     def __init__(\n   |         ^^^^^^^^\n13 |         self, repo: ITaskRepository, dispatcher: events.EventDispatcher\n14 |     ):\n   |\nhelp: Add return type annotation: `None`\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\task_service.py:61:19\n   |\n59 |     ) -> Task:\n60 |         if until is None and delta is None:\n61 |             raise ValueError(\"Provide either until or delta\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n62 |         task = self._get_task(task_id)\n63 |         if until is not None:\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> core\\services\\task_service.py:61:30\n   |\n59 |     ) -> Task:\n60 |         if until is None and delta is None:\n61 |             raise ValueError(\"Provide either until or delta\")\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n62 |         task = self._get_task(task_id)\n63 |         if until is not None:\n   |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> core\\services\\task_service.py:67:23\n   |\n65 |         else:\n66 |             if delta is None:\n67 |                 raise ValueError(\"Delta required when until is not provided\")\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n68 |             updated = task.deferred(delta)\n69 |         updated.validate()\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> core\\services\\task_service.py:67:34\n   |\n65 |         else:\n66 |             if delta is None:\n67 |                 raise ValueError(\"Delta required when until is not provided\")\n   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n68 |             updated = task.deferred(delta)\n69 |         updated.validate()\n   |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> core\\services\\task_service.py:99:19\n    |\n 97 |         task = self._repo.get(task_id)\n 98 |         if not task:\n 99 |             raise KeyError(f\"Task {task_id} not found\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n100 |         return task\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> core\\services\\task_service.py:99:28\n    |\n 97 |         task = self._repo.get(task_id)\n 98 |         if not task:\n 99 |             raise KeyError(f\"Task {task_id} not found\")\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n100 |         return task\n    |\nhelp: Assign to variable; remove f-string literal\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> infrastructure\\automation\\webhook_client.py:4:29\n  |\n3 | import logging\n4 | from collections.abc import Mapping, Sequence\n  |                             ^^^^^^^\n5 | from dataclasses import dataclass\n6 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> infrastructure\\automation\\webhook_client.py:4:38\n  |\n3 | import logging\n4 | from collections.abc import Mapping, Sequence\n  |                                      ^^^^^^^^\n5 | from dataclasses import dataclass\n6 | from datetime import UTC, datetime\n  |\nhelp: Move into type-checking block\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n  --> infrastructure\\automation\\webhook_client.py:70:18\n   |\n68 |                 )\n69 |                 continue\n70 |             ok = 200 <= response.status_code < 300\n   |                  ^^^\n71 |             if not ok:\n72 |                 logger.warning(\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `300` with a constant variable\n  --> infrastructure\\automation\\webhook_client.py:70:48\n   |\n68 |                 )\n69 |                 continue\n70 |             ok = 200 <= response.status_code < 300\n   |                                                ^^^\n71 |             if not ok:\n72 |                 logger.warning(\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> infrastructure\\automation\\webhook_client.py:91:9\n   |\n90 |       def __del__(self) -> None:  # pragma: no cover - defensive cleanup\n91 | /         try:\n92 | |             self.close()\n93 | |         except Exception:  # pragma: no cover - best effort cleanup\n94 | |             pass\n   | |________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> infrastructure\\automation\\webhook_client.py:93:9\n   |\n91 |           try:\n92 |               self.close()\n93 | /         except Exception:  # pragma: no cover - best effort cleanup\n94 | |             pass\n   | |________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> infrastructure\\automation\\webhook_client.py:93:16\n   |\n91 |         try:\n92 |             self.close()\n93 |         except Exception:  # pragma: no cover - best effort cleanup\n   |                ^^^^^^^^^\n94 |             pass\n   |\n\nINP001 File `infrastructure\\collaboration\\hub_client.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> infrastructure\\collaboration\\hub_client.py:1:1\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n  --> infrastructure\\collaboration\\hub_client.py:8:21\n   |\n 6 | from dataclasses import dataclass\n 7 | from datetime import datetime\n 8 | from pathlib import Path\n   |                     ^^^^\n 9 | from types import TracebackType\n10 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `types.TracebackType` into a type-checking block\n  --> infrastructure\\collaboration\\hub_client.py:9:19\n   |\n 7 | from datetime import datetime\n 8 | from pathlib import Path\n 9 | from types import TracebackType\n   |                   ^^^^^^^^^^^^^\n10 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `transport`\n  --> infrastructure\\collaboration\\hub_client.py:37:20\n   |\n35 |         *,\n36 |         timeout: float = 10.0,\n37 |         transport: Any | None = None,\n   |                    ^^^^^^^^^^\n38 |     ) -> None:\n39 |         self._client = httpx.Client(\n   |\n\nPYI034 `__enter__` methods in classes like `CollaborationHubClient` usually return `self` at runtime\n  --> infrastructure\\collaboration\\hub_client.py:46:9\n   |\n44 |         self._client.close()\n45 |\n46 |     def __enter__(self) -> CollaborationHubClient:\n   |         ^^^^^^^^^\n47 |         return self\n   |\nhelp: Use `Self` as return type\n\nPLR2004 Magic value used in comparison, consider replacing `404` with a constant variable\n  --> infrastructure\\collaboration\\hub_client.py:78:36\n   |\n76 |     def fetch_latest_bundle(self) -> BundleDownloadResult | None:\n77 |         response = self._client.get(\"/api/collab/bundles/latest\")\n78 |         if response.status_code == 404:\n   |                                    ^^^\n79 |             return None\n80 |         response.raise_for_status()\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `404` with a constant variable\n  --> infrastructure\\collaboration\\hub_client.py:85:36\n   |\n83 |     def fetch_bundle(self, bundle_id: str) -> BundleDownloadResult | None:\n84 |         response = self._client.get(f\"/api/collab/bundles/{bundle_id}\")\n85 |         if response.status_code == 404:\n   |                                    ^^^\n86 |             return None\n87 |         response.raise_for_status()\n   |\n\nTRY004 Prefer `TypeError` exception for invalid type\n   --> infrastructure\\collaboration\\hub_client.py:104:21\n    |\n102 |             for item in payload_list:\n103 |                 if not isinstance(item, Mapping):\n104 |                     raise ValueError(\"Unexpected bundle list entry\")\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:104:27\n    |\n102 |             for item in payload_list:\n103 |                 if not isinstance(item, Mapping):\n104 |                     raise ValueError(\"Unexpected bundle list entry\")\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:104:38\n    |\n102 |             for item in payload_list:\n103 |                 if not isinstance(item, Mapping):\n104 |                     raise ValueError(\"Unexpected bundle list entry\")\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:107:15\n    |\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n107 |         raise ValueError(\"Unexpected bundle list payload\")\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n108 |\n109 |     def prune_bundles(\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:107:26\n    |\n105 |                 results.append(self._parse_upload(self._to_str_dict(item)))\n106 |             return results\n107 |         raise ValueError(\"Unexpected bundle list payload\")\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n108 |\n109 |     def prune_bundles(\n    |\nhelp: Assign to variable; remove string literal\n\nTRY004 Prefer `TypeError` exception for invalid type\n   --> infrastructure\\collaboration\\hub_client.py:118:13\n    |\n116 |         payload = response.json()\n117 |         if not isinstance(payload, Mapping):\n118 |             raise ValueError(\"Unexpected prune payload\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n119 |         payload_mapping = cast(\"Mapping[str, Any]\", payload)\n120 |         removed_raw = payload_mapping.get(\"removed\", [])\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:118:19\n    |\n116 |         payload = response.json()\n117 |         if not isinstance(payload, Mapping):\n118 |             raise ValueError(\"Unexpected prune payload\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n119 |         payload_mapping = cast(\"Mapping[str, Any]\", payload)\n120 |         removed_raw = payload_mapping.get(\"removed\", [])\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:118:30\n    |\n116 |         payload = response.json()\n117 |         if not isinstance(payload, Mapping):\n118 |             raise ValueError(\"Unexpected prune payload\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n119 |         payload_mapping = cast(\"Mapping[str, Any]\", payload)\n120 |         removed_raw = payload_mapping.get(\"removed\", [])\n    |\nhelp: Assign to variable; remove string literal\n\nTRY004 Prefer `TypeError` exception for invalid type\n   --> infrastructure\\collaboration\\hub_client.py:123:13\n    |\n121 |         remaining_raw = payload_mapping.get(\"remaining\", 0)\n122 |         if not isinstance(removed_raw, list):\n123 |             raise ValueError(\"Unexpected removed bundles payload\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |         removed_items: list[Any] = list(removed_raw)\n125 |         removed: list[BundleUploadResult] = []\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:123:19\n    |\n121 |         remaining_raw = payload_mapping.get(\"remaining\", 0)\n122 |         if not isinstance(removed_raw, list):\n123 |             raise ValueError(\"Unexpected removed bundles payload\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |         removed_items: list[Any] = list(removed_raw)\n125 |         removed: list[BundleUploadResult] = []\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:123:30\n    |\n121 |         remaining_raw = payload_mapping.get(\"remaining\", 0)\n122 |         if not isinstance(removed_raw, list):\n123 |             raise ValueError(\"Unexpected removed bundles payload\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n124 |         removed_items: list[Any] = list(removed_raw)\n125 |         removed: list[BundleUploadResult] = []\n    |\nhelp: Assign to variable; remove string literal\n\nTRY004 Prefer `TypeError` exception for invalid type\n   --> infrastructure\\collaboration\\hub_client.py:128:17\n    |\n126 |         for item in removed_items:\n127 |             if not isinstance(item, Mapping):\n128 |                 raise ValueError(\"Unexpected prune entry\")\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n129 |             removed.append(self._parse_upload(self._to_str_dict(item)))\n130 |         remaining = int(remaining_raw)\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> infrastructure\\collaboration\\hub_client.py:128:23\n    |\n126 |         for item in removed_items:\n127 |             if not isinstance(item, Mapping):\n128 |                 raise ValueError(\"Unexpected prune entry\")\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n129 |             removed.append(self._parse_upload(self._to_str_dict(item)))\n130 |         remaining = int(remaining_raw)\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> infrastructure\\collaboration\\hub_client.py:128:34\n    |\n126 |         for item in removed_items:\n127 |             if not isinstance(item, Mapping):\n128 |                 raise ValueError(\"Unexpected prune entry\")\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n129 |             removed.append(self._parse_upload(self._to_str_dict(item)))\n130 |         remaining = int(remaining_raw)\n    |\nhelp: Assign to variable; remove string literal\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `value`\n   --> infrastructure\\collaboration\\hub_client.py:166:32\n    |\n165 |     @staticmethod\n166 |     def _parse_datetime(value: Any) -> datetime:\n    |                                ^^^\n167 |         if isinstance(value, datetime):\n168 |             return value\n    |\n\nDTZ901 Use of `datetime.datetime.min` without timezone information\n   --> infrastructure\\collaboration\\hub_client.py:178:16\n    |\n176 |                     return parsed\n177 |                 return parsed\n178 |         return datetime.min\n    |                ^^^^^^^^^^^^\n179 |\n180 |     @staticmethod\n    |\nhelp: Replace with `datetime.datetime.min.replace(tzinfo=...)`\n\nINP001 File `infrastructure\\collaboration\\store.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> infrastructure\\collaboration\\store.py:1:1\n\nTC003 Move standard library import `builtins` into a type-checking block\n --> infrastructure\\collaboration\\store.py:3:8\n  |\n1 | from __future__ import annotations\n2 |\n3 | import builtins\n  |        ^^^^^^^^\n4 | import json\n5 | from collections.abc import Iterable, Mapping, Sequence\n  |\nhelp: Move into type-checking block\n\nANN204 Missing return type annotation for special method `__init__`\n  --> infrastructure\\collaboration\\store.py:26:9\n   |\n24 |     \"\"\"Persist encrypted collaboration bundles for later retrieval.\"\"\"\n25 |\n26 |     def __init__(self, directory: str | Path):\n   |         ^^^^^^^^\n27 |         self._directory = Path(directory)\n28 |         self._directory.mkdir(parents=True, exist_ok=True)\n   |\nhelp: Add return type annotation: `None`\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> infrastructure\\collaboration\\store.py:87:19\n   |\n85 |     def prune(self, keep: int) -> builtins.list[StoredBundle]:\n86 |         if keep < 0:\n87 |             raise ValueError(\"keep must be non-negative\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n88 |         entries = list(self._iter_entries())\n89 |         if not entries:\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> infrastructure\\collaboration\\store.py:87:30\n   |\n85 |     def prune(self, keep: int) -> builtins.list[StoredBundle]:\n86 |         if keep < 0:\n87 |             raise ValueError(\"keep must be non-negative\")\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n88 |         entries = list(self._iter_entries())\n89 |         if not entries:\n   |\nhelp: Assign to variable; remove string literal\n\nSIM105 Use `contextlib.suppress(FileNotFoundError)` instead of `try`-`except`-`pass`\n   --> infrastructure\\collaboration\\store.py:105:13\n    |\n103 |           ]\n104 |           for bundle in removed_bundles:\n105 | /             try:\n106 | |                 bundle.path.unlink()\n107 | |             except FileNotFoundError:\n108 | |                 pass\n    | |____________________^\n109 |           self._write_entries(keep_entries)\n110 |           return removed_bundles\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(FileNotFoundError): ...`\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> infrastructure\\config.py:4:29\n  |\n3 | import os\n4 | from collections.abc import Mapping\n  |                             ^^^^^^^\n5 | from dataclasses import dataclass, field\n6 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nFBT001 Boolean-typed positional argument in function definition\n  --> infrastructure\\config.py:13:35\n   |\n13 | def _read_bool(value: str | None, default: bool = False) -> bool:\n   |                                   ^^^^^^^\n14 |     if value is None:\n15 |         return default\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> infrastructure\\config.py:13:35\n   |\n13 | def _read_bool(value: str | None, default: bool = False) -> bool:\n   |                                   ^^^^^^^\n14 |     if value is None:\n15 |         return default\n   |\n\nC901 `load_config` is too complex (19 > 10)\n  --> infrastructure\\config.py:87:5\n   |\n87 | def load_config(env: Mapping[str, str] | None = None) -> AppConfig:\n   |     ^^^^^^^^^^^\n88 |     source_env: Mapping[str, str] = env if env is not None else os.environ\n89 |     overrides: dict[str, str] = {}\n   |\n\nPLR0912 Too many branches (18 > 12)\n  --> infrastructure\\config.py:87:5\n   |\n87 | def load_config(env: Mapping[str, str] | None = None) -> AppConfig:\n   |     ^^^^^^^^^^^\n88 |     source_env: Mapping[str, str] = env if env is not None else os.environ\n89 |     overrides: dict[str, str] = {}\n   |\n\nPLR0915 Too many statements (59 > 50)\n  --> infrastructure\\config.py:87:5\n   |\n87 | def load_config(env: Mapping[str, str] | None = None) -> AppConfig:\n   |     ^^^^^^^^^^^\n88 |     source_env: Mapping[str, str] = env if env is not None else os.environ\n89 |     overrides: dict[str, str] = {}\n   |\n\nFBT003 Boolean positional value in function call\n   --> infrastructure\\config.py:115:63\n    |\n113 |         )\n114 |\n115 |     log_json = _read_bool(source_env.get(\"LEGATUS_LOG_JSON\"), True)\n    |                                                               ^^^^\n116 |     if \"LEGATUS_LOG_JSON\" in source_env:\n117 |         overrides[\"LEGATUS_LOG_JSON\"] = source_env[\"LEGATUS_LOG_JSON\"]\n    |\n\nRET504 Unnecessary assignment to `cfg` before `return` statement\n   --> infrastructure\\config.py:196:12\n    |\n194 |         automation_webhooks=automation_webhooks,\n195 |     )\n196 |     return cfg\n    |            ^^^\n    |\nhelp: Remove unnecessary assignment\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> infrastructure\\di.py:4:29\n  |\n3 | import logging\n4 | from collections.abc import Sequence\n  |                             ^^^^^^^^\n5 | from dataclasses import dataclass\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\di.py:7:1\n  |\n5 | from dataclasses import dataclass\n6 |\n7 | from ..adapters.taskwarrior.tw_repository import TaskwarriorRepository\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..core.domain.events import EventDispatcher\n9 | from ..core.services.ai_briefing_service import AIBriefingService\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:8:1\n   |\n 7 | from ..adapters.taskwarrior.tw_repository import TaskwarriorRepository\n 8 | from ..core.domain.events import EventDispatcher\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ..core.services.ai_briefing_service import AIBriefingService\n10 | from ..core.services.ai_service import AIService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:9:1\n   |\n 7 | from ..adapters.taskwarrior.tw_repository import TaskwarriorRepository\n 8 | from ..core.domain.events import EventDispatcher\n 9 | from ..core.services.ai_briefing_service import AIBriefingService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..core.services.ai_service import AIService\n11 | from ..core.services.automation_service import AutomationService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:10:1\n   |\n 8 | from ..core.domain.events import EventDispatcher\n 9 | from ..core.services.ai_briefing_service import AIBriefingService\n10 | from ..core.services.ai_service import AIService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ..core.services.automation_service import AutomationService\n12 | from ..core.services.collaboration_service import CollaborationService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:11:1\n   |\n 9 | from ..core.services.ai_briefing_service import AIBriefingService\n10 | from ..core.services.ai_service import AIService\n11 | from ..core.services.automation_service import AutomationService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | from ..core.services.collaboration_service import CollaborationService\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:12:1\n   |\n10 | from ..core.services.ai_service import AIService\n11 | from ..core.services.automation_service import AutomationService\n12 | from ..core.services.collaboration_service import CollaborationService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:13:1\n   |\n11 | from ..core.services.automation_service import AutomationService\n12 | from ..core.services.collaboration_service import CollaborationService\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n15 | from ..core.services.review_service import ReviewService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:13:1\n   |\n11 | from ..core.services.automation_service import AutomationService\n12 | from ..core.services.collaboration_service import CollaborationService\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n15 | from ..core.services.review_service import ReviewService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:14:1\n   |\n12 | from ..core.services.collaboration_service import CollaborationService\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n15 | from ..core.services.review_service import ReviewService\n16 | from ..core.services.scheduler_service import SchedulerService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:15:1\n   |\n13 | from ..core.services.plugin_bus import LoadedPlugin, PluginBus\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n15 | from ..core.services.review_service import ReviewService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n16 | from ..core.services.scheduler_service import SchedulerService\n17 | from ..core.services.search_service import SearchService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:16:1\n   |\n14 | from ..core.services.review_guidance_service import ReviewGuidanceService\n15 | from ..core.services.review_service import ReviewService\n16 | from ..core.services.scheduler_service import SchedulerService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n17 | from ..core.services.search_service import SearchService\n18 | from ..core.services.task_service import TaskService\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:17:1\n   |\n15 | from ..core.services.review_service import ReviewService\n16 | from ..core.services.scheduler_service import SchedulerService\n17 | from ..core.services.search_service import SearchService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n18 | from ..core.services.task_service import TaskService\n19 | from ..x_cls_legatus_acta_schedae_x import Storage\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:18:1\n   |\n16 | from ..core.services.scheduler_service import SchedulerService\n17 | from ..core.services.search_service import SearchService\n18 | from ..core.services.task_service import TaskService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n19 | from ..x_cls_legatus_acta_schedae_x import Storage\n20 | from .automation import AutomationWebhookClient\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\di.py:19:1\n   |\n17 | from ..core.services.search_service import SearchService\n18 | from ..core.services.task_service import TaskService\n19 | from ..x_cls_legatus_acta_schedae_x import Storage\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n20 | from .automation import AutomationWebhookClient\n21 | from .config import AppConfig\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `.config.AppConfig` into a type-checking block\n  --> infrastructure\\di.py:21:21\n   |\n19 | from ..x_cls_legatus_acta_schedae_x import Storage\n20 | from .automation import AutomationWebhookClient\n21 | from .config import AppConfig\n   |                     ^^^^^^^^^\n22 | from .review.json_repository import JsonReviewRepository\n23 | from .scheduler import ApschedulerScheduler\n   |\nhelp: Move into type-checking block\n\nTC001 Move application import `.config.AppConfig` into a type-checking block\n  --> infrastructure\\logging.py:8:21\n   |\n 6 | from typing import Any\n 7 |\n 8 | from .config import AppConfig\n   |                     ^^^^^^^^^\n 9 |\n10 | STRUCTURED_EXCLUDE = {\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\review\\json_repository.py:8:1\n  |\n6 | from typing import Any, cast\n7 |\n8 | from ...core.domain.review import ReviewRecord\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n9 | from ...core.ports.review_repo import IReviewRepository\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\review\\json_repository.py:9:1\n  |\n8 | from ...core.domain.review import ReviewRecord\n9 | from ...core.ports.review_repo import IReviewRepository\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nANN204 Missing return type annotation for special method `__init__`\n  --> infrastructure\\review\\json_repository.py:13:9\n   |\n12 | class JsonReviewRepository(IReviewRepository):\n13 |     def __init__(self, path: str | Path):\n   |         ^^^^^^^^\n14 |         self._path = Path(path)\n15 |         self._path.parent.mkdir(parents=True, exist_ok=True)\n   |\nhelp: Add return type annotation: `None`\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n --> infrastructure\\scheduler\\apscheduler_adapter.py:5:29\n  |\n3 | import importlib\n4 | import logging\n5 | from collections.abc import Callable\n  |                             ^^^^^^^^\n6 | from datetime import datetime\n7 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> infrastructure\\scheduler\\apscheduler_adapter.py:6:22\n  |\n4 | import logging\n5 | from collections.abc import Callable\n6 | from datetime import datetime\n  |                      ^^^^^^^^\n7 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:9:1\n   |\n 7 | from typing import Any\n 8 |\n 9 | from ...core.ports.scheduler import IScheduler\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 |\n11 | BackgroundScheduler: Any | None\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nBLE001 Do not catch blind exception: `Exception`\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:16:8\n   |\n14 |         \"apscheduler.schedulers.background\"\n15 |     )\n16 | except Exception:  # pragma: no cover\n   |        ^^^^^^^^^\n17 |     BackgroundScheduler = None\n18 | else:\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:31:19\n   |\n29 |               BackgroundScheduler\n30 |           ):  # pragma: no cover - runtime guard\n31 |               raise RuntimeError(\n   |  ___________________^\n32 | |                 \"APScheduler is not installed; install apscheduler to enable scheduling\"\n33 | |             )\n   | |_____________^\n34 |           self._scheduler: Any = BackgroundScheduler(timezone=timezone)\n35 |           self._started = False\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:32:17\n   |\n30 |         ):  # pragma: no cover - runtime guard\n31 |             raise RuntimeError(\n32 |                 \"APScheduler is not installed; install apscheduler to enable scheduling\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n33 |             )\n34 |         self._scheduler: Any = BackgroundScheduler(timezone=timezone)\n   |\nhelp: Assign to variable; remove string literal\n\nBLE001 Do not catch blind exception: `Exception`\n  --> infrastructure\\scheduler\\apscheduler_adapter.py:73:13\n   |\n71 |             self._scheduler.remove_job(job_id)\n72 |         except (\n73 |             Exception\n   |             ^^^^^^^^^\n74 |         ) as exc:  # pragma: no cover - APScheduler raises when job missing\n75 |             logger.debug(\"Failed to cancel job %s: %s\", job_id, exc)\n   |\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n --> infrastructure\\scheduler\\null_scheduler.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Callable\n  |                             ^^^^^^^^\n4 | from datetime import datetime\n5 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> infrastructure\\scheduler\\null_scheduler.py:4:22\n  |\n3 | from collections.abc import Callable\n4 | from datetime import datetime\n  |                      ^^^^^^^^\n5 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\scheduler\\null_scheduler.py:7:1\n  |\n5 | from typing import Any\n6 |\n7 | from ...core.ports.scheduler import IScheduler\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nARG002 Unused method argument: `func`\n  --> infrastructure\\scheduler\\null_scheduler.py:25:9\n   |\n23 |         job_id: str,\n24 |         run_at: datetime,\n25 |         func: Callable[..., Any],\n   |         ^^^^\n26 |         args: tuple[Any, ...] | None = None,\n27 |         kwargs: dict[str, Any] | None = None,\n   |\n\nARG002 Unused method argument: `args`\n  --> infrastructure\\scheduler\\null_scheduler.py:26:9\n   |\n24 |         run_at: datetime,\n25 |         func: Callable[..., Any],\n26 |         args: tuple[Any, ...] | None = None,\n   |         ^^^^\n27 |         kwargs: dict[str, Any] | None = None,\n28 |     ) -> str:\n   |\n\nARG002 Unused method argument: `kwargs`\n  --> infrastructure\\scheduler\\null_scheduler.py:27:9\n   |\n25 |         func: Callable[..., Any],\n26 |         args: tuple[Any, ...] | None = None,\n27 |         kwargs: dict[str, Any] | None = None,\n   |         ^^^^^^\n28 |     ) -> str:\n29 |         self._jobs[job_id] = run_at\n   |\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> infrastructure\\search\\memory_index.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass, field\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> infrastructure\\search\\memory_index.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from dataclasses import dataclass, field\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\search\\memory_index.py:6:1\n  |\n4 | from dataclasses import dataclass, field\n5 |\n6 | from ...core.domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ...core.ports.search_index import ISearchIndex\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.domain.task.Task` into a type-checking block\n --> infrastructure\\search\\memory_index.py:6:33\n  |\n4 | from dataclasses import dataclass, field\n5 |\n6 | from ...core.domain.task import Task\n  |                                 ^^^^\n7 | from ...core.ports.search_index import ISearchIndex\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> infrastructure\\search\\memory_index.py:7:1\n  |\n6 | from ...core.domain.task import Task\n7 | from ...core.ports.search_index import ISearchIndex\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> infrastructure\\telemetry.py:4:29\n  |\n3 | import json\n4 | from collections.abc import Mapping\n  |                             ^^^^^^^\n5 | from datetime import UTC, datetime\n6 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nANN204 Missing return type annotation for special method `__init__`\n  --> infrastructure\\telemetry.py:10:9\n   |\n 9 | class TelemetryClient:\n10 |     def __init__(\n   |         ^^^^^^^^\n11 |         self, enabled: bool, path: str | None, flush_seconds: int = 5\n12 |     ):\n   |\nhelp: Add return type annotation: `None`\n\nFBT001 Boolean-typed positional argument in function definition\n  --> infrastructure\\telemetry.py:11:15\n   |\n 9 | class TelemetryClient:\n10 |     def __init__(\n11 |         self, enabled: bool, path: str | None, flush_seconds: int = 5\n   |               ^^^^^^^\n12 |     ):\n13 |         self._enabled = enabled and bool(path)\n   |\n\nTC003 Move standard library import `datetime.datetime` into a type-checking block\n --> interface\\api\\server.py:7:22\n  |\n5 | import binascii\n6 | from dataclasses import asdict\n7 | from datetime import datetime\n  |                      ^^^^^^^^\n8 | from typing import Any, Literal, cast\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:13:1\n   |\n11 | from pydantic import BaseModel, Field\n12 |\n13 | from ...core.services.ai_service import AIService\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | from ...core.services.card_action_service import (\n15 |     CardActionService,\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.services.ai_service.AIService` into a type-checking block\n  --> interface\\api\\server.py:13:41\n   |\n11 | from pydantic import BaseModel, Field\n12 |\n13 | from ...core.services.ai_service import AIService\n   |                                         ^^^^^^^^^\n14 | from ...core.services.card_action_service import (\n15 |     CardActionService,\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:14:1\n   |\n13 |   from ...core.services.ai_service import AIService\n14 | / from ...core.services.card_action_service import (\n15 | |     CardActionService,\n16 | |     CardNotFoundError,\n17 | | )\n   | |_^\n18 |   from ...infrastructure.collaboration.store import (\n19 |       CollaborationBundleStore,\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:14:1\n   |\n13 |   from ...core.services.ai_service import AIService\n14 | / from ...core.services.card_action_service import (\n15 | |     CardActionService,\n16 | |     CardNotFoundError,\n17 | | )\n   | |_^\n18 |   from ...infrastructure.collaboration.store import (\n19 |       CollaborationBundleStore,\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:18:1\n   |\n16 |       CardNotFoundError,\n17 |   )\n18 | / from ...infrastructure.collaboration.store import (\n19 | |     CollaborationBundleStore,\n20 | |     StoredBundle,\n21 | | )\n   | |_^\n22 |   from ...infrastructure.config import AppConfig, load_config\n23 |   from ...infrastructure.di import AppContext, build_context\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:18:1\n   |\n16 |       CardNotFoundError,\n17 |   )\n18 | / from ...infrastructure.collaboration.store import (\n19 | |     CollaborationBundleStore,\n20 | |     StoredBundle,\n21 | | )\n   | |_^\n22 |   from ...infrastructure.config import AppConfig, load_config\n23 |   from ...infrastructure.di import AppContext, build_context\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:22:1\n   |\n20 |     StoredBundle,\n21 | )\n22 | from ...infrastructure.config import AppConfig, load_config\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n23 | from ...infrastructure.di import AppContext, build_context\n24 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:22:1\n   |\n20 |     StoredBundle,\n21 | )\n22 | from ...infrastructure.config import AppConfig, load_config\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n23 | from ...infrastructure.di import AppContext, build_context\n24 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:23:1\n   |\n21 | )\n22 | from ...infrastructure.config import AppConfig, load_config\n23 | from ...infrastructure.di import AppContext, build_context\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n24 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:23:1\n   |\n21 | )\n22 | from ...infrastructure.config import AppConfig, load_config\n23 | from ...infrastructure.di import AppContext, build_context\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n24 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\api\\server.py:24:1\n   |\n22 | from ...infrastructure.config import AppConfig, load_config\n23 | from ...infrastructure.di import AppContext, build_context\n24 | from ...infrastructure.logging import setup_logging\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nC901 `create_api_app` is too complex (14 > 10)\n   --> interface\\api\\server.py:118:5\n    |\n118 | def create_api_app(\n    |     ^^^^^^^^^^^^^^\n119 |     ctx: AppContext | None = None,\n120 |     cfg: AppConfig | None = None,\n    |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n   --> interface\\api\\server.py:155:13\n    |\n153 |             )\n154 |         except CardNotFoundError:\n155 |             raise HTTPException(status_code=404, detail=\"Card not found\")\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n156 |         except ValueError as exc:\n157 |             raise HTTPException(status_code=400, detail=str(exc)) from exc\n    |\n\nFAST002 FastAPI dependency without `Annotated`\n   --> interface\\api\\server.py:187:9\n    |\n185 |     @app.get(\"/api/collab/bundles\", response_model=list[BundleInfo])\n186 |     async def list_bundles(\n187 |         limit: int = Query(10, ge=0, le=100)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n188 |     ) -> list[BundleUploadResponse]:\n189 |         stored = bundle_store.list(limit=limit)\n    |\nhelp: Replace with `typing.Annotated`\n\nFAST002 FastAPI dependency without `Annotated`\n   --> interface\\api\\server.py:194:9\n    |\n192 |     @app.delete(\"/api/collab/bundles\", response_model=BundlePruneResponse)\n193 |     async def prune_bundles(\n194 |         keep: int = Query(10, ge=0, le=100)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n195 |     ) -> BundlePruneResponse:\n196 |         removed = bundle_store.prune(keep)\n    |\nhelp: Replace with `typing.Annotated`\n\nINP001 File `interface\\tui\\app.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> interface\\tui\\app.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> interface\\tui\\app.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC\n5 | from importlib import import_module\n  |\nhelp: Move into type-checking block\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:11:35\n   |\n10 |     class App:  # type: ignore[too-many-ancestors]\n11 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n12 |\n13 |         def run(self, *args: Any, **kwargs: Any) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:11:50\n   |\n10 |     class App:  # type: ignore[too-many-ancestors]\n11 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n12 |\n13 |         def run(self, *args: Any, **kwargs: Any) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:13:30\n   |\n11 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n12 |\n13 |         def run(self, *args: Any, **kwargs: Any) -> None: ...\n   |                              ^^^\n14 |\n15 |     class ComposeResult: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:13:45\n   |\n11 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n12 |\n13 |         def run(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                             ^^^\n14 |\n15 |     class ComposeResult: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:18:35\n   |\n17 |     class Binding:  # pragma: no cover - placeholder\n18 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n19 |\n20 |     class Footer:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:18:50\n   |\n17 |     class Binding:  # pragma: no cover - placeholder\n18 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n19 |\n20 |     class Footer:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:21:35\n   |\n20 |     class Footer:  # pragma: no cover\n21 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n22 |\n23 |     class Header:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:21:50\n   |\n20 |     class Footer:  # pragma: no cover\n21 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n22 |\n23 |     class Header:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:24:35\n   |\n23 |     class Header:  # pragma: no cover\n24 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n25 |\n26 |     class Input:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:24:50\n   |\n23 |     class Header:  # pragma: no cover\n24 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n25 |\n26 |     class Input:  # pragma: no cover\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:27:35\n   |\n26 |     class Input:  # pragma: no cover\n27 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n28 |\n29 |         def focus(self) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:27:50\n   |\n26 |     class Input:  # pragma: no cover\n27 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n28 |\n29 |         def focus(self) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n  --> interface\\tui\\app.py:32:35\n   |\n31 |     class Static:  # pragma: no cover\n32 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                   ^^^\n33 |\n34 |         def update(self, value: str) -> None: ...\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n  --> interface\\tui\\app.py:32:50\n   |\n31 |     class Static:  # pragma: no cover\n32 |         def __init__(self, *args: Any, **kwargs: Any) -> None: ...\n   |                                                  ^^^\n33 |\n34 |         def update(self, value: str) -> None: ...\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> interface\\tui\\app.py:51:15\n   |\n49 |           Static = cast(\"type[Any]\", _widgets.Static)\n50 |       except ModuleNotFoundError as exc:  # pragma: no cover\n51 |           raise RuntimeError(\n   |  _______________^\n52 | |             \"The 'textual' package is required for the TUI. Install it via 'pip install textual'.\"\n53 | |         ) from exc\n   | |_________^\n54 |\n55 |   from ...core.services.ai_service import TaskSummary\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> interface\\tui\\app.py:52:13\n   |\n50 |     except ModuleNotFoundError as exc:  # pragma: no cover\n51 |         raise RuntimeError(\n52 |             \"The 'textual' package is required for the TUI. Install it via 'pip install textual'.\"\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n53 |         ) from exc\n   |\nhelp: Assign to variable; remove string literal\n\nE501 Line too long (98 > 88)\n  --> interface\\tui\\app.py:52:89\n   |\n50 |     except ModuleNotFoundError as exc:  # pragma: no cover\n51 |         raise RuntimeError(\n52 |             \"The 'textual' package is required for the TUI. Install it via 'pip install textual'.\"\n   |                                                                                         ^^^^^^^^^^\n53 |         ) from exc\n   |\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\app.py:55:1\n   |\n53 |         ) from exc\n54 |\n55 | from ...core.services.ai_service import TaskSummary\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n56 | from .controller import TaskController, TaskFilters, TaskRow\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.services.ai_service.TaskSummary` into a type-checking block\n  --> interface\\tui\\app.py:55:41\n   |\n53 |         ) from exc\n54 |\n55 | from ...core.services.ai_service import TaskSummary\n   |                                         ^^^^^^^^^^^\n56 | from .controller import TaskController, TaskFilters, TaskRow\n   |\nhelp: Move into type-checking block\n\nE501 Line too long (99 > 88)\n  --> interface\\tui\\app.py:63:89\n   |\n62 |     def update_rows(self, rows: Iterable[TaskRow]) -> None:\n63 |         header = \"ID       Status     Due                Priority Tags                 Description\"\n   |                                                                                         ^^^^^^^^^^^\n64 |         lines = [header, \"-\" * len(header)]\n65 |         for row in rows:\n   |\n\nPERF401 Use `list.extend` to create a transformed list\n  --> interface\\tui\\app.py:66:13\n   |\n64 |           lines = [header, \"-\" * len(header)]\n65 |           for row in rows:\n66 | /             lines.append(\n67 | |                 f\"{row.id[:8]} {row.status.ljust(9)} \"\n68 | |                 f\"{row.due_display.ljust(18)} {row.priority_display.ljust(8)} \"\n69 | |                 f\"{row.tags_display[:18].ljust(18)} {row.description}\"\n70 | |             )\n   | |_____________^\n71 |           if len(lines) == 2:\n72 |               lines.append(\"(no tasks found)\")\n   |\nhelp: Replace for loop with list.extend\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> interface\\tui\\app.py:71:26\n   |\n69 |                 f\"{row.tags_display[:18].ljust(18)} {row.description}\"\n70 |             )\n71 |         if len(lines) == 2:\n   |                          ^\n72 |             lines.append(\"(no tasks found)\")\n73 |         self.update(\"\\n\".join(lines))\n   |\n\nRUF012 Mutable class attributes should be annotated with `typing.ClassVar`\n  --> interface\\tui\\app.py:80:16\n   |\n79 |       TITLE = \"Legatus Acta Schedae \u00e2\u20ac\u201d TUI\"\n80 |       BINDINGS = [\n   |  ________________^\n81 | |         Binding(\"q\", \"quit\", \"Quit\"),\n82 | |         Binding(\"r\", \"refresh\", \"Refresh\"),\n83 | |         Binding(\"/\", \"focus_search\", \"Search\"),\n84 | |     ]\n   | |_____^\n85 |\n86 |       def __init__(self, controller: TaskController | None = None) -> None:\n   |\n\nANN201 Missing return type annotation for public function `compose`\n  --> interface\\tui\\app.py:95:9\n   |\n93 |         self._summary: Any | None = None\n94 |\n95 |     def compose(self):  # type: ignore[override]\n   |         ^^^^^^^\n96 |         yield Header(show_clock=True)\n97 |         summary: Any = Static(\"AI summary unavailable\", id=\"summary\")\n   |\nhelp: Add return type annotation\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `event`\n   --> interface\\tui\\app.py:125:41\n    |\n123 |             self._search.focus()\n124 |\n125 |     def on_input_submitted(self, event: Any) -> None:\n    |                                         ^^^\n126 |         if getattr(event, \"input\", None) is None:\n127 |             return\n    |\n\nE501 Line too long (104 > 88)\n   --> interface\\tui\\app.py:146:89\n    |\n144 |         top_tags = \", \".join(summary.top_tags) if summary.top_tags else \"-\"\n145 |         lines = [\n146 |             f\"Pending: {summary.pending} | Completed: {summary.completed} | Overdue: {summary.overdue}\",\n    |                                                                                         ^^^^^^^^^^^^^^^^\n147 |             f\"Top tags: {top_tags}\",\n148 |         ]\n    |\n\nE501 Line too long (109 > 88)\n   --> interface\\tui\\app.py:161:89\n    |\n159 |                 priority: str = item.priority or \"-\"\n160 |                 lines.append(\n161 |                     f\"  \u00e2\u20ac\u00a2 {item.description} (id={item.task_id[:8]}, due={due_display}, priority={priority})\"\n    |                                                                                         ^^^^^^^^^^^^^^^^^^^^^\n162 |                 )\n163 |         else:\n    |\n\nINP001 File `interface\\tui\\controller.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> interface\\tui\\controller.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> interface\\tui\\controller.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                             ^^^^^^^^\n4 | from dataclasses import dataclass\n5 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> interface\\tui\\controller.py:3:39\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable, Sequence\n  |                                       ^^^^^^^^\n4 | from dataclasses import dataclass\n5 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> interface\\tui\\controller.py:7:1\n  |\n5 | from datetime import UTC, datetime, timedelta\n6 |\n7 | from ...core.domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ...core.services.ai_service import TaskSummary\n9 | from ...infrastructure.config import AppConfig, load_config\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.domain.task.Task` into a type-checking block\n --> interface\\tui\\controller.py:7:33\n  |\n5 | from datetime import UTC, datetime, timedelta\n6 |\n7 | from ...core.domain.task import Task\n  |                                 ^^^^\n8 | from ...core.services.ai_service import TaskSummary\n9 | from ...infrastructure.config import AppConfig, load_config\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:8:1\n   |\n 7 | from ...core.domain.task import Task\n 8 | from ...core.services.ai_service import TaskSummary\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `...core.services.ai_service.TaskSummary` into a type-checking block\n  --> interface\\tui\\controller.py:8:41\n   |\n 7 | from ...core.domain.task import Task\n 8 | from ...core.services.ai_service import TaskSummary\n   |                                         ^^^^^^^^^^^\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:9:1\n   |\n 7 | from ...core.domain.task import Task\n 8 | from ...core.services.ai_service import TaskSummary\n 9 | from ...infrastructure.config import AppConfig, load_config\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ...infrastructure.di import AppContext, build_context\n11 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:9:1\n   |\n 7 | from ...core.domain.task import Task\n 8 | from ...core.services.ai_service import TaskSummary\n 9 | from ...infrastructure.config import AppConfig, load_config\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ...infrastructure.di import AppContext, build_context\n11 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:10:1\n   |\n 8 | from ...core.services.ai_service import TaskSummary\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:10:1\n   |\n 8 | from ...core.services.ai_service import TaskSummary\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ...infrastructure.logging import setup_logging\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> interface\\tui\\controller.py:11:1\n   |\n 9 | from ...infrastructure.config import AppConfig, load_config\n10 | from ...infrastructure.di import AppContext, build_context\n11 | from ...infrastructure.logging import setup_logging\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nANN202 Missing return type annotation for private function `sort_key`\n   --> interface\\tui\\controller.py:100:13\n    |\n 98 |             ]\n 99 |\n100 |         def sort_key(task: Task):\n    |             ^^^^^^^^\n101 |             due = task.due or datetime.max.replace(tzinfo=UTC)\n102 |             return (task.status != \"pending\", due, task.created)\n    |\nhelp: Add return type annotation\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> interface\\tui\\controller.py:141:19\n    |\n139 |     ) -> TaskRow:\n140 |         if days is None and not until:\n141 |             raise ValueError(\"Provide at least one defer option\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n142 |         delta = timedelta(days=days) if days is not None else None\n143 |         until_dt = _parse_due(until) if until else None\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> interface\\tui\\controller.py:141:30\n    |\n139 |     ) -> TaskRow:\n140 |         if days is None and not until:\n141 |             raise ValueError(\"Provide at least one defer option\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n142 |         delta = timedelta(days=days) if days is not None else None\n143 |         until_dt = _parse_due(until) if until else None\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> interface\\tui\\controller.py:163:15\n    |\n161 |             if task.id == task_id:\n162 |                 return TaskRow.from_task(task)\n163 |         raise KeyError(f\"Task {task_id} not found\")\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n164 |\n165 |     def ai_summary(self, top_n: int = 3) -> TaskSummary:\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> interface\\tui\\controller.py:163:24\n    |\n161 |             if task.id == task_id:\n162 |                 return TaskRow.from_task(task)\n163 |         raise KeyError(f\"Task {task_id} not found\")\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n164 |\n165 |     def ai_summary(self, top_n: int = 3) -> TaskSummary:\n    |\nhelp: Assign to variable; remove f-string literal\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> plugins\\ai_assistant.py:9:1\n   |\n 7 | from typing import Any\n 8 |\n 9 | from ..core.domain import events\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | from ..core.domain.task import Task\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> plugins\\ai_assistant.py:10:1\n   |\n 9 | from ..core.domain import events\n10 | from ..core.domain.task import Task\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..core.domain.task.Task` into a type-checking block\n  --> plugins\\ai_assistant.py:10:32\n   |\n 9 | from ..core.domain import events\n10 | from ..core.domain.task import Task\n   |                                ^^^^\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> plugins\\ai_assistant.py:11:1\n   |\n 9 | from ..core.domain import events\n10 | from ..core.domain.task import Task\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n  --> plugins\\ai_assistant.py:11:1\n   |\n 9 | from ..core.domain import events\n10 | from ..core.domain.task import Task\n11 | from ..core.services.plugin_bus import Plugin, PluginContext\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\calendar_sync.py:6:1\n  |\n4 | from datetime import UTC, datetime\n5 |\n6 | from ..core.domain import events\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\calendar_sync.py:7:1\n  |\n6 | from ..core.domain import events\n7 | from ..core.services.plugin_bus import Plugin, PluginContext\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\calendar_sync.py:7:1\n  |\n6 | from ..core.domain import events\n7 | from ..core.services.plugin_bus import Plugin, PluginContext\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:6:1\n  |\n4 | from datetime import UTC, datetime\n5 |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:6:1\n  |\n4 | from datetime import UTC, datetime\n5 |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:6:1\n  |\n4 | from datetime import UTC, datetime\n5 |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:7:1\n  |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n7 | from ..core.domain.task import Task\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC001 Move application import `..core.domain.task.Task` into a type-checking block\n --> plugins\\task_scoring.py:7:32\n  |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n7 | from ..core.domain.task import Task\n  |                                ^^^^\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  |\nhelp: Move into type-checking block\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:8:1\n  |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> plugins\\task_scoring.py:8:1\n  |\n6 | from ..core.domain.events import DomainEvent, TaskCreated, TaskUpdated\n7 | from ..core.domain.task import Task\n8 | from ..core.services.plugin_bus import Plugin, PluginContext\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nINP001 File `tests\\conftest.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\conftest.py:1:1\n\nINP001 File `tests\\test_ai_briefing_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_ai_briefing_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n --> tests\\test_ai_briefing_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Sequence\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nARG002 Unused method argument: `now`\n  --> tests\\test_ai_briefing_service.py:25:18\n   |\n24 |     def summarize(\n25 |         self, *, now: datetime | None = None, top_n: int = 3\n   |                  ^^^\n26 |     ) -> TaskSummary:\n27 |         return self._summary\n   |\n\nARG002 Unused method argument: `top_n`\n  --> tests\\test_ai_briefing_service.py:25:47\n   |\n24 |     def summarize(\n25 |         self, *, now: datetime | None = None, top_n: int = 3\n   |                                               ^^^^^\n26 |     ) -> TaskSummary:\n27 |         return self._summary\n   |\n\nANN201 Missing return type annotation for public function `generate`\n  --> tests\\test_ai_briefing_service.py:34:9\n   |\n32 |         self._guidance = guidance\n33 |\n34 |     def generate(\n   |         ^^^^^^^^\n35 |         self,\n36 |         *,\n   |\nhelp: Add return type annotation\n\nARG002 Unused method argument: `now`\n  --> tests\\test_ai_briefing_service.py:37:9\n   |\n35 |         self,\n36 |         *,\n37 |         now: datetime | None = None,\n   |         ^^^\n38 |         limit: int | None = None,\n39 |         include_completed: bool = False,\n   |\n\nARG002 Unused method argument: `limit`\n  --> tests\\test_ai_briefing_service.py:38:9\n   |\n36 |         *,\n37 |         now: datetime | None = None,\n38 |         limit: int | None = None,\n   |         ^^^^^\n39 |         include_completed: bool = False,\n40 |         tags: Sequence[str] | None = None,\n   |\n\nARG002 Unused method argument: `include_completed`\n  --> tests\\test_ai_briefing_service.py:39:9\n   |\n37 |         now: datetime | None = None,\n38 |         limit: int | None = None,\n39 |         include_completed: bool = False,\n   |         ^^^^^^^^^^^^^^^^^\n40 |         tags: Sequence[str] | None = None,\n41 |     ):\n   |\n\nARG002 Unused method argument: `tags`\n  --> tests\\test_ai_briefing_service.py:40:9\n   |\n38 |         limit: int | None = None,\n39 |         include_completed: bool = False,\n40 |         tags: Sequence[str] | None = None,\n   |         ^^^^\n41 |     ):\n42 |         return list(self._guidance)\n   |\n\nE501 Line too long (100 > 88)\n  --> tests\\test_ai_briefing_service.py:78:89\n   |\n76 |     )\n77 |\n78 |     service = AIBriefingService(StubAIService(summary), StubReviewGuidanceService([guidance_entry]))  # type: ignore[arg-type]\n   |                                                                                         ^^^^^^^^^^^^\n79 |\n80 |     briefing = service.generate(now=now, limit=3)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_briefing_service.py:82:5\n   |\n80 |     briefing = service.generate(now=now, limit=3)\n81 |\n82 |     assert briefing.summary is summary\n   |     ^^^^^^\n83 |     assert briefing.guidance == [guidance_entry]\n84 |     assert briefing.generated_at == now\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_briefing_service.py:83:5\n   |\n82 |     assert briefing.summary is summary\n83 |     assert briefing.guidance == [guidance_entry]\n   |     ^^^^^^\n84 |     assert briefing.generated_at == now\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_briefing_service.py:84:5\n   |\n82 |     assert briefing.summary is summary\n83 |     assert briefing.guidance == [guidance_entry]\n84 |     assert briefing.generated_at == now\n   |     ^^^^^^\n   |\n\nINP001 File `tests\\test_ai_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_ai_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_ai_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:67:5\n   |\n65 |     summary = service.summarize(now=moment, top_n=2)\n66 |\n67 |     assert summary.pending == 2\n   |     ^^^^^^\n68 |     assert summary.completed == 1\n69 |     assert summary.overdue == 1\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> tests\\test_ai_service.py:67:31\n   |\n65 |     summary = service.summarize(now=moment, top_n=2)\n66 |\n67 |     assert summary.pending == 2\n   |                               ^\n68 |     assert summary.completed == 1\n69 |     assert summary.overdue == 1\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:68:5\n   |\n67 |     assert summary.pending == 2\n68 |     assert summary.completed == 1\n   |     ^^^^^^\n69 |     assert summary.overdue == 1\n70 |     assert summary.top_tags[0] == \"work\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:69:5\n   |\n67 |     assert summary.pending == 2\n68 |     assert summary.completed == 1\n69 |     assert summary.overdue == 1\n   |     ^^^^^^\n70 |     assert summary.top_tags[0] == \"work\"\n71 |     assert any(item.task_id == upcoming.id for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:70:5\n   |\n68 |     assert summary.completed == 1\n69 |     assert summary.overdue == 1\n70 |     assert summary.top_tags[0] == \"work\"\n   |     ^^^^^^\n71 |     assert any(item.task_id == upcoming.id for item in summary.upcoming)\n72 |     assert all(item.due and item.due >= moment for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:71:5\n   |\n69 |     assert summary.overdue == 1\n70 |     assert summary.top_tags[0] == \"work\"\n71 |     assert any(item.task_id == upcoming.id for item in summary.upcoming)\n   |     ^^^^^^\n72 |     assert all(item.due and item.due >= moment for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:72:5\n   |\n70 |     assert summary.top_tags[0] == \"work\"\n71 |     assert any(item.task_id == upcoming.id for item in summary.upcoming)\n72 |     assert all(item.due and item.due >= moment for item in summary.upcoming)\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:82:5\n   |\n80 |     prompts = service.draft_followups(task)\n81 |\n82 |     assert any(\"follow-up\" in prompt.lower() for prompt in prompts)\n   |     ^^^^^^\n83 |     assert any(\"meeting\" in prompt.lower() for prompt in prompts)\n84 |     assert \"account\" in prompts[0]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:83:5\n   |\n82 |     assert any(\"follow-up\" in prompt.lower() for prompt in prompts)\n83 |     assert any(\"meeting\" in prompt.lower() for prompt in prompts)\n   |     ^^^^^^\n84 |     assert \"account\" in prompts[0]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:84:5\n   |\n82 |     assert any(\"follow-up\" in prompt.lower() for prompt in prompts)\n83 |     assert any(\"meeting\" in prompt.lower() for prompt in prompts)\n84 |     assert \"account\" in prompts[0]\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:93:5\n   |\n91 |     ideas = service.brainstorm(\"quarterly planning\", variants=4)\n92 |\n93 |     assert len(ideas) == 4\n   |     ^^^^^^\n94 |     assert ideas[0].startswith(\"Plan:\")\n95 |     assert ideas[-1].startswith(\"Share:\")\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `4` with a constant variable\n  --> tests\\test_ai_service.py:93:26\n   |\n91 |     ideas = service.brainstorm(\"quarterly planning\", variants=4)\n92 |\n93 |     assert len(ideas) == 4\n   |                          ^\n94 |     assert ideas[0].startswith(\"Plan:\")\n95 |     assert ideas[-1].startswith(\"Share:\")\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:94:5\n   |\n93 |     assert len(ideas) == 4\n94 |     assert ideas[0].startswith(\"Plan:\")\n   |     ^^^^^^\n95 |     assert ideas[-1].startswith(\"Share:\")\n96 |     assert all(\"quarterly planning\" in idea for idea in ideas)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:95:5\n   |\n93 |     assert len(ideas) == 4\n94 |     assert ideas[0].startswith(\"Plan:\")\n95 |     assert ideas[-1].startswith(\"Share:\")\n   |     ^^^^^^\n96 |     assert all(\"quarterly planning\" in idea for idea in ideas)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_ai_service.py:96:5\n   |\n94 |     assert ideas[0].startswith(\"Plan:\")\n95 |     assert ideas[-1].startswith(\"Share:\")\n96 |     assert all(\"quarterly planning\" in idea for idea in ideas)\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_ai_service.py:106:5\n    |\n104 |     ideas = service.brainstorm(\"ops review\", variants=variants)\n105 |\n106 |     assert len(ideas) == variants\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_api.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_api.py:1:1\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_api.py:6:21\n  |\n5 | import base64\n6 | from pathlib import Path\n  |                     ^^^^\n7 | from typing import Any, cast\n  |\nhelp: Move into type-checking block\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `api_client`\n  --> tests\\test_api.py:25:35\n   |\n24 | @pytest.fixture\n25 | def api_client(tmp_path: Path) -> Any:\n   |                                   ^^^\n26 |     cfg = load_config(\n27 |         {\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `api_client`\n  --> tests\\test_api.py:47:38\n   |\n47 | def test_health_endpoint(api_client: Any) -> None:\n   |                                      ^^^\n48 |     response = api_client.get(\"/health\")\n49 |     assert response.status_code == 200\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:49:5\n   |\n47 | def test_health_endpoint(api_client: Any) -> None:\n48 |     response = api_client.get(\"/health\")\n49 |     assert response.status_code == 200\n   |     ^^^^^^\n50 |     assert response.json()[\"status\"] == \"ok\"\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n  --> tests\\test_api.py:49:36\n   |\n47 | def test_health_endpoint(api_client: Any) -> None:\n48 |     response = api_client.get(\"/health\")\n49 |     assert response.status_code == 200\n   |                                    ^^^\n50 |     assert response.json()[\"status\"] == \"ok\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:50:5\n   |\n48 |     response = api_client.get(\"/health\")\n49 |     assert response.status_code == 200\n50 |     assert response.json()[\"status\"] == \"ok\"\n   |     ^^^^^^\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `api_client`\n  --> tests\\test_api.py:53:55\n   |\n53 | def test_scan_endpoint_returns_ai_summary(api_client: Any) -> None:\n   |                                                       ^^^\n54 |     ctx = api_client.app.state.ctx  # type: ignore[attr-defined]\n55 |     task = ctx.task_service.add_task(\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:71:5\n   |\n69 |     )\n70 |\n71 |     assert response.status_code == 200\n   |     ^^^^^^\n72 |     payload: dict[str, Any] = response.json()\n73 |     assert payload[\"card_id\"] == \"card-123\"\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n  --> tests\\test_api.py:71:36\n   |\n69 |     )\n70 |\n71 |     assert response.status_code == 200\n   |                                    ^^^\n72 |     payload: dict[str, Any] = response.json()\n73 |     assert payload[\"card_id\"] == \"card-123\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:73:5\n   |\n71 |     assert response.status_code == 200\n72 |     payload: dict[str, Any] = response.json()\n73 |     assert payload[\"card_id\"] == \"card-123\"\n   |     ^^^^^^\n74 |     assert payload[\"task\"][\"updated\"] is True\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:74:5\n   |\n72 |     payload: dict[str, Any] = response.json()\n73 |     assert payload[\"card_id\"] == \"card-123\"\n74 |     assert payload[\"task\"][\"updated\"] is True\n   |     ^^^^^^\n75 |\n76 |     summary = payload[\"ai_summary\"]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:77:5\n   |\n76 |     summary = payload[\"ai_summary\"]\n77 |     assert summary[\"pending\"] >= 0\n   |     ^^^^^^\n78 |     assert summary[\"completed\"] >= 0\n79 |     assert summary[\"top_tags\"]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:78:5\n   |\n76 |     summary = payload[\"ai_summary\"]\n77 |     assert summary[\"pending\"] >= 0\n78 |     assert summary[\"completed\"] >= 0\n   |     ^^^^^^\n79 |     assert summary[\"top_tags\"]\n80 |     assert isinstance(summary[\"upcoming\"], list)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:79:5\n   |\n77 |     assert summary[\"pending\"] >= 0\n78 |     assert summary[\"completed\"] >= 0\n79 |     assert summary[\"top_tags\"]\n   |     ^^^^^^\n80 |     assert isinstance(summary[\"upcoming\"], list)\n81 |     if summary[\"upcoming\"]:\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:80:5\n   |\n78 |     assert summary[\"completed\"] >= 0\n79 |     assert summary[\"top_tags\"]\n80 |     assert isinstance(summary[\"upcoming\"], list)\n   |     ^^^^^^\n81 |     if summary[\"upcoming\"]:\n82 |         first = summary[\"upcoming\"][0]\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_api.py:83:9\n   |\n81 |     if summary[\"upcoming\"]:\n82 |         first = summary[\"upcoming\"][0]\n83 |         assert \"task_id\" in first and \"description\" in first\n   |         ^^^^^^\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_api.py:83:9\n   |\n81 |     if summary[\"upcoming\"]:\n82 |         first = summary[\"upcoming\"][0]\n83 |         assert \"task_id\" in first and \"description\" in first\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Break down assertion into multiple parts\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `api_client`\n  --> tests\\test_api.py:86:53\n   |\n86 | def test_collaboration_bundle_endpoints(api_client: Any) -> None:\n   |                                                     ^^^\n87 |     payload = base64.b64encode(b'{\"hello\": \"world\"}').decode(\"utf-8\")\n88 |     metadata = {\"label\": \"demo\"}\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:98:5\n    |\n 96 |         },\n 97 |     )\n 98 |     assert response.status_code == 201\n    |     ^^^^^^\n 99 |     created = response.json()\n100 |     bundle_id = created[\"bundle_id\"]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `201` with a constant variable\n   --> tests\\test_api.py:98:36\n    |\n 96 |         },\n 97 |     )\n 98 |     assert response.status_code == 201\n    |                                    ^^^\n 99 |     created = response.json()\n100 |     bundle_id = created[\"bundle_id\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:101:5\n    |\n 99 |     created = response.json()\n100 |     bundle_id = created[\"bundle_id\"]\n101 |     assert created[\"metadata\"] == metadata\n    |     ^^^^^^\n102 |\n103 |     payload_two = base64.b64encode(b'{\"hello\": \"second\"}').decode(\"utf-8\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:112:5\n    |\n110 |         },\n111 |     )\n112 |     assert response_two.status_code == 201\n    |     ^^^^^^\n113 |     created_two = response_two.json()\n114 |     bundle_id_two = created_two[\"bundle_id\"]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `201` with a constant variable\n   --> tests\\test_api.py:112:40\n    |\n110 |         },\n111 |     )\n112 |     assert response_two.status_code == 201\n    |                                        ^^^\n113 |     created_two = response_two.json()\n114 |     bundle_id_two = created_two[\"bundle_id\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:117:5\n    |\n116 |     latest = api_client.get(\"/api/collab/bundles/latest\")\n117 |     assert latest.status_code == 200\n    |     ^^^^^^\n118 |     latest_payload = latest.json()\n119 |     assert latest_payload[\"bundle_id\"] == bundle_id_two\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> tests\\test_api.py:117:34\n    |\n116 |     latest = api_client.get(\"/api/collab/bundles/latest\")\n117 |     assert latest.status_code == 200\n    |                                  ^^^\n118 |     latest_payload = latest.json()\n119 |     assert latest_payload[\"bundle_id\"] == bundle_id_two\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:119:5\n    |\n117 |     assert latest.status_code == 200\n118 |     latest_payload = latest.json()\n119 |     assert latest_payload[\"bundle_id\"] == bundle_id_two\n    |     ^^^^^^\n120 |     assert (\n121 |         base64.b64decode(latest_payload[\"payload\"]) == b'{\"hello\": \"second\"}'\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:120:5\n    |\n118 |     latest_payload = latest.json()\n119 |     assert latest_payload[\"bundle_id\"] == bundle_id_two\n120 |     assert (\n    |     ^^^^^^\n121 |         base64.b64decode(latest_payload[\"payload\"]) == b'{\"hello\": \"second\"}'\n122 |     )\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:125:5\n    |\n124 |     specific = api_client.get(f\"/api/collab/bundles/{bundle_id}\")\n125 |     assert specific.status_code == 200\n    |     ^^^^^^\n126 |     assert specific.json()[\"bundle_id\"] == bundle_id\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> tests\\test_api.py:125:36\n    |\n124 |     specific = api_client.get(f\"/api/collab/bundles/{bundle_id}\")\n125 |     assert specific.status_code == 200\n    |                                    ^^^\n126 |     assert specific.json()[\"bundle_id\"] == bundle_id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:126:5\n    |\n124 |     specific = api_client.get(f\"/api/collab/bundles/{bundle_id}\")\n125 |     assert specific.status_code == 200\n126 |     assert specific.json()[\"bundle_id\"] == bundle_id\n    |     ^^^^^^\n127 |\n128 |     listing = api_client.get(\"/api/collab/bundles?limit=5\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:129:5\n    |\n128 |     listing = api_client.get(\"/api/collab/bundles?limit=5\")\n129 |     assert listing.status_code == 200\n    |     ^^^^^^\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> tests\\test_api.py:129:35\n    |\n128 |     listing = api_client.get(\"/api/collab/bundles?limit=5\")\n129 |     assert listing.status_code == 200\n    |                                   ^^^\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:131:5\n    |\n129 |     assert listing.status_code == 200\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n    |     ^^^^^^\n132 |     assert len(listing_payload) >= 2\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:132:5\n    |\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n132 |     assert len(listing_payload) >= 2\n    |     ^^^^^^\n133 |\n134 |     prune = api_client.delete(\"/api/collab/bundles?keep=1\")\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> tests\\test_api.py:132:36\n    |\n130 |     listing_payload = cast(\"list[dict[str, Any]]\", listing.json())\n131 |     assert isinstance(listing_payload, list)\n132 |     assert len(listing_payload) >= 2\n    |                                    ^\n133 |\n134 |     prune = api_client.delete(\"/api/collab/bundles?keep=1\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:135:5\n    |\n134 |     prune = api_client.delete(\"/api/collab/bundles?keep=1\")\n135 |     assert prune.status_code == 200\n    |     ^^^^^^\n136 |     pruned_payload = cast(\"dict[str, Any]\", prune.json())\n137 |     assert pruned_payload[\"remaining\"] == 1\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `200` with a constant variable\n   --> tests\\test_api.py:135:33\n    |\n134 |     prune = api_client.delete(\"/api/collab/bundles?keep=1\")\n135 |     assert prune.status_code == 200\n    |                                 ^^^\n136 |     pruned_payload = cast(\"dict[str, Any]\", prune.json())\n137 |     assert pruned_payload[\"remaining\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:137:5\n    |\n135 |     assert prune.status_code == 200\n136 |     pruned_payload = cast(\"dict[str, Any]\", prune.json())\n137 |     assert pruned_payload[\"remaining\"] == 1\n    |     ^^^^^^\n138 |     expected_removed = max(len(listing_payload) - 1, 0)\n139 |     assert len(pruned_payload[\"removed\"]) == expected_removed\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_api.py:139:5\n    |\n137 |     assert pruned_payload[\"remaining\"] == 1\n138 |     expected_removed = max(len(listing_payload) - 1, 0)\n139 |     assert len(pruned_payload[\"removed\"]) == expected_removed\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_automation_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_automation_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_automation_service.py:4:29\n  |\n3 | import json\n4 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n5 | from datetime import UTC, datetime\n6 | from typing import cast\n  |\nhelp: Move into type-checking block\n\nE501 Line too long (89 > 88)\n  --> tests\\test_automation_service.py:73:89\n   |\n71 |             self.events: list[tuple[str, dict[str, object]]] = []\n72 |\n73 |         def track(self, event: str, properties: dict[str, object] | None = None) -> None:  # type: ignore[override]\n   |                                                                                         ^\n74 |             self.events.append((event, properties or {}))\n   |\n\nARG002 Unused method argument: `now`\n  --> tests\\test_automation_service.py:94:22\n   |\n92 |     class StubAIService:\n93 |         def summarize(\n94 |             self, *, now: datetime | None = None, top_n: int = 3\n   |                      ^^^\n95 |         ) -> TaskSummary:\n96 |             return summary\n   |\n\nARG002 Unused method argument: `top_n`\n  --> tests\\test_automation_service.py:94:51\n   |\n92 |     class StubAIService:\n93 |         def summarize(\n94 |             self, *, now: datetime | None = None, top_n: int = 3\n   |                                                   ^^^^^\n95 |         ) -> TaskSummary:\n96 |             return summary\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:112:5\n    |\n110 |     )\n111 |\n112 |     assert len(captured) == 1\n    |     ^^^^^^\n113 |     request = captured[0]\n114 |     assert request.url == httpx.URL(\"https://example.com/automation\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:114:5\n    |\n112 |     assert len(captured) == 1\n113 |     request = captured[0]\n114 |     assert request.url == httpx.URL(\"https://example.com/automation\")\n    |     ^^^^^^\n115 |     payload = json.loads(request.content.decode(\"utf-8\"))\n116 |     assert payload[\"event\"] == \"card_scanned\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:116:5\n    |\n114 |     assert request.url == httpx.URL(\"https://example.com/automation\")\n115 |     payload = json.loads(request.content.decode(\"utf-8\"))\n116 |     assert payload[\"event\"] == \"card_scanned\"\n    |     ^^^^^^\n117 |     inner = payload[\"payload\"]\n118 |     assert inner[\"task\"][\"id\"] == task.id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:118:5\n    |\n116 |     assert payload[\"event\"] == \"card_scanned\"\n117 |     inner = payload[\"payload\"]\n118 |     assert inner[\"task\"][\"id\"] == task.id\n    |     ^^^^^^\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:119:5\n    |\n117 |     inner = payload[\"payload\"]\n118 |     assert inner[\"task\"][\"id\"] == task.id\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n    |     ^^^^^^\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:120:5\n    |\n118 |     assert inner[\"task\"][\"id\"] == task.id\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n    |     ^^^^^^\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:121:5\n    |\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n    |     ^^^^^^\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n123 |     assert telemetry.events == [\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> tests\\test_automation_service.py:121:46\n    |\n119 |     assert inner[\"task\"][\"priority\"] == \"high\"\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n    |                                              ^\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n123 |     assert telemetry.events == [\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:122:5\n    |\n120 |     assert inner[\"metadata\"][\"reader\"] == \"qrbot\"\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n    |     ^^^^^^\n123 |     assert telemetry.events == [\n124 |         (\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:123:5\n    |\n121 |     assert inner[\"ai_summary\"][\"pending\"] == 5\n122 |     assert inner[\"ai_summary\"][\"top_tags\"] == [\"alpha\"]\n123 |     assert telemetry.events == [\n    |     ^^^^^^\n124 |         (\n125 |             \"automation.dispatch\",\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_automation_service.py:141:5\n    |\n139 |     service = AutomationService(dispatcher, repo, None)\n140 |\n141 |     assert service.enabled is False\n    |     ^^^^^^\n142 |     # Publishing should not raise\n143 |     dispatcher.publish(\n    |\n\nC408 Unnecessary `tuple()` call (rewrite as a literal)\n   --> tests\\test_automation_service.py:148:18\n    |\n146 |             task_id=None,\n147 |             action=\"scan\",\n148 |             tags=tuple(),\n    |                  ^^^^^^^\n149 |             metadata={},\n150 |             task_error=None,\n    |\nhelp: Rewrite as a literal\n\nINP001 File `tests\\test_card_action_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_card_action_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_card_action_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime\n5 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_card_action_service.py:5:21\n  |\n3 | from collections.abc import Iterable\n4 | from datetime import UTC, datetime\n5 | from pathlib import Path\n  |                     ^^^^\n6 |\n7 | import pytest\n  |\nhelp: Move into type-checking block\n\nANN202 Missing return type annotation for private function `_make_service`\n  --> tests\\test_card_action_service.py:47:5\n   |\n47 | def _make_service(tmp_path: Path):\n   |     ^^^^^^^^^^^^^\n48 |     storage = Storage(str(tmp_path / \"cards.db\"))\n49 |     dispatcher = events.EventDispatcher()\n   |\nhelp: Add return type annotation\n\nANN201 Missing return type annotation for public function `test_scan_completes_linked_task`\n  --> tests\\test_card_action_service.py:59:5\n   |\n59 | def test_scan_completes_linked_task(tmp_path: Path):\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n60 |     storage, repo, dispatcher, service = _make_service(tmp_path)\n61 |     task = Task.create(\"Demo task\")\n   |\nhelp: Add return type annotation: `None`\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:83:5\n   |\n82 |     saved = repo.get(task.id)\n83 |     assert saved is not None\n   |     ^^^^^^\n84 |     assert saved.status == \"completed\"\n85 |     assert result.card_status == \"completed\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:84:5\n   |\n82 |     saved = repo.get(task.id)\n83 |     assert saved is not None\n84 |     assert saved.status == \"completed\"\n   |     ^^^^^^\n85 |     assert result.card_status == \"completed\"\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:85:5\n   |\n83 |     assert saved is not None\n84 |     assert saved.status == \"completed\"\n85 |     assert result.card_status == \"completed\"\n   |     ^^^^^^\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:86:5\n   |\n84 |     assert saved.status == \"completed\"\n85 |     assert result.card_status == \"completed\"\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n   |     ^^^^^^\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n88 |     assert dispatcher_events and dispatcher_events[0].card_id == card.id\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:87:5\n   |\n85 |     assert result.card_status == \"completed\"\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n   |     ^^^^^^\n88 |     assert dispatcher_events and dispatcher_events[0].card_id == card.id\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_card_action_service.py:88:5\n   |\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n88 |     assert dispatcher_events and dispatcher_events[0].card_id == card.id\n   |     ^^^^^^\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_card_action_service.py:88:5\n   |\n86 |     assert result.metadata[\"source\"] == \"qr_reader\"\n87 |     assert result.metadata[\"task_update\"] == \"complete\"\n88 |     assert dispatcher_events and dispatcher_events[0].card_id == card.id\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Break down assertion into multiple parts\n\nANN201 Missing return type annotation for public function `test_scan_without_task_tag_marks_card`\n  --> tests\\test_card_action_service.py:91:5\n   |\n91 | def test_scan_without_task_tag_marks_card(tmp_path: Path):\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n92 |     storage, _, _, service = _make_service(tmp_path)\n93 |     card = Notecard(\n   |\nhelp: Add return type annotation: `None`\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:104:5\n    |\n102 |     result = service.handle_scan(card.id, task_update=\"none\")\n103 |\n104 |     assert result.card_status == \"acted\"\n    |     ^^^^^^\n105 |     assert result.task.updated is False\n106 |     stored = storage.get_card(card.id)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:105:5\n    |\n104 |     assert result.card_status == \"acted\"\n105 |     assert result.task.updated is False\n    |     ^^^^^^\n106 |     stored = storage.get_card(card.id)\n107 |     assert stored is not None\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:107:5\n    |\n105 |     assert result.task.updated is False\n106 |     stored = storage.get_card(card.id)\n107 |     assert stored is not None\n    |     ^^^^^^\n108 |     assert stored.status == \"acted\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:108:5\n    |\n106 |     stored = storage.get_card(card.id)\n107 |     assert stored is not None\n108 |     assert stored.status == \"acted\"\n    |     ^^^^^^\n    |\n\nANN201 Missing return type annotation for public function `test_scan_missing_card_raises`\n   --> tests\\test_card_action_service.py:111:5\n    |\n111 | def test_scan_missing_card_raises(tmp_path: Path):\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n112 |     _, _, _, service = _make_service(tmp_path)\n113 |     with pytest.raises(CardNotFoundError):\n    |\nhelp: Add return type annotation: `None`\n\nANN201 Missing return type annotation for public function `test_scan_with_missing_task_records_error`\n   --> tests\\test_card_action_service.py:117:5\n    |\n117 | def test_scan_with_missing_task_records_error(tmp_path: Path):\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n118 |     storage, _, _, service = _make_service(tmp_path)\n119 |     card = Notecard(\n    |\nhelp: Add return type annotation: `None`\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:130:5\n    |\n128 |     result = service.handle_scan(card.id)\n129 |\n130 |     assert result.task.error == \"task_not_found\"\n    |     ^^^^^^\n131 |     assert result.card_status == \"acted\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_card_action_service.py:131:5\n    |\n130 |     assert result.task.error == \"task_not_found\"\n131 |     assert result.card_status == \"acted\"\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_cli_ai_briefing.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_cli_ai_briefing.py:1:1\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_cli_ai_briefing.py:4:21\n  |\n3 | from datetime import UTC, datetime, timedelta\n4 | from pathlib import Path\n  |                     ^^^^\n5 | from typing import Any, Protocol, cast\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `pytest` into a type-checking block\n --> tests\\test_cli_ai_briefing.py:7:8\n  |\n5 | from typing import Any, Protocol, cast\n6 |\n7 | import pytest\n  |        ^^^^^^\n8 | from typer.testing import CliRunner  # type: ignore[import-not-found]\n9 | from x_legatus_acta_schedae_x.core.domain.review import ReviewRecord\n  |\nhelp: Move into type-checking block\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `app`\n  --> tests\\test_cli_ai_briefing.py:40:27\n   |\n39 | class _CliRunner(Protocol):\n40 |     def invoke(self, app: Any, args: list[str]) -> _CliResult: ...\n   |                           ^^^\n   |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_ai_briefing.py:100:5\n    |\n 98 |     ctx = StubContext(briefing)\n 99 |\n100 |     from x_legatus_acta_schedae_x import interface\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n101 |\n102 |     interface.cli.main  # type: ignore[attr-defined]\n    |\n\nB018 Found useless expression. Either assign it to a variable or remove it.\n   --> tests\\test_cli_ai_briefing.py:102:5\n    |\n100 |     from x_legatus_acta_schedae_x import interface\n101 |\n102 |     interface.cli.main  # type: ignore[attr-defined]\n    |     ^^^^^^^^^^^^^^^^^^\n103 |\n104 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_ai_briefing.py:104:5\n    |\n102 |     interface.cli.main  # type: ignore[attr-defined]\n103 |\n104 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n105 |\n106 |     monkeypatch.setattr(cli_main, \"_ctx\", lambda: ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:114:5\n    |\n112 |     )\n113 |\n114 |     assert result.exit_code == 0\n    |     ^^^^^^\n115 |     assert \"AI Daily Briefing\" in result.stdout\n116 |     assert \"Pending:   4\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:115:5\n    |\n114 |     assert result.exit_code == 0\n115 |     assert \"AI Daily Briefing\" in result.stdout\n    |     ^^^^^^\n116 |     assert \"Pending:   4\" in result.stdout\n117 |     assert \"delegate follow-up\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:116:5\n    |\n114 |     assert result.exit_code == 0\n115 |     assert \"AI Daily Briefing\" in result.stdout\n116 |     assert \"Pending:   4\" in result.stdout\n    |     ^^^^^^\n117 |     assert \"delegate follow-up\" in result.stdout\n118 |     assert output_path.exists()\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:117:5\n    |\n115 |     assert \"AI Daily Briefing\" in result.stdout\n116 |     assert \"Pending:   4\" in result.stdout\n117 |     assert \"delegate follow-up\" in result.stdout\n    |     ^^^^^^\n118 |     assert output_path.exists()\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:118:5\n    |\n116 |     assert \"Pending:   4\" in result.stdout\n117 |     assert \"delegate follow-up\" in result.stdout\n118 |     assert output_path.exists()\n    |     ^^^^^^\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n120 |     assert \"AI Daily Briefing\" in written\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:120:5\n    |\n118 |     assert output_path.exists()\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n120 |     assert \"AI Daily Briefing\" in written\n    |     ^^^^^^\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:121:5\n    |\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n120 |     assert \"AI Daily Briefing\" in written\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n    |     ^^^^^^\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n123 |     assert ctx.telemetry.events[0][1][\"guidance\"] == 1\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n   --> tests\\test_cli_ai_briefing.py:121:57\n    |\n119 |     written = output_path.read_text(encoding=\"utf-8\")\n120 |     assert \"AI Daily Briefing\" in written\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n    |                                                         ^\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n123 |     assert ctx.telemetry.events[0][1][\"guidance\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:122:5\n    |\n120 |     assert \"AI Daily Briefing\" in written\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n    |     ^^^^^^\n123 |     assert ctx.telemetry.events[0][1][\"guidance\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_ai_briefing.py:123:5\n    |\n121 |     assert ctx.ai_briefing_service.calls[0][\"limit\"] == 3\n122 |     assert ctx.telemetry.events[0][0] == \"ai.briefing\"\n123 |     assert ctx.telemetry.events[0][1][\"guidance\"] == 1\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_cli_collab.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_cli_collab.py:1:1\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `app`\n  --> tests\\test_cli_collab.py:94:27\n   |\n93 | class _CliRunner(Protocol):\n94 |     def invoke(self, app: Any, args: list[str]) -> _CliResult: ...\n   |                           ^^^\n   |\n\nPYI034 `__enter__` methods in classes like `StubPushClient` usually return `self` at runtime\n   --> tests\\test_cli_collab.py:102:9\n    |\n100 |         self.uploads = uploads\n101 |\n102 |     def __enter__(self) -> StubPushClient:\n    |         ^^^^^^^^^\n103 |         return self\n    |\nhelp: Use `Self` as return type\n\nANN001 Missing type annotation for function argument `exc_type`\n   --> tests\\test_cli_collab.py:105:24\n    |\n103 |         return self\n104 |\n105 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                        ^^^^^^^^\n106 |         return None\n    |\n\nANN001 Missing type annotation for function argument `exc`\n   --> tests\\test_cli_collab.py:105:34\n    |\n103 |         return self\n104 |\n105 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                  ^^^\n106 |         return None\n    |\n\nANN001 Missing type annotation for function argument `tb`\n   --> tests\\test_cli_collab.py:105:39\n    |\n103 |         return self\n104 |\n105 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                       ^^\n106 |         return None\n    |\n\nPYI034 `__enter__` methods in classes like `StubPullClient` usually return `self` at runtime\n   --> tests\\test_cli_collab.py:139:9\n    |\n137 |         self.fetch_specific: list[str] = []\n138 |\n139 |     def __enter__(self) -> StubPullClient:\n    |         ^^^^^^^^^\n140 |         return self\n    |\nhelp: Use `Self` as return type\n\nANN001 Missing type annotation for function argument `exc_type`\n   --> tests\\test_cli_collab.py:142:24\n    |\n140 |         return self\n141 |\n142 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                        ^^^^^^^^\n143 |         return None\n    |\n\nANN001 Missing type annotation for function argument `exc`\n   --> tests\\test_cli_collab.py:142:34\n    |\n140 |         return self\n141 |\n142 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                  ^^^\n143 |         return None\n    |\n\nANN001 Missing type annotation for function argument `tb`\n   --> tests\\test_cli_collab.py:142:39\n    |\n140 |         return self\n141 |\n142 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                       ^^\n143 |         return None\n    |\n\nARG002 Unused method argument: `args`\n   --> tests\\test_cli_collab.py:145:28\n    |\n143 |         return None\n144 |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n    |                            ^^^^\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:145:34\n    |\n143 |         return None\n144 |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n    |                                  ^^^\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |\n\nARG002 Unused method argument: `kwargs`\n   --> tests\\test_cli_collab.py:145:41\n    |\n143 |         return None\n144 |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n    |                                         ^^^^^^\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:145:49\n    |\n143 |         return None\n144 |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n    |                                                 ^^^\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> tests\\test_cli_collab.py:146:15\n    |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n147 |\n148 |     def fetch_latest_bundle(self) -> BundleDownloadResult | None:\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> tests\\test_cli_collab.py:146:30\n    |\n145 |     def push_bundle(self, *args: Any, **kwargs: Any) -> None:\n146 |         raise AssertionError(\"push_bundle should not be called in pull test\")\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n147 |\n148 |     def fetch_latest_bundle(self) -> BundleDownloadResult | None:\n    |\nhelp: Assign to variable; remove string literal\n\nPYI034 `__enter__` methods in classes like `StubHistoryClient` usually return `self` at runtime\n   --> tests\\test_cli_collab.py:175:9\n    |\n173 |         self._prune_remaining = prune_remaining\n174 |\n175 |     def __enter__(self) -> StubHistoryClient:\n    |         ^^^^^^^^^\n176 |         return self\n    |\nhelp: Use `Self` as return type\n\nANN001 Missing type annotation for function argument `exc_type`\n   --> tests\\test_cli_collab.py:178:24\n    |\n176 |         return self\n177 |\n178 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                        ^^^^^^^^\n179 |         return None\n    |\n\nANN001 Missing type annotation for function argument `exc`\n   --> tests\\test_cli_collab.py:178:34\n    |\n176 |         return self\n177 |\n178 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                  ^^^\n179 |         return None\n    |\n\nANN001 Missing type annotation for function argument `tb`\n   --> tests\\test_cli_collab.py:178:39\n    |\n176 |         return self\n177 |\n178 |     def __exit__(self, exc_type, exc, tb) -> None:  # type: ignore[override]\n    |                                       ^^\n179 |         return None\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_ctx`\n   --> tests\\test_cli_collab.py:241:19\n    |\n239 |     uploads: list[dict[str, Any]] = []\n240 |\n241 |     def _ctx() -> Any:\n    |                   ^^^\n242 |         return ctx\n    |\n\nARG001 Unused function argument: `args`\n   --> tests\\test_cli_collab.py:245:25\n    |\n244 |     def _client_factory(\n245 |         base_url: str, *args: Any, **kwargs: Any\n    |                         ^^^^\n246 |     ) -> StubPushClient:\n247 |         return StubPushClient(base_url, uploads)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:245:31\n    |\n244 |     def _client_factory(\n245 |         base_url: str, *args: Any, **kwargs: Any\n    |                               ^^^\n246 |     ) -> StubPushClient:\n247 |         return StubPushClient(base_url, uploads)\n    |\n\nARG001 Unused function argument: `kwargs`\n   --> tests\\test_cli_collab.py:245:38\n    |\n244 |     def _client_factory(\n245 |         base_url: str, *args: Any, **kwargs: Any\n    |                                      ^^^^^^\n246 |     ) -> StubPushClient:\n247 |         return StubPushClient(base_url, uploads)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:245:46\n    |\n244 |     def _client_factory(\n245 |         base_url: str, *args: Any, **kwargs: Any\n    |                                              ^^^\n246 |     ) -> StubPushClient:\n247 |         return StubPushClient(base_url, uploads)\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_collab.py:249:5\n    |\n247 |         return StubPushClient(base_url, uploads)\n248 |\n249 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n250 |\n251 |     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:270:5\n    |\n268 |     )\n269 |\n270 |     assert result.exit_code == 0\n    |     ^^^^^^\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:271:5\n    |\n270 |     assert result.exit_code == 0\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n    |     ^^^^^^\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n273 |     assert service.exports[0][\"limit\"] == 3\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:272:5\n    |\n270 |     assert result.exit_code == 0\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n    |     ^^^^^^\n273 |     assert service.exports[0][\"limit\"] == 3\n274 |     assert uploads\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:272:5\n    |\n270 |     assert result.exit_code == 0\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n273 |     assert service.exports[0][\"limit\"] == 3\n274 |     assert uploads\n    |\nhelp: Break down assertion into multiple parts\n\nS105 Possible hardcoded password assigned to: \"passphrase\"\n   --> tests\\test_cli_collab.py:272:68\n    |\n270 |     assert result.exit_code == 0\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n    |                                                                    ^^^^^^^^\n273 |     assert service.exports[0][\"limit\"] == 3\n274 |     assert uploads\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:273:5\n    |\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n273 |     assert service.exports[0][\"limit\"] == 3\n    |     ^^^^^^\n274 |     assert uploads\n275 |     metadata = uploads[0][\"metadata\"]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n   --> tests\\test_cli_collab.py:273:43\n    |\n271 |     assert \"Uploaded bundle bundle-123\" in result.stdout\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n273 |     assert service.exports[0][\"limit\"] == 3\n    |                                           ^\n274 |     assert uploads\n275 |     metadata = uploads[0][\"metadata\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:274:5\n    |\n272 |     assert service.exports and service.exports[0][\"passphrase\"] == \"secret\"\n273 |     assert service.exports[0][\"limit\"] == 3\n274 |     assert uploads\n    |     ^^^^^^\n275 |     metadata = uploads[0][\"metadata\"]\n276 |     assert metadata[\"tasks\"] == 2\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:276:5\n    |\n274 |     assert uploads\n275 |     metadata = uploads[0][\"metadata\"]\n276 |     assert metadata[\"tasks\"] == 2\n    |     ^^^^^^\n277 |     assert metadata[\"include_completed\"] is True\n278 |     ai_meta = metadata[\"ai_summary\"]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> tests\\test_cli_collab.py:276:33\n    |\n274 |     assert uploads\n275 |     metadata = uploads[0][\"metadata\"]\n276 |     assert metadata[\"tasks\"] == 2\n    |                                 ^\n277 |     assert metadata[\"include_completed\"] is True\n278 |     ai_meta = metadata[\"ai_summary\"]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:277:5\n    |\n275 |     metadata = uploads[0][\"metadata\"]\n276 |     assert metadata[\"tasks\"] == 2\n277 |     assert metadata[\"include_completed\"] is True\n    |     ^^^^^^\n278 |     ai_meta = metadata[\"ai_summary\"]\n279 |     assert ai_meta[\"pending\"] == summary.pending\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:279:5\n    |\n277 |     assert metadata[\"include_completed\"] is True\n278 |     ai_meta = metadata[\"ai_summary\"]\n279 |     assert ai_meta[\"pending\"] == summary.pending\n    |     ^^^^^^\n280 |     assert ai_meta[\"completed\"] == summary.completed\n281 |     assert ai_meta[\"overdue\"] == summary.overdue\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:280:5\n    |\n278 |     ai_meta = metadata[\"ai_summary\"]\n279 |     assert ai_meta[\"pending\"] == summary.pending\n280 |     assert ai_meta[\"completed\"] == summary.completed\n    |     ^^^^^^\n281 |     assert ai_meta[\"overdue\"] == summary.overdue\n282 |     assert ai_meta[\"top_tags\"] == summary.top_tags\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:281:5\n    |\n279 |     assert ai_meta[\"pending\"] == summary.pending\n280 |     assert ai_meta[\"completed\"] == summary.completed\n281 |     assert ai_meta[\"overdue\"] == summary.overdue\n    |     ^^^^^^\n282 |     assert ai_meta[\"top_tags\"] == summary.top_tags\n283 |     expected_due = (\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:282:5\n    |\n280 |     assert ai_meta[\"completed\"] == summary.completed\n281 |     assert ai_meta[\"overdue\"] == summary.overdue\n282 |     assert ai_meta[\"top_tags\"] == summary.top_tags\n    |     ^^^^^^\n283 |     expected_due = (\n284 |         summary.upcoming[0].due.isoformat()\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:288:5\n    |\n286 |         else None\n287 |     )\n288 |     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n    |     ^^^^^^\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:289:5\n    |\n287 |     )\n288 |     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n    |     ^^^^^^\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:290:5\n    |\n288 |     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n    |     ^^^^^^\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:290:5\n    |\n288 |     assert ai_meta[\"upcoming\"][0][\"due\"] == expected_due\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:291:5\n    |\n289 |     assert uploads[0][\"source\"] == \"unit-test\"\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n    |     ^^^^^^\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n293 |     assert telemetry.events[0][1][\"completed\"] == summary.completed\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:292:5\n    |\n290 |     assert telemetry.events and telemetry.events[0][0] == \"collab.push\"\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n    |     ^^^^^^\n293 |     assert telemetry.events[0][1][\"completed\"] == summary.completed\n294 |     assert telemetry.events[0][1][\"overdue\"] == summary.overdue\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:293:5\n    |\n291 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-123\"\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n293 |     assert telemetry.events[0][1][\"completed\"] == summary.completed\n    |     ^^^^^^\n294 |     assert telemetry.events[0][1][\"overdue\"] == summary.overdue\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:294:5\n    |\n292 |     assert telemetry.events[0][1][\"pending\"] == summary.pending\n293 |     assert telemetry.events[0][1][\"completed\"] == summary.completed\n294 |     assert telemetry.events[0][1][\"overdue\"] == summary.overdue\n    |     ^^^^^^\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_ctx`\n   --> tests\\test_cli_collab.py:321:19\n    |\n319 |     )\n320 |\n321 |     def _ctx() -> Any:\n    |                   ^^^\n322 |         return ctx\n    |\n\nARG001 Unused function argument: `args`\n   --> tests\\test_cli_collab.py:325:25\n    |\n324 |     def _client_factory(\n325 |         base_url: str, *args: Any, **kwargs: Any\n    |                         ^^^^\n326 |     ) -> StubPullClient:\n327 |         return StubPullClient(base_url, download)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:325:31\n    |\n324 |     def _client_factory(\n325 |         base_url: str, *args: Any, **kwargs: Any\n    |                               ^^^\n326 |     ) -> StubPullClient:\n327 |         return StubPullClient(base_url, download)\n    |\n\nARG001 Unused function argument: `kwargs`\n   --> tests\\test_cli_collab.py:325:38\n    |\n324 |     def _client_factory(\n325 |         base_url: str, *args: Any, **kwargs: Any\n    |                                      ^^^^^^\n326 |     ) -> StubPullClient:\n327 |         return StubPullClient(base_url, download)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:325:46\n    |\n324 |     def _client_factory(\n325 |         base_url: str, *args: Any, **kwargs: Any\n    |                                              ^^^\n326 |     ) -> StubPullClient:\n327 |         return StubPullClient(base_url, download)\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_collab.py:329:5\n    |\n327 |         return StubPullClient(base_url, download)\n328 |\n329 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n330 |\n331 |     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:347:5\n    |\n345 |     )\n346 |\n347 |     assert result.exit_code == 0\n    |     ^^^^^^\n348 |     assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n349 |     assert (\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:348:5\n    |\n347 |     assert result.exit_code == 0\n348 |     assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n    |     ^^^^^^\n349 |     assert (\n350 |         service.import_calls\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:349:5\n    |\n347 |     assert result.exit_code == 0\n348 |     assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n349 |     assert (\n    |     ^^^^^^\n350 |         service.import_calls\n351 |         and service.import_calls[0][\"passphrase\"] == \"secret\"\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:349:5\n    |\n347 |       assert result.exit_code == 0\n348 |       assert \"Imported 1 task(s) from bundle bundle-55\" in result.stdout\n349 | /     assert (\n350 | |         service.import_calls\n351 | |         and service.import_calls[0][\"passphrase\"] == \"secret\"\n352 | |     )\n    | |_____^\n353 |       assert service.import_calls[0][\"overwrite_existing\"] is True\n354 |       assert service.import_calls[0][\"payload\"] == payload\n    |\nhelp: Break down assertion into multiple parts\n\nS105 Possible hardcoded password assigned to: \"passphrase\"\n   --> tests\\test_cli_collab.py:351:54\n    |\n349 |     assert (\n350 |         service.import_calls\n351 |         and service.import_calls[0][\"passphrase\"] == \"secret\"\n    |                                                      ^^^^^^^^\n352 |     )\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:353:5\n    |\n351 |         and service.import_calls[0][\"passphrase\"] == \"secret\"\n352 |     )\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n    |     ^^^^^^\n354 |     assert service.import_calls[0][\"payload\"] == payload\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:354:5\n    |\n352 |     )\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n354 |     assert service.import_calls[0][\"payload\"] == payload\n    |     ^^^^^^\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:355:5\n    |\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n354 |     assert service.import_calls[0][\"payload\"] == payload\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n    |     ^^^^^^\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n357 |     assert telemetry.events[0][1][\"from_latest\"] is True\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:355:5\n    |\n353 |     assert service.import_calls[0][\"overwrite_existing\"] is True\n354 |     assert service.import_calls[0][\"payload\"] == payload\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n357 |     assert telemetry.events[0][1][\"from_latest\"] is True\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:356:5\n    |\n354 |     assert service.import_calls[0][\"payload\"] == payload\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n    |     ^^^^^^\n357 |     assert telemetry.events[0][1][\"from_latest\"] is True\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:357:5\n    |\n355 |     assert telemetry.events and telemetry.events[0][0] == \"collab.pull\"\n356 |     assert telemetry.events[0][1][\"bundle_id\"] == \"bundle-55\"\n357 |     assert telemetry.events[0][1][\"from_latest\"] is True\n    |     ^^^^^^\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_ctx`\n   --> tests\\test_cli_collab.py:392:19\n    |\n390 |     clients: list[StubHistoryClient] = []\n391 |\n392 |     def _ctx() -> Any:\n    |                   ^^^\n393 |         return ctx\n    |\n\nARG001 Unused function argument: `args`\n   --> tests\\test_cli_collab.py:396:25\n    |\n395 |     def _client_factory(\n396 |         base_url: str, *args: Any, **kwargs: Any\n    |                         ^^^^\n397 |     ) -> StubHistoryClient:\n398 |         client = StubHistoryClient(base_url, bundles)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:396:31\n    |\n395 |     def _client_factory(\n396 |         base_url: str, *args: Any, **kwargs: Any\n    |                               ^^^\n397 |     ) -> StubHistoryClient:\n398 |         client = StubHistoryClient(base_url, bundles)\n    |\n\nARG001 Unused function argument: `kwargs`\n   --> tests\\test_cli_collab.py:396:38\n    |\n395 |     def _client_factory(\n396 |         base_url: str, *args: Any, **kwargs: Any\n    |                                      ^^^^^^\n397 |     ) -> StubHistoryClient:\n398 |         client = StubHistoryClient(base_url, bundles)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:396:46\n    |\n395 |     def _client_factory(\n396 |         base_url: str, *args: Any, **kwargs: Any\n    |                                              ^^^\n397 |     ) -> StubHistoryClient:\n398 |         client = StubHistoryClient(base_url, bundles)\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_collab.py:402:5\n    |\n400 |         return client\n401 |\n402 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n403 |\n404 |     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:419:5\n    |\n417 |     )\n418 |\n419 |     assert result.exit_code == 0\n    |     ^^^^^^\n420 |     assert \"AI Daily Briefing\" not in result.stdout\n421 |     assert \"bundle-1\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:420:5\n    |\n419 |     assert result.exit_code == 0\n420 |     assert \"AI Daily Briefing\" not in result.stdout\n    |     ^^^^^^\n421 |     assert \"bundle-1\" in result.stdout\n422 |     assert '\"note\": \"demo\"' in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:421:5\n    |\n419 |     assert result.exit_code == 0\n420 |     assert \"AI Daily Briefing\" not in result.stdout\n421 |     assert \"bundle-1\" in result.stdout\n    |     ^^^^^^\n422 |     assert '\"note\": \"demo\"' in result.stdout\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:422:5\n    |\n420 |     assert \"AI Daily Briefing\" not in result.stdout\n421 |     assert \"bundle-1\" in result.stdout\n422 |     assert '\"note\": \"demo\"' in result.stdout\n    |     ^^^^^^\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:423:5\n    |\n421 |     assert \"bundle-1\" in result.stdout\n422 |     assert '\"note\": \"demo\"' in result.stdout\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n    |     ^^^^^^\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n425 |     assert clients and clients[0].limits == [1]\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:423:5\n    |\n421 |     assert \"bundle-1\" in result.stdout\n422 |     assert '\"note\": \"demo\"' in result.stdout\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n425 |     assert clients and clients[0].limits == [1]\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:424:5\n    |\n422 |     assert '\"note\": \"demo\"' in result.stdout\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n    |     ^^^^^^\n425 |     assert clients and clients[0].limits == [1]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:425:5\n    |\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n425 |     assert clients and clients[0].limits == [1]\n    |     ^^^^^^\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:425:5\n    |\n423 |     assert telemetry.events and telemetry.events[0][0] == \"collab.history\"\n424 |     assert telemetry.events[0][1][\"count\"] == 1\n425 |     assert clients and clients[0].limits == [1]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Break down assertion into multiple parts\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `_ctx`\n   --> tests\\test_cli_collab.py:451:19\n    |\n449 |     clients: list[StubHistoryClient] = []\n450 |\n451 |     def _ctx() -> Any:\n    |                   ^^^\n452 |         return ctx\n    |\n\nARG001 Unused function argument: `args`\n   --> tests\\test_cli_collab.py:455:25\n    |\n454 |     def _client_factory(\n455 |         base_url: str, *args: Any, **kwargs: Any\n    |                         ^^^^\n456 |     ) -> StubHistoryClient:\n457 |         client = StubHistoryClient(\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `*args`\n   --> tests\\test_cli_collab.py:455:31\n    |\n454 |     def _client_factory(\n455 |         base_url: str, *args: Any, **kwargs: Any\n    |                               ^^^\n456 |     ) -> StubHistoryClient:\n457 |         client = StubHistoryClient(\n    |\n\nARG001 Unused function argument: `kwargs`\n   --> tests\\test_cli_collab.py:455:38\n    |\n454 |     def _client_factory(\n455 |         base_url: str, *args: Any, **kwargs: Any\n    |                                      ^^^^^^\n456 |     ) -> StubHistoryClient:\n457 |         client = StubHistoryClient(\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`\n   --> tests\\test_cli_collab.py:455:46\n    |\n454 |     def _client_factory(\n455 |         base_url: str, *args: Any, **kwargs: Any\n    |                                              ^^^\n456 |     ) -> StubHistoryClient:\n457 |         client = StubHistoryClient(\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> tests\\test_cli_collab.py:466:5\n    |\n464 |         return client\n465 |\n466 |     import x_legatus_acta_schedae_x.interface.cli.main as cli_main\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n467 |\n468 |     monkeypatch.setattr(cli_main, \"_ctx\", _ctx)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:483:5\n    |\n481 |     )\n482 |\n483 |     assert result.exit_code == 0\n    |     ^^^^^^\n484 |     assert \"Removed 1 bundle\" in result.stdout\n485 |     assert \"bundle-9\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:484:5\n    |\n483 |     assert result.exit_code == 0\n484 |     assert \"Removed 1 bundle\" in result.stdout\n    |     ^^^^^^\n485 |     assert \"bundle-9\" in result.stdout\n486 |     assert \"Remaining bundles\" in result.stdout\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:485:5\n    |\n483 |     assert result.exit_code == 0\n484 |     assert \"Removed 1 bundle\" in result.stdout\n485 |     assert \"bundle-9\" in result.stdout\n    |     ^^^^^^\n486 |     assert \"Remaining bundles\" in result.stdout\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:486:5\n    |\n484 |     assert \"Removed 1 bundle\" in result.stdout\n485 |     assert \"bundle-9\" in result.stdout\n486 |     assert \"Remaining bundles\" in result.stdout\n    |     ^^^^^^\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:487:5\n    |\n485 |     assert \"bundle-9\" in result.stdout\n486 |     assert \"Remaining bundles\" in result.stdout\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n    |     ^^^^^^\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:487:5\n    |\n485 |     assert \"bundle-9\" in result.stdout\n486 |     assert \"Remaining bundles\" in result.stdout\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:488:5\n    |\n486 |     assert \"Remaining bundles\" in result.stdout\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n    |     ^^^^^^\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n490 |     assert clients and clients[0].prune_calls == [2]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:489:5\n    |\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n    |     ^^^^^^\n490 |     assert clients and clients[0].prune_calls == [2]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> tests\\test_cli_collab.py:489:51\n    |\n487 |     assert telemetry.events and telemetry.events[0][0] == \"collab.prune\"\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n    |                                                   ^\n490 |     assert clients and clients[0].prune_calls == [2]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_cli_collab.py:490:5\n    |\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n490 |     assert clients and clients[0].prune_calls == [2]\n    |     ^^^^^^\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_cli_collab.py:490:5\n    |\n488 |     assert telemetry.events[0][1][\"removed\"] == 1\n489 |     assert telemetry.events[0][1][\"remaining\"] == 2\n490 |     assert clients and clients[0].prune_calls == [2]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Break down assertion into multiple parts\n\nINP001 File `tests\\test_collaboration_hub.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_collaboration_hub.py:1:1\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> tests\\test_collaboration_hub.py:5:29\n  |\n3 | import base64\n4 | import json\n5 | from collections.abc import Mapping\n  |                             ^^^^^^^\n6 | from datetime import UTC, datetime\n7 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_collaboration_hub.py:7:21\n  |\n5 | from collections.abc import Mapping\n6 | from datetime import UTC, datetime\n7 | from pathlib import Path\n  |                     ^^^^\n8 | from typing import Any, cast\n  |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:28:5\n   |\n27 |     latest = store.latest()\n28 |     assert latest is not None\n   |     ^^^^^^\n29 |     assert latest.bundle_id == stored.bundle_id\n30 |     assert latest.path.read_bytes() == payload\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:29:5\n   |\n27 |     latest = store.latest()\n28 |     assert latest is not None\n29 |     assert latest.bundle_id == stored.bundle_id\n   |     ^^^^^^\n30 |     assert latest.path.read_bytes() == payload\n31 |     fetched = store.get(stored.bundle_id)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:30:5\n   |\n28 |     assert latest is not None\n29 |     assert latest.bundle_id == stored.bundle_id\n30 |     assert latest.path.read_bytes() == payload\n   |     ^^^^^^\n31 |     fetched = store.get(stored.bundle_id)\n32 |     assert fetched is not None\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:32:5\n   |\n30 |     assert latest.path.read_bytes() == payload\n31 |     fetched = store.get(stored.bundle_id)\n32 |     assert fetched is not None\n   |     ^^^^^^\n33 |     assert fetched.bundle_id == stored.bundle_id\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:33:5\n   |\n31 |     fetched = store.get(stored.bundle_id)\n32 |     assert fetched is not None\n33 |     assert fetched.bundle_id == stored.bundle_id\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:43:5\n   |\n41 |     bundles = store.list()\n42 |\n43 |     assert len(bundles) == 2\n   |     ^^^^^^\n44 |     assert bundles[0].bundle_id == second.bundle_id\n45 |     assert bundles[0].stored_at >= bundles[1].stored_at\n   |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n  --> tests\\test_collaboration_hub.py:43:28\n   |\n41 |     bundles = store.list()\n42 |\n43 |     assert len(bundles) == 2\n   |                            ^\n44 |     assert bundles[0].bundle_id == second.bundle_id\n45 |     assert bundles[0].stored_at >= bundles[1].stored_at\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:44:5\n   |\n43 |     assert len(bundles) == 2\n44 |     assert bundles[0].bundle_id == second.bundle_id\n   |     ^^^^^^\n45 |     assert bundles[0].stored_at >= bundles[1].stored_at\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:45:5\n   |\n43 |     assert len(bundles) == 2\n44 |     assert bundles[0].bundle_id == second.bundle_id\n45 |     assert bundles[0].stored_at >= bundles[1].stored_at\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:56:5\n   |\n54 |     removed = store.prune(keep=2)\n55 |\n56 |     assert len(removed) == 1\n   |     ^^^^^^\n57 |     assert removed[0].bundle_id == first.bundle_id\n58 |     remaining = store.list()\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:57:5\n   |\n56 |     assert len(removed) == 1\n57 |     assert removed[0].bundle_id == first.bundle_id\n   |     ^^^^^^\n58 |     remaining = store.list()\n59 |     assert [bundle.bundle_id for bundle in remaining] == [\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_hub.py:59:5\n   |\n57 |     assert removed[0].bundle_id == first.bundle_id\n58 |     remaining = store.list()\n59 |     assert [bundle.bundle_id for bundle in remaining] == [\n   |     ^^^^^^\n60 |         third.bundle_id,\n61 |         second.bundle_id,\n   |\n\nC901 `test_hub_client_push_and_pull` is too complex (12 > 10)\n  --> tests\\test_collaboration_hub.py:65:5\n   |\n65 | def test_hub_client_push_and_pull(tmp_path: Path) -> None:\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n66 |     bundle_path = tmp_path / \"payload.json\"\n67 |     bundle_bytes = b'{\"hello\": \"world\"}'\n   |\n\nPLR0915 Too many statements (64 > 50)\n  --> tests\\test_collaboration_hub.py:65:5\n   |\n65 | def test_hub_client_push_and_pull(tmp_path: Path) -> None:\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n66 |     bundle_path = tmp_path / \"payload.json\"\n67 |     bundle_bytes = b'{\"hello\": \"world\"}'\n   |\n\nC901 `_handler` is too complex (11 > 10)\n  --> tests\\test_collaboration_hub.py:72:9\n   |\n70 |     state: dict[str, dict[str, object]] = {}\n71 |\n72 |     def _handler(request: httpx.Request) -> httpx.Response:\n   |         ^^^^^^^^\n73 |         if (\n74 |             request.method == \"POST\"\n   |\n\nPLR0911 Too many return statements (8 > 6)\n  --> tests\\test_collaboration_hub.py:72:9\n   |\n70 |     state: dict[str, dict[str, object]] = {}\n71 |\n72 |     def _handler(request: httpx.Request) -> httpx.Response:\n   |         ^^^^^^^^\n73 |         if (\n74 |             request.method == \"POST\"\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:191:9\n    |\n189 |             bundle_path, source=\"tester\", metadata={\"note\": \"demo\"}\n190 |         )\n191 |         assert upload.bundle_id == \"bundle-1\"\n    |         ^^^^^^\n192 |         assert upload.size == len(bundle_bytes)\n193 |         assert upload.metadata == {\"note\": \"demo\"}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:192:9\n    |\n190 |         )\n191 |         assert upload.bundle_id == \"bundle-1\"\n192 |         assert upload.size == len(bundle_bytes)\n    |         ^^^^^^\n193 |         assert upload.metadata == {\"note\": \"demo\"}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:193:9\n    |\n191 |         assert upload.bundle_id == \"bundle-1\"\n192 |         assert upload.size == len(bundle_bytes)\n193 |         assert upload.metadata == {\"note\": \"demo\"}\n    |         ^^^^^^\n194 |\n195 |         history: list[BundleUploadResult] = client.list_bundles(limit=5)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:196:9\n    |\n195 |         history: list[BundleUploadResult] = client.list_bundles(limit=5)\n196 |         assert len(history) == 1\n    |         ^^^^^^\n197 |         assert history[0].bundle_id == upload.bundle_id\n198 |         assert history[0].metadata == {\"note\": \"demo\"}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:197:9\n    |\n195 |         history: list[BundleUploadResult] = client.list_bundles(limit=5)\n196 |         assert len(history) == 1\n197 |         assert history[0].bundle_id == upload.bundle_id\n    |         ^^^^^^\n198 |         assert history[0].metadata == {\"note\": \"demo\"}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:198:9\n    |\n196 |         assert len(history) == 1\n197 |         assert history[0].bundle_id == upload.bundle_id\n198 |         assert history[0].metadata == {\"note\": \"demo\"}\n    |         ^^^^^^\n199 |\n200 |         download = client.fetch_latest_bundle()\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:201:9\n    |\n200 |         download = client.fetch_latest_bundle()\n201 |         assert download is not None\n    |         ^^^^^^\n202 |         assert download.bundle_id == upload.bundle_id\n203 |         assert download.payload == bundle_bytes\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:202:9\n    |\n200 |         download = client.fetch_latest_bundle()\n201 |         assert download is not None\n202 |         assert download.bundle_id == upload.bundle_id\n    |         ^^^^^^\n203 |         assert download.payload == bundle_bytes\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:203:9\n    |\n201 |         assert download is not None\n202 |         assert download.bundle_id == upload.bundle_id\n203 |         assert download.payload == bundle_bytes\n    |         ^^^^^^\n204 |\n205 |         fetched = client.fetch_bundle(upload.bundle_id)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:206:9\n    |\n205 |         fetched = client.fetch_bundle(upload.bundle_id)\n206 |         assert fetched is not None\n    |         ^^^^^^\n207 |         assert fetched.bundle_id == upload.bundle_id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:207:9\n    |\n205 |         fetched = client.fetch_bundle(upload.bundle_id)\n206 |         assert fetched is not None\n207 |         assert fetched.bundle_id == upload.bundle_id\n    |         ^^^^^^\n208 |\n209 |         removed, remaining = client.prune_bundles(keep=0)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:210:9\n    |\n209 |         removed, remaining = client.prune_bundles(keep=0)\n210 |         assert len(removed) == 1\n    |         ^^^^^^\n211 |         assert removed[0].bundle_id == upload.bundle_id\n212 |         assert remaining == 0\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:211:9\n    |\n209 |         removed, remaining = client.prune_bundles(keep=0)\n210 |         assert len(removed) == 1\n211 |         assert removed[0].bundle_id == upload.bundle_id\n    |         ^^^^^^\n212 |         assert remaining == 0\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_hub.py:212:9\n    |\n210 |         assert len(removed) == 1\n211 |         assert removed[0].bundle_id == upload.bundle_id\n212 |         assert remaining == 0\n    |         ^^^^^^\n    |\n\nINP001 File `tests\\test_collaboration_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_collaboration_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_collaboration_service.py:4:29\n  |\n3 | import json\n4 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n5 | from datetime import UTC, datetime\n6 | from pathlib import Path\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `pathlib.Path` into a type-checking block\n --> tests\\test_collaboration_service.py:6:21\n  |\n4 | from collections.abc import Iterable\n5 | from datetime import UTC, datetime\n6 | from pathlib import Path\n  |                     ^^^^\n7 |\n8 | import pytest\n  |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:60:5\n   |\n58 |     )\n59 |\n60 |     assert result.count == 1\n   |     ^^^^^^\n61 |     assert result.path.exists()\n62 |     payload = json.loads(result.path.read_text(encoding=\"utf-8\"))\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:61:5\n   |\n60 |     assert result.count == 1\n61 |     assert result.path.exists()\n   |     ^^^^^^\n62 |     payload = json.loads(result.path.read_text(encoding=\"utf-8\"))\n63 |     assert payload[\"tasks\"] == 1\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:63:5\n   |\n61 |     assert result.path.exists()\n62 |     payload = json.loads(result.path.read_text(encoding=\"utf-8\"))\n63 |     assert payload[\"tasks\"] == 1\n   |     ^^^^^^\n64 |     assert payload.get(\"ciphertext\")\n65 |     assert payload[\"ciphertext\"] != json.dumps([{\"id\": task.id}])\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:64:5\n   |\n62 |     payload = json.loads(result.path.read_text(encoding=\"utf-8\"))\n63 |     assert payload[\"tasks\"] == 1\n64 |     assert payload.get(\"ciphertext\")\n   |     ^^^^^^\n65 |     assert payload[\"ciphertext\"] != json.dumps([{\"id\": task.id}])\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:65:5\n   |\n63 |     assert payload[\"tasks\"] == 1\n64 |     assert payload.get(\"ciphertext\")\n65 |     assert payload[\"ciphertext\"] != json.dumps([{\"id\": task.id}])\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:89:5\n   |\n87 |     imported = target_service.import_tasks(export_path, \"secret\")\n88 |\n89 |     assert len(imported) == 1\n   |     ^^^^^^\n90 |     restored = target_repo.get(task.id)\n91 |     assert restored is not None and restored.description == task.description\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:91:5\n   |\n89 |     assert len(imported) == 1\n90 |     restored = target_repo.get(task.id)\n91 |     assert restored is not None and restored.description == task.description\n   |     ^^^^^^\n92 |     assert imported[0].tags == task.tags\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_collaboration_service.py:91:5\n   |\n89 |     assert len(imported) == 1\n90 |     restored = target_repo.get(task.id)\n91 |     assert restored is not None and restored.description == task.description\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n92 |     assert imported[0].tags == task.tags\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:92:5\n   |\n90 |     restored = target_repo.get(task.id)\n91 |     assert restored is not None and restored.description == task.description\n92 |     assert imported[0].tags == task.tags\n   |     ^^^^^^\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_collaboration_service.py:93:5\n   |\n91 |     assert restored is not None and restored.description == task.description\n92 |     assert imported[0].tags == task.tags\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |     ^^^^^^\n   |\n\nPT018 Assertion should be broken down into multiple parts\n  --> tests\\test_collaboration_service.py:93:5\n   |\n91 |     assert restored is not None and restored.description == task.description\n92 |     assert imported[0].tags == task.tags\n93 |     assert captured_events and captured_events[0].tasks[0].id == task.id\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_service.py:112:5\n    |\n110 |         export_path, \"secret\", overwrite_existing=False\n111 |     )\n112 |     assert len(imported) == 0\n    |     ^^^^^^\n113 |     stored = repo_updated.get(task.id)\n114 |     assert stored is not None and stored.description == \"Different\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_service.py:114:5\n    |\n112 |     assert len(imported) == 0\n113 |     stored = repo_updated.get(task.id)\n114 |     assert stored is not None and stored.description == \"Different\"\n    |     ^^^^^^\n115 |\n116 |     imported_overwrite = target_service.import_tasks(\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_collaboration_service.py:114:5\n    |\n112 |     assert len(imported) == 0\n113 |     stored = repo_updated.get(task.id)\n114 |     assert stored is not None and stored.description == \"Different\"\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n115 |\n116 |     imported_overwrite = target_service.import_tasks(\n    |\nhelp: Break down assertion into multiple parts\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_service.py:119:5\n    |\n117 |         export_path, \"secret\", overwrite_existing=True\n118 |     )\n119 |     assert len(imported_overwrite) == 1\n    |     ^^^^^^\n120 |     stored_overwrite = repo_updated.get(task.id)\n121 |     assert (\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_collaboration_service.py:121:5\n    |\n119 |     assert len(imported_overwrite) == 1\n120 |     stored_overwrite = repo_updated.get(task.id)\n121 |     assert (\n    |     ^^^^^^\n122 |         stored_overwrite is not None\n123 |         and stored_overwrite.description == \"Original\"\n    |\n\nPT018 Assertion should be broken down into multiple parts\n   --> tests\\test_collaboration_service.py:121:5\n    |\n119 |       assert len(imported_overwrite) == 1\n120 |       stored_overwrite = repo_updated.get(task.id)\n121 | /     assert (\n122 | |         stored_overwrite is not None\n123 | |         and stored_overwrite.description == \"Original\"\n124 | |     )\n    | |_____^\n    |\nhelp: Break down assertion into multiple parts\n\nB017 Do not assert blind exception: `Exception`\n   --> tests\\test_collaboration_service.py:136:10\n    |\n135 |     target_service, _ = _make_service(InMemoryTaskRepository())\n136 |     with pytest.raises(Exception):\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n137 |         target_service.import_tasks(export_path, \"wrong\")\n    |\n\nPT011 `pytest.raises(Exception)` is too broad, set the `match` parameter or use a more specific exception\n   --> tests\\test_collaboration_service.py:136:24\n    |\n135 |     target_service, _ = _make_service(InMemoryTaskRepository())\n136 |     with pytest.raises(Exception):\n    |                        ^^^^^^^^^\n137 |         target_service.import_tasks(export_path, \"wrong\")\n    |\n\nINP001 File `tests\\test_plugin_ai_assistant.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_plugin_ai_assistant.py:1:1\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.task.Task` into a type-checking block\n  --> tests\\test_plugin_ai_assistant.py:10:55\n   |\n 9 | from x_legatus_acta_schedae_x.core.domain import events\n10 | from x_legatus_acta_schedae_x.core.domain.task import Task\n   |                                                       ^^^^\n11 | from x_legatus_acta_schedae_x.core.ports.task_repo import ITaskRepository\n12 | from x_legatus_acta_schedae_x.core.services.ai_service import AIService\n   |\nhelp: Move into type-checking block\n\nPT009 Use a regular `assert` instead of unittest-style `assertTrue`\n  --> tests\\test_plugin_ai_assistant.py:75:9\n   |\n73 |         self.dispatcher.publish(scan_event)\n74 |\n75 |         self.assertTrue(self.suggestions_path.exists())\n   |         ^^^^^^^^^^^^^^^\n76 |         entries = [\n77 |             json.loads(line)\n   |\nhelp: Replace `assertTrue(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:84:9\n   |\n82 |         ]\n83 |         event_types = {entry[\"event\"] for entry in entries}\n84 |         self.assertIn(\"task_created\", event_types)\n   |         ^^^^^^^^^^^^^\n85 |         self.assertIn(\"tasks_imported\", event_types)\n86 |         self.assertIn(\"card_scanned\", event_types)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:85:9\n   |\n83 |         event_types = {entry[\"event\"] for entry in entries}\n84 |         self.assertIn(\"task_created\", event_types)\n85 |         self.assertIn(\"tasks_imported\", event_types)\n   |         ^^^^^^^^^^^^^\n86 |         self.assertIn(\"card_scanned\", event_types)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:86:9\n   |\n84 |         self.assertIn(\"task_created\", event_types)\n85 |         self.assertIn(\"tasks_imported\", event_types)\n86 |         self.assertIn(\"card_scanned\", event_types)\n   |         ^^^^^^^^^^^^^\n87 |\n88 |         summary_events = [\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:93:9\n   |\n91 |             if evt.startswith(\"plugin.ai_assistant\")\n92 |         ]\n93 |         self.assertIn(\"plugin.ai_assistant.task_created\", summary_events)\n   |         ^^^^^^^^^^^^^\n94 |         self.assertIn(\"plugin.ai_assistant.import_summary\", summary_events)\n95 |         self.assertIn(\"plugin.ai_assistant.card_followups\", summary_events)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:94:9\n   |\n92 |         ]\n93 |         self.assertIn(\"plugin.ai_assistant.task_created\", summary_events)\n94 |         self.assertIn(\"plugin.ai_assistant.import_summary\", summary_events)\n   |         ^^^^^^^^^^^^^\n95 |         self.assertIn(\"plugin.ai_assistant.card_followups\", summary_events)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_ai_assistant.py:95:9\n   |\n93 |         self.assertIn(\"plugin.ai_assistant.task_created\", summary_events)\n94 |         self.assertIn(\"plugin.ai_assistant.import_summary\", summary_events)\n95 |         self.assertIn(\"plugin.ai_assistant.card_followups\", summary_events)\n   |         ^^^^^^^^^^^^^\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nANN202 Missing return type annotation for private function `list`\n   --> tests\\test_plugin_ai_assistant.py:109:9\n    |\n107 |         return self._tasks.get(task_id)\n108 |\n109 |     def list(self, status: str | None = None):\n    |         ^^^^\n110 |         for task in self._tasks.values():\n111 |             if status and task.status != status:\n    |\nhelp: Add return type annotation\n\nINP001 File `tests\\test_plugin_calendar_sync.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_plugin_calendar_sync.py:1:1\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_calendar_sync.py:83:9\n   |\n81 |             if event.startswith(\"plugin.calendar_sync\")\n82 |         ]\n83 |         self.assertIn(\"plugin.calendar_sync.synced\", events)\n   |         ^^^^^^^^^^^^^\n84 |         self.assertIn(\"plugin.calendar_sync.reminder\", events)\n85 |         self.assertIn(\"plugin.calendar_sync.unscheduled\", events)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_calendar_sync.py:84:9\n   |\n82 |         ]\n83 |         self.assertIn(\"plugin.calendar_sync.synced\", events)\n84 |         self.assertIn(\"plugin.calendar_sync.reminder\", events)\n   |         ^^^^^^^^^^^^^\n85 |         self.assertIn(\"plugin.calendar_sync.unscheduled\", events)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_plugin_calendar_sync.py:85:9\n   |\n83 |         self.assertIn(\"plugin.calendar_sync.synced\", events)\n84 |         self.assertIn(\"plugin.calendar_sync.reminder\", events)\n85 |         self.assertIn(\"plugin.calendar_sync.unscheduled\", events)\n   |         ^^^^^^^^^^^^^\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nANN202 Missing return type annotation for private function `list`\n   --> tests\\test_plugin_calendar_sync.py:103:9\n    |\n101 |         return self._tasks.get(task_id)\n102 |\n103 |     def list(self, status: str | None = None):\n    |         ^^^^\n104 |         for task in self._tasks.values():\n105 |             if status and task.status != status:\n    |\nhelp: Add return type annotation\n\nINP001 File `tests\\test_review_guidance_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_review_guidance_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_review_guidance_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.review.ReviewRecord` into a type-checking block\n  --> tests\\test_review_guidance_service.py:8:57\n   |\n 6 | from x_legatus_acta_schedae_x.core.domain import events\n 7 | from x_legatus_acta_schedae_x.core.domain.events import CardScanned\n 8 | from x_legatus_acta_schedae_x.core.domain.review import ReviewRecord\n   |                                                         ^^^^^^^^^^^^\n 9 | from x_legatus_acta_schedae_x.core.domain.task import Task\n10 | from x_legatus_acta_schedae_x.core.ports.review_repo import IReviewRepository\n   |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:129:5\n    |\n127 |     recommendations = guidance.generate(now=now, limit=2)\n128 |\n129 |     assert recommendations\n    |     ^^^^^^\n130 |     assert recommendations[0].task.id == high_task.id\n131 |     assert any(\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:130:5\n    |\n129 |     assert recommendations\n130 |     assert recommendations[0].task.id == high_task.id\n    |     ^^^^^^\n131 |     assert any(\n132 |         \"priority high\" in reason for reason in recommendations[0].reasons\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:131:5\n    |\n129 |     assert recommendations\n130 |     assert recommendations[0].task.id == high_task.id\n131 |     assert any(\n    |     ^^^^^^\n132 |         \"priority high\" in reason for reason in recommendations[0].reasons\n133 |     )\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:134:5\n    |\n132 |         \"priority high\" in reason for reason in recommendations[0].reasons\n133 |     )\n134 |     assert recommendations[0].suggested_action in {\n    |     ^^^^^^\n135 |         \"review then commit\",\n136 |         \"rescue overdue review\",\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:168:5\n    |\n166 |     recommendations = guidance.generate(now=now, limit=1)\n167 |\n168 |     assert recommendations\n    |     ^^^^^^\n169 |     rec = recommendations[0]\n170 |     assert rec.task.id == task.id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:170:5\n    |\n168 |     assert recommendations\n169 |     rec = recommendations[0]\n170 |     assert rec.task.id == task.id\n    |     ^^^^^^\n171 |     assert any(\"recent card scan\" in reason for reason in rec.reasons)\n172 |     assert rec.last_source == \"card_scan\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:171:5\n    |\n169 |     rec = recommendations[0]\n170 |     assert rec.task.id == task.id\n171 |     assert any(\"recent card scan\" in reason for reason in rec.reasons)\n    |     ^^^^^^\n172 |     assert rec.last_source == \"card_scan\"\n173 |     assert rec.last_reviewed_at is not None\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:172:5\n    |\n170 |     assert rec.task.id == task.id\n171 |     assert any(\"recent card scan\" in reason for reason in rec.reasons)\n172 |     assert rec.last_source == \"card_scan\"\n    |     ^^^^^^\n173 |     assert rec.last_reviewed_at is not None\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:173:5\n    |\n171 |     assert any(\"recent card scan\" in reason for reason in rec.reasons)\n172 |     assert rec.last_source == \"card_scan\"\n173 |     assert rec.last_reviewed_at is not None\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:192:5\n    |\n191 |     recommendations = guidance.generate(now=now, limit=3)\n192 |     assert len(recommendations) == 3\n    |     ^^^^^^\n193 |     # Scores should be sorted descending\n194 |     scores = [item.score for item in recommendations]\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `3` with a constant variable\n   --> tests\\test_review_guidance_service.py:192:36\n    |\n191 |     recommendations = guidance.generate(now=now, limit=3)\n192 |     assert len(recommendations) == 3\n    |                                    ^\n193 |     # Scores should be sorted descending\n194 |     scores = [item.score for item in recommendations]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_guidance_service.py:195:5\n    |\n193 |     # Scores should be sorted descending\n194 |     scores = [item.score for item in recommendations]\n195 |     assert scores == sorted(scores, reverse=True)\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_review_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_review_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_review_service.py:3:29\n  |\n1 | from __future__ import annotations\n2 |\n3 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n4 | from datetime import UTC, datetime, timedelta\n  |\nhelp: Move into type-checking block\n\nPT013 Incorrect import of `pytest`; use `import pytest` instead\n --> tests\\test_review_service.py:6:1\n  |\n4 | from datetime import UTC, datetime, timedelta\n5 |\n6 | from pytest import approx, fixture  # type: ignore[import]\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | from x_legatus_acta_schedae_x.core.domain import events\n8 | from x_legatus_acta_schedae_x.core.domain.events import CardScanned\n  |\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.review.ReviewRecord` into a type-checking block\n  --> tests\\test_review_service.py:9:57\n   |\n 7 | from x_legatus_acta_schedae_x.core.domain import events\n 8 | from x_legatus_acta_schedae_x.core.domain.events import CardScanned\n 9 | from x_legatus_acta_schedae_x.core.domain.review import ReviewRecord\n   |                                                         ^^^^^^^^^^^^\n10 | from x_legatus_acta_schedae_x.core.domain.task import Task\n11 | from x_legatus_acta_schedae_x.core.ports.review_repo import IReviewRepository\n   |\nhelp: Move into type-checking block\n\nS101 Use of `assert` detected\n  --> tests\\test_review_service.py:83:5\n   |\n82 |     record = service.get_record(task.id)\n83 |     assert record is not None\n   |     ^^^^^^\n84 |     assert record.due_at == task.created\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_review_service.py:84:5\n   |\n82 |     record = service.get_record(task.id)\n83 |     assert record is not None\n84 |     assert record.due_at == task.created\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:99:5\n    |\n 97 |         task.id, quality=5, reviewed_at=first_review_time\n 98 |     )\n 99 |     assert approx(record.interval_days, rel=1e-3) == 1.0\n    |     ^^^^^^\n100 |     assert record.repetitions == 1\n101 |     assert record.last_reviewed_at == first_review_time\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:100:5\n    |\n 98 |     )\n 99 |     assert approx(record.interval_days, rel=1e-3) == 1.0\n100 |     assert record.repetitions == 1\n    |     ^^^^^^\n101 |     assert record.last_reviewed_at == first_review_time\n102 |     assert record.history[-1].quality == 5\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:101:5\n    |\n 99 |     assert approx(record.interval_days, rel=1e-3) == 1.0\n100 |     assert record.repetitions == 1\n101 |     assert record.last_reviewed_at == first_review_time\n    |     ^^^^^^\n102 |     assert record.history[-1].quality == 5\n103 |     assert record.history[-1].source == \"manual\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:102:5\n    |\n100 |     assert record.repetitions == 1\n101 |     assert record.last_reviewed_at == first_review_time\n102 |     assert record.history[-1].quality == 5\n    |     ^^^^^^\n103 |     assert record.history[-1].source == \"manual\"\n104 |     assert record.history[-1].context == {}\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> tests\\test_review_service.py:102:42\n    |\n100 |     assert record.repetitions == 1\n101 |     assert record.last_reviewed_at == first_review_time\n102 |     assert record.history[-1].quality == 5\n    |                                          ^\n103 |     assert record.history[-1].source == \"manual\"\n104 |     assert record.history[-1].context == {}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:103:5\n    |\n101 |     assert record.last_reviewed_at == first_review_time\n102 |     assert record.history[-1].quality == 5\n103 |     assert record.history[-1].source == \"manual\"\n    |     ^^^^^^\n104 |     assert record.history[-1].context == {}\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:104:5\n    |\n102 |     assert record.history[-1].quality == 5\n103 |     assert record.history[-1].source == \"manual\"\n104 |     assert record.history[-1].context == {}\n    |     ^^^^^^\n105 |\n106 |     second_time = first_review_time + timedelta(days=2)\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:108:5\n    |\n106 |     second_time = first_review_time + timedelta(days=2)\n107 |     record = service.record_review(task.id, quality=5, reviewed_at=second_time)\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n    |     ^^^^^^\n109 |     assert record.repetitions == 2\n110 |     assert record.history[-1].reviewed_at == second_time\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `6.0` with a constant variable\n   --> tests\\test_review_service.py:108:54\n    |\n106 |     second_time = first_review_time + timedelta(days=2)\n107 |     record = service.record_review(task.id, quality=5, reviewed_at=second_time)\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n    |                                                      ^^^\n109 |     assert record.repetitions == 2\n110 |     assert record.history[-1].reviewed_at == second_time\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:109:5\n    |\n107 |     record = service.record_review(task.id, quality=5, reviewed_at=second_time)\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n109 |     assert record.repetitions == 2\n    |     ^^^^^^\n110 |     assert record.history[-1].reviewed_at == second_time\n111 |     assert record.history[-1].source == \"manual\"\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `2` with a constant variable\n   --> tests\\test_review_service.py:109:34\n    |\n107 |     record = service.record_review(task.id, quality=5, reviewed_at=second_time)\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n109 |     assert record.repetitions == 2\n    |                                  ^\n110 |     assert record.history[-1].reviewed_at == second_time\n111 |     assert record.history[-1].source == \"manual\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:110:5\n    |\n108 |     assert approx(record.interval_days, rel=1e-3) == 6.0\n109 |     assert record.repetitions == 2\n110 |     assert record.history[-1].reviewed_at == second_time\n    |     ^^^^^^\n111 |     assert record.history[-1].source == \"manual\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:111:5\n    |\n109 |     assert record.repetitions == 2\n110 |     assert record.history[-1].reviewed_at == second_time\n111 |     assert record.history[-1].source == \"manual\"\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:124:5\n    |\n123 |     due_items = service.due_reviews(now=past + timedelta(days=2))\n124 |     assert len(due_items) == 1\n    |     ^^^^^^\n125 |     assert due_items[0].task.id == task.id\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:125:5\n    |\n123 |     due_items = service.due_reviews(now=past + timedelta(days=2))\n124 |     assert len(due_items) == 1\n125 |     assert due_items[0].task.id == task.id\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:137:5\n    |\n136 |     record = service.get_record(task.id)\n137 |     assert record is not None\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:151:5\n    |\n150 |     record = service.get_record(task.id)\n151 |     assert record is not None\n    |     ^^^^^^\n152 |     assert record.repetitions == 1\n153 |     last_entry = record.history[-1]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:152:5\n    |\n150 |     record = service.get_record(task.id)\n151 |     assert record is not None\n152 |     assert record.repetitions == 1\n    |     ^^^^^^\n153 |     last_entry = record.history[-1]\n154 |     assert last_entry.source == \"task_completed\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:154:5\n    |\n152 |     assert record.repetitions == 1\n153 |     last_entry = record.history[-1]\n154 |     assert last_entry.source == \"task_completed\"\n    |     ^^^^^^\n155 |     assert last_entry.quality == 5\n156 |     assert \"description\" in last_entry.context\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:155:5\n    |\n153 |     last_entry = record.history[-1]\n154 |     assert last_entry.source == \"task_completed\"\n155 |     assert last_entry.quality == 5\n    |     ^^^^^^\n156 |     assert \"description\" in last_entry.context\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `5` with a constant variable\n   --> tests\\test_review_service.py:155:34\n    |\n153 |     last_entry = record.history[-1]\n154 |     assert last_entry.source == \"task_completed\"\n155 |     assert last_entry.quality == 5\n    |                                  ^\n156 |     assert \"description\" in last_entry.context\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:156:5\n    |\n154 |     assert last_entry.source == \"task_completed\"\n155 |     assert last_entry.quality == 5\n156 |     assert \"description\" in last_entry.context\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:185:5\n    |\n184 |     record = service.get_record(task.id)\n185 |     assert record is not None\n    |     ^^^^^^\n186 |     assert record.repetitions == 1\n187 |     entry = record.history[-1]\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:186:5\n    |\n184 |     record = service.get_record(task.id)\n185 |     assert record is not None\n186 |     assert record.repetitions == 1\n    |     ^^^^^^\n187 |     entry = record.history[-1]\n188 |     assert entry.source == \"card_scan\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:188:5\n    |\n186 |     assert record.repetitions == 1\n187 |     entry = record.history[-1]\n188 |     assert entry.source == \"card_scan\"\n    |     ^^^^^^\n189 |     assert entry.quality == 4\n190 |     assert entry.reviewed_at == timestamp\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:189:5\n    |\n187 |     entry = record.history[-1]\n188 |     assert entry.source == \"card_scan\"\n189 |     assert entry.quality == 4\n    |     ^^^^^^\n190 |     assert entry.reviewed_at == timestamp\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n    |\n\nPLR2004 Magic value used in comparison, consider replacing `4` with a constant variable\n   --> tests\\test_review_service.py:189:29\n    |\n187 |     entry = record.history[-1]\n188 |     assert entry.source == \"card_scan\"\n189 |     assert entry.quality == 4\n    |                             ^\n190 |     assert entry.reviewed_at == timestamp\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:190:5\n    |\n188 |     assert entry.source == \"card_scan\"\n189 |     assert entry.quality == 4\n190 |     assert entry.reviewed_at == timestamp\n    |     ^^^^^^\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n192 |     assert entry.context[\"metadata\"][\"reader\"] == \"qrbot\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:191:5\n    |\n189 |     assert entry.quality == 4\n190 |     assert entry.reviewed_at == timestamp\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n    |     ^^^^^^\n192 |     assert entry.context[\"metadata\"][\"reader\"] == \"qrbot\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:192:5\n    |\n190 |     assert entry.reviewed_at == timestamp\n191 |     assert entry.context[\"card_id\"] == \"card-1\"\n192 |     assert entry.context[\"metadata\"][\"reader\"] == \"qrbot\"\n    |     ^^^^^^\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:215:5\n    |\n214 |     record = service.get_record(task.id)\n215 |     assert record is not None\n    |     ^^^^^^\n216 |     entry = record.history[-1]\n217 |     assert entry.source == \"card_scan\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:217:5\n    |\n215 |     assert record is not None\n216 |     entry = record.history[-1]\n217 |     assert entry.source == \"card_scan\"\n    |     ^^^^^^\n218 |     assert entry.quality == 1\n219 |     assert entry.context[\"task_error\"] == \"task_not_found\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:218:5\n    |\n216 |     entry = record.history[-1]\n217 |     assert entry.source == \"card_scan\"\n218 |     assert entry.quality == 1\n    |     ^^^^^^\n219 |     assert entry.context[\"task_error\"] == \"task_not_found\"\n    |\n\nS101 Use of `assert` detected\n   --> tests\\test_review_service.py:219:5\n    |\n217 |     assert entry.source == \"card_scan\"\n218 |     assert entry.quality == 1\n219 |     assert entry.context[\"task_error\"] == \"task_not_found\"\n    |     ^^^^^^\n    |\n\nINP001 File `tests\\test_scheduler_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_scheduler_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n --> tests\\test_scheduler_service.py:4:29\n  |\n3 | import unittest\n4 | from collections.abc import Callable, Iterable, Mapping\n  |                             ^^^^^^^^\n5 | from datetime import UTC, datetime, timedelta\n6 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_scheduler_service.py:4:39\n  |\n3 | import unittest\n4 | from collections.abc import Callable, Iterable, Mapping\n  |                                       ^^^^^^^^\n5 | from datetime import UTC, datetime, timedelta\n6 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n --> tests\\test_scheduler_service.py:4:49\n  |\n3 | import unittest\n4 | from collections.abc import Callable, Iterable, Mapping\n  |                                                 ^^^^^^^\n5 | from datetime import UTC, datetime, timedelta\n6 | from typing import Any\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.events` into a type-checking block\n  --> tests\\test_scheduler_service.py:8:60\n   |\n 6 | from typing import Any\n 7 |\n 8 | from x_legatus_acta_schedae_x.core.domain import events as domain_events\n   |                                                            ^^^^^^^^^^^^^\n 9 | from x_legatus_acta_schedae_x.core.domain.events import (\n10 |     EventDispatcher,\n   |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.task.Task` into a type-checking block\n  --> tests\\test_scheduler_service.py:13:55\n   |\n11 |     TaskReminderTriggered,\n12 | )\n13 | from x_legatus_acta_schedae_x.core.domain.task import Task\n   |                                                       ^^^^\n14 | from x_legatus_acta_schedae_x.core.ports.scheduler import IScheduler\n15 | from x_legatus_acta_schedae_x.core.ports.task_repo import ITaskRepository\n   |\nhelp: Move into type-checking block\n\nC408 Unnecessary `tuple()` call (rewrite as a literal)\n  --> tests\\test_scheduler_service.py:74:52\n   |\n72 |         kwargs: dict[str, Any] | None = None,\n73 |     ) -> str:\n74 |         self.jobs[job_id] = (run_at, func, args or tuple(), kwargs or {})\n   |                                                    ^^^^^^^\n75 |         return job_id\n   |\nhelp: Rewrite as a literal\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n   --> tests\\test_scheduler_service.py:114:9\n    |\n112 |         task = self.task_service.add_task(\"Prepare deck\", due=due)\n113 |         job_id = f\"task-reminder-{task.id}\"\n114 |         self.assertIn(job_id, self.scheduler.jobs)\n    |         ^^^^^^^^^^^^^\n115 |         self.assertTrue(self.scheduler.started)\n    |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertTrue`\n   --> tests\\test_scheduler_service.py:115:9\n    |\n113 |         job_id = f\"task-reminder-{task.id}\"\n114 |         self.assertIn(job_id, self.scheduler.jobs)\n115 |         self.assertTrue(self.scheduler.started)\n    |         ^^^^^^^^^^^^^^^\n116 |\n117 |     def test_cancel_on_completion(self) -> None:\n    |\nhelp: Replace `assertTrue(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertNotIn`\n   --> tests\\test_scheduler_service.py:122:9\n    |\n120 |         self.task_service.complete_task(task.id)\n121 |         job_id = f\"task-reminder-{task.id}\"\n122 |         self.assertNotIn(job_id, self.scheduler.jobs)\n    |         ^^^^^^^^^^^^^^^^\n123 |\n124 |     def test_trigger_emits_event(self) -> None:\n    |\nhelp: Replace `assertNotIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n   --> tests\\test_scheduler_service.py:136:9\n    |\n134 |         job_id = f\"task-reminder-{task.id}\"\n135 |         self.scheduler.trigger(job_id)\n136 |         self.assertEqual(1, len(captured))\n    |         ^^^^^^^^^^^^^^^^\n137 |         self.assertEqual(task.id, captured[0].task.id)\n138 |         self.assertIn(\n    |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n   --> tests\\test_scheduler_service.py:137:9\n    |\n135 |         self.scheduler.trigger(job_id)\n136 |         self.assertEqual(1, len(captured))\n137 |         self.assertEqual(task.id, captured[0].task.id)\n    |         ^^^^^^^^^^^^^^^^\n138 |         self.assertIn(\n139 |             \"task.reminder.triggered\",\n    |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n   --> tests\\test_scheduler_service.py:138:9\n    |\n136 |         self.assertEqual(1, len(captured))\n137 |         self.assertEqual(task.id, captured[0].task.id)\n138 |         self.assertIn(\n    |         ^^^^^^^^^^^^^\n139 |             \"task.reminder.triggered\",\n140 |             [name for name, _ in self.telemetry.events],\n    |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nINP001 File `tests\\test_search_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_search_service.py:1:1\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n --> tests\\test_search_service.py:4:29\n  |\n3 | import unittest\n4 | from collections.abc import Iterable\n  |                             ^^^^^^^^\n5 | from datetime import UTC\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.task.Task` into a type-checking block\n  --> tests\\test_search_service.py:8:55\n   |\n 7 | from x_legatus_acta_schedae_x.core.domain.events import EventDispatcher\n 8 | from x_legatus_acta_schedae_x.core.domain.task import Task\n   |                                                       ^^^^\n 9 | from x_legatus_acta_schedae_x.core.ports.task_repo import ITaskRepository\n10 | from x_legatus_acta_schedae_x.core.services.search_service import SearchService\n   |\nhelp: Move into type-checking block\n\nANN201 Missing return type annotation for public function `now`\n  --> tests\\test_search_service.py:36:9\n   |\n34 |         return task\n35 |\n36 |     def now(self):\n   |         ^^^\n37 |         from datetime import datetime\n   |\nhelp: Add return type annotation\n\nPLC0415 `import` should be at the top-level of a file\n  --> tests\\test_search_service.py:37:9\n   |\n36 |     def now(self):\n37 |         from datetime import datetime\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n38 |\n39 |         return datetime.now(UTC)\n   |\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_search_service.py:57:9\n   |\n56 |         matches = self.search_service.search(text=\"report\")\n57 |         self.assertEqual(1, len(matches))\n   |         ^^^^^^^^^^^^^^^^\n58 |         self.assertIn(\"report\", matches[0].description.lower())\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_search_service.py:58:9\n   |\n56 |         matches = self.search_service.search(text=\"report\")\n57 |         self.assertEqual(1, len(matches))\n58 |         self.assertIn(\"report\", matches[0].description.lower())\n   |         ^^^^^^^^^^^^^\n59 |\n60 |     def test_search_filters_status_and_tags(self) -> None:\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_search_service.py:70:9\n   |\n69 |         completed = self.search_service.search(status=\"completed\")\n70 |         self.assertEqual([second.id], [task.id for task in completed])\n   |         ^^^^^^^^^^^^^^^^\n71 |\n72 |         tag_filtered = self.search_service.search(tags=[\"finance\"])\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_search_service.py:73:9\n   |\n72 |         tag_filtered = self.search_service.search(tags=[\"finance\"])\n73 |         self.assertEqual([first.id], [task.id for task in tag_filtered])\n   |         ^^^^^^^^^^^^^^^^\n74 |\n75 |     def test_search_updates_after_edit(self) -> None:\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_search_service.py:80:9\n   |\n79 |         matches = self.search_service.search(text=\"retrospective\")\n80 |         self.assertEqual([task.id], [t.id for t in matches])\n   |         ^^^^^^^^^^^^^^^^\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nINP001 File `tests\\test_task_service.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_task_service.py:1:1\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.events` into a type-checking block\n --> tests\\test_task_service.py:7:60\n  |\n5 | from typing import cast\n6 |\n7 | from x_legatus_acta_schedae_x.core.domain import events as domain_events\n  |                                                            ^^^^^^^^^^^^^\n8 | from x_legatus_acta_schedae_x.core.domain.events import (\n9 |     EventDispatcher,\n  |\nhelp: Move into type-checking block\n\nTC002 Move third-party import `x_legatus_acta_schedae_x.core.domain.task.Task` into a type-checking block\n  --> tests\\test_task_service.py:12:55\n   |\n10 |     TaskUpdated,\n11 | )\n12 | from x_legatus_acta_schedae_x.core.domain.task import Task\n   |                                                       ^^^^\n13 | from x_legatus_acta_schedae_x.core.ports.task_repo import ITaskRepository\n14 | from x_legatus_acta_schedae_x.core.services.task_service import TaskService\n   |\nhelp: Move into type-checking block\n\nANN201 Missing return type annotation for public function `list`\n  --> tests\\test_task_service.py:28:9\n   |\n26 |         return self.storage.get(task_id)\n27 |\n28 |     def list(self, status: str | None = None):\n   |         ^^^^\n29 |         tasks = list(self.storage.values())\n30 |         if status:\n   |\nhelp: Add return type annotation\n\nANN201 Missing return type annotation for public function `now`\n  --> tests\\test_task_service.py:38:9\n   |\n36 |         return task\n37 |\n38 |     def now(self):\n   |         ^^^\n39 |         from datetime import datetime\n   |\nhelp: Add return type annotation\n\nPLC0415 `import` should be at the top-level of a file\n  --> tests\\test_task_service.py:39:9\n   |\n38 |     def now(self):\n39 |         from datetime import datetime\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n40 |\n41 |         return datetime.now(UTC)\n   |\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:53:9\n   |\n51 |         task = self.service.add_task(\"Original\")\n52 |         updated = self.service.edit_task(task.id, \"Rewritten\")\n53 |         self.assertEqual(\"Rewritten\", updated.description)\n   |         ^^^^^^^^^^^^^^^^\n54 |\n55 |     def test_defer_with_delta(self) -> None:\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIsNotNone`\n  --> tests\\test_task_service.py:59:9\n   |\n57 |         updated = self.service.defer_task(task.id, delta=timedelta(days=2))\n58 |         due = updated.due\n59 |         self.assertIsNotNone(due)\n   |         ^^^^^^^^^^^^^^^^^^^^\n60 |         due_dt = cast(\"datetime\", due)\n61 |         self.assertGreaterEqual(due_dt, task.created)\n   |\nhelp: Replace `assertIsNotNone(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertGreaterEqual`\n  --> tests\\test_task_service.py:61:9\n   |\n59 |         self.assertIsNotNone(due)\n60 |         due_dt = cast(\"datetime\", due)\n61 |         self.assertGreaterEqual(due_dt, task.created)\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n62 |\n63 |     def test_prioritize_task(self) -> None:\n   |\nhelp: Replace `assertGreaterEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:66:9\n   |\n64 |         task = self.service.add_task(\"Critical bug\")\n65 |         updated = self.service.prioritize_task(task.id, \"high\")\n66 |         self.assertEqual(\"high\", updated.priority)\n   |         ^^^^^^^^^^^^^^^^\n67 |\n68 |     def test_tag_management(self) -> None:\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertIn`\n  --> tests\\test_task_service.py:71:9\n   |\n69 |         task = self.service.add_task(\"Tag me\")\n70 |         with_tags = self.service.add_tags(task.id, [\"alpha\", \"beta\"])\n71 |         self.assertIn(\"alpha\", with_tags.tags)\n   |         ^^^^^^^^^^^^^\n72 |         stripped = self.service.remove_tags(with_tags.id, [\"alpha\"])\n73 |         self.assertNotIn(\"alpha\", stripped.tags)\n   |\nhelp: Replace `assertIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertNotIn`\n  --> tests\\test_task_service.py:73:9\n   |\n71 |         self.assertIn(\"alpha\", with_tags.tags)\n72 |         stripped = self.service.remove_tags(with_tags.id, [\"alpha\"])\n73 |         self.assertNotIn(\"alpha\", stripped.tags)\n   |         ^^^^^^^^^^^^^^^^\n74 |         replaced = self.service.set_tags(stripped.id, [\"gamma\"])\n75 |         self.assertEqual({\"gamma\"}, set(replaced.tags))\n   |\nhelp: Replace `assertNotIn(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:75:9\n   |\n73 |         self.assertNotIn(\"alpha\", stripped.tags)\n74 |         replaced = self.service.set_tags(stripped.id, [\"gamma\"])\n75 |         self.assertEqual({\"gamma\"}, set(replaced.tags))\n   |         ^^^^^^^^^^^^^^^^\n76 |\n77 |     def test_task_updated_event_publishes(self) -> None:\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:87:9\n   |\n85 |         task = self.service.add_task(\"Event sample\")\n86 |         self.service.edit_task(task.id, \"Edited\")\n87 |         self.assertEqual(1, len(captured))\n   |         ^^^^^^^^^^^^^^^^\n88 |         self.assertEqual(\"Edited\", captured[0].description)\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nPT009 Use a regular `assert` instead of unittest-style `assertEqual`\n  --> tests\\test_task_service.py:88:9\n   |\n86 |         self.service.edit_task(task.id, \"Edited\")\n87 |         self.assertEqual(1, len(captured))\n88 |         self.assertEqual(\"Edited\", captured[0].description)\n   |         ^^^^^^^^^^^^^^^^\n   |\nhelp: Replace `assertEqual(...)` with `assert ...`\n\nINP001 File `tests\\test_tui_controller.py` is part of an implicit namespace package. Add an `__init__.py`.\n--> tests\\test_tui_controller.py:1:1\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:23:5\n   |\n22 |     pending = controller.list_tasks(TaskFilters(status=\"pending\"))\n23 |     assert _find_row(pending, created.id)\n   |     ^^^^^^\n24 |\n25 |     controller.complete_task(created.id)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:27:5\n   |\n25 |     controller.complete_task(created.id)\n26 |     completed = controller.list_tasks(TaskFilters(status=\"completed\"))\n27 |     assert _find_row(completed, created.id)\n   |     ^^^^^^\n28 |\n29 |     search = controller.list_tasks(TaskFilters(text=\"demo\"))\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:30:5\n   |\n29 |     search = controller.list_tasks(TaskFilters(text=\"demo\"))\n30 |     assert _find_row(search, created.id)\n   |     ^^^^^^\n31 |\n32 |     tags = controller.available_tags()\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:33:5\n   |\n32 |     tags = controller.available_tags()\n33 |     assert \"demo\" in tags\n   |     ^^^^^^\n34 |     assert \"tui\" in tags\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:34:5\n   |\n32 |     tags = controller.available_tags()\n33 |     assert \"demo\" in tags\n34 |     assert \"tui\" in tags\n   |     ^^^^^^\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:48:5\n   |\n46 |     summary = controller.ai_summary(top_n=5)\n47 |\n48 |     assert summary.pending >= 1\n   |     ^^^^^^\n49 |     assert summary.completed >= 1\n50 |     assert summary.top_tags\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:49:5\n   |\n48 |     assert summary.pending >= 1\n49 |     assert summary.completed >= 1\n   |     ^^^^^^\n50 |     assert summary.top_tags\n51 |     assert any(item.task_id == focus.id for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:50:5\n   |\n48 |     assert summary.pending >= 1\n49 |     assert summary.completed >= 1\n50 |     assert summary.top_tags\n   |     ^^^^^^\n51 |     assert any(item.task_id == focus.id for item in summary.upcoming)\n   |\n\nS101 Use of `assert` detected\n  --> tests\\test_tui_controller.py:51:5\n   |\n49 |     assert summary.completed >= 1\n50 |     assert summary.top_tags\n51 |     assert any(item.task_id == focus.id for item in summary.upcoming)\n   |     ^^^^^^\n   |\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> tui\\__init__.py:3:1\n  |\n1 | \"\"\"Textual TUI entrypoints for Legatus Acta Schedae.\"\"\"\n2 |\n3 | from ..interface.tui.app import LegatusTuiApp, run\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 |\n5 | __all__ = [\"LegatusTuiApp\", \"run\"]\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTID252 Prefer absolute imports over relative imports from parent modules\n --> tui\\__init__.py:3:1\n  |\n1 | \"\"\"Textual TUI entrypoints for Legatus Acta Schedae.\"\"\"\n2 |\n3 | from ..interface.tui.app import LegatusTuiApp, run\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n4 |\n5 | __all__ = [\"LegatusTuiApp\", \"run\"]\n  |\nhelp: Replace relative imports from parent modules with absolute imports\n\nTC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_legatus_acta_schedae_x.py:15:29\n   |\n13 | import tempfile\n14 | import uuid\n15 | from collections.abc import Callable, Iterable\n   |                             ^^^^^^^^\n16 | from dataclasses import asdict, dataclass, field\n17 | from typing import Any, Protocol, cast\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_legatus_acta_schedae_x.py:15:39\n   |\n13 | import tempfile\n14 | import uuid\n15 | from collections.abc import Callable, Iterable\n   |                                       ^^^^^^^^\n16 | from dataclasses import asdict, dataclass, field\n17 | from typing import Any, Protocol, cast\n   |\nhelp: Move into type-checking block\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_legatus_acta_schedae_x.py:27:8\n   |\n25 |     qrcode = importlib.import_module(\"qrcode\")\n26 |     _QR_AVAILABLE = True\n27 | except Exception:\n   |        ^^^^^^^^^\n28 |     qrcode = None\n29 |     _QR_AVAILABLE = False\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_legatus_acta_schedae_x.py:35:28\n   |\n35 | def _truthy_env(name: str, default: bool = False) -> bool:\n   |                            ^^^^^^^\n36 |     v = os.environ.get(name)\n37 |     if v is None:\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> x_cls_legatus_acta_schedae_x.py:35:28\n   |\n35 | def _truthy_env(name: str, default: bool = False) -> bool:\n   |                            ^^^^^^^\n36 |     v = os.environ.get(name)\n37 |     if v is None:\n   |\n\nPTH100 `os.path.abspath()` should be replaced by `Path.resolve()`\n  --> x_cls_legatus_acta_schedae_x.py:48:16\n   |\n46 |         return env\n47 |     try:\n48 |         return os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n   |                ^^^^^^^^^^^^^^^\n49 |     except Exception:\n50 |         return r\"c:\\x_runner_x\"\n   |\nhelp: Replace with `Path(...).resolve()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n  --> x_cls_legatus_acta_schedae_x.py:48:32\n   |\n46 |         return env\n47 |     try:\n48 |         return os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n   |                                ^^^^^^^^^^^^\n49 |     except Exception:\n50 |         return r\"c:\\x_runner_x\"\n   |\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n  --> x_cls_legatus_acta_schedae_x.py:48:45\n   |\n46 |         return env\n47 |     try:\n48 |         return os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n   |                                             ^^^^^^^^^^^^^^^\n49 |     except Exception:\n50 |         return r\"c:\\x_runner_x\"\n   |\nhelp: Replace with `Path(...).parent`\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_legatus_acta_schedae_x.py:49:12\n   |\n47 |     try:\n48 |         return os.path.abspath(os.path.join(os.path.dirname(__file__), \"..\"))\n49 |     except Exception:\n   |            ^^^^^^^^^\n50 |         return r\"c:\\x_runner_x\"\n   |\n\nARG002 Unused method argument: `html_str`\n  --> x_cls_legatus_acta_schedae_x.py:87:22\n   |\n86 |     # Dev fallback for PDF via wkhtmltopdf when enabled\n87 |     def to_pdf(self, html_str: str, out_path: str) -> None:\n   |                      ^^^^^^^^\n88 |         # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n89 |         raise RuntimeError(\n   |\n\nARG002 Unused method argument: `out_path`\n  --> x_cls_legatus_acta_schedae_x.py:87:37\n   |\n86 |     # Dev fallback for PDF via wkhtmltopdf when enabled\n87 |     def to_pdf(self, html_str: str, out_path: str) -> None:\n   |                                     ^^^^^^^^\n88 |         # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n89 |         raise RuntimeError(\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_legatus_acta_schedae_x.py:89:15\n   |\n87 |       def to_pdf(self, html_str: str, out_path: str) -> None:\n88 |           # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n89 |           raise RuntimeError(\n   |  _______________^\n90 | |             \"PDF export not available (no PDF engine configured)\"\n91 | |         )\n   | |_________^\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> x_cls_legatus_acta_schedae_x.py:90:13\n   |\n88 |         # Fail fast: no implicit PDF fallback; require a real adapter to provide PDF\n89 |         raise RuntimeError(\n90 |             \"PDF export not available (no PDF engine configured)\"\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n91 |         )\n   |\nhelp: Assign to variable; remove string literal\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n   --> x_cls_legatus_acta_schedae_x.py:107:20\n    |\n105 |             or (\n106 |                 _DEFAULT_WKHTMLTOPDF_PATH\n107 |                 if os.path.isfile(_DEFAULT_WKHTMLTOPDF_PATH)\n    |                    ^^^^^^^^^^^^^^\n108 |                 else None\n109 |             )\n    |\nhelp: Replace with `Path(...).is_file()`\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n   --> x_cls_legatus_acta_schedae_x.py:122:33\n    |\n120 |         dpi: int = 300,\n121 |     ) -> None:\n122 |         if not self._bin or not os.path.isfile(self._bin):\n    |                                 ^^^^^^^^^^^^^^\n123 |             raise RuntimeError(\n124 |                 \"wkhtmltopdf not configured (set X_WKHTMLTOPDF_PATH or WKHTMLTOPDF_BIN)\"\n    |\nhelp: Replace with `Path(...).is_file()`\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_legatus_acta_schedae_x.py:123:19\n    |\n121 |       ) -> None:\n122 |           if not self._bin or not os.path.isfile(self._bin):\n123 |               raise RuntimeError(\n    |  ___________________^\n124 | |                 \"wkhtmltopdf not configured (set X_WKHTMLTOPDF_PATH or WKHTMLTOPDF_BIN)\"\n125 | |             )\n    | |_____________^\n126 |           # Write HTML to a temp file and invoke wkhtmltopdf with explicit sizing\n127 |           with tempfile.NamedTemporaryFile(\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_legatus_acta_schedae_x.py:124:17\n    |\n122 |         if not self._bin or not os.path.isfile(self._bin):\n123 |             raise RuntimeError(\n124 |                 \"wkhtmltopdf not configured (set X_WKHTMLTOPDF_PATH or WKHTMLTOPDF_BIN)\"\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n125 |             )\n126 |         # Write HTML to a temp file and invoke wkhtmltopdf with explicit sizing\n    |\nhelp: Assign to variable; remove string literal\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:133:13\n    |\n131 |             tmp_path = tmp.name\n132 |         try:\n133 |             os.makedirs(\n    |             ^^^^^^^^^^^\n134 |                 os.path.dirname(os.path.abspath(out_path)) or \".\",\n135 |                 exist_ok=True,\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:134:17\n    |\n132 |         try:\n133 |             os.makedirs(\n134 |                 os.path.dirname(os.path.abspath(out_path)) or \".\",\n    |                 ^^^^^^^^^^^^^^^\n135 |                 exist_ok=True,\n136 |             )\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH100 `os.path.abspath()` should be replaced by `Path.resolve()`\n   --> x_cls_legatus_acta_schedae_x.py:134:33\n    |\n132 |         try:\n133 |             os.makedirs(\n134 |                 os.path.dirname(os.path.abspath(out_path)) or \".\",\n    |                                 ^^^^^^^^^^^^^^^\n135 |                 exist_ok=True,\n136 |             )\n    |\nhelp: Replace with `Path(...).resolve()`\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_legatus_acta_schedae_x.py:166:13\n    |\n164 |                 ]\n165 |             args += [tmp_path, out_path]\n166 |             subprocess.run(args, check=True, capture_output=True, text=True)\n    |             ^^^^^^^^^^^^^^\n167 |         finally:\n168 |             try:\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_legatus_acta_schedae_x.py:168:13\n    |\n166 |               subprocess.run(args, check=True, capture_output=True, text=True)\n167 |           finally:\n168 | /             try:\n169 | |                 os.remove(tmp_path)\n170 | |             except Exception:\n171 | |                 pass\n    | |____________________^\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nPTH107 `os.remove()` should be replaced by `Path.unlink()`\n   --> x_cls_legatus_acta_schedae_x.py:169:17\n    |\n167 |         finally:\n168 |             try:\n169 |                 os.remove(tmp_path)\n    |                 ^^^^^^^^^\n170 |             except Exception:\n171 |                 pass\n    |\nhelp: Replace with `Path(...).unlink()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:170:13\n    |\n168 |               try:\n169 |                   os.remove(tmp_path)\n170 | /             except Exception:\n171 | |                 pass\n    | |____________________^\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:170:20\n    |\n168 |             try:\n169 |                 os.remove(tmp_path)\n170 |             except Exception:\n    |                    ^^^^^^^^^\n171 |                 pass\n    |\n\nC901 `_load_from_manifest` is too complex (37 > 10)\n   --> x_cls_legatus_acta_schedae_x.py:179:9\n    |\n177 |         self._inner, self._has_pdf = self._load_from_manifest(base_folder)\n178 |\n179 |     def _load_from_manifest(\n    |         ^^^^^^^^^^^^^^^^^^^\n180 |         self, base_folder: str\n181 |     ) -> tuple[MarkdownLike, bool]:\n    |\n\nPLR0912 Too many branches (19 > 12)\n   --> x_cls_legatus_acta_schedae_x.py:179:9\n    |\n177 |         self._inner, self._has_pdf = self._load_from_manifest(base_folder)\n178 |\n179 |     def _load_from_manifest(\n    |         ^^^^^^^^^^^^^^^^^^^\n180 |         self, base_folder: str\n181 |     ) -> tuple[MarkdownLike, bool]:\n    |\n\nPLR0915 Too many statements (100 > 50)\n   --> x_cls_legatus_acta_schedae_x.py:179:9\n    |\n177 |         self._inner, self._has_pdf = self._load_from_manifest(base_folder)\n178 |\n179 |     def _load_from_manifest(\n    |         ^^^^^^^^^^^^^^^^^^^\n180 |         self, base_folder: str\n181 |     ) -> tuple[MarkdownLike, bool]:\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:185:13\n    |\n183 |         env_manifest = os.environ.get(\"X_MANIFEST_PATH\")\n184 |         candidates = [\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n    |             ^^^^^^^^^^^^\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:186:13\n    |\n184 |         candidates = [\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n    |             ^^^^^^^^^^^^\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n188 |             *([env_manifest] if env_manifest else []),\n    |\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:186:26\n    |\n184 |         candidates = [\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n    |                          ^^^^^^^^^^^^^^^\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n188 |             *([env_manifest] if env_manifest else []),\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:187:13\n    |\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n    |             ^^^^^^^^^^^^\n188 |             *([env_manifest] if env_manifest else []),\n189 |         ]\n    |\n\nPTH109 `os.getcwd()` should be replaced by `Path.cwd()`\n   --> x_cls_legatus_acta_schedae_x.py:187:26\n    |\n185 |             os.path.join(base_folder, \"publish_manifest.json\"),\n186 |             os.path.join(os.path.dirname(__file__), \"publish_manifest.json\"),\n187 |             os.path.join(os.getcwd(), \"publish_manifest.json\"),\n    |                          ^^^^^^^^^\n188 |             *([env_manifest] if env_manifest else []),\n189 |         ]\n    |\nhelp: Replace with `Path.cwd()`\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `obj`\n   --> x_cls_legatus_acta_schedae_x.py:194:26\n    |\n192 |         cls_name: str | None = None\n193 |\n194 |         def extract(obj: Any) -> tuple[str | None, str | None]:\n    |                          ^^^\n195 |             if not isinstance(obj, dict):\n196 |                 return (None, None)\n    |\n\nFBT003 Boolean positional value in function call\n   --> x_cls_legatus_acta_schedae_x.py:210:42\n    |\n209 |         def _dbg(msg: str) -> None:\n210 |             if _truthy_env(\"X_MD_DEBUG\", False):\n    |                                          ^^^^^\n211 |                 print(f\"[MD] {msg}\")\n    |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n   --> x_cls_legatus_acta_schedae_x.py:215:36\n    |\n213 |         for path in candidates:\n214 |             try:\n215 |                 if not path or not os.path.isfile(path):\n    |                                    ^^^^^^^^^^^^^^\n216 |                     _dbg(f\"manifest not found: {path}\")\n217 |                     continue\n    |\nhelp: Replace with `Path(...).is_file()`\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_legatus_acta_schedae_x.py:219:22\n    |\n217 |                     continue\n218 |                 _dbg(f\"reading manifest: {path}\")\n219 |                 with open(path, encoding=\"utf-8\") as fh:\n    |                      ^^^^\n220 |                     data = json.load(fh)\n221 |                 if isinstance(data, list):\n    |\nhelp: Replace with `Path.open()`\n\nPLR2004 Magic value used in comparison, consider replacing `4` with a constant variable\n   --> x_cls_legatus_acta_schedae_x.py:225:46\n    |\n223 |                         if (\n224 |                             isinstance(item, (list, tuple))\n225 |                             and len(item) == 4\n    |                                              ^\n226 |                             and isinstance(item[3], dict)\n227 |                         ):\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:240:20\n    |\n238 |                     _dbg(f\"resolved adapter {mod_name}.{cls_name}\")\n239 |                     break\n240 |             except Exception as e:\n    |                    ^^^^^^^^^\n241 |                 errs.append(f\"{path}: {e}\")\n242 |                 _dbg(f\"error reading manifest {path}: {e}\")\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> x_cls_legatus_acta_schedae_x.py:249:13\n    |\n248 |         try:\n249 |             import importlib\n    |             ^^^^^^^^^^^^^^^^\n250 |\n251 |             mod = importlib.import_module(mod_name)\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:255:16\n    |\n253 |             inst: Any = klass()\n254 |             _dbg(f\"loaded adapter instance: {mod_name}.{cls_name}\")\n255 |         except Exception as e:\n    |                ^^^^^^^^^\n256 |             _dbg(f\"failed to load adapter {mod_name}.{cls_name}: {e}\")\n257 |             return (_FallbackMarkdown(), False)\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_legatus_acta_schedae_x.py:275:19\n    |\n273 |               html_func = html_reset\n274 |           if html_func is None:\n275 |               raise RuntimeError(\n    |  ___________________^\n276 | |                 \"Markdown maker lacks a usable to_html()/convert() interface\"\n277 | |             )\n    | |_____________^\n278 |\n279 |           # Build typed PDF function\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_legatus_acta_schedae_x.py:276:17\n    |\n274 |         if html_func is None:\n275 |             raise RuntimeError(\n276 |                 \"Markdown maker lacks a usable to_html()/convert() interface\"\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n277 |             )\n    |\nhelp: Assign to variable; remove string literal\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:288:24\n    |\n286 |                 try:\n287 |                     tp(html_str, out_path)\n288 |                 except Exception:\n    |                        ^^^^^^^^^\n289 |                     with tempfile.NamedTemporaryFile(\n290 |                         \"w\", delete=False, suffix=\".html\", encoding=\"utf-8\"\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_legatus_acta_schedae_x.py:297:25\n    |\n295 |                           tp(tmp_path, out_path)\n296 |                       finally:\n297 | /                         try:\n298 | |                             os.remove(tmp_path)\n299 | |                         except Exception:\n300 | |                             pass\n    | |________________________________^\n301 |\n302 |               pdf_func = _call_to_pdf\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nPTH107 `os.remove()` should be replaced by `Path.unlink()`\n   --> x_cls_legatus_acta_schedae_x.py:298:29\n    |\n296 |                     finally:\n297 |                         try:\n298 |                             os.remove(tmp_path)\n    |                             ^^^^^^^^^\n299 |                         except Exception:\n300 |                             pass\n    |\nhelp: Replace with `Path(...).unlink()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:299:25\n    |\n297 |                           try:\n298 |                               os.remove(tmp_path)\n299 | /                         except Exception:\n300 | |                             pass\n    | |________________________________^\n301 |\n302 |               pdf_func = _call_to_pdf\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:299:32\n    |\n297 |                         try:\n298 |                             os.remove(tmp_path)\n299 |                         except Exception:\n    |                                ^^^^^^^^^\n300 |                             pass\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_legatus_acta_schedae_x.py:317:21\n    |\n315 |                       exp(tmp_path, out_path)\n316 |                   finally:\n317 | /                     try:\n318 | |                         os.remove(tmp_path)\n319 | |                     except Exception:\n320 | |                         pass\n    | |____________________________^\n321 |\n322 |               pdf_func = export_pdf_html\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nPTH107 `os.remove()` should be replaced by `Path.unlink()`\n   --> x_cls_legatus_acta_schedae_x.py:318:25\n    |\n316 |                 finally:\n317 |                     try:\n318 |                         os.remove(tmp_path)\n    |                         ^^^^^^^^^\n319 |                     except Exception:\n320 |                         pass\n    |\nhelp: Replace with `Path(...).unlink()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:319:21\n    |\n317 |                       try:\n318 |                           os.remove(tmp_path)\n319 | /                     except Exception:\n320 | |                         pass\n    | |____________________________^\n321 |\n322 |               pdf_func = export_pdf_html\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:319:28\n    |\n317 |                     try:\n318 |                         os.remove(tmp_path)\n319 |                     except Exception:\n    |                            ^^^^^^^^^\n320 |                         pass\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_legatus_acta_schedae_x.py:338:27\n    |\n336 |             def to_pdf(self, html_str: str, out_path: str) -> None:\n337 |                 if self._p is None:\n338 |                     raise RuntimeError(\"PDF exporter not available\")\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n339 |                 self._p(html_str, out_path)\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_legatus_acta_schedae_x.py:338:40\n    |\n336 |             def to_pdf(self, html_str: str, out_path: str) -> None:\n337 |                 if self._p is None:\n338 |                     raise RuntimeError(\"PDF exporter not available\")\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n339 |                 self._p(html_str, out_path)\n    |\nhelp: Assign to variable; remove string literal\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:392:9\n    |\n390 |     def __init__(self, db_path: str) -> None:\n391 |         self.db_path = db_path\n392 |         os.makedirs(os.path.dirname(db_path), exist_ok=True)\n    |         ^^^^^^^^^^^\n393 |         # JSONL paths (append-only for easy inspection)\n394 |         data_dir = os.path.dirname(self.db_path)\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:392:21\n    |\n390 |     def __init__(self, db_path: str) -> None:\n391 |         self.db_path = db_path\n392 |         os.makedirs(os.path.dirname(db_path), exist_ok=True)\n    |                     ^^^^^^^^^^^^^^^\n393 |         # JSONL paths (append-only for easy inspection)\n394 |         data_dir = os.path.dirname(self.db_path)\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:394:20\n    |\n392 |         os.makedirs(os.path.dirname(db_path), exist_ok=True)\n393 |         # JSONL paths (append-only for easy inspection)\n394 |         data_dir = os.path.dirname(self.db_path)\n    |                    ^^^^^^^^^^^^^^^\n395 |         self.json_cards_path = os.path.join(data_dir, \"cards.jsonl\")\n396 |         self.json_actions_path = os.path.join(data_dir, \"actions.jsonl\")\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:395:32\n    |\n393 |         # JSONL paths (append-only for easy inspection)\n394 |         data_dir = os.path.dirname(self.db_path)\n395 |         self.json_cards_path = os.path.join(data_dir, \"cards.jsonl\")\n    |                                ^^^^^^^^^^^^\n396 |         self.json_actions_path = os.path.join(data_dir, \"actions.jsonl\")\n397 |         self._ensure_schema()\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:396:34\n    |\n394 |         data_dir = os.path.dirname(self.db_path)\n395 |         self.json_cards_path = os.path.join(data_dir, \"cards.jsonl\")\n396 |         self.json_actions_path = os.path.join(data_dir, \"actions.jsonl\")\n    |                                  ^^^^^^^^^^^^\n397 |         self._ensure_schema()\n    |\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_legatus_acta_schedae_x.py:443:18\n    |\n441 |     def _append_jsonl(self, path: str, obj: dict[str, Any]) -> None:\n442 |         try:\n443 |             with open(path, \"a\", encoding=\"utf-8\") as fh:\n    |                  ^^^^\n444 |                 fh.write(json.dumps(obj, ensure_ascii=False) + \"\\n\")\n445 |         except Exception:\n    |\nhelp: Replace with `Path.open()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:445:9\n    |\n443 |               with open(path, \"a\", encoding=\"utf-8\") as fh:\n444 |                   fh.write(json.dumps(obj, ensure_ascii=False) + \"\\n\")\n445 | /         except Exception:\n446 | |             # Best-effort JSON logging; do not block DB operations\n447 | |             pass\n    | |________________^\n448 |\n449 |       def insert_card(self, card: Notecard) -> None:\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:445:16\n    |\n443 |             with open(path, \"a\", encoding=\"utf-8\") as fh:\n444 |                 fh.write(json.dumps(obj, ensure_ascii=False) + \"\\n\")\n445 |         except Exception:\n    |                ^^^^^^^^^\n446 |             # Best-effort JSON logging; do not block DB operations\n447 |             pass\n    |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_legatus_acta_schedae_x.py:607:17\n    |\n605 |           if \"cards\" in payload:\n606 |               for c in payload[\"cards\"]:\n607 | /                 result.append(\n608 | |                     {\n609 | |                         \"front_md\": c.get(\"front_md\", \"\"),\n610 | |                         \"back_md\": c.get(\"back_md\"),\n611 | |                         \"tags\": list(\n612 | |                             set([*(global_tags), *(c.get(\"tags\", []) or [])])\n613 | |                         ),\n614 | |                     }\n615 | |                 )\n    | |_________________^\n616 |               return result\n617 |           if \"qa\" in payload:\n    |\nhelp: Replace for loop with list.extend\n\nC405 Unnecessary list literal (rewrite as a set literal)\n   --> x_cls_legatus_acta_schedae_x.py:612:29\n    |\n610 |                         \"back_md\": c.get(\"back_md\"),\n611 |                         \"tags\": list(\n612 |                             set([*(global_tags), *(c.get(\"tags\", []) or [])])\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n613 |                         ),\n614 |                     }\n    |\nhelp: Rewrite as a set literal\n\nC405 Unnecessary list literal (rewrite as a set literal)\n   --> x_cls_legatus_acta_schedae_x.py:655:24\n    |\n653 |                 front = f\"# Task\\n**{t.get('title','')}**\"\n654 |                 back = t.get(\"details\", \"\")\n655 |                 tags = set([*(global_tags), *(t.get(\"tags\", []) or [])])\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n656 |                 task_id = t.get(\"task_id\")\n657 |                 if task_id:\n    |\nhelp: Rewrite as a set literal\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_legatus_acta_schedae_x.py:700:17\n    |\n698 |           if \"appointments\" in payload:\n699 |               for a in payload[\"appointments\"]:\n700 | /                 result.append(\n701 | |                     {\n702 | |                         \"front_md\": mk_front(a),\n703 | |                         \"back_md\": mk_back(a),\n704 | |                         \"tags\": list(\n705 | |                             set([*(global_tags), *(a.get(\"tags\", []) or [])])\n706 | |                         ),\n707 | |                     }\n708 | |                 )\n    | |_________________^\n709 |               return result\n710 |           result.append(\n    |\nhelp: Replace for loop with list.extend\n\nC405 Unnecessary list literal (rewrite as a set literal)\n   --> x_cls_legatus_acta_schedae_x.py:705:29\n    |\n703 |                         \"back_md\": mk_back(a),\n704 |                         \"tags\": list(\n705 |                             set([*(global_tags), *(a.get(\"tags\", []) or [])])\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n706 |                         ),\n707 |                     }\n    |\nhelp: Rewrite as a set literal\n\nPTH100 `os.path.abspath()` should be replaced by `Path.resolve()`\n   --> x_cls_legatus_acta_schedae_x.py:741:24\n    |\n739 |         self.base_dir = base_dir or _base_dir_default()\n740 |         # All output under this folder to satisfy co-location requirement\n741 |         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n    |                        ^^^^^^^^^^^^^^^\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n    |\nhelp: Replace with `Path(...).resolve()`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:741:40\n    |\n739 |         self.base_dir = base_dir or _base_dir_default()\n740 |         # All output under this folder to satisfy co-location requirement\n741 |         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n    |                                        ^^^^^^^^^^^^^^^\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:742:24\n    |\n740 |         # All output under this folder to satisfy co-location requirement\n741 |         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n    |                        ^^^^^^^^^^^^\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:743:9\n    |\n741 |         self.pkg_dir = os.path.abspath(os.path.dirname(__file__))\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n    |         ^^^^^^^^^^^\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n745 |         os.makedirs(self.media_dir, exist_ok=True)\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:744:26\n    |\n742 |         self.out_dir = os.path.join(self.pkg_dir, \"out\")\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n    |                          ^^^^^^^^^^^^\n745 |         os.makedirs(self.media_dir, exist_ok=True)\n746 |         self.db_path = db_path or os.path.join(\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:745:9\n    |\n743 |         os.makedirs(self.out_dir, exist_ok=True)\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n745 |         os.makedirs(self.media_dir, exist_ok=True)\n    |         ^^^^^^^^^^^\n746 |         self.db_path = db_path or os.path.join(\n747 |             self.pkg_dir, \"data\", \"cards.db\"\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_legatus_acta_schedae_x.py:746:35\n    |\n744 |         self.media_dir = os.path.join(self.out_dir, \"media\")\n745 |         os.makedirs(self.media_dir, exist_ok=True)\n746 |         self.db_path = db_path or os.path.join(\n    |                                   ^^^^^^^^^^^^\n747 |             self.pkg_dir, \"data\", \"cards.db\"\n748 |         )\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_legatus_acta_schedae_x.py:749:9\n    |\n747 |             self.pkg_dir, \"data\", \"cards.db\"\n748 |         )\n749 |         os.makedirs(os.path.dirname(self.db_path), exist_ok=True)\n    |         ^^^^^^^^^^^\n750 |         self.storage = Storage(self.db_path)\n751 |         # Prefer base_dir for manifest lookup; still searches package/CWD/env\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_legatus_acta_schedae_x.py:749:21\n    |\n747 |             self.pkg_dir, \"data\", \"cards.db\"\n748 |         )\n749 |         os.makedirs(os.path.dirname(self.db_path), exist_ok=True)\n    |                     ^^^^^^^^^^^^^^^\n750 |         self.storage = Storage(self.db_path)\n751 |         # Prefer base_dir for manifest lookup; still searches package/CWD/env\n    |\nhelp: Replace with `Path(...).parent`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:771:20\n    |\n769 |             try:\n770 |                 return _to_inches(float(val), unit)\n771 |             except Exception:\n    |                    ^^^^^^^^^\n772 |                 return 0.0\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_legatus_acta_schedae_x.py:885:17\n    |\n883 |                   try:\n884 |                       return max(0.0, _to_inches(float(val), unit))\n885 | /                 except Exception:\n886 | |                     pass\n    | |________________________^\n887 |           return 0.25 if sheet is not None else 0.0\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:885:24\n    |\n883 |                 try:\n884 |                     return max(0.0, _to_inches(float(val), unit))\n885 |                 except Exception:\n    |                        ^^^^^^^^^\n886 |                     pass\n887 |         return 0.25 if sheet is not None else 0.0\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_legatus_acta_schedae_x.py:912:20\n    |\n910 |             try:\n911 |                 return max(0.0, _to_inches(float(val), unit))\n912 |             except Exception:\n    |                    ^^^^^^^^^\n913 |                 return default\n    |\n\nSIM108 Use ternary operator `s = \"3x5\" if not spec else str(spec).strip().lower()` instead of `if`-`else`-block\n   --> x_cls_legatus_acta_schedae_x.py:933:9\n    |\n931 |       # --- size parsing (restored) ---\n932 |       def _parse_size_spec(self, spec: str) -> tuple[float, float]:\n933 | /         if not spec:\n934 | |             s = \"3x5\"\n935 | |         else:\n936 | |             s = str(spec).strip().lower()\n    | |_________________________________________^\n937 |\n938 |           # Parse using existing flexible logic, then hard-restrict.\n    |\nhelp: Replace `if`-`else`-block with `s = \"3x5\" if not spec else str(spec).strip().lower()`\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_legatus_acta_schedae_x.py:978:15\n    |\n976 |               return (6.0, 4.0)\n977 |\n978 |           raise ValueError(\n    |  _______________^\n979 | |             f\"Only 3x5 and 4x6 sizes are supported (got: {w:.2f}x{h:.2f} in)\"\n980 | |         )\n    | |_________^\n981 |\n982 |       def make(\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> x_cls_legatus_acta_schedae_x.py:979:13\n    |\n978 |         raise ValueError(\n979 |             f\"Only 3x5 and 4x6 sizes are supported (got: {w:.2f}x{h:.2f} in)\"\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n980 |         )\n    |\nhelp: Assign to variable; remove f-string literal\n\nPLR0913 Too many arguments in function definition (8 > 5)\n   --> x_cls_legatus_acta_schedae_x.py:982:9\n    |\n980 |         )\n981 |\n982 |     def make(\n    |         ^^^^\n983 |         self,\n984 |         kind: str,\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n    --> x_cls_legatus_acta_schedae_x.py:1053:20\n     |\n1051 |         for c in cards:\n1052 |             html_out = self._render_card_html(c, sheet=sheet)\n1053 |             path = os.path.join(self.out_dir, self._output_filename(c, \"html\"))\n     |                    ^^^^^^^^^^^^\n1054 |             with open(path, \"w\", encoding=\"utf-8\") as f:\n1055 |                 f.write(html_out)\n     |\n\nPTH123 `open()` should be replaced by `Path.open()`\n    --> x_cls_legatus_acta_schedae_x.py:1054:18\n     |\n1052 |             html_out = self._render_card_html(c, sheet=sheet)\n1053 |             path = os.path.join(self.out_dir, self._output_filename(c, \"html\"))\n1054 |             with open(path, \"w\", encoding=\"utf-8\") as f:\n     |                  ^^^^\n1055 |                 f.write(html_out)\n1056 |             paths.append(path)\n     |\nhelp: Replace with `Path.open()`\n\nC901 `export_pdf` is too complex (14 > 10)\n    --> x_cls_legatus_acta_schedae_x.py:1059:9\n     |\n1057 |         return paths\n1058 |\n1059 |     def export_pdf(self, cards: Iterable[Notecard]) -> list[str]:\n     |         ^^^^^^^^^^\n1060 |         \"\"\"\n1061 |         Export grouped duplex PDFs by size:\n     |\n\nE501 Line too long (91 > 88)\n    --> x_cls_legatus_acta_schedae_x.py:1065:89\n     |\n1063 |             * fronts PDF: all odd-indexed cards (in given order)\n1064 |             * backs  PDF: all even-indexed cards (in given order)\n1065 |         Each page contains the front content of a single card. Card back_md is not included\n     |                                                                                         ^^^\n1066 |         in duplex PDFs to support simple double-sided printing.\n1067 |         \"\"\"\n     |\n\nFBT003 Boolean positional value in function call\n    --> x_cls_legatus_acta_schedae_x.py:1071:36\n     |\n1069 |         sheet = self._sheet_size()\n1070 |         force_wk = sheet is not None or _truthy_env(\n1071 |             \"X_FORCE_WKHTMLTOPDF\", False\n     |                                    ^^^^^\n1072 |         )\n     |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n    --> x_cls_legatus_acta_schedae_x.py:1133:29\n     |\n1131 | </html>\n1132 | \"\"\"\n1133 |                 html_path = os.path.join(\n     |                             ^^^^^^^^^^^^\n1134 |                     self.out_dir, f\"duplex_{size_key}_{label}.html\"\n1135 |                 )\n     |\n\nPTH123 `open()` should be replaced by `Path.open()`\n    --> x_cls_legatus_acta_schedae_x.py:1136:22\n     |\n1134 |                     self.out_dir, f\"duplex_{size_key}_{label}.html\"\n1135 |                 )\n1136 |                 with open(html_path, \"w\", encoding=\"utf-8\") as fh:\n     |                      ^^^^\n1137 |                     fh.write(doc_html)\n     |\nhelp: Replace with `Path.open()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n    --> x_cls_legatus_acta_schedae_x.py:1140:28\n     |\n1139 |                 # Export to PDF\n1140 |                 pdf_path = os.path.join(\n     |                            ^^^^^^^^^^^^\n1141 |                     self.out_dir, f\"duplex_{size_key}_{label}.pdf\"\n1142 |                 )\n     |\n\nBLE001 Do not catch blind exception: `Exception`\n    --> x_cls_legatus_acta_schedae_x.py:1151:28\n     |\n1149 |                     try:\n1150 |                         self.md.to_pdf(doc_html, pdf_path)\n1151 |                     except Exception as e_md:\n     |                            ^^^^^^^^^\n1152 |                         try:\n1153 |                             self._pdf.to_pdf(\n     |\n\nBLE001 Do not catch blind exception: `Exception`\n    --> x_cls_legatus_acta_schedae_x.py:1160:32\n     |\n1158 |                                 dpi=300,\n1159 |                             )\n1160 |                         except Exception as e_bin:\n     |                                ^^^^^^^^^\n1161 |                             raise RuntimeError(\n1162 |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n     |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n    --> x_cls_legatus_acta_schedae_x.py:1161:29\n     |\n1159 |                               )\n1160 |                           except Exception as e_bin:\n1161 | /                             raise RuntimeError(\n1162 | |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n1163 | |                             )\n     | |_____________________________^\n1164 |                   else:\n1165 |                       try:\n     |\n\nTRY003 Avoid specifying long messages outside the exception class\n    --> x_cls_legatus_acta_schedae_x.py:1161:35\n     |\n1159 |                               )\n1160 |                           except Exception as e_bin:\n1161 |                               raise RuntimeError(\n     |  ___________________________________^\n1162 | |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n1163 | |                             )\n     | |_____________________________^\n1164 |                   else:\n1165 |                       try:\n     |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n    --> x_cls_legatus_acta_schedae_x.py:1162:33\n     |\n1160 |                         except Exception as e_bin:\n1161 |                             raise RuntimeError(\n1162 |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1163 |                             )\n1164 |                 else:\n     |\nhelp: Assign to variable; remove f-string literal\n\nE501 Line too long (104 > 88)\n    --> x_cls_legatus_acta_schedae_x.py:1162:89\n     |\n1160 |                         except Exception as e_bin:\n1161 |                             raise RuntimeError(\n1162 |                                 f\"PDF export failed (adapter error: {e_md}; wkhtmltopdf error: {e_bin})\"\n     |                                                                                         ^^^^^^^^^^^^^^^^\n1163 |                             )\n1164 |                 else:\n     |\n\nBLE001 Do not catch blind exception: `Exception`\n    --> x_cls_legatus_acta_schedae_x.py:1173:28\n     |\n1171 |                             dpi=300,\n1172 |                         )\n1173 |                     except Exception as e_bin:\n     |                            ^^^^^^^^^\n1174 |                         raise RuntimeError(\n1175 |                             f\"PDF export failed (wkhtmltopdf error: {e_bin})\"\n     |\n\nB904 Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling\n    --> x_cls_legatus_acta_schedae_x.py:1174:25\n     |\n1172 |                           )\n1173 |                       except Exception as e_bin:\n1174 | /                         raise RuntimeError(\n1175 | |                             f\"PDF export failed (wkhtmltopdf error: {e_bin})\"\n1176 | |                         )\n     | |_________________________^\n1177 |\n1178 |                   paths_local.append(pdf_path)\n     |\n\nTRY003 Avoid specifying long messages outside the exception class\n    --> x_cls_legatus_acta_schedae_x.py:1174:31\n     |\n1172 |                           )\n1173 |                       except Exception as e_bin:\n1174 |                           raise RuntimeError(\n     |  _______________________________^\n1175 | |                             f\"PDF export failed (wkhtmltopdf error: {e_bin})\"\n1176 | |                         )\n     | |_________________________^\n1177 |\n1178 |                   paths_local.append(pdf_path)\n     |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n    --> x_cls_legatus_acta_schedae_x.py:1175:29\n     |\n1173 |                     except Exception as e_bin:\n1174 |                         raise RuntimeError(\n1175 |                             f\"PDF export failed (wkhtmltopdf error: {e_bin})\"\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1176 |                         )\n     |\nhelp: Assign to variable; remove f-string literal\n\nFBT003 Boolean positional value in function call\n    --> x_cls_legatus_acta_schedae_x.py:1212:58\n     |\n1210 |             code_text = f\"NCX:{c.id[:8].upper()}\"\n1211 |\n1212 |         debug_frame = _truthy_env(\"X_PRINT_DEBUG_FRAME\", False)\n     |                                                          ^^^^^\n1213 |         border_css = (\n1214 |             \"5px dashed #e33\" if debug_frame else \"5px solid #000\"\n     |\n\nE501 Line too long (190 > 88)\n    --> x_cls_legatus_acta_schedae_x.py:1262:89\n     |\n1260 | \u00e2\u20ac\u00a6\n1261 | \u00e2\u20ac\u00a6\n1262 | \u00e2\u20ac\u00a6dding: 2px 6px; border-radius: 6px; font-size: 10px; background: #eef2f7; color: #334; border: 1px solid #ccd5e0; }}\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1263 | \u00e2\u20ac\u00a6\n1264 | \u00e2\u20ac\u00a6\n     |\n\nE501 Line too long (95 > 88)\n    --> x_cls_legatus_acta_schedae_x.py:1273:89\n     |\n1271 |             .content {{ font-size: 14px; line-height: 1.35; }}\n1272 |             .footer-tags {{\n1273 |                 position: absolute; left: 0.25in; bottom: 0.15in; font-size: 10px; color: #666;\n     |                                                                                         ^^^^^^^\n1274 |             }}\n1275 |             .page-break {{ page-break-after: always; }}\n     |\n\nFLY002 Consider `f\"{b1}{b2}{b3}{b4}\"` instead of string join\n    --> x_cls_legatus_acta_schedae_x.py:1351:16\n     |\n1349 |         b3 = f'<span class=\"badge\">v{html.escape(ver)}</span>' if ver else \"\"\n1350 |         b4 = f'<span class=\"badge\">{html.escape(n)}</span>' if n else \"\"\n1351 |         return \"\".join([b1, b2, b3, b4])\n     |                ^^^^^^^^^^^^^^^^^^^^^^^^^\n1352 |\n1353 |     def _qr_data_uri(self, payload: str) -> str:\n     |\nhelp: Replace with `f\"{b1}{b2}{b3}{b4}\"`\n\nTRY003 Avoid specifying long messages outside the exception class\n    --> x_cls_legatus_acta_schedae_x.py:1356:19\n     |\n1354 |         # Guard for optional dependency; helps type-checkers and runtime safety\n1355 |         if qrcode is None:\n1356 |             raise RuntimeError(\"QR code generation not available\")\n     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1357 |         img = qrcode.make(payload)\n1358 |         buf = io.BytesIO()\n     |\n\nEM101 Exception must not use a string literal, assign to variable first\n    --> x_cls_legatus_acta_schedae_x.py:1356:32\n     |\n1354 |         # Guard for optional dependency; helps type-checkers and runtime safety\n1355 |         if qrcode is None:\n1356 |             raise RuntimeError(\"QR code generation not available\")\n     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1357 |         img = qrcode.make(payload)\n1358 |         buf = io.BytesIO()\n     |\nhelp: Assign to variable; remove string literal\n\nERA001 Found commented-out code\n    --> x_cls_legatus_acta_schedae_x.py:1373:5\n     |\n1371 |     maker.set_print_shift(y_mm=4)\n1372 |     # Example horizontal tweak (uncomment to nudge right 2mm):\n1373 |     # maker.set_print_shift(x_mm=2)\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n1374 |\n1375 |     # Flashcards set with series metadata\n     |\nhelp: Remove commented-out code\n\nC901 `_ncx_set_print_shift` is too complex (12 > 10)\n    --> x_cls_legatus_acta_schedae_x.py:1451:9\n     |\n1449 | if not hasattr(x_cls_legatus_acta_schedae_x, \"set_print_shift\"):\n1450 |\n1451 |     def _ncx_set_print_shift(\n     |         ^^^^^^^^^^^^^^^^^^^^\n1452 |         self,\n1453 |         *,\n     |\n\nPLR0913 Too many arguments in function definition (6 > 5)\n    --> x_cls_legatus_acta_schedae_x.py:1451:9\n     |\n1449 | if not hasattr(x_cls_legatus_acta_schedae_x, \"set_print_shift\"):\n1450 |\n1451 |     def _ncx_set_print_shift(\n     |         ^^^^^^^^^^^^^^^^^^^^\n1452 |         self,\n1453 |         *,\n     |\n\nPLR0912 Too many branches (14 > 12)\n    --> x_cls_legatus_acta_schedae_x.py:1451:9\n     |\n1449 | if not hasattr(x_cls_legatus_acta_schedae_x, \"set_print_shift\"):\n1450 |\n1451 |     def _ncx_set_print_shift(\n     |         ^^^^^^^^^^^^^^^^^^^^\n1452 |         self,\n1453 |         *,\n     |\n\nANN001 Missing type annotation for function argument `self`\n    --> x_cls_legatus_acta_schedae_x.py:1452:9\n     |\n1451 |     def _ncx_set_print_shift(\n1452 |         self,\n     |         ^^^^\n1453 |         *,\n1454 |         x_mm: float | None = None,\n     |\n\nANN001 Missing type annotation for function argument `self`\n    --> x_cls_legatus_acta_schedae_x.py:1487:30\n     |\n1485 |                 self.shift_y_in += yv  # type: ignore[attr-defined]\n1486 |\n1487 |     def _ncx_get_print_shift(self) -> tuple[float, float]:\n     |                              ^^^^\n1488 |         return (\n1489 |             getattr(self, \"shift_x_in\", 0.0),\n     |\n\nPGH003 Use specific rule codes when ignoring type issues\n    --> x_cls_legatus_acta_schedae_x.py:1493:74\n     |\n1491 |         )\n1492 |\n1493 |     x_cls_legatus_acta_schedae_x.set_print_shift = _ncx_set_print_shift  # type: ignore\n     |                                                                          ^^^^^^^^^^^^^^\n1494 |     x_cls_legatus_acta_schedae_x.get_print_shift = _ncx_get_print_shift  # type: ignore\n     |\n\nPGH003 Use specific rule codes when ignoring type issues\n    --> x_cls_legatus_acta_schedae_x.py:1494:74\n     |\n1493 |     x_cls_legatus_acta_schedae_x.set_print_shift = _ncx_set_print_shift  # type: ignore\n1494 |     x_cls_legatus_acta_schedae_x.get_print_shift = _ncx_get_print_shift  # type: ignore\n     |                                                                          ^^^^^^^^^^^^^^\n     |\n\nFound 869 errors.\nNo fixes available (334 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_check",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "mypy",
                ".",
                "--strict",
                "--no-warn-unused-configs",
                "--show-error-codes",
                "--warn-return-any",
                "--warn-unreachable",
                "--disallow-any-unimported",
                "--disallow-any-expr",
                "--disallow-any-decorated",
                "--disallow-any-explicit"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "cwd": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "duration_seconds": 10.40145149998716,
            "ended_at": "2025-10-08T12:49:03.009944+00:00",
            "exit": 1,
            "repo": "x_legatus_acta_schedae_x",
            "repo_hash": "8b9bd8670f31639839d13df034bf4fa2be0969f83cfe928151b54427786ff2a8",
            "repo_path": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "started_at": "2025-10-08T12:48:52.608488+00:00",
            "stderr": "",
            "stdout": "core\\ports\\scheduler.py:13: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:22: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:30: error: Expression type contains \"Any\" (has type \"type[ReviewHistoryEntry]\")  [misc]\ncore\\domain\\review.py:31: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:36: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:36: error: Expression type contains \"Any\" (has type \"Callable[[], dict[str, Any]]\")  [misc]\ncore\\domain\\review.py:38: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:39: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:44: error: Expression type contains \"Any\" (has type \"tuple[str, dict[str, Any]]\")  [misc]\ncore\\domain\\review.py:44: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:48: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:49: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:49: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:50: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:50: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:51: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:51: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:52: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:53: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:54: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:54: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ncore\\domain\\review.py:55: error: Expression type contains \"Any\" (has type \"tuple[object, Any]\")  [misc]\ncore\\domain\\review.py:55: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:56: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:56: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ncore\\domain\\review.py:56: error: Expression type contains \"Any\" (has type \"ItemsView[object, Any]\")  [misc]\ncore\\domain\\review.py:60: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:60: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:63: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:68: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:68: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:71: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:99: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:100: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:112: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\ncore\\domain\\review.py:112: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\domain\\review.py:112: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:117: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\review.py:118: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:118: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:119: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:119: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:120: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:120: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:121: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:122: error: Expression type contains \"Any\" (has type \"type[ReviewHistoryEntry]\")  [misc]\ncore\\domain\\review.py:122: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:123: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:123: error: Expression type contains \"Any\" (has type \"Any | list[Never]\")  [misc]\ncore\\domain\\review.py:126: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:126: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:130: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:131: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\domain\\review.py:134: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:134: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:135: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:135: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:136: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:136: error: Expression has type \"Any\"  [misc]\ncore\\domain\\review.py:138: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\domain\\review.py:138: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\null_scheduler.py:20: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:31: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\domain\\events.py:32: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:37: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:63: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:65: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\domain\\events.py:68: error: Expression type contains \"Any\" (has type \"dict[type[Any], list[EventSubscriber]]\")  [misc]\ncore\\domain\\events.py:68: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\ncore\\domain\\events.py:71: error: Expression type contains \"Any\" (has type \"tuple[type[Any], list[EventSubscriber]]\")  [misc]\ncore\\domain\\events.py:71: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\ncore\\domain\\events.py:71: error: Expression type contains \"Any\" (has type \"dict[type[Any], list[EventSubscriber]]\")  [misc]\ncore\\domain\\events.py:71: error: Expression type contains \"Any\" (has type \"dict_items[type[Any], list[EventSubscriber]]\")  [misc]\ncore\\domain\\events.py:72: error: Expression type contains \"Any\" (has type \"type[Any]\")  [misc]\ncore\\domain\\events.py:74: error: Expression has type \"Any\"  [misc]\ninfrastructure\\logging.py:38: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\logging.py:46: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\ninfrastructure\\logging.py:46: error: Expression has type \"Any\"  [misc]\ninfrastructure\\logging.py:46: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\logging.py:46: error: Expression type contains \"Any\" (has type \"dict_items[str, Any]\")  [misc]\ninfrastructure\\logging.py:49: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\logging.py:49: error: Expression has type \"Any\"  [misc]\ninfrastructure\\logging.py:51: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\logging.py:52: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\search\\memory_index.py:66: error: Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")  [misc]\ninfrastructure\\search\\memory_index.py:66: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:11: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\scheduler\\apscheduler_adapter.py:28: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:29: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:34: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\scheduler\\apscheduler_adapter.py:34: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:39: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:44: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:47: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\scheduler\\apscheduler_adapter.py:56: error: Expression type contains \"Any\" (has type \"tuple[Any, ...] | None\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:57: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:57: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:58: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:59: error: Expression type contains \"Any\" (has type \"Callable[..., Any]\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:64: error: Expression type contains \"Any\" (has type \"tuple[Any, ...]\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:65: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:67: error: Expression has type \"Any\"  [misc]\ninfrastructure\\scheduler\\apscheduler_adapter.py:71: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:44: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:46: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:47: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:55: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\review\\json_repository.py:55: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:56: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\review\\json_repository.py:56: error: Expression type contains \"Any\" (has type \"tuple[object, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:56: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:57: error: Expression has type \"Any\"  [misc]\ninfrastructure\\review\\json_repository.py:57: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:57: error: Expression type contains \"Any\" (has type \"ItemsView[object, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:59: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:63: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\ninfrastructure\\review\\json_repository.py:64: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\review\\json_repository.py:67: error: Expression type contains \"Any\" (has type \"dict[str, dict[str, Any]]\")  [misc]\ncore\\services\\review_service.py:48: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\services\\review_service.py:78: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:80: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\ncore\\services\\review_service.py:80: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\review_service.py:85: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\services\\review_service.py:92: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:94: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:97: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\ncore\\services\\review_service.py:97: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\review_service.py:98: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\ncore\\services\\review_service.py:98: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ncore\\services\\review_service.py:98: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:101: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:107: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:146: error: Expression type contains \"Any\" (has type \"set[Any]\")  [misc]\ncore\\services\\review_service.py:157: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:202: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:202: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\review_service.py:221: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:224: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\review_service.py:226: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ncore\\services\\review_service.py:226: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:227: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:239: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:242: error: Expression type contains \"Any\" (has type \"list[Any | None]\")  [misc]\ncore\\services\\review_service.py:243: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:243: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:245: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:245: error: Expression type contains \"Any\" (has type \"list[Any | None]\")  [misc]\ncore\\services\\review_service.py:246: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:249: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:249: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:250: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:254: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:254: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:255: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\review_service.py:266: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:267: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:269: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:271: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:279: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:282: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\review_service.py:285: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:286: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:288: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:295: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:296: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:296: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ncore\\services\\review_service.py:297: error: Expression type contains \"Any\" (has type \"tuple[object, Any]\")  [misc]\ncore\\services\\review_service.py:297: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:297: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ncore\\services\\review_service.py:297: error: Expression type contains \"Any\" (has type \"Mapping[object, Any]\")  [misc]\ncore\\services\\review_service.py:297: error: Expression type contains \"Any\" (has type \"ItemsView[object, Any]\")  [misc]\ncore\\services\\review_service.py:298: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:299: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\review_service.py:299: error: Expression type contains \"Any\" (has type \"Iterable[Any]\")  [misc]\ncore\\services\\review_service.py:300: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:300: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\review_service.py:300: error: Expression type contains \"Any\" (has type \"Iterable[Any]\")  [misc]\ncore\\services\\review_service.py:301: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:303: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\ncore\\services\\review_service.py:303: error: Expression has type \"Any\"  [misc]\ncore\\services\\review_service.py:303: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\review_service.py:303: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ncore\\services\\review_service.py:303: error: Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:27: error: Explicit \"Any\" is not allowed  [explicit-any]\nadapters\\taskwarrior\\tw_repository.py:105: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:106: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:119: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\nadapters\\taskwarrior\\tw_repository.py:120: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ncore\\services\\plugin_bus.py:123: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\ncore\\services\\plugin_bus.py:124: error: Expression type contains \"Any\" (has type \"Any | str\")  [misc]\ncore\\services\\plugin_bus.py:152: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\plugin_bus.py:161: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:169: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:171: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:172: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:174: error: Expression has type \"Any\"  [misc]\ncore\\services\\plugin_bus.py:176: error: Expression has type \"Any\"  [misc]\ncore\\services\\card_action_service.py:26: error: Expression type contains \"Any\" (has type \"type[CardScanResult]\")  [misc]\ncore\\services\\card_action_service.py:27: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\card_action_service.py:32: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\card_action_service.py:48: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\card_action_service.py:61: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:61: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ncore\\services\\card_action_service.py:63: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:64: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:66: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:84: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\card_action_service.py:94: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:32: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\nplugins\\ai_assistant.py:52: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nplugins\\ai_assistant.py:53: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:57: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:60: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\nplugins\\ai_assistant.py:60: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nplugins\\ai_assistant.py:61: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\nplugins\\ai_assistant.py:61: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\nplugins\\ai_assistant.py:67: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\nplugins\\ai_assistant.py:67: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:67: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nplugins\\ai_assistant.py:68: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:68: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\nplugins\\ai_assistant.py:68: error: Expression has type \"Any\"  [misc]\nplugins\\ai_assistant.py:74: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\nplugins\\ai_assistant.py:96: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:101: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\nplugins\\ai_assistant.py:101: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\nplugins\\ai_assistant.py:109: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:110: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:110: error: Expression has type \"Any\"  [misc]\nplugins\\ai_assistant.py:116: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:116: error: Expression has type \"Any\"  [misc]\nplugins\\ai_assistant.py:120: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:124: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nplugins\\ai_assistant.py:124: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:124: error: Expression has type \"Any\"  [misc]\nplugins\\ai_assistant.py:130: error: Explicit \"Any\" is not allowed  [explicit-any]\nplugins\\ai_assistant.py:142: error: Explicit \"Any\" is not allowed  [explicit-any]\nplugins\\ai_assistant.py:143: error: Explicit \"Any\" is not allowed  [explicit-any]\nplugins\\ai_assistant.py:145: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nplugins\\ai_assistant.py:149: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\collaboration_service.py:55: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\collaboration_service.py:81: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:82: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:83: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:84: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:89: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:95: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:96: error: Expression has type \"Any\"  [misc]\ncore\\services\\collaboration_service.py:144: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\collaboration_service.py:146: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\collaboration_service.py:147: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\collaboration_service.py:153: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:15: error: Expression type contains \"Any\" (has type \"type[BundleUploadResult]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:16: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:21: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:24: error: Expression type contains \"Any\" (has type \"type[BundleDownloadResult]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:25: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:32: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:40: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:57: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:67: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"tuple[str, dict[Any, Any]]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"dict[Any, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:70: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:74: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:81: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:88: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:93: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:94: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:96: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:98: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:99: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:100: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:102: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:102: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:103: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:105: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:116: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:117: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:119: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:119: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:120: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:120: error: Expression type contains \"Any\" (has type \"Any | list[Never]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:120: error: Need type annotation for \"removed_raw\"  [var-annotated]\ninfrastructure\\collaboration\\hub_client.py:121: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:121: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:122: error: Expression type contains \"Any\" (has type \"Any | list[Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:124: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:126: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:126: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:127: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:129: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:130: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:134: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:135: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:135: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:136: error: Expression type contains \"Any\" (has type \"type[CollaborationHubClient]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:136: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:137: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:137: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:138: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:139: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:140: error: Expression type contains \"Any\" (has type \"type[CollaborationHubClient]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:144: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:144: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:146: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:146: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:147: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:147: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:148: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:152: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:153: error: Expression type contains \"Any\" (has type \"type[CollaborationHubClient]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:153: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:154: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:154: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:155: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:155: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:161: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:166: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:167: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:169: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:181: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression type contains \"Any\" (has type \"tuple[Any, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression has type \"Any\"  [misc]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression type contains \"Any\" (has type \"Mapping[Any, Any]\")  [misc]\ninfrastructure\\collaboration\\hub_client.py:182: error: Expression type contains \"Any\" (has type \"ItemsView[Any, Any]\")  [misc]\ninfrastructure\\automation\\webhook_client.py:45: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\automation\\webhook_client.py:50: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\automation\\webhook_client.py:50: error: Expression type contains \"Any\" (has type \"Mapping[str, Any]\")  [misc]\ninfrastructure\\automation\\webhook_client.py:51: error: Explicit \"Any\" is not allowed  [explicit-any]\ninfrastructure\\automation\\webhook_client.py:54: error: Expression type contains \"Any\" (has type \"tuple[str, dict[str, Any]]\")  [misc]\ninfrastructure\\automation\\webhook_client.py:54: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninfrastructure\\automation\\webhook_client.py:59: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:42: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\services\\automation_service.py:49: error: Expression type contains \"Any\" (has type \"type[CardScanned]\")  [misc]\ncore\\services\\automation_service.py:53: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\automation_service.py:54: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:55: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\automation_service.py:59: error: Expression type contains \"Any\" (has type \"tuple[str, list[Any]]\")  [misc]\ncore\\services\\automation_service.py:59: error: Expression type contains \"Any\" (has type \"list[Any]\")  [misc]\ncore\\services\\automation_service.py:60: error: Expression type contains \"Any\" (has type \"tuple[str, dict[str, Any]]\")  [misc]\ncore\\services\\automation_service.py:60: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:62: error: Expression type contains \"Any\" (has type \"tuple[str, Mapping[str, Any] | None]\")  [misc]\ncore\\services\\automation_service.py:62: error: Expression type contains \"Any\" (has type \"Mapping[str, Any] | None\")  [misc]\ncore\\services\\automation_service.py:66: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:68: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ncore\\services\\automation_service.py:84: error: Explicit \"Any\" is not allowed  [explicit-any]\ncore\\services\\automation_service.py:102: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:27: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:36: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:42: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:50: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:55: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:58: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:62: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:67: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:74: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:79: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:84: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:87: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:91: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:99: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:138: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:138: error: Expression has type \"Any\"  [misc]\ninterface\\api\\server.py:139: error: Expression has type \"Any\"  [misc]\ninterface\\api\\server.py:141: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:141: error: Expression type contains \"Any\" (has type \"Callable[[], Coroutine[Any, Any, dict[str, Any]]]\")  [misc]\ninterface\\api\\server.py:142: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:142: error: Type of decorated function contains type \"Any\" (\"Callable[[], Coroutine[Any, Any, dict[str, Any]]]\")  [misc]\ninterface\\api\\server.py:145: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:145: error: Expression type contains \"Any\" (has type \"type[ScanResponse]\")  [misc]\ninterface\\api\\server.py:152: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ninterface\\api\\server.py:159: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:166: error: Expression type contains \"Any\" (has type \"list[dict[str, Any]]\")  [misc]\ninterface\\api\\server.py:167: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:180: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:185: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:192: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:203: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:205: error: Expression type contains \"Any\" (has type \"type[BundleUploadResponse]\")  [misc]\ninterface\\api\\server.py:218: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\ninterface\\api\\server.py:222: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:223: error: Expression type contains \"Any\" (has type \"type[BundleDownloadResponse]\")  [misc]\ninterface\\api\\server.py:233: error: Expression type contains \"Any\" (has type \"Callable[[DecoratedCallable], DecoratedCallable]\")  [misc]\ninterface\\api\\server.py:235: error: Expression type contains \"Any\" (has type \"type[BundleDownloadResponse]\")  [misc]\ninterface\\api\\server.py:252: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:259: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:260: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninterface\\api\\server.py:261: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninterface\\api\\server.py:262: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:262: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:264: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninterface\\api\\server.py:265: error: Expression type contains \"Any\" (has type \"Any | None\")  [misc]\ninterface\\api\\server.py:266: error: Explicit \"Any\" is not allowed  [explicit-any]\ninterface\\api\\server.py:266: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:268: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:269: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\ninterface\\api\\server.py:270: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nFound 401 errors in 18 files (checked 75 source files)\n",
            "tool": "mypy",
            "tool_module": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "pyright",
                ".",
                "--level",
                "error"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error",
            "cwd": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "duration_seconds": 2.559888799994951,
            "ended_at": "2025-10-08T12:49:05.570282+00:00",
            "exit": 1,
            "repo": "x_legatus_acta_schedae_x",
            "repo_hash": "8b9bd8670f31639839d13df034bf4fa2be0969f83cfe928151b54427786ff2a8",
            "repo_path": "C:\\x_runner_x\\x_legatus_acta_schedae_x",
            "started_at": "2025-10-08T12:49:03.010378+00:00",
            "stderr": "Error processing line 1 of C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\distutils-precedence.pth:\n\n  Traceback (most recent call last):\n    File \"<frozen site>\", line 207, in addpackage\n    File \"<string>\", line 1, in <module>\n  AttributeError: module '_distutils_hack' has no attribute 'add_shim'\n\nRemainder of file ignored\nError processing line 1 of C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\distutils-precedence.pth:\n\n  Traceback (most recent call last):\n    File \"<frozen site>\", line 207, in addpackage\n    File \"<string>\", line 1, in <module>\n  AttributeError: module '_distutils_hack' has no attribute 'add_shim'\n\nRemainder of file ignored\n",
            "stdout": "c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:13:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:14:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:45:29 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:61:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:61:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:63:13 - error: Type of \"_cache\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_cache\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:63:25 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:64:20 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:66:28 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:67:26 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:67:26 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:69:12 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:70:32 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:71:12 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:72:58 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:72:58 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"priority\" in function \"_priority_to_tw\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:74:9 - error: Type of \"created\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:74:27 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"replace\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:75:9 - error: Type of \"_cache\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_cache\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:75:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:76:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:78:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:79:23 - error: Type of \"_cache\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_cache\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:80:20 - error: Type of \"_cache\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_cache\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:80:20 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:84:21 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:84:28 - error: Type of \"_convert\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_convert\" is \"(tw_task: Mapping[str, object]) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:85:21 - error: Type of \"_cache\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_cache\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:85:33 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:86:28 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:89:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:91:13 - error: Type of \"tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tasks\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:93:17 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:93:24 - error: Type of \"_convert\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_convert\" is \"(tw_task: Mapping[str, object]) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:94:31 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:96:17 - error: Type of \"append\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"append\" is \"(object: Unknown, /) -> None\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:96:30 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"object\" in function \"append\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:97:20 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:98:16 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:98:23 - error: Type of \"t\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:98:28 - error: Type of \"_cache\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_cache\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:98:67 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:100:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:100:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:103:46 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:104:24 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:109:52 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:110:50 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:110:50 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:111:28 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:112:48 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:115:28 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:116:74 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:116:74 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"priority\" in function \"_priority_to_tw\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:123:9 - error: Type of \"_cache\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_cache\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:123:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:124:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:129:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\adapters\\taskwarrior\\tw_repository.py:158:16 - error: Return type is unknown (reportUnknownVariableType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\collaboration_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\core\\services\\collaboration_service.py:140:41 - error: Type of \"derive\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"derive\" is \"(key_material: Unknown) -> bytes\" (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:30:9 - error: Type of parameter \"client\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"Unknown | None\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:30:17 - error: Type of \"Client\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:30:23 - error: \"Client\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:35:13 - error: Type of \"_client\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:35:28 - error: Type of \"Client\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:35:34 - error: \"Client\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:38:13 - error: Type of \"_client\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:59:17 - error: Type of \"response\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:59:28 - error: Type of \"_client\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:59:28 - error: Type of \"post\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:60:20 - error: Type of \"HTTPError\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:60:26 - error: \"HTTPError\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:60:39 - error: Type of \"exc\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:62:68 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"exc_info\" in function \"warning\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:66:72 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"object\" in function \"__new__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:70:13 - error: Type of \"ok\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:70:25 - error: Type of \"status_code\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:74:27 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"extra\" in function \"warning\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"dict[str, str | Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:74:50 - error: Type of \"status_code\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:79:33 - error: Type of \"status_code\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:79:33 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"status_code\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:80:24 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ok\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:81:27 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"error\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Unknown | None\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:81:43 - error: Type of \"text\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:88:13 - error: Type of \"_client\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\automation\\webhook_client.py:88:13 - error: Type of \"close\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py:39:30 - error: \"Client\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py:65:9 - error: Type of \"response\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py:77:9 - error: Type of \"response\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py:84:9 - error: Type of \"response\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py:96:9 - error: Type of \"response\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py:98:9 - error: Type of \"payload\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py:112:9 - error: Type of \"response\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\hub_client.py:116:9 - error: Type of \"payload\" is unknown (reportUnknownVariableType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py:171:21 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"object\" in function \"__new__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py:171:37 - error: Type of \"key\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\collaboration\\store.py:171:42 - error: Type of \"value\" is unknown (reportUnknownVariableType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\search\\memory_index.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\infrastructure\\search\\memory_index.py:38:5 - error: Type of \"_storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_storage\" is \"dict[Unknown, Unknown]\" (reportUnknownVariableType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:10:21 - error: \"FastAPI\" is unknown import symbol (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:10:21 - error: Type of \"FastAPI\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:10:30 - error: \"HTTPException\" is unknown import symbol (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:10:30 - error: Type of \"HTTPException\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:10:45 - error: \"Query\" is unknown import symbol (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:10:45 - error: Type of \"Query\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:11:22 - error: \"BaseModel\" is unknown import symbol (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:11:22 - error: Type of \"BaseModel\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:11:33 - error: \"Field\" is unknown import symbol (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:11:33 - error: Type of \"Field\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:27:19 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:28:5 - error: Type of \"task_update\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:32:5 - error: Type of \"source\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:36:5 - error: Type of \"metadata\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:42:25 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:50:24 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:58:20 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:67:27 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:68:5 - error: Type of \"payload\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:71:5 - error: Type of \"source\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:74:5 - error: Type of \"metadata\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:79:18 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:84:5 - error: Type of \"metadata\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:99:27 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:100:5 - error: Type of \"removed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:118:5 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:133:5 - error: Type of \"app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:141:6 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:145:6 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:185:6 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:192:6 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:203:6 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:222:6 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:233:6 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\api\\server.py:243:12 - error: Return type is unknown (reportUnknownVariableType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:13:6 - error: Import \"x_legatus_acta_schedae_x.adapters.taskwarrior.tw_repository\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:13:73 - error: Type of \"HAVE_TASKLIB\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:14:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.collaboration.hub_client\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:15:5 - error: Type of \"CollaborationHubClient\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:17:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.config\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:17:60 - error: Type of \"load_config\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:18:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.di\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:18:56 - error: Type of \"AppContext\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:18:68 - error: Type of \"build_context\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:19:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.logging\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:19:61 - error: Type of \"setup_logging\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:20:6 - error: Import \"x_legatus_acta_schedae_x.interface.api.server\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:20:59 - error: Type of \"create_api_app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:25:10 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:25:59 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:26:10 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_briefing_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:27:9 - error: Type of \"AIBriefing\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:29:10 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:29:67 - error: Type of \"TaskSummary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:30:10 - error: Import \"x_legatus_acta_schedae_x.core.services.collaboration_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:31:9 - error: Type of \"ExportResult\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:33:10 - error: Import \"x_legatus_acta_schedae_x.infrastructure.collaboration.hub_client\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:34:9 - error: Type of \"BundleUploadResult\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:51:1 - error: Type of \"app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:51:7 - error: Type of \"Typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:51:13 - error: \"Typer\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:52:1 - error: Type of \"config_app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:52:14 - error: Type of \"Typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:52:20 - error: \"Typer\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:53:1 - error: Type of \"tags_app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:53:12 - error: Type of \"Typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:53:18 - error: \"Typer\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:54:1 - error: Type of \"review_app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:54:14 - error: Type of \"Typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:54:20 - error: \"Typer\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:55:1 - error: Type of \"collab_app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:55:14 - error: Type of \"Typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:55:20 - error: \"Typer\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:56:1 - error: Type of \"ai_app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:56:10 - error: Type of \"Typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:56:16 - error: \"Typer\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:57:1 - error: Type of \"automation_app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:57:18 - error: Type of \"Typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:57:24 - error: \"Typer\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:59:1 - error: Type of \"add_typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:60:1 - error: Type of \"add_typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:61:1 - error: Type of \"add_typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:62:1 - error: Type of \"add_typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:63:1 - error: Type of \"add_typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:64:1 - error: Type of \"add_typer\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:74:1 - error: Type of \"COLLAB_EXPORT_INCLUDE_COMPLETED_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:74:42 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:74:48 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:78:1 - error: Type of \"COLLAB_EXPORT_LIMIT_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:78:30 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:78:36 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:82:1 - error: Type of \"COLLAB_IMPORT_OVERWRITE_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:82:34 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:82:40 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:86:1 - error: Type of \"COLLAB_PULL_OVERWRITE_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:86:32 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:86:38 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:90:1 - error: Type of \"COLLAB_PULL_BUNDLE_ID_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:90:32 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:90:38 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:94:1 - error: Type of \"COLLAB_OUTPUT_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:94:24 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:94:30 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:100:1 - error: Type of \"WEBHOOK_RELOAD_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:100:25 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:100:31 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:105:1 - error: Type of \"AI_BRIEFING_LIMIT_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:105:28 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:105:34 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:109:1 - error: Type of \"AI_BRIEFING_TAG_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:109:26 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:109:32 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:115:1 - error: Type of \"AI_BRIEFING_INCLUDE_COMPLETED_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:115:40 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:115:46 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:119:1 - error: Type of \"AI_BRIEFING_OUTPUT_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:119:29 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:119:35 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:124:1 - error: Type of \"REVIEW_TAG_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:124:21 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:124:27 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:130:1 - error: Type of \"REVIEW_INCLUDE_COMPLETED_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:130:35 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:130:41 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:134:1 - error: Type of \"REVIEW_FOCUS_INCLUDE_COMPLETED_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:134:41 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:134:47 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:138:1 - error: Type of \"REVIEW_SUSPEND_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:138:25 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:138:31 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:143:1 - error: Type of \"SEARCH_TAG_OPTION\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:143:21 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:143:27 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:150:1 - error: Type of \"TAG_ADD_ARGUMENT\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:150:20 - error: Type of \"Argument\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:150:26 - error: \"Argument\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:153:1 - error: Type of \"TAG_REMOVE_ARGUMENT\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:153:23 - error: Type of \"Argument\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:153:29 - error: \"Argument\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:156:1 - error: Type of \"TAG_SET_ARGUMENT\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:156:20 - error: Type of \"Argument\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:156:26 - error: \"Argument\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:159:1 - error: Type of \"BRAINSTORM_TOPIC_ARGUMENT\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:159:29 - error: Type of \"Argument\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:159:35 - error: \"Argument\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:162:1 - error: Type of \"PRIORITY_ARGUMENT\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:162:21 - error: Type of \"Argument\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:162:27 - error: \"Argument\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:165:1 - error: Type of \"COLLAB_BUNDLE_ARGUMENT\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:165:26 - error: Type of \"Argument\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:165:32 - error: \"Argument\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:168:5 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:169:5 - error: Type of \"cfg\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:171:12 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:174:13 - error: Type of parameter \"ctx\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:176:5 - error: Type of \"telemetry\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:176:5 - error: Type of \"track\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:185:15 - error: Type of \"BadParameter\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:185:21 - error: \"BadParameter\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:186:11 - error: Type of \"BadParameter\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:186:17 - error: \"BadParameter\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:211:19 - error: Type of parameter \"tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"Iterable[Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:214:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:215:9 - error: Type of \"tid\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:215:15 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:216:9 - error: Type of \"status\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:216:18 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:216:18 - error: Type of \"ljust\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:217:9 - error: Type of \"priority\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"priority\" is \"LiteralString | Unknown\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:217:20 - error: Type of \"ljust\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"ljust\" is \"Unknown | Overload[(width: SupportsIndex, fillchar: LiteralString = \" \", /) -> LiteralString, (width: SupportsIndex, fillchar: str = \" \", /) -> str]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:217:21 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:218:9 - error: Type of \"due\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"due\" is \"Unknown | LiteralString\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:219:13 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:219:13 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:219:13 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:220:16 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:223:32 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:223:32 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"sorted\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:226:63 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:231:21 - error: Type of parameter \"summary\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:235:29 - error: Type of \"pending\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:236:29 - error: Type of \"completed\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:237:29 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:240:22 - error: Type of \"top_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:240:22 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"join\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:240:43 - error: Type of \"top_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:242:8 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:245:13 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:245:21 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:246:13 - error: Type of \"due\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"due\" is \"Unknown | Literal['-']\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:247:17 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:247:17 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:247:17 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:248:20 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:251:13 - error: Type of \"priority\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"priority\" is \"Unknown | Literal['-']\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:251:24 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:253:22 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:254:24 - error: Type of \"task_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:260:22 - error: Type of parameter \"briefing\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:261:5 - error: Type of \"summary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:261:15 - error: Type of \"summary\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:265:5 - error: Type of \"generated_at\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:265:20 - error: Type of \"generated_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:265:20 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:265:20 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:272:32 - error: Type of \"pending\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:273:32 - error: Type of \"completed\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:274:32 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:276:33 - error: Type of \"top_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:276:33 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"join\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:276:54 - error: Type of \"top_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:278:8 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:282:13 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:282:21 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:283:13 - error: Type of \"due\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"due\" is \"Unknown | Literal['-']\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:284:17 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:284:17 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:284:17 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:285:20 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:288:13 - error: Type of \"priority\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"priority\" is \"Unknown | Literal['-']\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:288:24 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:290:22 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:291:24 - error: Type of \"task_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:294:5 - error: Type of \"guidance\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:294:16 - error: Type of \"guidance\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:301:13 - error: Type of \"insight\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:302:24 - error: Type of \"score\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:303:13 - error: Type of \"due\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:303:19 - error: Type of \"record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:303:19 - error: Type of \"due_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:303:19 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:303:19 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:307:22 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:307:22 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:308:54 - error: Type of \"suggested_action\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:311:46 - error: Type of \"reason\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:311:56 - error: Type of \"reasons\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:323:5 - error: Type of \"secret\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:323:14 - error: Type of \"prompt\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:323:20 - error: \"prompt\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:329:12 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:332:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:332:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:334:18 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:334:24 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:338:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:339:5 - error: Type of \"summary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:339:15 - error: Type of \"ai_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:339:15 - error: Type of \"summarize\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:340:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:340:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:340:32 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"summary\" in function \"_format_summary\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:342:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:345:17 - error: Type of \"pending\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:345:17 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"pending\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:346:19 - error: Type of \"completed\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:346:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"completed\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:347:17 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:347:17 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"overdue\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:348:18 - error: Type of \"top_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:348:18 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"top_tags\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:352:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:352:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:354:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:355:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:355:12 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:355:12 - error: Type of \"get_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:356:5 - error: Type of \"prompts\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:356:15 - error: Type of \"ai_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:356:15 - error: Type of \"draft_followups\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:358:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:358:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:360:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:360:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:361:13 - error: Type of \"prompt\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:362:13 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:362:19 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:363:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:363:63 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:366:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:366:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:369:21 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:369:27 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:373:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:374:5 - error: Type of \"ideas\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:374:13 - error: Type of \"ai_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:374:13 - error: Type of \"brainstorm\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:375:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:375:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:376:9 - error: Type of \"idea\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:377:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:377:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:378:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:381:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:381:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:388:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:390:5 - error: Type of \"briefing\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:390:16 - error: Type of \"ai_briefing_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:390:16 - error: Type of \"generate\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:395:29 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"briefing\" in function \"_format_briefing\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:396:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:396:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:401:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:406:22 - error: Type of \"guidance\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:406:22 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:410:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:410:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:413:16 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:413:22 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:414:17 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:414:23 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:415:28 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:415:34 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:419:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:422:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:422:12 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:422:12 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:425:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:425:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:425:25 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:425:38 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:427:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:429:17 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:429:17 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:436:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:436:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:438:19 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:438:25 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:439:16 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:439:22 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:440:21 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:440:27 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:442:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:443:5 - error: Type of \"tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tasks\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:443:18 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:443:18 - error: Type of \"list_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:443:18 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:445:9 - error: Type of \"tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tasks\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:445:24 - error: Type of \"t\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:445:45 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:447:9 - error: Type of \"tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tasks\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:448:19 - error: Type of \"t\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:448:33 - error: Type of \"lower\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"lower\" is \"Unknown | Overload[() -> LiteralString, () -> str]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:448:34 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:451:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:451:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:453:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:453:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:454:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:457:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:457:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:459:17 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:459:23 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:462:26 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:462:32 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:464:18 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:464:24 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:466:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:469:5 - error: Type of \"results\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"results\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:470:9 - error: Type of \"search_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:470:9 - error: Type of \"search\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:470:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:478:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:478:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:480:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:480:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:482:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:488:21 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:492:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:492:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:494:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:495:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:495:12 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:495:12 - error: Type of \"complete_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:496:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:496:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:496:29 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:496:42 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:497:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:497:43 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:497:43 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:500:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:500:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:502:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:503:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:503:12 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:503:12 - error: Type of \"edit_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:504:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:504:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:504:27 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:504:40 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:505:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:505:39 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:505:39 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:508:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:508:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:511:18 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:511:24 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:512:24 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:512:30 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:516:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:525:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:525:12 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:525:12 - error: Type of \"defer_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:526:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:526:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:526:28 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:526:45 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:528:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:530:17 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:530:17 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:536:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:536:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:541:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:542:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:542:12 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:542:12 - error: Type of \"prioritize_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:543:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:543:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:543:31 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:543:53 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:544:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:544:45 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:544:45 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:544:63 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:544:63 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"priority\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:547:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:547:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:549:18 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:549:24 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:553:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:555:5 - error: Type of \"items\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:555:13 - error: Type of \"review_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:555:13 - error: Type of \"due_reviews\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:561:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:561:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:568:13 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:569:13 - error: Type of \"tid\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:569:19 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:569:19 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:570:13 - error: Type of \"due_str\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:570:23 - error: Type of \"record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:570:23 - error: Type of \"due_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:570:23 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:570:23 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:573:38 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:573:38 - error: Type of \"total_seconds\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:573:38 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"arg2\" in function \"max\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:577:35 - error: Type of \"record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:577:35 - error: Type of \"interval_days\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:578:31 - error: Type of \"record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:578:31 - error: Type of \"repetitions\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:579:13 - error: Type of \"last_source\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"last_source\" is \"Unknown | Literal['-']\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:580:17 - error: Type of \"record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:580:17 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:580:17 - error: Type of \"source\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:580:51 - error: Type of \"record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:580:51 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:582:13 - error: Type of \"source_display\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"source_display\" is \"LiteralString | Unknown\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:582:30 - error: Type of \"ljust\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"ljust\" is \"Unknown | Overload[(width: SupportsIndex, fillchar: LiteralString = \" \", /) -> LiteralString, (width: SupportsIndex, fillchar: str = \" \", /) -> str]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:585:52 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:585:52 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:588:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:588:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:590:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:595:21 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:599:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:599:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:601:18 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:601:24 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:607:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:609:5 - error: Type of \"insights\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:609:16 - error: Type of \"review_guidance_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:609:16 - error: Type of \"generate\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:615:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:615:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:617:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:631:9 - error: Type of \"insight\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:632:9 - error: Type of \"tid\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:632:15 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:632:15 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:633:28 - error: Type of \"score\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:634:9 - error: Type of \"due_str\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:634:19 - error: Type of \"record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:634:19 - error: Type of \"due_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:634:19 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:634:19 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:637:29 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:637:29 - error: Type of \"total_seconds\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:637:29 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"arg1\" in function \"max\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:641:9 - error: Type of \"priority_display\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"priority_display\" is \"LiteralString | Unknown\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:641:28 - error: Type of \"ljust\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"ljust\" is \"Unknown | Overload[(width: SupportsIndex, fillchar: LiteralString = \" \", /) -> LiteralString, (width: SupportsIndex, fillchar: str = \" \", /) -> str]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:641:29 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:641:29 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:642:9 - error: Type of \"last_review_time\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:642:28 - error: Type of \"last_reviewed_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:643:33 - error: Type of \"tzinfo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:644:13 - error: Type of \"last_review_time\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:644:32 - error: Type of \"replace\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:645:9 - error: Type of \"last_str\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"last_str\" is \"Unknown | Literal['-']\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:646:13 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:646:13 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:652:9 - error: Type of \"action_display\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:652:26 - error: Type of \"suggested_action\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:652:26 - error: Type of \"ljust\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:659:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:659:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:660:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:660:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:661:9 - error: Type of \"insight\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:662:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:662:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:662:23 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:662:23 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:662:48 - error: Type of \"suggested_action\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:663:12 - error: Type of \"reasons\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:664:17 - error: Type of \"reason\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:664:27 - error: Type of \"reasons\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:665:17 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:665:23 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:667:13 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:667:19 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:668:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:668:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:670:21 - error: Type of \"score\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:670:21 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"sum\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Generator[Unknown, None, None]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:670:33 - error: Type of \"i\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:670:54 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:672:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:677:21 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:682:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:682:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:685:20 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:685:26 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:688:31 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:688:37 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:692:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:694:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:694:14 - error: Type of \"review_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:694:14 - error: Type of \"record_review\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:697:5 - error: Type of \"due_str\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:697:15 - error: Type of \"due_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:697:15 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:697:15 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:700:22 - error: Type of \"interval_days\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:702:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:702:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:704:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:709:18 - error: Type of \"due_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:709:18 - error: Type of \"isoformat\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:709:18 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"next_due\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:713:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:713:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:718:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:719:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:719:14 - error: Type of \"review_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:719:14 - error: Type of \"suspend\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:721:5 - error: Type of \"due_str\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:721:15 - error: Type of \"due_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:721:15 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:721:15 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:726:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:726:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:727:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:730:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:730:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:735:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:736:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:736:12 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:736:12 - error: Type of \"add_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:737:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:737:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:737:45 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:737:45 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"sorted\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:738:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:738:42 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:738:42 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:741:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:741:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:746:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:747:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:747:12 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:747:12 - error: Type of \"remove_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:748:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:748:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:748:45 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:748:45 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"sorted\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:749:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:749:45 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:749:45 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:752:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:752:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:757:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:758:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:758:12 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:758:12 - error: Type of \"set_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:759:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:759:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:759:45 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:759:45 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"sorted\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:760:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:760:42 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:760:42 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:763:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:763:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:765:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:766:5 - error: Type of \"cfg\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:766:11 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:768:33 - error: Type of \"taskwarrior_data_dir\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:769:31 - error: Type of \"taskwarrior_taskrc\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:770:18 - error: Type of \"debug\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:771:30 - error: Type of \"telemetry_enabled\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:772:27 - error: Type of \"telemetry_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:773:36 - error: Type of \"telemetry_flush_seconds\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:774:21 - error: Type of \"log_json\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:775:26 - error: Type of \"env_overrides\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:776:20 - error: Type of \"plugins\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:777:30 - error: Type of \"scheduler_enabled\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:778:31 - error: Type of \"scheduler_timezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:779:30 - error: Type of \"review_store_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:780:26 - error: Type of \"cards_db_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:781:38 - error: Type of \"collaboration_bundle_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:782:34 - error: Type of \"collaboration_hub_dir\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:783:35 - error: Type of \"collaboration_endpoint\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:784:32 - error: Type of \"automation_webhooks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:786:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:786:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:787:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:790:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:790:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:792:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:793:5 - error: Type of \"cfg\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:793:11 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:794:5 - error: Type of \"checks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"checks\" is \"dict[str, Unknown | bool]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:796:30 - error: Type of \"telemetry_enabled\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:797:36 - error: Type of \"telemetry_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:797:36 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"o\" in function \"__new__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:798:30 - error: Type of \"scheduler_enabled\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:799:34 - error: Type of \"scheduler_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:799:34 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"o\" in function \"__new__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:800:37 - error: Type of \"review_store_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:800:37 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:802:13 - error: Type of \"review_store_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:802:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:804:33 - error: Type of \"cards_db_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:804:33 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:805:40 - error: Type of \"cards_db_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:805:40 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:807:13 - error: Type of \"collaboration_bundle_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:807:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:809:48 - error: Type of \"automation_webhooks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:809:48 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"o\" in function \"__new__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:811:8 - error: Type of \"taskwarrior_data_dir\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:813:13 - error: Type of \"taskwarrior_data_dir\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:813:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:815:8 - error: Type of \"telemetry_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:816:31 - error: Type of \"telemetry_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:816:31 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:818:24 - error: Type of \"collaboration_bundle_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:818:24 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:820:20 - error: Type of \"collaboration_hub_dir\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:820:20 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:823:9 - error: Type of \"collaboration_endpoint\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:823:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"o\" in function \"__new__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:825:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:825:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:826:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:826:37 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"properties\" in function \"_record\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Unknown | bool\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:829:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:829:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:831:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:832:5 - error: Type of \"endpoints\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:832:17 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:832:17 - error: Type of \"automation_webhooks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:835:12 - error: Type of \"automation_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:835:39 - error: Type of \"automation_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:835:39 - error: Type of \"enabled\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:838:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:838:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:840:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:840:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:841:17 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:843:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:843:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:844:9 - error: Type of \"url\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:845:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:845:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:846:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:846:52 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:849:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:849:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:852:30 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:852:36 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:858:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:859:27 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:859:27 - error: Type of \"collaboration_bundle_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:859:27 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:861:5 - error: Type of \"result\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:861:14 - error: Type of \"collaboration_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:861:14 - error: Type of \"export_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:867:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:867:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:867:28 - error: Type of \"count\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:867:54 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:869:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:871:18 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:871:18 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"object\" in function \"__new__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:872:15 - error: Type of \"count\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:872:15 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"count\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:878:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:878:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:881:30 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:881:36 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:886:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:888:5 - error: Type of \"tasks\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:888:13 - error: Type of \"collaboration_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:888:13 - error: Type of \"import_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:893:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:893:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:893:32 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:895:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:898:22 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:903:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:903:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:905:28 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:905:34 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:908:30 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:908:36 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:913:26 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:913:32 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:917:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:918:44 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:918:44 - error: Type of \"collaboration_endpoint\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:918:44 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"fallback\" in function \"_require_endpoint\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:920:5 - error: Type of \"summary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:920:15 - error: Type of \"ai_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:920:15 - error: Type of \"summarize\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:922:20 - error: Type of \"pending\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:923:22 - error: Type of \"completed\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:924:20 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:925:21 - error: Type of \"top_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:929:24 - error: Type of \"task_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:930:28 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:931:20 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:931:20 - error: Type of \"isoformat\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:931:44 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:932:25 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:934:13 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:934:21 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:945:9 - error: Type of \"export\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:945:18 - error: Type of \"collaboration_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:945:18 - error: Type of \"export_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:952:54 - error: Type of \"client\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:953:17 - error: Type of \"upload\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:953:26 - error: Type of \"push_bundle\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:957:34 - error: Type of \"count\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:962:17 - error: Type of \"HTTPError\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:962:23 - error: \"HTTPError\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:962:49 - error: Type of \"exc\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"exc\" is \"Unknown | ValueError\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:966:47 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"exc\" in function \"_bad_parameter\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Unknown | ValueError\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:967:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:967:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:968:32 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:968:52 - error: Type of \"size\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:971:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:974:23 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:974:23 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"bundle_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:975:19 - error: Type of \"count\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:975:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"count\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:978:20 - error: Type of \"source\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:978:20 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"source\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:979:21 - error: Type of \"pending\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:979:21 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"pending\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:980:23 - error: Type of \"completed\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:980:23 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"completed\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:981:21 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:981:21 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"overdue\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:989:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:989:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:991:28 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:991:34 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:994:18 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:994:24 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:998:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:999:44 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:999:44 - error: Type of \"collaboration_endpoint\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:999:44 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"fallback\" in function \"_require_endpoint\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1001:50 - error: Type of \"client\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1002:13 - error: Type of \"bundles\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1002:23 - error: Type of \"list_bundles\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1003:13 - error: Type of \"HTTPError\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1003:19 - error: \"HTTPError\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1003:45 - error: Type of \"exc\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"exc\" is \"Unknown | ValueError\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1007:43 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"exc\" in function \"_bad_parameter\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Unknown | ValueError\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1010:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1010:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1011:17 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1016:9 - error: Type of \"bundle\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1017:9 - error: Type of \"stored\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1017:18 - error: Type of \"stored_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1017:18 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1017:18 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1020:27 - error: Type of \"size\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1021:9 - error: Type of \"source_display\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"source_display\" is \"LiteralString | Unknown\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1021:26 - error: Type of \"ljust\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"ljust\" is \"Unknown | Overload[(width: SupportsIndex, fillchar: LiteralString = \" \", /) -> LiteralString, (width: SupportsIndex, fillchar: str = \" \", /) -> str]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1021:27 - error: Type of \"source\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1023:24 - error: Type of \"metadata\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1024:16 - error: Type of \"metadata\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1028:16 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1032:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1032:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1034:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1037:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1042:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1042:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1044:28 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1044:34 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1047:30 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1047:36 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1054:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1055:44 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1055:44 - error: Type of \"collaboration_endpoint\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1055:44 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"fallback\" in function \"_require_endpoint\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1058:50 - error: Type of \"client\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1060:17 - error: Type of \"download\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1060:28 - error: Type of \"fetch_bundle\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1064:17 - error: Type of \"download\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1064:28 - error: Type of \"fetch_latest_bundle\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1066:21 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1066:27 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1067:29 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1069:13 - error: Type of \"HTTPError\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1069:19 - error: \"HTTPError\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1069:45 - error: Type of \"exc\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"exc\" is \"Unknown | ValueError\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1071:43 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"exc\" in function \"_bad_parameter\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Unknown | ValueError\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1073:34 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1073:34 - error: Type of \"collaboration_bundle_path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1073:34 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1075:29 - error: Type of \"payload\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1075:29 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"data\" in function \"write_bytes\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1077:5 - error: Type of \"tasks\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1077:13 - error: Type of \"collaboration_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1077:13 - error: Type of \"import_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1082:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1082:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1083:25 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1083:54 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1086:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1089:19 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1089:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"bundle_id\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1090:22 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1096:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1096:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1098:28 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1098:34 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1101:17 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1101:23 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1105:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1106:44 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1106:44 - error: Type of \"collaboration_endpoint\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1106:44 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"fallback\" in function \"_require_endpoint\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1108:50 - error: Type of \"client\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1109:13 - error: Type of \"removed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1109:22 - error: Type of \"remaining\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1109:34 - error: Type of \"prune_bundles\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1110:13 - error: Type of \"HTTPError\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1110:19 - error: \"HTTPError\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1110:45 - error: Type of \"exc\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"exc\" is \"Unknown | ValueError\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1112:43 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"exc\" in function \"_bad_parameter\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Unknown | ValueError\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1115:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1115:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1117:9 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1117:15 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1117:35 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1118:13 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1119:13 - error: Type of \"stored\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1119:22 - error: Type of \"stored_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1119:22 - error: Type of \"astimezone\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1119:22 - error: Type of \"strftime\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1122:13 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1122:19 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1123:22 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1123:57 - error: Type of \"size\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1125:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1125:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1127:9 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1131:21 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1132:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"remaining\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1136:2 - error: Type of \"command\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1136:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1138:17 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1138:23 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1139:17 - error: Type of \"Option\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1139:23 - error: \"Option\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1142:5 - error: Type of \"ctx\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1145:5 - error: Type of \"api_app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1146:5 - error: Type of \"echo\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1146:11 - error: \"echo\" is not a known attribute of module \"typer\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1147:13 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"ctx\" in function \"_record\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1148:5 - error: Type of \"run\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1148:13 - error: \"run\" is not a known attribute of module \"uvicorn\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1153:30 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\interface\\cli\\main.py:1153:30 - error: Type of \"debug\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:6:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.review\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:6:57 - error: Type of \"ReviewRecord\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:7:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_briefing_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:9:5 - error: Type of \"AIBriefingService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:12:5 - error: Type of \"TaskSummary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:13:5 - error: Type of \"UpcomingTask\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:15:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_guidance_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:16:5 - error: Type of \"ReviewGuidance\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:21:24 - error: Type of parameter \"summary\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:22:9 - error: Type of \"_summary\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:24:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:27:16 - error: Type of \"_summary\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:27:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:31:24 - error: Type of parameter \"guidance\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"list[Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:32:9 - error: Type of \"_guidance\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_guidance\" is \"list[Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:34:9 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:42:16 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:42:21 - error: Type of \"_guidance\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_guidance\" is \"list[Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:42:21 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:47:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:47:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:48:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:48:14 - error: Type of \"new\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:49:9 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:53:5 - error: Type of \"guidance_entry\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:63:5 - error: Type of \"summary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:70:25 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:71:29 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:80:5 - error: Type of \"briefing\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:80:16 - error: Type of \"generate\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:82:12 - error: Type of \"summary\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:83:12 - error: Type of \"guidance\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_briefing_service.py:84:12 - error: Type of \"generated_at\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:7:50 - error: Type of \"events\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:8:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:9:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:10:63 - error: Type of \"AIService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:13:30 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:17:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:17:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:18:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:18:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:19:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:21:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:22:16 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:22:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:22:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:24:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:25:13 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:25:21 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:26:27 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:30:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:30:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:31:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:31:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:32:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:38:5 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:39:5 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:39:18 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:40:12 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:45:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:48:5 - error: Type of \"overdue\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:48:15 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:54:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:54:14 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:56:5 - error: Type of \"upcoming\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:56:16 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:59:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:59:14 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:61:5 - error: Type of \"completed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:61:17 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:61:17 - error: Type of \"complete\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:62:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:62:14 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:65:5 - error: Type of \"summary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:65:15 - error: Type of \"summarize\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:67:12 - error: Type of \"pending\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:68:12 - error: Type of \"completed\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:69:12 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:70:12 - error: Type of \"top_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:71:16 - error: Type of \"task_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:71:16 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"any\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Generator[Unknown, None, None]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:71:32 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:71:48 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:71:56 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:72:16 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:72:16 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"all\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Generator[Unknown, None, None]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:72:29 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:72:52 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:72:60 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:77:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:79:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:79:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:80:5 - error: Type of \"prompts\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:80:15 - error: Type of \"draft_followups\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:82:31 - error: Type of \"lower\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:82:50 - error: Type of \"prompt\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:83:29 - error: Type of \"lower\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:83:48 - error: Type of \"prompt\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:89:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:91:5 - error: Type of \"ideas\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:91:13 - error: Type of \"brainstorm\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:93:16 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:94:12 - error: Type of \"startswith\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:95:12 - error: Type of \"startswith\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:96:49 - error: Type of \"idea\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:99:2 - error: Type of \"mark\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:99:2 - error: Type of \"parametrize\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:99:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:99:9 - error: \"mark\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:102:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:104:5 - error: Type of \"ideas\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:104:13 - error: Type of \"brainstorm\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_ai_service.py:106:16 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py:24:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py:24:9 - error: \"fixture\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_api.py:43:16 - error: \"skip\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:9:50 - error: Type of \"events\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:10:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:11:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:13:5 - error: Type of \"AIService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:14:5 - error: Type of \"TaskSummary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:15:5 - error: Type of \"UpcomingTask\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:17:6 - error: Import \"x_legatus_acta_schedae_x.core.services.automation_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:18:5 - error: Type of \"AutomationService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:20:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.automation\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:21:5 - error: Type of \"AutomationWebhookClient\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:23:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.telemetry\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:23:63 - error: Type of \"TelemetryClient\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:26:30 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:30:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:30:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:31:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:31:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:32:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:34:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:35:16 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:35:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:35:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:37:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:38:13 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:38:21 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:39:27 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:43:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:43:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:44:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:44:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:45:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:52:5 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:52:18 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:54:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:54:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:55:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:55:14 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:57:5 - error: Type of \"captured\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"captured\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:57:20 - error: Type of \"Request\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:57:26 - error: \"Request\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:59:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:59:17 - error: Type of parameter \"request\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:59:26 - error: Type of \"Request\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:59:32 - error: \"Request\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:59:44 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:59:50 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:60:9 - error: Type of \"append\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"append\" is \"(object: Unknown, /) -> None\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:60:25 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"object\" in function \"append\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:61:16 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:61:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:61:22 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:63:5 - error: Type of \"transport\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:63:17 - error: Type of \"MockTransport\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:63:23 - error: \"MockTransport\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:64:5 - error: Type of \"client\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:64:14 - error: Type of \"Client\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:64:20 - error: \"Client\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:65:5 - error: Type of \"webhook_client\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:69:25 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:77:5 - error: Type of \"summary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:84:25 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:85:29 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:86:21 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:87:26 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:93:13 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:96:20 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:98:5 - error: Type of \"ai_service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:101:5 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:102:9 - error: Type of \"CardScanned\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:104:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:112:16 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:113:5 - error: Type of \"request\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:114:12 - error: Type of \"url\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:114:27 - error: Type of \"URL\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:114:33 - error: \"URL\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:115:26 - error: Type of \"content\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:115:26 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:115:26 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"s\" in function \"loads\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:118:35 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:137:5 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:137:18 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:139:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:141:12 - error: Type of \"enabled\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:143:5 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_automation_service.py:144:9 - error: Type of \"CardScanned\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:8:50 - error: Type of \"events\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:9:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:10:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.services.card_action_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:12:5 - error: Type of \"CardActionService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:13:5 - error: Type of \"CardNotFoundError\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:15:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:15:65 - error: Type of \"TaskService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:16:6 - error: Import \"x_legatus_acta_schedae_x.x_cls_legatus_acta_schedae_x\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:17:5 - error: Type of \"Notecard\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:18:5 - error: Type of \"Storage\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:22:30 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:26:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:26:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:27:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:27:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:28:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:30:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:31:16 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:31:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:31:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:33:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:34:13 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:34:21 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:35:27 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:39:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:39:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:40:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:40:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:41:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:47:5 - error: Return type, \"tuple[Unknown, InMemoryTaskRepository, Unknown, Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:48:5 - error: Type of \"storage\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:49:5 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:49:18 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:51:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:56:12 - error: Return type, \"tuple[Unknown, InMemoryTaskRepository, Unknown, Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:60:5 - error: Type of \"storage\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:60:20 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:60:32 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:61:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:61:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:62:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:62:14 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:63:5 - error: Type of \"dispatcher_events\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"dispatcher_events\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:63:29 - error: Type of \"CardScanned\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:65:17 - error: Type of parameter \"event\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:65:24 - error: Type of \"DomainEvent\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:66:30 - error: Type of \"CardScanned\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:67:13 - error: Type of \"append\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"append\" is \"(object: Unknown, /) -> None\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:67:38 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"object\" in function \"append\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:69:5 - error: Type of \"subscribe\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:69:26 - error: Type of \"CardScanned\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:71:5 - error: Type of \"card\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:76:23 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:78:5 - error: Type of \"insert_card\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:80:5 - error: Type of \"result\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:80:14 - error: Type of \"handle_scan\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:80:34 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:82:5 - error: Type of \"saved\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"saved\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:82:13 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"(task_id: str) -> (Unknown | None)\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:82:22 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:82:22 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"get\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:84:12 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:85:12 - error: Type of \"card_status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:86:12 - error: Type of \"metadata\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:87:12 - error: Type of \"metadata\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:88:34 - error: Type of \"card_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:88:66 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:92:5 - error: Type of \"storage\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:92:17 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:92:20 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:93:5 - error: Type of \"card\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:100:5 - error: Type of \"insert_card\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:102:5 - error: Type of \"result\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:102:14 - error: Type of \"handle_scan\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:102:34 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:104:12 - error: Type of \"card_status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:105:12 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:105:12 - error: Type of \"updated\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:106:5 - error: Type of \"stored\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:106:14 - error: Type of \"get_card\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:106:31 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:108:12 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:112:5 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:112:11 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:112:14 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:113:10 - error: Type of \"raises\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:113:17 - error: \"raises\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:114:9 - error: Type of \"handle_scan\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:118:5 - error: Type of \"storage\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:118:17 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:118:20 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:119:5 - error: Type of \"card\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:126:5 - error: Type of \"insert_card\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:128:5 - error: Type of \"result\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:128:14 - error: Type of \"handle_scan\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:128:34 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:130:12 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:130:12 - error: Type of \"error\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_card_action_service.py:131:12 - error: Type of \"card_status\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.review\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:9:57 - error: Type of \"ReviewRecord\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:10:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_briefing_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:12:5 - error: Type of \"AIBriefing\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:15:5 - error: Type of \"TaskSummary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:16:5 - error: Type of \"UpcomingTask\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:18:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_guidance_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:19:5 - error: Type of \"ReviewGuidance\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:21:6 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:21:57 - error: Type of \"app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:44:24 - error: Type of parameter \"briefing\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:45:9 - error: Type of \"briefing\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:48:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:50:16 - error: Type of \"briefing\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:50:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:54:24 - error: Type of parameter \"briefing\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:56:56 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"briefing\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:59:5 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:60:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:60:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:61:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:61:14 - error: Type of \"new\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:62:9 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:66:5 - error: Type of \"guidance\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:76:5 - error: Type of \"summary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:83:25 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:84:29 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:90:12 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:94:5 - error: Type of parameter \"monkeypatch\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:94:18 - error: Type of \"MonkeyPatch\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:94:25 - error: \"MonkeyPatch\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:97:5 - error: Type of \"briefing\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:98:23 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"briefing\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:100:10 - error: Import \"x_legatus_acta_schedae_x\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:100:42 - error: Type of \"interface\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:104:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_ai_briefing.py:106:5 - error: Type of \"setattr\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:12:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:14:5 - error: Type of \"TaskSummary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:15:5 - error: Type of \"UpcomingTask\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:17:6 - error: Import \"x_legatus_acta_schedae_x.core.services.collaboration_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:18:5 - error: Type of \"ExportResult\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:20:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.collaboration.hub_client\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:21:5 - error: Type of \"BundleDownloadResult\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:22:5 - error: Type of \"BundleUploadResult\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:24:6 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:24:57 - error: Type of \"app\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:42:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:61:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:63:9 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:79:16 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:79:17 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:108:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:123:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:133:39 - error: Type of parameter \"download\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:135:9 - error: Type of \"download\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:148:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:150:16 - error: Type of \"download\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:150:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:152:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:154:25 - error: Type of \"download\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:154:25 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:155:20 - error: Type of \"download\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:155:20 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:163:9 - error: Type of parameter \"bundles\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"list[Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:165:9 - error: Type of parameter \"prune_removed\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"list[Unknown] | None\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:169:9 - error: Type of \"bundles\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"bundles\" is \"list[Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:172:9 - error: Type of \"_prune_removed\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_prune_removed\" is \"list[Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:181:9 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:186:20 - error: Type of \"bundles\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"bundles\" is \"list[Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:186:20 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:187:16 - error: Type of \"bundles\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"bundles\" is \"list[Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:187:16 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:189:9 - error: Return type, \"tuple[list[Unknown], int]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:193:16 - error: Return type, \"tuple[list[Unknown], int]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:193:17 - error: Type of \"_prune_removed\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_prune_removed\" is \"list[Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:197:24 - error: Type of parameter \"summary\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:198:9 - error: Type of \"summary\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:201:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:203:16 - error: Type of \"summary\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:203:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:206:2 - error: Type of \"fixture\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:206:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:206:9 - error: \"fixture\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:212:5 - error: Type of parameter \"monkeypatch\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:212:18 - error: Type of \"MonkeyPatch\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:212:25 - error: \"MonkeyPatch\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:217:5 - error: Type of \"summary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:231:32 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"summary\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:249:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:251:5 - error: Type of \"setattr\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:252:5 - error: Type of \"setattr\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:279:34 - error: Type of \"pending\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:280:36 - error: Type of \"completed\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:281:34 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:282:35 - error: Type of \"top_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:283:5 - error: Type of \"expected_due\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"expected_due\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:284:9 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:284:9 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:284:9 - error: Type of \"isoformat\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:285:12 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:285:12 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:292:49 - error: Type of \"pending\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:293:51 - error: Type of \"completed\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:294:49 - error: Type of \"overdue\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:298:5 - error: Type of parameter \"monkeypatch\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:298:18 - error: Type of \"MonkeyPatch\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:298:25 - error: \"MonkeyPatch\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:312:5 - error: Type of \"download\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:327:41 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"download\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:329:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:331:5 - error: Type of \"setattr\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:332:5 - error: Type of \"setattr\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:361:5 - error: Type of parameter \"monkeypatch\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:361:18 - error: Type of \"MonkeyPatch\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:361:25 - error: \"MonkeyPatch\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:373:5 - error: Type of \"bundles\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"bundles\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:402:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:404:5 - error: Type of \"setattr\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:405:5 - error: Type of \"setattr\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:429:5 - error: Type of parameter \"monkeypatch\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:429:18 - error: Type of \"MonkeyPatch\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:429:25 - error: \"MonkeyPatch\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:441:5 - error: Type of \"removed_bundle\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:466:12 - error: Import \"x_legatus_acta_schedae_x.interface.cli.main\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:468:5 - error: Type of \"setattr\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_cli_collab.py:469:5 - error: Type of \"setattr\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:11:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.collaboration.hub_client\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:12:5 - error: Type of \"BundleUploadResult\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:13:5 - error: Type of \"CollaborationHubClient\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:15:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.collaboration.store\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:16:5 - error: Type of \"CollaborationBundleStore\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:21:5 - error: Type of \"store\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:23:5 - error: Type of \"stored\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:23:14 - error: Type of \"save\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:27:5 - error: Type of \"latest\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:27:14 - error: Type of \"latest\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:29:12 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:29:32 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:30:12 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:30:12 - error: Type of \"read_bytes\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:31:5 - error: Type of \"fetched\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:31:15 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:31:25 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:33:12 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:33:33 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:37:5 - error: Type of \"store\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:38:5 - error: Type of \"save\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:39:5 - error: Type of \"second\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:39:14 - error: Type of \"save\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:41:5 - error: Type of \"bundles\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:41:15 - error: Type of \"list\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:43:16 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:44:12 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:44:36 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:45:12 - error: Type of \"stored_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:45:36 - error: Type of \"stored_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:49:5 - error: Type of \"store\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:50:5 - error: Type of \"first\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:50:13 - error: Type of \"save\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:51:5 - error: Type of \"second\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:51:14 - error: Type of \"save\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:52:5 - error: Type of \"third\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:52:13 - error: Type of \"save\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:54:5 - error: Type of \"removed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:54:15 - error: Type of \"prune\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:56:16 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:57:12 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:57:36 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:58:5 - error: Type of \"remaining\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:58:17 - error: Type of \"list\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:59:13 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:59:34 - error: Type of \"bundle\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:60:9 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:61:9 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:72:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:72:18 - error: Type of parameter \"request\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:72:27 - error: Type of \"Request\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:72:33 - error: \"Request\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:72:45 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:72:51 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:74:13 - error: Type of \"method\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:75:17 - error: Type of \"url\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:75:17 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:77:31 - error: Type of \"content\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:77:31 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:77:31 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"s\" in function \"loads\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:95:20 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:95:20 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:95:26 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:98:13 - error: Type of \"method\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"method\" is \"Unknown | Literal['POST']\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:99:17 - error: Type of \"url\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:99:17 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:103:24 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:103:24 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:103:30 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:126:20 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:126:20 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:126:26 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:128:12 - error: Type of \"method\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"method\" is \"Unknown | Literal['POST', 'GET']\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:128:40 - error: Type of \"url\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:128:40 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:128:40 - error: Type of \"startswith\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:133:24 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:133:24 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:133:30 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:136:24 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:136:24 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:136:30 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:147:20 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:147:20 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:147:26 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:150:13 - error: Type of \"method\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"method\" is \"Unknown | Literal['POST', 'GET']\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:151:17 - error: Type of \"url\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:151:17 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:153:13 - error: Type of \"keep_param\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:153:26 - error: Type of \"url\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:153:26 - error: Type of \"params\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:153:26 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:154:24 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"x\" in function \"__new__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:177:20 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:177:20 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:177:26 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:181:16 - error: Type of \"Response\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:181:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:181:22 - error: \"Response\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:183:5 - error: Type of \"transport\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:183:17 - error: Type of \"MockTransport\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:183:23 - error: \"MockTransport\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:187:10 - error: Type of \"client\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:188:9 - error: Type of \"upload\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:188:38 - error: Type of \"push_bundle\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:191:16 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:192:16 - error: Type of \"size\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:193:16 - error: Type of \"metadata\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:195:9 - error: Type of \"history\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:195:45 - error: Type of \"list_bundles\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:196:20 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Unknown | list[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:197:16 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:198:16 - error: Type of \"metadata\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:200:9 - error: Type of \"download\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:200:20 - error: Type of \"fetch_latest_bundle\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:202:16 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:203:16 - error: Type of \"payload\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:205:9 - error: Type of \"fetched\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:205:19 - error: Type of \"fetch_bundle\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:207:16 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:209:9 - error: Type of \"removed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:209:18 - error: Type of \"remaining\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:209:30 - error: Type of \"prune_bundles\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:210:20 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_hub.py:211:16 - error: Type of \"bundle_id\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:9:50 - error: Type of \"events\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:10:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:11:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.collaboration_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:13:5 - error: Type of \"CollaborationService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:17:30 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:21:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:21:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:22:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:22:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:23:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:25:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:26:16 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:26:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:26:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:28:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:29:13 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:29:21 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:30:27 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:34:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:34:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:35:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:35:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:36:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:42:5 - error: Return type, \"tuple[Unknown, Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:44:34 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:45:5 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:45:18 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:46:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:47:12 - error: Return type, \"tuple[Unknown, Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:52:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:52:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:53:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:53:14 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:54:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:54:14 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:56:5 - error: Type of \"result\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:56:14 - error: Type of \"export_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:60:12 - error: Type of \"count\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:61:12 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:61:12 - error: Type of \"exists\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:62:26 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:62:26 - error: Type of \"read_text\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:62:26 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"s\" in function \"loads\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:65:56 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:70:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:70:14 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:72:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:72:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:73:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:73:14 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:75:5 - error: Type of \"export_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:78:5 - error: Type of \"target_service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:78:21 - error: Type of \"target_dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:79:5 - error: Type of \"captured_events\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"captured_events\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:79:27 - error: Type of \"TasksImported\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:81:18 - error: Type of parameter \"event\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:81:25 - error: Type of \"DomainEvent\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:82:30 - error: Type of \"TasksImported\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:83:13 - error: Type of \"append\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"append\" is \"(object: Unknown, /) -> None\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:83:36 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"object\" in function \"append\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:85:5 - error: Type of \"subscribe\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:85:33 - error: Type of \"TasksImported\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:87:5 - error: Type of \"imported\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:87:16 - error: Type of \"import_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:89:16 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:90:5 - error: Type of \"restored\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"restored\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:90:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"(task_id: str) -> (Unknown | None)\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:90:32 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:90:32 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"get\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:91:37 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:91:61 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:92:12 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:92:32 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:93:32 - error: Type of \"tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:93:32 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:93:66 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:98:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:98:14 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:100:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:100:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:101:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:101:14 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:103:5 - error: Type of \"export_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:106:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:106:22 - error: Type of \"with_updated_description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:106:22 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:107:5 - error: Type of \"target_service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:107:21 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:109:5 - error: Type of \"imported\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:109:16 - error: Type of \"import_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:112:16 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:113:5 - error: Type of \"stored\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"stored\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:113:14 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"(task_id: str) -> (Unknown | None)\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:113:31 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:113:31 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"get\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:114:35 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:116:5 - error: Type of \"imported_overwrite\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:116:26 - error: Type of \"import_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:119:16 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:120:5 - error: Type of \"stored_overwrite\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"stored_overwrite\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:120:24 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"(task_id: str) -> (Unknown | None)\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:120:41 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:120:41 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"get\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:123:13 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:129:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:129:14 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:131:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:131:14 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:131:14 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:133:5 - error: Type of \"export_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:135:5 - error: Type of \"target_service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:135:21 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:136:10 - error: Type of \"raises\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:136:17 - error: \"raises\" is not a known attribute of module \"pytest\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_collaboration_service.py:137:9 - error: Type of \"import_tasks\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:9:50 - error: Type of \"events\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:10:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:11:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:12:63 - error: Type of \"AIService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.services.plugin_bus\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:13:63 - error: Type of \"PluginBus\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:14:65 - error: Type of \"TaskService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:15:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.config\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:15:60 - error: Type of \"AppConfig\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:16:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.telemetry\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:16:63 - error: Type of \"TelemetryClient\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:19:26 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:21:9 - error: Type of \"__init__\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:32:9 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:37:9 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:40:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:40:27 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:43:9 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:43:52 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:44:9 - error: Type of \"ai_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:45:46 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:47:9 - error: Type of \"plugin_bus\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:48:13 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:50:13 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:51:26 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:52:24 - error: Type of \"ai_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:54:9 - error: Type of \"plugin_bus\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:54:9 - error: Type of \"load\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:54:30 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:61:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:61:16 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:61:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:64:9 - error: Type of \"imported_event\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:64:26 - error: Type of \"TasksImported\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:65:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:65:9 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:66:9 - error: Type of \"scan_event\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:66:22 - error: Type of \"CardScanned\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:68:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:70:29 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:73:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:73:9 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:98:31 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:102:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:102:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:103:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:103:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:104:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:106:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:107:16 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:107:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:107:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:109:9 - error: Return type, \"Generator[Unknown, Any, None]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:110:13 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:110:21 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:111:27 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:115:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:115:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:116:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:116:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_ai_assistant.py:117:16 - error: Return type is unknown (reportUnknownVariableType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:9:5 - error: Type of \"EventDispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:10:5 - error: Type of \"TaskCompleted\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:11:5 - error: Type of \"TaskCreated\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:12:5 - error: Type of \"TaskReminderTriggered\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:13:5 - error: Type of \"TaskUpdated\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:15:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:15:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:16:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:16:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:17:6 - error: Import \"x_legatus_acta_schedae_x.core.services.ai_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:17:63 - error: Type of \"AIService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:18:6 - error: Import \"x_legatus_acta_schedae_x.core.services.plugin_bus\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:18:63 - error: Type of \"PluginBus\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:19:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:19:65 - error: Type of \"TaskService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:20:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.config\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:20:60 - error: Type of \"AppConfig\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:21:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.telemetry\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:21:63 - error: Type of \"TelemetryClient\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:24:26 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:26:9 - error: Type of \"__init__\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:35:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:39:9 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:45:9 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:45:52 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:46:9 - error: Type of \"ai_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:47:46 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:49:9 - error: Type of \"plugin_bus\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:50:13 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:52:13 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:53:26 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:54:24 - error: Type of \"ai_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:56:9 - error: Type of \"plugin_bus\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:56:9 - error: Type of \"load\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:56:30 - error: Type of \"config\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:56:30 - error: Type of \"plugins\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:63:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:63:16 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:66:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:66:9 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:67:9 - error: Type of \"updated\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:68:13 - error: Type of \"with_due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:68:27 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:68:61 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:70:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:70:9 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:71:9 - error: Type of \"reminder\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:72:34 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:74:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:74:9 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:75:9 - error: Type of \"completed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:75:21 - error: Type of \"complete\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:76:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:76:9 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:92:31 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:96:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:96:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:97:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:97:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:98:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:100:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:101:16 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:101:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:101:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:103:9 - error: Return type, \"Generator[Unknown, Any, None]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:104:13 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:104:21 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:105:27 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:109:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:109:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:110:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:110:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_plugin_calendar_sync.py:111:16 - error: Return type is unknown (reportUnknownVariableType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:6:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:6:50 - error: Type of \"events\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:7:57 - error: Type of \"CardScanned\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.review\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:8:57 - error: Type of \"ReviewRecord\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:9:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.review_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:10:61 - error: Type of \"IReviewRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:11:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_guidance_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:13:5 - error: Type of \"ReviewGuidanceService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:15:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:15:67 - error: Type of \"ReviewService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:18:30 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:22:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:22:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:23:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:23:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:24:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:26:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:27:16 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:27:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:27:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:29:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:30:13 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:30:21 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:31:27 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:35:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:35:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:36:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:36:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:37:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:43:32 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:47:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:48:16 - error: Type of \"_records\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_records\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:48:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:48:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:50:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:51:16 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:51:21 - error: Type of \"_records\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_records\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:51:21 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"dict_values[str, Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:53:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:53:20 - error: Type of parameter \"record\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:54:9 - error: Type of \"_records\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_records\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:54:23 - error: Type of \"task_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:55:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:58:9 - error: Type of \"_records\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_records\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:58:9 - error: Type of \"pop\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"pop\" is \"Overload[(key: str, /) -> Unknown, (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@pop, /) -> (Unknown | _T@pop)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:62:55 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:66:5 - error: Return type, \"tuple[Unknown, Unknown, tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:69:5 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:69:18 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:70:5 - error: Type of \"review_service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:71:5 - error: Type of \"guidance_service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:72:12 - error: Return type, \"tuple[Unknown, Unknown, tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:79:5 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:86:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:86:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:87:12 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:88:12 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:89:21 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:90:28 - error: Type of \"created\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:91:16 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:92:20 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:93:14 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:94:18 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:99:5 - error: Type of \"guidance\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:99:15 - error: Type of \"review_service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:99:46 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:104:5 - error: Type of \"high_task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:110:5 - error: Type of \"medium_task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:117:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:117:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:118:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:118:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:120:5 - error: Type of \"record_review\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:121:9 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:123:5 - error: Type of \"record_review\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:124:9 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:127:5 - error: Type of \"recommendations\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:127:23 - error: Type of \"generate\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:130:12 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:130:12 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:130:42 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:132:39 - error: Type of \"reason\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:132:49 - error: Type of \"reasons\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:134:12 - error: Type of \"suggested_action\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:141:5 - error: Type of \"guidance\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:141:15 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:141:33 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:144:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:150:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:150:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:152:5 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:155:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:166:5 - error: Type of \"recommendations\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:166:23 - error: Type of \"generate\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:169:5 - error: Type of \"rec\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:170:12 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:170:12 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:170:27 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:171:49 - error: Type of \"reason\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:171:59 - error: Type of \"reasons\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:172:12 - error: Type of \"last_source\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:173:12 - error: Type of \"last_reviewed_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:177:5 - error: Type of \"guidance\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:177:15 - error: Type of \"review_service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:177:46 - error: Type of \"_\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:181:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:186:9 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:186:23 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:187:9 - error: Type of \"record_review\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:188:13 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:191:5 - error: Type of \"recommendations\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:191:23 - error: Type of \"generate\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:192:16 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:194:5 - error: Type of \"scores\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"scores\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:194:15 - error: Type of \"score\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:194:30 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_guidance_service.py:195:29 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"sorted\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:7:50 - error: Type of \"events\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:8:57 - error: Type of \"CardScanned\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.review\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:9:57 - error: Type of \"ReviewRecord\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:10:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.review_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:11:61 - error: Type of \"IReviewRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:12:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.services.review_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:13:67 - error: Type of \"ReviewService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:16:30 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:20:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:20:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:21:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:21:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:22:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:24:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:25:16 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:25:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:25:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:27:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:28:13 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:28:21 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:29:27 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:33:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:33:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:34:9 - error: Type of \"_tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_tasks\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:34:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:35:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:41:32 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:45:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:46:16 - error: Type of \"_records\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_records\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:46:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:46:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:48:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:49:16 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:49:21 - error: Type of \"_records\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_records\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:49:21 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"dict_values[str, Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:51:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:51:20 - error: Type of parameter \"record\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:52:9 - error: Type of \"_records\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_records\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:52:23 - error: Type of \"task_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:53:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:56:9 - error: Type of \"_records\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"_records\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:56:9 - error: Type of \"pop\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"pop\" is \"Overload[(key: str, /) -> Unknown, (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@pop, /) -> (Unknown | _T@pop)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:60:55 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:65:5 - error: Return type, \"tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:66:12 - error: Return type, \"tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:69:9 - error: Type of \"EventDispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:74:5 - error: Type of parameter \"repositories\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:76:29 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:77:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:77:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:78:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:78:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:80:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:82:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:82:14 - error: Type of \"get_record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:82:33 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:84:12 - error: Type of \"due_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:84:29 - error: Type of \"created\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:88:5 - error: Type of parameter \"repositories\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:90:29 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:91:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:91:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:92:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:92:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:93:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:95:5 - error: Type of \"first_review_time\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:95:25 - error: Type of \"created\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:96:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:96:14 - error: Type of \"record_review\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:97:9 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:99:19 - error: Type of \"interval_days\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:100:12 - error: Type of \"repetitions\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:101:12 - error: Type of \"last_reviewed_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:102:12 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:102:12 - error: Type of \"quality\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:103:12 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:103:12 - error: Type of \"source\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:104:12 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:104:12 - error: Type of \"context\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:106:5 - error: Type of \"second_time\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:107:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:107:14 - error: Type of \"record_review\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:107:36 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:108:19 - error: Type of \"interval_days\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:109:12 - error: Type of \"repetitions\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:110:12 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:110:12 - error: Type of \"reviewed_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:111:12 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:111:12 - error: Type of \"source\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:114:44 - error: Type of parameter \"repositories\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:115:29 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:116:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:116:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:117:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:117:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:118:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:120:5 - error: Type of \"past\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:120:12 - error: Type of \"created\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:121:5 - error: Type of \"record_review\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:121:27 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:123:5 - error: Type of \"due_items\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:123:17 - error: Type of \"due_reviews\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:124:16 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:125:12 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:125:12 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:125:36 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:128:44 - error: Type of parameter \"repositories\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:129:29 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:130:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:132:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:132:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:133:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:133:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:134:5 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:134:24 - error: Type of \"TaskCreated\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:136:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:136:14 - error: Type of \"get_record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:136:33 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:140:43 - error: Type of parameter \"repositories\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:141:29 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:142:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:142:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:143:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:143:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:144:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:146:5 - error: Type of \"completed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:146:17 - error: Type of \"complete\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:147:5 - error: Type of \"save\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"save\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:147:20 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"save\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:148:5 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:148:24 - error: Type of \"TaskCompleted\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:150:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:150:14 - error: Type of \"get_record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:150:33 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:152:12 - error: Type of \"repetitions\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:153:5 - error: Type of \"last_entry\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:153:18 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:154:12 - error: Type of \"source\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:155:12 - error: Type of \"quality\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:156:29 - error: Type of \"context\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:160:5 - error: Type of parameter \"repositories\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:162:29 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:163:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:163:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:164:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:164:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:165:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:167:5 - error: Type of \"timestamp\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:167:17 - error: Type of \"created\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:168:5 - error: Type of \"metadata\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"metadata\" is \"dict[str, str | Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:170:22 - error: Type of \"isoformat\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:173:5 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:176:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:184:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:184:14 - error: Type of \"get_record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:184:33 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:186:12 - error: Type of \"repetitions\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:187:5 - error: Type of \"entry\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:187:13 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:188:12 - error: Type of \"source\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:189:12 - error: Type of \"quality\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:190:12 - error: Type of \"reviewed_at\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:191:12 - error: Type of \"context\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:192:12 - error: Type of \"context\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:196:5 - error: Type of parameter \"repositories\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"tuple[InMemoryTaskRepository, InMemoryReviewRepository, Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:198:29 - error: Type of \"dispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:199:5 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:199:12 - error: Type of \"create\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:200:5 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(task: Unknown) -> Unknown\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:200:19 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task\" in function \"add\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:201:5 - error: Type of \"service\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:203:5 - error: Type of \"publish\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:206:21 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:214:5 - error: Type of \"record\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:214:14 - error: Type of \"get_record\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:214:33 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:216:5 - error: Type of \"entry\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:216:13 - error: Type of \"history\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:217:12 - error: Type of \"source\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:218:12 - error: Type of \"quality\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_review_service.py:219:12 - error: Type of \"context\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:8:60 - error: Type of \"domain_events\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:10:5 - error: Type of \"EventDispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:11:5 - error: Type of \"TaskReminderTriggered\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:13:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.scheduler\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:14:59 - error: Type of \"IScheduler\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:15:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:15:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:16:6 - error: Import \"x_legatus_acta_schedae_x.core.services.scheduler_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:17:5 - error: Type of \"SchedulerService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:19:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:19:65 - error: Type of \"TaskService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:20:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.telemetry\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:20:63 - error: Type of \"TelemetryClient\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:23:22 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:27:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:27:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:28:9 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:28:22 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:29:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:31:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:32:16 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:32:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:32:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:34:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:35:9 - error: Type of \"tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tasks\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:35:22 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:35:22 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"dict_values[str, Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:37:20 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:37:27 - error: Type of \"t\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:37:41 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:38:16 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:40:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:40:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:41:9 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:41:22 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:42:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:48:21 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:85:26 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:87:9 - error: Type of \"__init__\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:99:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:102:9 - error: Type of \"scheduler_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:105:24 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:108:9 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:108:52 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:112:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:112:16 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:112:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:113:35 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:119:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:119:16 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:119:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:120:9 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:120:9 - error: Type of \"complete_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:120:41 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:121:35 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:126:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:126:16 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:126:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:127:9 - error: Type of \"captured\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"captured\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:129:21 - error: Type of parameter \"event\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:129:28 - error: Type of \"DomainEvent\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:131:17 - error: Type of \"append\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"append\" is \"(object: Unknown, /) -> None\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:131:33 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"object\" in function \"append\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:133:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:133:9 - error: Type of \"subscribe\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:134:35 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:136:33 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:137:26 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:137:35 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_scheduler_service.py:137:35 - error: Type of \"id\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:7:57 - error: Type of \"EventDispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:8:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:9:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:9:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:10:6 - error: Import \"x_legatus_acta_schedae_x.core.services.search_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:10:67 - error: Type of \"SearchService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:11:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:11:65 - error: Type of \"TaskService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.infrastructure.search\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:12:60 - error: Type of \"MemorySearchIndex\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:15:22 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:19:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:19:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:20:9 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:20:22 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:21:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:23:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:24:16 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:24:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:24:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:26:9 - error: Return type, \"Iterable[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:27:9 - error: Type of \"tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tasks\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:27:22 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:27:22 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"dict_values[str, Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:29:20 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:29:27 - error: Type of \"t\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:29:41 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:30:16 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:32:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:32:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:33:9 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:33:22 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:34:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:45:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:46:9 - error: Type of \"search_index\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:47:9 - error: Type of \"search_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:48:24 - error: Type of \"search_index\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:48:43 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:50:9 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:50:52 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:53:9 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:53:9 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:54:9 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:54:9 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:56:9 - error: Type of \"matches\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:56:19 - error: Type of \"search_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:56:19 - error: Type of \"search\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:57:33 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:58:33 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:58:33 - error: Type of \"lower\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:58:33 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"container\" in function \"assertIn\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:61:9 - error: Type of \"first\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:61:17 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:61:17 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:64:9 - error: Type of \"second\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:64:18 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:64:18 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:67:9 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:67:9 - error: Type of \"complete_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:67:41 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:69:9 - error: Type of \"completed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:69:21 - error: Type of \"search_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:69:21 - error: Type of \"search\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:70:27 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:70:40 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:70:52 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:72:9 - error: Type of \"tag_filtered\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:72:24 - error: Type of \"search_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:72:24 - error: Type of \"search\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:73:27 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:73:39 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:73:51 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:76:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:76:16 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:76:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:77:9 - error: Type of \"task_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:77:9 - error: Type of \"edit_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:77:37 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:79:9 - error: Type of \"matches\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:79:19 - error: Type of \"search_service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:79:19 - error: Type of \"search\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:80:27 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:80:38 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_search_service.py:80:47 - error: Type of \"t\" is unknown (reportUnknownVariableType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:7:6 - error: Import \"x_legatus_acta_schedae_x.core.domain\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:7:60 - error: Type of \"domain_events\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:8:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.events\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:9:5 - error: Type of \"EventDispatcher\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:10:5 - error: Type of \"TaskUpdated\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:12:6 - error: Import \"x_legatus_acta_schedae_x.core.domain.task\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:12:55 - error: Type of \"Task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:13:6 - error: Import \"x_legatus_acta_schedae_x.core.ports.task_repo\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:13:59 - error: Type of \"ITaskRepository\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:14:6 - error: Import \"x_legatus_acta_schedae_x.core.services.task_service\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:14:65 - error: Type of \"TaskService\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:17:22 - error: Base class type is unknown, obscuring type of derived class (reportUntypedBaseClass)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:21:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:21:19 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:22:9 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:22:22 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:23:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:25:9 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:26:16 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:26:16 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: str, default: None = None, /) -> (Unknown | None), (key: str, default: Unknown, /) -> Unknown, (key: str, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:26:16 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:28:9 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:29:9 - error: Type of \"tasks\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tasks\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:29:22 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:29:22 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"dict_values[str, Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:31:20 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:31:27 - error: Type of \"t\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:31:41 - error: Type of \"status\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:32:16 - error: Return type, \"list[Unknown]\", is partially unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:34:9 - error: Return type is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:34:20 - error: Type of parameter \"task\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:35:9 - error: Type of \"storage\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"storage\" is \"dict[str, Unknown]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:35:22 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:36:16 - error: Return type is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:47:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:48:9 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:48:47 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:51:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:51:16 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:51:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:52:9 - error: Type of \"updated\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:52:19 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:52:19 - error: Type of \"edit_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:52:42 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:53:39 - error: Type of \"description\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:56:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:56:16 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:56:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:57:9 - error: Type of \"updated\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:57:19 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:57:19 - error: Type of \"defer_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:57:43 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:58:9 - error: Type of \"due\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:58:15 - error: Type of \"due\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:59:30 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"assertIsNotNone\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:61:41 - error: Type of \"created\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:61:41 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"b\" in function \"assertGreaterEqual\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:64:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:64:16 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:64:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:65:9 - error: Type of \"updated\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:65:19 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:65:19 - error: Type of \"prioritize_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:65:48 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:66:34 - error: Type of \"priority\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:69:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:69:16 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:69:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:70:9 - error: Type of \"with_tags\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:70:21 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:70:21 - error: Type of \"add_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:70:43 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:71:32 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:71:32 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"container\" in function \"assertIn\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:72:9 - error: Type of \"stripped\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:72:20 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:72:20 - error: Type of \"remove_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:72:45 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:73:35 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:73:35 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"container\" in function \"assertNotIn\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:74:9 - error: Type of \"replaced\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:74:20 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:74:20 - error: Type of \"set_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:74:42 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:75:41 - error: Type of \"tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:75:41 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:78:9 - error: Type of \"captured\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"captured\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:80:21 - error: Type of parameter \"event\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:80:28 - error: Type of \"DomainEvent\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:82:17 - error: Type of \"append\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"append\" is \"(object: Unknown, /) -> None\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:82:33 - error: Type of \"task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:82:33 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"object\" in function \"append\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:84:9 - error: Type of \"dispatcher\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:84:9 - error: Type of \"subscribe\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:85:9 - error: Type of \"task\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:85:16 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:85:16 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:86:9 - error: Type of \"service\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:86:9 - error: Type of \"edit_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:86:32 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:87:33 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_task_service.py:88:36 - error: Type of \"description\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:5:6 - error: Import \"x_legatus_acta_schedae_x.interface.tui.controller\" could not be resolved (reportMissingImports)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:6:5 - error: Type of \"TaskController\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:7:5 - error: Type of \"TaskFilters\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:8:5 - error: Type of \"TaskRow\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:12:15 - error: Type of parameter \"rows\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Parameter type is \"list[Unknown]\" (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:13:16 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:13:16 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"any\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Generator[Unknown, None, None]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:13:38 - error: Type of \"row\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:17:5 - error: Type of \"controller\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:18:5 - error: Type of \"created\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:18:15 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:22:5 - error: Type of \"pending\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:22:15 - error: Type of \"list_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:23:22 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"rows\" in function \"_find_row\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:23:31 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:23:31 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_find_row\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:25:5 - error: Type of \"complete_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:25:30 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:26:5 - error: Type of \"completed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:26:17 - error: Type of \"list_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:27:22 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"rows\" in function \"_find_row\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:27:33 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:27:33 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_find_row\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:29:5 - error: Type of \"search\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:29:14 - error: Type of \"list_tasks\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:30:22 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"rows\" in function \"_find_row\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:30:30 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:30:30 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"task_id\" in function \"_find_row\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:32:5 - error: Type of \"tags\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:32:12 - error: Type of \"available_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:38:5 - error: Type of \"controller\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:40:5 - error: Type of \"focus\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:40:13 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:43:5 - error: Type of \"completed\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:43:17 - error: Type of \"add_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:44:5 - error: Type of \"complete_task\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:44:30 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:46:5 - error: Type of \"summary\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:46:15 - error: Type of \"ai_summary\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:48:12 - error: Type of \"pending\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:49:12 - error: Type of \"completed\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:50:12 - error: Type of \"top_tags\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:51:16 - error: Type of \"task_id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:51:16 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"any\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Generator[Unknown, None, None]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:51:32 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:51:45 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\tests\\test_tui_controller.py:51:53 - error: Type of \"upcoming\" is unknown (reportUnknownMemberType)\nc:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:29:5 - error: \"_QR_AVAILABLE\" is constant (because it is uppercase) and cannot be redefined (reportConstantRedefinition)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:197:13 - error: Type of \"mm\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"mm\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:197:18 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: Unknown, default: None = None, /) -> (Unknown | None), (key: Unknown, default: Unknown, /) -> Unknown, (key: Unknown, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:198:13 - error: Type of \"mc\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"mc\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:198:18 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: Unknown, default: None = None, /) -> (Unknown | None), (key: Unknown, default: Unknown, /) -> Unknown, (key: Unknown, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:201:13 - error: Type of \"opts\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"opts\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:201:20 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: Unknown, default: None = None, /) -> (Unknown | None), (key: Unknown, default: Unknown, /) -> Unknown, (key: Unknown, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:203:17 - error: Type of \"mm\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"mm\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:203:22 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: Unknown, default: None = None, /) -> (Unknown | None), (key: Unknown, default: Unknown, /) -> Unknown, (key: Unknown, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:204:17 - error: Type of \"mc\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"mc\" is \"Unknown | None\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:204:22 - error: Type of \"get\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"get\" is \"Overload[(key: Unknown, default: None = None, /) -> (Unknown | None), (key: Unknown, default: Unknown, /) -> Unknown, (key: Unknown, default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:222:25 - error: Type of \"item\" is unknown (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:225:37 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Unknown] | tuple[Unknown, ...]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:577:5 - error: Type of \"tags\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tags\" is \"list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:604:9 - error: Type of \"global_tags\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"global_tags\" is \"Any | list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:612:29 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"set[Any | Unknown | _T@set]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:612:33 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Any | Unknown | _T@set]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:619:17 - error: Type of \"front\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"front\" is \"Unknown | Literal['']\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:621:64 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Unknown] | tuple[Unknown, ...]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:624:17 - error: Type of \"back\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"back\" is \"Unknown | Literal['']\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:626:64 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"len\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Unknown] | tuple[Unknown, *tuple[Unknown, ...]] | tuple[Unknown, ...] | tuple[()]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:633:38 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"set[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:633:42 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Any | list[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:650:9 - error: Type of \"global_tags\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"global_tags\" is \"Any | list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:655:17 - error: Type of \"tags\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tags\" is \"set[Any | Unknown | _T@set]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:655:28 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Any | Unknown | _T@set]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:658:21 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(element: Any | Unknown | _T@set, /) -> None\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:663:40 - error: Argument of type \"set[Any | Unknown | _T@set]\" cannot be assigned to parameter \"iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n  \u00c2\u00a0\u00c2\u00a0\"set[Any | Unknown | _T@set]\" is not assignable to \"Iterable[SupportsRichComparisonT@sorted]\"\n  \u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0Type parameter \"_T_co@Iterable\" is covariant, but \"Any | Unknown | _T@set\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n  \u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0Type \"Any | Unknown | _T@set\" is not assignable to type \"SupportsRichComparison\"\n  \u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0Type \"Any | Unknown | _T@set\" is not assignable to type \"SupportsRichComparison\"\n  \u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0\u00c2\u00a0Type \"_T@set\" is not assignable to type \"SupportsRichComparison\" (reportArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:669:9 - error: Type of \"tags\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"tags\" is \"set[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:669:20 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"Any | list[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:672:13 - error: Type of \"add\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"add\" is \"(element: Unknown, /) -> None\" (reportUnknownMemberType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:677:32 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"sorted\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"set[Unknown]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:686:9 - error: Type of \"global_tags\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"global_tags\" is \"Any | list[Unknown]\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:705:29 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"set[Any | Unknown | _T@set]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:705:33 - error: Argument type is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"iterable\" in function \"__init__\"\n  \u00c2\u00a0\u00c2\u00a0Argument type is \"list[Any | Unknown | _T@set]\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1003:16 - error: Unnecessary isinstance call; \"str\" is always an instance of \"str\" (reportUnnecessaryIsInstance)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1010:21 - error: Type of \"t\" is partially unknown\n  \u00c2\u00a0\u00c2\u00a0Type of \"t\" is \"Any | Unknown\" (reportUnknownVariableType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1026:38 - error: Unnecessary isinstance call; \"str\" is always an instance of \"str\" (reportUnnecessaryIsInstance)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1452:9 - error: Type of parameter \"self\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1452:9 - error: Type annotation is missing for parameter \"self\" (reportMissingParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1460:24 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"hasattr\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1462:24 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"obj\" in function \"hasattr\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1487:30 - error: Type of parameter \"self\" is unknown (reportUnknownParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1487:30 - error: Type annotation is missing for parameter \"self\" (reportMissingParameterType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1489:21 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"o\" in function \"getattr\" (reportUnknownArgumentType)\n  c:\\x_runner_x\\x_legatus_acta_schedae_x\\x_cls_legatus_acta_schedae_x.py:1490:21 - error: Argument type is unknown\n  \u00c2\u00a0\u00c2\u00a0Argument corresponds to parameter \"o\" in function \"getattr\" (reportUnknownArgumentType)\n2501 errors, 0 warnings, 0 informations\n",
            "tool": "pyright",
            "tool_module": "pyright",
            "tool_version": "pyright 1.1.406"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "pyright",
                ".",
                "--level",
                "error"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m pyright . --level error",
            "cwd": "C:\\x_runner_x\\x_make_common_x",
            "duration_seconds": 1.193760599999223,
            "ended_at": "2025-10-08T12:49:09.073571+00:00",
            "exit": 1,
            "repo": "x_make_common_x",
            "repo_hash": "efd209d80ef5824b22ee2bff32e5240bf18c486bc80ba0b1179b023293c97df3",
            "repo_path": "C:\\x_runner_x\\x_make_common_x",
            "started_at": "2025-10-08T12:49:07.879811+00:00",
            "stderr": "Error processing line 1 of C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\distutils-precedence.pth:\n\n  Traceback (most recent call last):\n    File \"<frozen site>\", line 207, in addpackage\n    File \"<string>\", line 1, in <module>\n  AttributeError: module '_distutils_hack' has no attribute 'add_shim'\n\nRemainder of file ignored\nError processing line 1 of C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\distutils-precedence.pth:\n\n  Traceback (most recent call last):\n    File \"<frozen site>\", line 207, in addpackage\n    File \"<string>\", line 1, in <module>\n  AttributeError: module '_distutils_hack' has no attribute 'add_shim'\n\nRemainder of file ignored\n",
            "stdout": "c:\\x_runner_x\\x_make_common_x\\x_http_client_x.py\n  c:\\x_runner_x\\x_make_common_x\\x_http_client_x.py:34:30 - error: \"Client\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n  c:\\x_runner_x\\x_make_common_x\\x_http_client_x.py:60:22 - error: \"HTTPError\" is not a known attribute of module \"httpx\" (reportAttributeAccessIssue)\n2 errors, 0 warnings, 0 informations\n",
            "tool": "pyright",
            "tool_module": "pyright",
            "tool_version": "pyright 1.1.406"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--fix",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_github_clones_x",
            "duration_seconds": 0.09361419998458587,
            "ended_at": "2025-10-08T12:49:09.239483+00:00",
            "exit": 1,
            "repo": "x_make_github_clones_x",
            "repo_hash": "fd6bace1c5c1653230e2348eedfc6bd569ce6922eae607cfa682c5c5238bb3dc",
            "repo_path": "C:\\x_runner_x\\x_make_github_clones_x",
            "started_at": "2025-10-08T12:49:09.145868+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_make_github_clones_x.py:18:29\n   |\n16 | import time\n17 | import urllib.request\n18 | from collections.abc import Callable, Iterable\n   |                             ^^^^^^^^\n19 | from dataclasses import dataclass\n20 | from http.client import HTTPResponse\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_github_clones_x.py:18:39\n   |\n16 | import time\n17 | import urllib.request\n18 | from collections.abc import Callable, Iterable\n   |                                       ^^^^^^^^\n19 | from dataclasses import dataclass\n20 | from http.client import HTTPResponse\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `http.client.HTTPResponse` into a type-checking block\n  --> x_cls_make_github_clones_x.py:20:25\n   |\n18 | from collections.abc import Callable, Iterable\n19 | from dataclasses import dataclass\n20 | from http.client import HTTPResponse\n   |                         ^^^^^^^^^^^^\n21 | from pathlib import Path\n22 | from typing import TypeGuard, cast\n   |\nhelp: Move into type-checking block\n\nSIM110 Use `return all(isinstance(key, str) for key in dict_obj.keys())` instead of `for` loop\n  --> x_cls_make_github_clones_x.py:37:5\n   |\n35 |           return False\n36 |       dict_obj = cast(\"dict[object, object]\", data)\n37 | /     for key in dict_obj.keys():\n38 | |         if not isinstance(key, str):\n39 | |             return False\n40 | |     return True\n   | |_______________^\n   |\nhelp: Replace with `return all(isinstance(key, str) for key in dict_obj.keys())`\n\nSIM118 Use `key in dict` instead of `key in dict.keys()`\n  --> x_cls_make_github_clones_x.py:37:9\n   |\n35 |         return False\n36 |     dict_obj = cast(\"dict[object, object]\", data)\n37 |     for key in dict_obj.keys():\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n38 |         if not isinstance(key, str):\n39 |             return False\n   |\nhelp: Remove `.keys()`\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_github_clones_x.py:61:34\n   |\n60 |     def resolved_clone_url(\n61 |         self, token: str | None, allow_token_clone: bool\n   |                                  ^^^^^^^^^^^^^^^^^\n62 |     ) -> str:\n63 |         base_url = self.clone_url or self.ssh_url or \"\"\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:108:12\n    |\n106 |     try:\n107 |         print(message)\n108 |     except Exception:\n    |            ^^^^^^^^^\n109 |         try:\n110 |             sys.stdout.write(message + \"\\n\")\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_github_clones_x.py:109:9\n    |\n107 |           print(message)\n108 |       except Exception:\n109 | /         try:\n110 | |             sys.stdout.write(message + \"\\n\")\n111 | |         except Exception:\n112 | |             pass\n    | |________________^\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:111:9\n    |\n109 |           try:\n110 |               sys.stdout.write(message + \"\\n\")\n111 | /         except Exception:\n112 | |             pass\n    | |________________^\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:111:16\n    |\n109 |         try:\n110 |             sys.stdout.write(message + \"\\n\")\n111 |         except Exception:\n    |                ^^^^^^^^^\n112 |             pass\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:119:12\n    |\n117 |     try:\n118 |         print(message, file=sys.stderr)\n119 |     except Exception:\n    |            ^^^^^^^^^\n120 |         try:\n121 |             sys.stderr.write(message + \"\\n\")\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_github_clones_x.py:120:9\n    |\n118 |           print(message, file=sys.stderr)\n119 |       except Exception:\n120 | /         try:\n121 | |             sys.stderr.write(message + \"\\n\")\n122 | |         except Exception:\n123 | |             pass\n    | |________________^\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:122:9\n    |\n120 |           try:\n121 |               sys.stderr.write(message + \"\\n\")\n122 | /         except Exception:\n123 | |             pass\n    | |________________^\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:122:16\n    |\n120 |         try:\n121 |             sys.stderr.write(message + \"\\n\")\n122 |         except Exception:\n    |                ^^^^^^^^^\n123 |             pass\n    |\n\nS105 Possible hardcoded password assigned to: \"TOKEN_ENV_VAR\"\n   --> x_cls_make_github_clones_x.py:129:26\n    |\n127 |     DEFAULT_TARGET_DIR: str | None = None  # dynamic; set after helper defined\n128 |     GIT_BIN: str = \"git\"\n129 |     TOKEN_ENV_VAR: str = \"GITHUB_TOKEN\"\n    |                          ^^^^^^^^^^^^^^\n130 |     ALLOW_TOKEN_CLONE_ENV: str = \"X_ALLOW_TOKEN_CLONE\"\n131 |     RECLONE_ON_CORRUPT: bool = True\n    |\n\nS105 Possible hardcoded password assigned to: \"ALLOW_TOKEN_CLONE_ENV\"\n   --> x_cls_make_github_clones_x.py:130:34\n    |\n128 |     GIT_BIN: str = \"git\"\n129 |     TOKEN_ENV_VAR: str = \"GITHUB_TOKEN\"\n130 |     ALLOW_TOKEN_CLONE_ENV: str = \"X_ALLOW_TOKEN_CLONE\"\n    |                                  ^^^^^^^^^^^^^^^^^^^^^\n131 |     RECLONE_ON_CORRUPT: bool = True\n132 |     # Auto-reclone/repair is enabled by default. The implementation performs a\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:143:38\n    |\n142 |     @classmethod\n143 |     def get_env_bool(cls, name: str, default: bool = False) -> bool:\n    |                                      ^^^^^^^\n144 |         env_value = os.environ.get(name)\n145 |         if env_value is None:\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:143:38\n    |\n142 |     @classmethod\n143 |     def get_env_bool(cls, name: str, default: bool = False) -> bool:\n    |                                      ^^^^^^^\n144 |         env_value = os.environ.get(name)\n145 |         if env_value is None:\n    |\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_github_clones_x.py:152:16\n    |\n150 |         self, args: Iterable[str], *, check: bool = False\n151 |     ) -> subprocess.CompletedProcess[str]:\n152 |         return subprocess.run(\n    |                ^^^^^^^^^^^^^^\n153 |             list(args), check=check, capture_output=True, text=True\n154 |         )\n    |\n\nFBT003 Boolean positional value in function call\n   --> x_cls_make_github_clones_x.py:161:62\n    |\n159 |     @property\n160 |     def allow_token_clone(self) -> bool:\n161 |         return self.get_env_bool(self.ALLOW_TOKEN_CLONE_ENV, False)\n    |                                                              ^^^^^\n162 |\n163 |     def __init__(self, ctx: object | None = None) -> None:\n    |\n\nN801 Class name `x_cls_make_github_clones_x` should use CapWords convention\n   --> x_cls_make_github_clones_x.py:167:7\n    |\n167 | class x_cls_make_github_clones_x(BaseMake):\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |     PER_PAGE = 100\n169 |     USER_AGENT = \"clone-script\"\n    |\n\nPLR0913 Too many arguments in function definition (8 > 5)\n   --> x_cls_make_github_clones_x.py:171:9\n    |\n169 |     USER_AGENT = \"clone-script\"\n170 |\n171 |     def __init__(\n    |         ^^^^^^^^\n172 |         self,\n173 |         username: str | None = None,\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:175:9\n    |\n173 |         username: str | None = None,\n174 |         target_dir: str | None = None,\n175 |         shallow: bool = False,\n    |         ^^^^^^^\n176 |         include_forks: bool = False,\n177 |         force_reclone: bool = False,\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:175:9\n    |\n173 |         username: str | None = None,\n174 |         target_dir: str | None = None,\n175 |         shallow: bool = False,\n    |         ^^^^^^^\n176 |         include_forks: bool = False,\n177 |         force_reclone: bool = False,\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:176:9\n    |\n174 |         target_dir: str | None = None,\n175 |         shallow: bool = False,\n176 |         include_forks: bool = False,\n    |         ^^^^^^^^^^^^^\n177 |         force_reclone: bool = False,\n178 |         names: list[str] | str | None = None,\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:176:9\n    |\n174 |         target_dir: str | None = None,\n175 |         shallow: bool = False,\n176 |         include_forks: bool = False,\n    |         ^^^^^^^^^^^^^\n177 |         force_reclone: bool = False,\n178 |         names: list[str] | str | None = None,\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:177:9\n    |\n175 |         shallow: bool = False,\n176 |         include_forks: bool = False,\n177 |         force_reclone: bool = False,\n    |         ^^^^^^^^^^^^^\n178 |         names: list[str] | str | None = None,\n179 |         token: str | None = None,\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:177:9\n    |\n175 |         shallow: bool = False,\n176 |         include_forks: bool = False,\n177 |         force_reclone: bool = False,\n    |         ^^^^^^^^^^^^^\n178 |         names: list[str] | str | None = None,\n179 |         token: str | None = None,\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:180:9\n    |\n178 |         names: list[str] | str | None = None,\n179 |         token: str | None = None,\n180 |         include_private: bool = True,\n    |         ^^^^^^^^^^^^^^^\n181 |         **_: object,\n182 |     ) -> None:\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:180:9\n    |\n178 |         names: list[str] | str | None = None,\n179 |         token: str | None = None,\n180 |         include_private: bool = True,\n    |         ^^^^^^^^^^^^^^^\n181 |         **_: object,\n182 |     ) -> None:\n    |\n\nS310 Audit URL open for permitted schemes. Allowing use of `file:` or custom schemes is often unexpected.\n   --> x_cls_make_github_clones_x.py:207:15\n    |\n205 |         self, url: str, headers: dict[str, str] | None = None\n206 |     ) -> list[JsonDict]:\n207 |         req = urllib.request.Request(url, headers=headers or {})\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n208 |         with _urlopen(req) as resp:\n209 |             raw_body = resp.read()\n    |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_make_github_clones_x.py:217:21\n    |\n215 |             for entry_obj in payload:\n216 |                 if _is_json_dict(entry_obj):\n217 |                     result.append(entry_obj)\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^\n218 |         return result\n    |\nhelp: Replace for loop with list.extend\n\nC901 `fetch_repos` is too complex (14 > 10)\n   --> x_cls_make_github_clones_x.py:220:9\n    |\n218 |         return result\n219 |\n220 |     def fetch_repos(\n    |         ^^^^^^^^^^^\n221 |         self, username: str | None = None, include_forks: bool | None = None\n222 |     ) -> list[RepoRecord]:\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:221:44\n    |\n220 |     def fetch_repos(\n221 |         self, username: str | None = None, include_forks: bool | None = None\n    |                                            ^^^^^^^^^^^^^\n222 |     ) -> list[RepoRecord]:\n223 |         username = username or self.username\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_github_clones_x.py:228:19\n    |\n226 |         )\n227 |         if not username and not self.token:\n228 |             raise RuntimeError(\"username or token required\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n229 |         per_page = self.PER_PAGE\n230 |         headers: dict[str, str] = {\"User-Agent\": self.USER_AGENT}\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_github_clones_x.py:228:32\n    |\n226 |         )\n227 |         if not username and not self.token:\n228 |             raise RuntimeError(\"username or token required\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n229 |         per_page = self.PER_PAGE\n230 |         headers: dict[str, str] = {\"User-Agent\": self.USER_AGENT}\n    |\nhelp: Assign to variable; remove string literal\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:242:24\n    |\n240 |                 try:\n241 |                     data_list = self._request_json(url, headers=headers)\n242 |                 except Exception:\n    |                        ^^^^^^^^^\n243 |                     break\n244 |                 if not data_list:\n    |\n\nC901 `_clone_or_update_repo` is too complex (11 > 10)\n   --> x_cls_make_github_clones_x.py:272:9\n    |\n270 |         return repos\n271 |\n272 |     def _clone_or_update_repo(self, repo_dir: str, git_url: str) -> bool:\n    |         ^^^^^^^^^^^^^^^^^^^^^\n273 |         # If the repo is missing, clone it\n274 |         if not os.path.exists(repo_dir):\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:274:16\n    |\n272 |     def _clone_or_update_repo(self, repo_dir: str, git_url: str) -> bool:\n273 |         # If the repo is missing, clone it\n274 |         if not os.path.exists(repo_dir):\n    |                ^^^^^^^^^^^^^^\n275 |             _info(f\"Cloning {git_url} into {repo_dir}\")\n276 |             args = [self.GIT_BIN, \"clone\", git_url, repo_dir]\n    |\nhelp: Replace with `Path(...).exists()`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:357:20\n    |\n355 |                     if pop.returncode != 0:\n356 |                         _error(\"stash pop failed:\", pop.stderr or pop.stdout)\n357 |             except Exception as e:\n    |                    ^^^^^^^^^\n358 |                 _error(\"failed to pop stash:\", e)\n    |\n\nSIM103 Return the condition `bool(self._clone_to_temp_swap(repo_dir, git_url))` directly\n   --> x_cls_make_github_clones_x.py:374:13\n    |\n373 |               # Fallback: clone-to-temp and atomic swap. Fail fast if this fails.\n374 | /             if self._clone_to_temp_swap(repo_dir, git_url):\n375 | |                 return True\n376 | |\n377 | |             return False\n    | |________________________^\n378 |           except Exception as exc:\n379 |               _error(\"exception while updating:\", exc)\n    |\nhelp: Replace with `return bool(self._clone_to_temp_swap(repo_dir, git_url))`\n\nTRY300 Consider moving this statement to an `else` block\n   --> x_cls_make_github_clones_x.py:377:13\n    |\n375 |                 return True\n376 |\n377 |             return False\n    |             ^^^^^^^^^^^^\n378 |         except Exception as exc:\n379 |             _error(\"exception while updating:\", exc)\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:378:16\n    |\n377 |             return False\n378 |         except Exception as exc:\n    |                ^^^^^^^^^\n379 |             _error(\"exception while updating:\", exc)\n380 |             return False\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:394:16\n    |\n392 |         \"\"\"\n393 |         # If missing, just clone\n394 |         if not os.path.exists(repo_dir):\n    |                ^^^^^^^^^^^^^^\n395 |             return self._clone_or_update_repo(repo_dir, git_url)\n    |\nhelp: Replace with `Path(...).exists()`\n\nTRY300 Consider moving this statement to an `else` block\n   --> x_cls_make_github_clones_x.py:479:13\n    |\n477 |                     _error(\"stash pop failed:\", pop.stderr or pop.stdout)\n478 |\n479 |             return ok\n    |             ^^^^^^^^^\n480 |         except Exception as e:\n481 |             _error(\"force refresh exception:\", e)\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:480:16\n    |\n479 |             return ok\n480 |         except Exception as e:\n    |                ^^^^^^^^^\n481 |             _error(\"force refresh exception:\", e)\n482 |             return False\n    |\n\nC901 `_clone_to_temp_swap` is too complex (24 > 10)\n   --> x_cls_make_github_clones_x.py:484:9\n    |\n482 |             return False\n483 |\n484 |     def _clone_to_temp_swap(self, repo_dir: str, git_url: str) -> bool:\n    |         ^^^^^^^^^^^^^^^^^^^\n485 |         \"\"\"Clone into a temporary directory and atomically swap with the\n486 |         existing repo dir. Returns True on success, False on failure.\n    |\n\nPLR0912 Too many branches (24 > 12)\n   --> x_cls_make_github_clones_x.py:484:9\n    |\n482 |             return False\n483 |\n484 |     def _clone_to_temp_swap(self, repo_dir: str, git_url: str) -> bool:\n    |         ^^^^^^^^^^^^^^^^^^^\n485 |         \"\"\"Clone into a temporary directory and atomically swap with the\n486 |         existing repo dir. Returns True on success, False on failure.\n    |\n\nPLR0915 Too many statements (63 > 50)\n   --> x_cls_make_github_clones_x.py:484:9\n    |\n482 |             return False\n483 |\n484 |     def _clone_to_temp_swap(self, repo_dir: str, git_url: str) -> bool:\n    |         ^^^^^^^^^^^^^^^^^^^\n485 |         \"\"\"Clone into a temporary directory and atomically swap with the\n486 |         existing repo dir. Returns True on success, False on failure.\n    |\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_make_github_clones_x.py:495:18\n    |\n493 |         - on any failure attempt to restore original state and return False\n494 |         \"\"\"\n495 |         parent = os.path.dirname(repo_dir)\n    |                  ^^^^^^^^^^^^^^^\n496 |         base = os.path.basename(repo_dir)\n497 |         ts = int(time.time())\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH119 `os.path.basename()` should be replaced by `Path.name`\n   --> x_cls_make_github_clones_x.py:496:16\n    |\n494 |         \"\"\"\n495 |         parent = os.path.dirname(repo_dir)\n496 |         base = os.path.basename(repo_dir)\n    |                ^^^^^^^^^^^^^^^^\n497 |         ts = int(time.time())\n498 |         tmp_dir = os.path.join(parent, f\".{base}.tmp.{ts}\")\n    |\nhelp: Replace with `Path(...).name`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_make_github_clones_x.py:498:19\n    |\n496 |         base = os.path.basename(repo_dir)\n497 |         ts = int(time.time())\n498 |         tmp_dir = os.path.join(parent, f\".{base}.tmp.{ts}\")\n    |                   ^^^^^^^^^^^^\n499 |         bak_dir = os.path.join(parent, f\".{base}.bak.{ts}\")\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_make_github_clones_x.py:499:19\n    |\n497 |         ts = int(time.time())\n498 |         tmp_dir = os.path.join(parent, f\".{base}.tmp.{ts}\")\n499 |         bak_dir = os.path.join(parent, f\".{base}.bak.{ts}\")\n    |                   ^^^^^^^^^^^^\n500 |\n501 |         # Ensure parent exists\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_make_github_clones_x.py:503:13\n    |\n501 |         # Ensure parent exists\n502 |         try:\n503 |             os.makedirs(parent, exist_ok=True)\n    |             ^^^^^^^^^^^\n504 |         except Exception:\n505 |             return False\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:504:16\n    |\n502 |         try:\n503 |             os.makedirs(parent, exist_ok=True)\n504 |         except Exception:\n    |                ^^^^^^^^^\n505 |             return False\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:517:20\n    |\n515 |             # clone failed; retry per CLONE_RETRIES\n516 |             try:\n517 |                 if os.path.exists(tmp_dir):\n    |                    ^^^^^^^^^^^^^^\n518 |                     shutil.rmtree(tmp_dir)\n519 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:519:13\n    |\n517 |                   if os.path.exists(tmp_dir):\n518 |                       shutil.rmtree(tmp_dir)\n519 | /             except Exception:\n520 | |                 pass\n    | |____________________^\n521 |           else:\n522 |               # All clone attempts failed\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:519:20\n    |\n517 |                 if os.path.exists(tmp_dir):\n518 |                     shutil.rmtree(tmp_dir)\n519 |             except Exception:\n    |                    ^^^^^^^^^\n520 |                 pass\n521 |         else:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:524:20\n    |\n522 |             # All clone attempts failed\n523 |             try:\n524 |                 if os.path.exists(tmp_dir):\n    |                    ^^^^^^^^^^^^^^\n525 |                     shutil.rmtree(tmp_dir)\n526 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:526:13\n    |\n524 |                   if os.path.exists(tmp_dir):\n525 |                       shutil.rmtree(tmp_dir)\n526 | /             except Exception:\n527 | |                 pass\n    | |____________________^\n528 |               return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:526:20\n    |\n524 |                 if os.path.exists(tmp_dir):\n525 |                     shutil.rmtree(tmp_dir)\n526 |             except Exception:\n    |                    ^^^^^^^^^\n527 |                 pass\n528 |             return False\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:532:16\n    |\n530 |         # At this point tmp_dir exists and contains a fresh clone. Swap it in.\n531 |         try:\n532 |             if os.path.exists(repo_dir):\n    |                ^^^^^^^^^^^^^^\n533 |                 # Move current repo to backup\n534 |                 try:\n    |\nhelp: Replace with `Path(...).exists()`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:536:24\n    |\n534 |                 try:\n535 |                     shutil.move(repo_dir, bak_dir)\n536 |                 except Exception:\n    |                        ^^^^^^^^^\n537 |                     # If move fails, clean tmp and fail\n538 |                     try:\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_github_clones_x.py:538:21\n    |\n536 |                   except Exception:\n537 |                       # If move fails, clean tmp and fail\n538 | /                     try:\n539 | |                         shutil.rmtree(tmp_dir)\n540 | |                     except Exception:\n541 | |                         pass\n    | |____________________________^\n542 |                       return False\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:540:21\n    |\n538 |                       try:\n539 |                           shutil.rmtree(tmp_dir)\n540 | /                     except Exception:\n541 | |                         pass\n    | |____________________________^\n542 |                       return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:540:28\n    |\n538 |                     try:\n539 |                         shutil.rmtree(tmp_dir)\n540 |                     except Exception:\n    |                            ^^^^^^^^^\n541 |                         pass\n542 |                     return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:547:20\n    |\n545 |             try:\n546 |                 shutil.move(tmp_dir, repo_dir)\n547 |             except Exception:\n    |                    ^^^^^^^^^\n548 |                 # try to restore from backup\n549 |                 try:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:550:24\n    |\n548 |                 # try to restore from backup\n549 |                 try:\n550 |                     if os.path.exists(bak_dir) and not os.path.exists(\n    |                        ^^^^^^^^^^^^^^\n551 |                         repo_dir\n552 |                     ):\n    |\nhelp: Replace with `Path(...).exists()`\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:550:56\n    |\n548 |                 # try to restore from backup\n549 |                 try:\n550 |                     if os.path.exists(bak_dir) and not os.path.exists(\n    |                                                        ^^^^^^^^^^^^^^\n551 |                         repo_dir\n552 |                     ):\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:554:17\n    |\n552 |                       ):\n553 |                           shutil.move(bak_dir, repo_dir)\n554 | /                 except Exception:\n555 | |                     pass\n    | |________________________^\n556 |                   try:\n557 |                       if os.path.exists(tmp_dir):\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:554:24\n    |\n552 |                     ):\n553 |                         shutil.move(bak_dir, repo_dir)\n554 |                 except Exception:\n    |                        ^^^^^^^^^\n555 |                     pass\n556 |                 try:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:557:24\n    |\n555 |                     pass\n556 |                 try:\n557 |                     if os.path.exists(tmp_dir):\n    |                        ^^^^^^^^^^^^^^\n558 |                         shutil.rmtree(tmp_dir)\n559 |                 except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:559:17\n    |\n557 |                       if os.path.exists(tmp_dir):\n558 |                           shutil.rmtree(tmp_dir)\n559 | /                 except Exception:\n560 | |                     pass\n    | |________________________^\n561 |                   return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:559:24\n    |\n557 |                     if os.path.exists(tmp_dir):\n558 |                         shutil.rmtree(tmp_dir)\n559 |                 except Exception:\n    |                        ^^^^^^^^^\n560 |                     pass\n561 |                 return False\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:565:20\n    |\n563 |             # Success: attempt to remove backup (best-effort)\n564 |             try:\n565 |                 if os.path.exists(bak_dir):\n    |                    ^^^^^^^^^^^^^^\n566 |                     shutil.rmtree(bak_dir)\n567 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:567:13\n    |\n565 |                   if os.path.exists(bak_dir):\n566 |                       shutil.rmtree(bak_dir)\n567 | /             except Exception:\n568 | |                 # ignore cleanup failures; leave backup for manual inspection\n569 | |                 pass\n    | |____________________^\n570 |\n571 |               return True\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:567:20\n    |\n565 |                 if os.path.exists(bak_dir):\n566 |                     shutil.rmtree(bak_dir)\n567 |             except Exception:\n    |                    ^^^^^^^^^\n568 |                 # ignore cleanup failures; leave backup for manual inspection\n569 |                 pass\n    |\n\nTRY300 Consider moving this statement to an `else` block\n   --> x_cls_make_github_clones_x.py:571:13\n    |\n569 |                 pass\n570 |\n571 |             return True\n    |             ^^^^^^^^^^^\n572 |         except Exception:\n573 |             # Unexpected failure: try to clean tmp and restore backup\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:572:16\n    |\n571 |             return True\n572 |         except Exception:\n    |                ^^^^^^^^^\n573 |             # Unexpected failure: try to clean tmp and restore backup\n574 |             try:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:575:20\n    |\n573 |             # Unexpected failure: try to clean tmp and restore backup\n574 |             try:\n575 |                 if os.path.exists(tmp_dir):\n    |                    ^^^^^^^^^^^^^^\n576 |                     shutil.rmtree(tmp_dir)\n577 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:577:13\n    |\n575 |                   if os.path.exists(tmp_dir):\n576 |                       shutil.rmtree(tmp_dir)\n577 | /             except Exception:\n578 | |                 pass\n    | |____________________^\n579 |               try:\n580 |                   if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:577:20\n    |\n575 |                 if os.path.exists(tmp_dir):\n576 |                     shutil.rmtree(tmp_dir)\n577 |             except Exception:\n    |                    ^^^^^^^^^\n578 |                 pass\n579 |             try:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:580:20\n    |\n578 |                 pass\n579 |             try:\n580 |                 if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n    |                    ^^^^^^^^^^^^^^\n581 |                     shutil.move(bak_dir, repo_dir)\n582 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:580:52\n    |\n578 |                 pass\n579 |             try:\n580 |                 if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n    |                                                    ^^^^^^^^^^^^^^\n581 |                     shutil.move(bak_dir, repo_dir)\n582 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:582:13\n    |\n580 |                   if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n581 |                       shutil.move(bak_dir, repo_dir)\n582 | /             except Exception:\n583 | |                 pass\n    | |____________________^\n584 |               return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:582:20\n    |\n580 |                 if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n581 |                     shutil.move(bak_dir, repo_dir)\n582 |             except Exception:\n    |                    ^^^^^^^^^\n583 |                 pass\n584 |             return False\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_make_github_clones_x.py:596:9\n    |\n594 |         if not dest:\n595 |             dest = _repo_parent_root()\n596 |         os.makedirs(dest, exist_ok=True)\n    |         ^^^^^^^^^^^\n597 |         try:\n598 |             repos = self.fetch_repos(username=username)\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:599:16\n    |\n597 |         try:\n598 |             repos = self.fetch_repos(username=username)\n599 |         except Exception as exc:\n    |                ^^^^^^^^^\n600 |             _error(\"failed to fetch repo list:\", exc)\n601 |             return 2\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_make_github_clones_x.py:612:24\n    |\n610 |             if not name:\n611 |                 continue\n612 |             repo_dir = os.path.join(dest, name)\n    |                        ^^^^^^^^^^^^\n613 |             git_url = self._repo_clone_url(repo)\n614 |             if not git_url:\n    |\n\nPLW0603 Using the global statement to update `_parent_root_cache` is discouraged\n   --> x_cls_make_github_clones_x.py:630:12\n    |\n629 | def _repo_parent_root() -> str:\n630 |     global _parent_root_cache\n    |            ^^^^^^^^^^^^^^^^^^\n631 |     if _parent_root_cache is not None:\n632 |         return _parent_root_cache\n    |\n\nPLW0603 Using the global statement to update `_parent_root_cache` is discouraged\n   --> x_cls_make_github_clones_x.py:630:12\n    |\n629 | def _repo_parent_root() -> str:\n630 |     global _parent_root_cache\n    |            ^^^^^^^^^^^^^^^^^^\n631 |     if _parent_root_cache is not None:\n632 |         return _parent_root_cache\n    |\n\nE501 Line too long (94 > 88)\n   --> x_cls_make_github_clones_x.py:642:89\n    |\n642 | # Helper to normalize legacy hard-coded target_dir values (remove explicit legacy path checks)\n    |                                                                                         ^^^^^^\n643 | def _normalize_target_dir(val: str | None) -> str:\n644 |     return val or _repo_parent_root()\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:651:1\n    |\n649 |       if BaseMake.DEFAULT_TARGET_DIR is None:\n650 |           BaseMake.DEFAULT_TARGET_DIR = _repo_parent_root()\n651 | / except Exception:\n652 | |     pass\n    | |________^\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:651:8\n    |\n649 |     if BaseMake.DEFAULT_TARGET_DIR is None:\n650 |         BaseMake.DEFAULT_TARGET_DIR = _repo_parent_root()\n651 | except Exception:\n    |        ^^^^^^^^^\n652 |     pass\n    |\n\nFound 94 errors.\nNo fixes available (10 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_fix",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "black",
                ".",
                "--line-length",
                "88",
                "--target-version",
                "py311",
                "--check",
                "--diff"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff",
            "cwd": "C:\\x_runner_x\\x_make_github_clones_x",
            "duration_seconds": 0.49326360001577996,
            "ended_at": "2025-10-08T12:49:09.733434+00:00",
            "exit": 1,
            "repo": "x_make_github_clones_x",
            "repo_hash": "fd6bace1c5c1653230e2348eedfc6bd569ce6922eae607cfa682c5c5238bb3dc",
            "repo_path": "C:\\x_runner_x\\x_make_github_clones_x",
            "started_at": "2025-10-08T12:49:09.240171+00:00",
            "stderr": "would reformat C:\\x_runner_x\\x_make_github_clones_x\\x_cls_make_github_clones_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
            "stdout": "--- C:\\x_runner_x\\x_make_github_clones_x\\x_cls_make_github_clones_x.py\t2025-10-08 05:55:06.664533+00:00\n+++ C:\\x_runner_x\\x_make_github_clones_x\\x_cls_make_github_clones_x.py\t2025-10-08 12:49:09.668259+00:00\n@@ -55,43 +55,31 @@\n     def matches(self, names: set[str] | None) -> bool:\n         if names is None:\n             return True\n         return self.name in names or self.full_name in names\n \n-    def resolved_clone_url(\n-        self, token: str | None, allow_token_clone: bool\n-    ) -> str:\n+    def resolved_clone_url(self, token: str | None, allow_token_clone: bool) -> str:\n         base_url = self.clone_url or self.ssh_url or \"\"\n-        if (\n-            token\n-            and allow_token_clone\n-            and base_url.startswith(\"https://\")\n-        ):\n+        if token and allow_token_clone and base_url.startswith(\"https://\"):\n             return base_url.replace(\"https://\", f\"https://{token}@\")\n         return base_url\n \n \n def _coerce_repo_record(data: JsonDict) -> RepoRecord | None:\n     name_obj = data.get(\"name\")\n     if not isinstance(name_obj, str) or not name_obj:\n         return None\n     full_name_obj = data.get(\"full_name\")\n     full_name = (\n-        full_name_obj\n-        if isinstance(full_name_obj, str) and full_name_obj\n-        else name_obj\n+        full_name_obj if isinstance(full_name_obj, str) and full_name_obj else name_obj\n     )\n     clone_url_obj = data.get(\"clone_url\")\n     clone_url = (\n-        clone_url_obj\n-        if isinstance(clone_url_obj, str) and clone_url_obj\n-        else None\n+        clone_url_obj if isinstance(clone_url_obj, str) and clone_url_obj else None\n     )\n     ssh_url_obj = data.get(\"ssh_url\")\n-    ssh_url = (\n-        ssh_url_obj if isinstance(ssh_url_obj, str) and ssh_url_obj else None\n-    )\n+    ssh_url = ssh_url_obj if isinstance(ssh_url_obj, str) and ssh_url_obj else None\n     fork_obj = data.get(\"fork\")\n     fork = fork_obj if isinstance(fork_obj, bool) else False\n     return RepoRecord(\n         name=name_obj,\n         full_name=full_name,\n@@ -147,13 +135,11 @@\n         return env_value.lower() in (\"1\", \"true\", \"yes\")\n \n     def run_cmd(\n         self, args: Iterable[str], *, check: bool = False\n     ) -> subprocess.CompletedProcess[str]:\n-        return subprocess.run(\n-            list(args), check=check, capture_output=True, text=True\n-        )\n+        return subprocess.run(list(args), check=check, capture_output=True, text=True)\n \n     def get_token(self) -> str | None:\n         return os.environ.get(self.TOKEN_ENV_VAR)\n \n     @property\n@@ -291,13 +277,11 @@\n         # - pop stash if we stashed\n         _info(f\"Updating {repo_dir}\")\n         stashed = False  # ensure defined for finally block\n         try:\n             # Fetch remote refs first\n-            self.run_cmd(\n-                [self.GIT_BIN, \"-C\", repo_dir, \"fetch\", \"--all\", \"--prune\"]\n-            )\n+            self.run_cmd([self.GIT_BIN, \"-C\", repo_dir, \"fetch\", \"--all\", \"--prune\"])\n \n             status = self.run_cmd(\n                 [self.GIT_BIN, \"-C\", repo_dir, \"status\", \"--porcelain\"],\n                 check=False,\n             )\n@@ -347,13 +331,11 @@\n             _error(\"pull failed:\", pull.stderr or pull.stdout)\n             return False\n         finally:\n             try:\n                 if stashed:\n-                    pop = self.run_cmd(\n-                        [self.GIT_BIN, \"-C\", repo_dir, \"stash\", \"pop\"]\n-                    )\n+                    pop = self.run_cmd([self.GIT_BIN, \"-C\", repo_dir, \"stash\", \"pop\"])\n                     if pop.returncode != 0:\n                         _error(\"stash pop failed:\", pop.stderr or pop.stdout)\n             except Exception as e:\n                 _error(\"failed to pop stash:\", e)\n \n@@ -394,13 +376,11 @@\n         if not os.path.exists(repo_dir):\n             return self._clone_or_update_repo(repo_dir, git_url)\n \n         try:\n             # Fetch first\n-            self.run_cmd(\n-                [self.GIT_BIN, \"-C\", repo_dir, \"fetch\", \"--all\", \"--prune\"]\n-            )\n+            self.run_cmd([self.GIT_BIN, \"-C\", repo_dir, \"fetch\", \"--all\", \"--prune\"])\n \n             status = self.run_cmd(\n                 [self.GIT_BIN, \"-C\", repo_dir, \"status\", \"--porcelain\"],\n                 check=False,\n             )\n@@ -468,13 +448,11 @@\n                         reset.stderr or reset.stdout,\n                     )\n \n             # Restore stashed changes if any\n             if stashed:\n-                pop = self.run_cmd(\n-                    [self.GIT_BIN, \"-C\", repo_dir, \"stash\", \"pop\"]\n-                )\n+                pop = self.run_cmd([self.GIT_BIN, \"-C\", repo_dir, \"stash\", \"pop\"])\n                 if pop.returncode != 0:\n                     _error(\"stash pop failed:\", pop.stderr or pop.stdout)\n \n             return ok\n         except Exception as e:\n@@ -545,13 +523,11 @@\n             try:\n                 shutil.move(tmp_dir, repo_dir)\n             except Exception:\n                 # try to restore from backup\n                 try:\n-                    if os.path.exists(bak_dir) and not os.path.exists(\n-                        repo_dir\n-                    ):\n+                    if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n                         shutil.move(bak_dir, repo_dir)\n                 except Exception:\n                     pass\n                 try:\n                     if os.path.exists(tmp_dir):\n@@ -584,13 +560,11 @@\n             return False\n \n     def _repo_clone_url(self, repo: RepoRecord) -> str:\n         return repo.resolved_clone_url(self.token, self.allow_token_clone)\n \n-    def sync(\n-        self, username: str | None = None, dest: str | None = None\n-    ) -> int:\n+    def sync(self, username: str | None = None, dest: str | None = None) -> int:\n         username = username or self.username\n         dest = dest or self.target_dir or self.DEFAULT_TARGET_DIR\n         if not dest:\n             dest = _repo_parent_root()\n         os.makedirs(dest, exist_ok=True)\n",
            "tool": "black",
            "tool_module": "black",
            "tool_version": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_github_clones_x",
            "duration_seconds": 0.10392610001144931,
            "ended_at": "2025-10-08T12:49:09.837821+00:00",
            "exit": 1,
            "repo": "x_make_github_clones_x",
            "repo_hash": "fd6bace1c5c1653230e2348eedfc6bd569ce6922eae607cfa682c5c5238bb3dc",
            "repo_path": "C:\\x_runner_x\\x_make_github_clones_x",
            "started_at": "2025-10-08T12:49:09.733896+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_make_github_clones_x.py:18:29\n   |\n16 | import time\n17 | import urllib.request\n18 | from collections.abc import Callable, Iterable\n   |                             ^^^^^^^^\n19 | from dataclasses import dataclass\n20 | from http.client import HTTPResponse\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_github_clones_x.py:18:39\n   |\n16 | import time\n17 | import urllib.request\n18 | from collections.abc import Callable, Iterable\n   |                                       ^^^^^^^^\n19 | from dataclasses import dataclass\n20 | from http.client import HTTPResponse\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `http.client.HTTPResponse` into a type-checking block\n  --> x_cls_make_github_clones_x.py:20:25\n   |\n18 | from collections.abc import Callable, Iterable\n19 | from dataclasses import dataclass\n20 | from http.client import HTTPResponse\n   |                         ^^^^^^^^^^^^\n21 | from pathlib import Path\n22 | from typing import TypeGuard, cast\n   |\nhelp: Move into type-checking block\n\nSIM110 Use `return all(isinstance(key, str) for key in dict_obj.keys())` instead of `for` loop\n  --> x_cls_make_github_clones_x.py:37:5\n   |\n35 |           return False\n36 |       dict_obj = cast(\"dict[object, object]\", data)\n37 | /     for key in dict_obj.keys():\n38 | |         if not isinstance(key, str):\n39 | |             return False\n40 | |     return True\n   | |_______________^\n   |\nhelp: Replace with `return all(isinstance(key, str) for key in dict_obj.keys())`\n\nSIM118 Use `key in dict` instead of `key in dict.keys()`\n  --> x_cls_make_github_clones_x.py:37:9\n   |\n35 |         return False\n36 |     dict_obj = cast(\"dict[object, object]\", data)\n37 |     for key in dict_obj.keys():\n   |         ^^^^^^^^^^^^^^^^^^^^^^\n38 |         if not isinstance(key, str):\n39 |             return False\n   |\nhelp: Remove `.keys()`\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_github_clones_x.py:61:34\n   |\n60 |     def resolved_clone_url(\n61 |         self, token: str | None, allow_token_clone: bool\n   |                                  ^^^^^^^^^^^^^^^^^\n62 |     ) -> str:\n63 |         base_url = self.clone_url or self.ssh_url or \"\"\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:108:12\n    |\n106 |     try:\n107 |         print(message)\n108 |     except Exception:\n    |            ^^^^^^^^^\n109 |         try:\n110 |             sys.stdout.write(message + \"\\n\")\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_github_clones_x.py:109:9\n    |\n107 |           print(message)\n108 |       except Exception:\n109 | /         try:\n110 | |             sys.stdout.write(message + \"\\n\")\n111 | |         except Exception:\n112 | |             pass\n    | |________________^\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:111:9\n    |\n109 |           try:\n110 |               sys.stdout.write(message + \"\\n\")\n111 | /         except Exception:\n112 | |             pass\n    | |________________^\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:111:16\n    |\n109 |         try:\n110 |             sys.stdout.write(message + \"\\n\")\n111 |         except Exception:\n    |                ^^^^^^^^^\n112 |             pass\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:119:12\n    |\n117 |     try:\n118 |         print(message, file=sys.stderr)\n119 |     except Exception:\n    |            ^^^^^^^^^\n120 |         try:\n121 |             sys.stderr.write(message + \"\\n\")\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_github_clones_x.py:120:9\n    |\n118 |           print(message, file=sys.stderr)\n119 |       except Exception:\n120 | /         try:\n121 | |             sys.stderr.write(message + \"\\n\")\n122 | |         except Exception:\n123 | |             pass\n    | |________________^\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:122:9\n    |\n120 |           try:\n121 |               sys.stderr.write(message + \"\\n\")\n122 | /         except Exception:\n123 | |             pass\n    | |________________^\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:122:16\n    |\n120 |         try:\n121 |             sys.stderr.write(message + \"\\n\")\n122 |         except Exception:\n    |                ^^^^^^^^^\n123 |             pass\n    |\n\nS105 Possible hardcoded password assigned to: \"TOKEN_ENV_VAR\"\n   --> x_cls_make_github_clones_x.py:129:26\n    |\n127 |     DEFAULT_TARGET_DIR: str | None = None  # dynamic; set after helper defined\n128 |     GIT_BIN: str = \"git\"\n129 |     TOKEN_ENV_VAR: str = \"GITHUB_TOKEN\"\n    |                          ^^^^^^^^^^^^^^\n130 |     ALLOW_TOKEN_CLONE_ENV: str = \"X_ALLOW_TOKEN_CLONE\"\n131 |     RECLONE_ON_CORRUPT: bool = True\n    |\n\nS105 Possible hardcoded password assigned to: \"ALLOW_TOKEN_CLONE_ENV\"\n   --> x_cls_make_github_clones_x.py:130:34\n    |\n128 |     GIT_BIN: str = \"git\"\n129 |     TOKEN_ENV_VAR: str = \"GITHUB_TOKEN\"\n130 |     ALLOW_TOKEN_CLONE_ENV: str = \"X_ALLOW_TOKEN_CLONE\"\n    |                                  ^^^^^^^^^^^^^^^^^^^^^\n131 |     RECLONE_ON_CORRUPT: bool = True\n132 |     # Auto-reclone/repair is enabled by default. The implementation performs a\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:143:38\n    |\n142 |     @classmethod\n143 |     def get_env_bool(cls, name: str, default: bool = False) -> bool:\n    |                                      ^^^^^^^\n144 |         env_value = os.environ.get(name)\n145 |         if env_value is None:\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:143:38\n    |\n142 |     @classmethod\n143 |     def get_env_bool(cls, name: str, default: bool = False) -> bool:\n    |                                      ^^^^^^^\n144 |         env_value = os.environ.get(name)\n145 |         if env_value is None:\n    |\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_github_clones_x.py:152:16\n    |\n150 |         self, args: Iterable[str], *, check: bool = False\n151 |     ) -> subprocess.CompletedProcess[str]:\n152 |         return subprocess.run(\n    |                ^^^^^^^^^^^^^^\n153 |             list(args), check=check, capture_output=True, text=True\n154 |         )\n    |\n\nFBT003 Boolean positional value in function call\n   --> x_cls_make_github_clones_x.py:161:62\n    |\n159 |     @property\n160 |     def allow_token_clone(self) -> bool:\n161 |         return self.get_env_bool(self.ALLOW_TOKEN_CLONE_ENV, False)\n    |                                                              ^^^^^\n162 |\n163 |     def __init__(self, ctx: object | None = None) -> None:\n    |\n\nN801 Class name `x_cls_make_github_clones_x` should use CapWords convention\n   --> x_cls_make_github_clones_x.py:167:7\n    |\n167 | class x_cls_make_github_clones_x(BaseMake):\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n168 |     PER_PAGE = 100\n169 |     USER_AGENT = \"clone-script\"\n    |\n\nPLR0913 Too many arguments in function definition (8 > 5)\n   --> x_cls_make_github_clones_x.py:171:9\n    |\n169 |     USER_AGENT = \"clone-script\"\n170 |\n171 |     def __init__(\n    |         ^^^^^^^^\n172 |         self,\n173 |         username: str | None = None,\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:175:9\n    |\n173 |         username: str | None = None,\n174 |         target_dir: str | None = None,\n175 |         shallow: bool = False,\n    |         ^^^^^^^\n176 |         include_forks: bool = False,\n177 |         force_reclone: bool = False,\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:175:9\n    |\n173 |         username: str | None = None,\n174 |         target_dir: str | None = None,\n175 |         shallow: bool = False,\n    |         ^^^^^^^\n176 |         include_forks: bool = False,\n177 |         force_reclone: bool = False,\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:176:9\n    |\n174 |         target_dir: str | None = None,\n175 |         shallow: bool = False,\n176 |         include_forks: bool = False,\n    |         ^^^^^^^^^^^^^\n177 |         force_reclone: bool = False,\n178 |         names: list[str] | str | None = None,\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:176:9\n    |\n174 |         target_dir: str | None = None,\n175 |         shallow: bool = False,\n176 |         include_forks: bool = False,\n    |         ^^^^^^^^^^^^^\n177 |         force_reclone: bool = False,\n178 |         names: list[str] | str | None = None,\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:177:9\n    |\n175 |         shallow: bool = False,\n176 |         include_forks: bool = False,\n177 |         force_reclone: bool = False,\n    |         ^^^^^^^^^^^^^\n178 |         names: list[str] | str | None = None,\n179 |         token: str | None = None,\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:177:9\n    |\n175 |         shallow: bool = False,\n176 |         include_forks: bool = False,\n177 |         force_reclone: bool = False,\n    |         ^^^^^^^^^^^^^\n178 |         names: list[str] | str | None = None,\n179 |         token: str | None = None,\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:180:9\n    |\n178 |         names: list[str] | str | None = None,\n179 |         token: str | None = None,\n180 |         include_private: bool = True,\n    |         ^^^^^^^^^^^^^^^\n181 |         **_: object,\n182 |     ) -> None:\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_github_clones_x.py:180:9\n    |\n178 |         names: list[str] | str | None = None,\n179 |         token: str | None = None,\n180 |         include_private: bool = True,\n    |         ^^^^^^^^^^^^^^^\n181 |         **_: object,\n182 |     ) -> None:\n    |\n\nS310 Audit URL open for permitted schemes. Allowing use of `file:` or custom schemes is often unexpected.\n   --> x_cls_make_github_clones_x.py:207:15\n    |\n205 |         self, url: str, headers: dict[str, str] | None = None\n206 |     ) -> list[JsonDict]:\n207 |         req = urllib.request.Request(url, headers=headers or {})\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n208 |         with _urlopen(req) as resp:\n209 |             raw_body = resp.read()\n    |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_make_github_clones_x.py:217:21\n    |\n215 |             for entry_obj in payload:\n216 |                 if _is_json_dict(entry_obj):\n217 |                     result.append(entry_obj)\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^\n218 |         return result\n    |\nhelp: Replace for loop with list.extend\n\nC901 `fetch_repos` is too complex (14 > 10)\n   --> x_cls_make_github_clones_x.py:220:9\n    |\n218 |         return result\n219 |\n220 |     def fetch_repos(\n    |         ^^^^^^^^^^^\n221 |         self, username: str | None = None, include_forks: bool | None = None\n222 |     ) -> list[RepoRecord]:\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_github_clones_x.py:221:44\n    |\n220 |     def fetch_repos(\n221 |         self, username: str | None = None, include_forks: bool | None = None\n    |                                            ^^^^^^^^^^^^^\n222 |     ) -> list[RepoRecord]:\n223 |         username = username or self.username\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_github_clones_x.py:228:19\n    |\n226 |         )\n227 |         if not username and not self.token:\n228 |             raise RuntimeError(\"username or token required\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n229 |         per_page = self.PER_PAGE\n230 |         headers: dict[str, str] = {\"User-Agent\": self.USER_AGENT}\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_github_clones_x.py:228:32\n    |\n226 |         )\n227 |         if not username and not self.token:\n228 |             raise RuntimeError(\"username or token required\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n229 |         per_page = self.PER_PAGE\n230 |         headers: dict[str, str] = {\"User-Agent\": self.USER_AGENT}\n    |\nhelp: Assign to variable; remove string literal\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:242:24\n    |\n240 |                 try:\n241 |                     data_list = self._request_json(url, headers=headers)\n242 |                 except Exception:\n    |                        ^^^^^^^^^\n243 |                     break\n244 |                 if not data_list:\n    |\n\nC901 `_clone_or_update_repo` is too complex (11 > 10)\n   --> x_cls_make_github_clones_x.py:272:9\n    |\n270 |         return repos\n271 |\n272 |     def _clone_or_update_repo(self, repo_dir: str, git_url: str) -> bool:\n    |         ^^^^^^^^^^^^^^^^^^^^^\n273 |         # If the repo is missing, clone it\n274 |         if not os.path.exists(repo_dir):\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:274:16\n    |\n272 |     def _clone_or_update_repo(self, repo_dir: str, git_url: str) -> bool:\n273 |         # If the repo is missing, clone it\n274 |         if not os.path.exists(repo_dir):\n    |                ^^^^^^^^^^^^^^\n275 |             _info(f\"Cloning {git_url} into {repo_dir}\")\n276 |             args = [self.GIT_BIN, \"clone\", git_url, repo_dir]\n    |\nhelp: Replace with `Path(...).exists()`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:357:20\n    |\n355 |                     if pop.returncode != 0:\n356 |                         _error(\"stash pop failed:\", pop.stderr or pop.stdout)\n357 |             except Exception as e:\n    |                    ^^^^^^^^^\n358 |                 _error(\"failed to pop stash:\", e)\n    |\n\nSIM103 Return the condition `bool(self._clone_to_temp_swap(repo_dir, git_url))` directly\n   --> x_cls_make_github_clones_x.py:374:13\n    |\n373 |               # Fallback: clone-to-temp and atomic swap. Fail fast if this fails.\n374 | /             if self._clone_to_temp_swap(repo_dir, git_url):\n375 | |                 return True\n376 | |\n377 | |             return False\n    | |________________________^\n378 |           except Exception as exc:\n379 |               _error(\"exception while updating:\", exc)\n    |\nhelp: Replace with `return bool(self._clone_to_temp_swap(repo_dir, git_url))`\n\nTRY300 Consider moving this statement to an `else` block\n   --> x_cls_make_github_clones_x.py:377:13\n    |\n375 |                 return True\n376 |\n377 |             return False\n    |             ^^^^^^^^^^^^\n378 |         except Exception as exc:\n379 |             _error(\"exception while updating:\", exc)\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:378:16\n    |\n377 |             return False\n378 |         except Exception as exc:\n    |                ^^^^^^^^^\n379 |             _error(\"exception while updating:\", exc)\n380 |             return False\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:394:16\n    |\n392 |         \"\"\"\n393 |         # If missing, just clone\n394 |         if not os.path.exists(repo_dir):\n    |                ^^^^^^^^^^^^^^\n395 |             return self._clone_or_update_repo(repo_dir, git_url)\n    |\nhelp: Replace with `Path(...).exists()`\n\nTRY300 Consider moving this statement to an `else` block\n   --> x_cls_make_github_clones_x.py:479:13\n    |\n477 |                     _error(\"stash pop failed:\", pop.stderr or pop.stdout)\n478 |\n479 |             return ok\n    |             ^^^^^^^^^\n480 |         except Exception as e:\n481 |             _error(\"force refresh exception:\", e)\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:480:16\n    |\n479 |             return ok\n480 |         except Exception as e:\n    |                ^^^^^^^^^\n481 |             _error(\"force refresh exception:\", e)\n482 |             return False\n    |\n\nC901 `_clone_to_temp_swap` is too complex (24 > 10)\n   --> x_cls_make_github_clones_x.py:484:9\n    |\n482 |             return False\n483 |\n484 |     def _clone_to_temp_swap(self, repo_dir: str, git_url: str) -> bool:\n    |         ^^^^^^^^^^^^^^^^^^^\n485 |         \"\"\"Clone into a temporary directory and atomically swap with the\n486 |         existing repo dir. Returns True on success, False on failure.\n    |\n\nPLR0912 Too many branches (24 > 12)\n   --> x_cls_make_github_clones_x.py:484:9\n    |\n482 |             return False\n483 |\n484 |     def _clone_to_temp_swap(self, repo_dir: str, git_url: str) -> bool:\n    |         ^^^^^^^^^^^^^^^^^^^\n485 |         \"\"\"Clone into a temporary directory and atomically swap with the\n486 |         existing repo dir. Returns True on success, False on failure.\n    |\n\nPLR0915 Too many statements (63 > 50)\n   --> x_cls_make_github_clones_x.py:484:9\n    |\n482 |             return False\n483 |\n484 |     def _clone_to_temp_swap(self, repo_dir: str, git_url: str) -> bool:\n    |         ^^^^^^^^^^^^^^^^^^^\n485 |         \"\"\"Clone into a temporary directory and atomically swap with the\n486 |         existing repo dir. Returns True on success, False on failure.\n    |\n\nPTH120 `os.path.dirname()` should be replaced by `Path.parent`\n   --> x_cls_make_github_clones_x.py:495:18\n    |\n493 |         - on any failure attempt to restore original state and return False\n494 |         \"\"\"\n495 |         parent = os.path.dirname(repo_dir)\n    |                  ^^^^^^^^^^^^^^^\n496 |         base = os.path.basename(repo_dir)\n497 |         ts = int(time.time())\n    |\nhelp: Replace with `Path(...).parent`\n\nPTH119 `os.path.basename()` should be replaced by `Path.name`\n   --> x_cls_make_github_clones_x.py:496:16\n    |\n494 |         \"\"\"\n495 |         parent = os.path.dirname(repo_dir)\n496 |         base = os.path.basename(repo_dir)\n    |                ^^^^^^^^^^^^^^^^\n497 |         ts = int(time.time())\n498 |         tmp_dir = os.path.join(parent, f\".{base}.tmp.{ts}\")\n    |\nhelp: Replace with `Path(...).name`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_make_github_clones_x.py:498:19\n    |\n496 |         base = os.path.basename(repo_dir)\n497 |         ts = int(time.time())\n498 |         tmp_dir = os.path.join(parent, f\".{base}.tmp.{ts}\")\n    |                   ^^^^^^^^^^^^\n499 |         bak_dir = os.path.join(parent, f\".{base}.bak.{ts}\")\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_make_github_clones_x.py:499:19\n    |\n497 |         ts = int(time.time())\n498 |         tmp_dir = os.path.join(parent, f\".{base}.tmp.{ts}\")\n499 |         bak_dir = os.path.join(parent, f\".{base}.bak.{ts}\")\n    |                   ^^^^^^^^^^^^\n500 |\n501 |         # Ensure parent exists\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_make_github_clones_x.py:503:13\n    |\n501 |         # Ensure parent exists\n502 |         try:\n503 |             os.makedirs(parent, exist_ok=True)\n    |             ^^^^^^^^^^^\n504 |         except Exception:\n505 |             return False\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:504:16\n    |\n502 |         try:\n503 |             os.makedirs(parent, exist_ok=True)\n504 |         except Exception:\n    |                ^^^^^^^^^\n505 |             return False\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:517:20\n    |\n515 |             # clone failed; retry per CLONE_RETRIES\n516 |             try:\n517 |                 if os.path.exists(tmp_dir):\n    |                    ^^^^^^^^^^^^^^\n518 |                     shutil.rmtree(tmp_dir)\n519 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:519:13\n    |\n517 |                   if os.path.exists(tmp_dir):\n518 |                       shutil.rmtree(tmp_dir)\n519 | /             except Exception:\n520 | |                 pass\n    | |____________________^\n521 |           else:\n522 |               # All clone attempts failed\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:519:20\n    |\n517 |                 if os.path.exists(tmp_dir):\n518 |                     shutil.rmtree(tmp_dir)\n519 |             except Exception:\n    |                    ^^^^^^^^^\n520 |                 pass\n521 |         else:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:524:20\n    |\n522 |             # All clone attempts failed\n523 |             try:\n524 |                 if os.path.exists(tmp_dir):\n    |                    ^^^^^^^^^^^^^^\n525 |                     shutil.rmtree(tmp_dir)\n526 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:526:13\n    |\n524 |                   if os.path.exists(tmp_dir):\n525 |                       shutil.rmtree(tmp_dir)\n526 | /             except Exception:\n527 | |                 pass\n    | |____________________^\n528 |               return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:526:20\n    |\n524 |                 if os.path.exists(tmp_dir):\n525 |                     shutil.rmtree(tmp_dir)\n526 |             except Exception:\n    |                    ^^^^^^^^^\n527 |                 pass\n528 |             return False\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:532:16\n    |\n530 |         # At this point tmp_dir exists and contains a fresh clone. Swap it in.\n531 |         try:\n532 |             if os.path.exists(repo_dir):\n    |                ^^^^^^^^^^^^^^\n533 |                 # Move current repo to backup\n534 |                 try:\n    |\nhelp: Replace with `Path(...).exists()`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:536:24\n    |\n534 |                 try:\n535 |                     shutil.move(repo_dir, bak_dir)\n536 |                 except Exception:\n    |                        ^^^^^^^^^\n537 |                     # If move fails, clean tmp and fail\n538 |                     try:\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_github_clones_x.py:538:21\n    |\n536 |                   except Exception:\n537 |                       # If move fails, clean tmp and fail\n538 | /                     try:\n539 | |                         shutil.rmtree(tmp_dir)\n540 | |                     except Exception:\n541 | |                         pass\n    | |____________________________^\n542 |                       return False\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:540:21\n    |\n538 |                       try:\n539 |                           shutil.rmtree(tmp_dir)\n540 | /                     except Exception:\n541 | |                         pass\n    | |____________________________^\n542 |                       return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:540:28\n    |\n538 |                     try:\n539 |                         shutil.rmtree(tmp_dir)\n540 |                     except Exception:\n    |                            ^^^^^^^^^\n541 |                         pass\n542 |                     return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:547:20\n    |\n545 |             try:\n546 |                 shutil.move(tmp_dir, repo_dir)\n547 |             except Exception:\n    |                    ^^^^^^^^^\n548 |                 # try to restore from backup\n549 |                 try:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:550:24\n    |\n548 |                 # try to restore from backup\n549 |                 try:\n550 |                     if os.path.exists(bak_dir) and not os.path.exists(\n    |                        ^^^^^^^^^^^^^^\n551 |                         repo_dir\n552 |                     ):\n    |\nhelp: Replace with `Path(...).exists()`\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:550:56\n    |\n548 |                 # try to restore from backup\n549 |                 try:\n550 |                     if os.path.exists(bak_dir) and not os.path.exists(\n    |                                                        ^^^^^^^^^^^^^^\n551 |                         repo_dir\n552 |                     ):\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:554:17\n    |\n552 |                       ):\n553 |                           shutil.move(bak_dir, repo_dir)\n554 | /                 except Exception:\n555 | |                     pass\n    | |________________________^\n556 |                   try:\n557 |                       if os.path.exists(tmp_dir):\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:554:24\n    |\n552 |                     ):\n553 |                         shutil.move(bak_dir, repo_dir)\n554 |                 except Exception:\n    |                        ^^^^^^^^^\n555 |                     pass\n556 |                 try:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:557:24\n    |\n555 |                     pass\n556 |                 try:\n557 |                     if os.path.exists(tmp_dir):\n    |                        ^^^^^^^^^^^^^^\n558 |                         shutil.rmtree(tmp_dir)\n559 |                 except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:559:17\n    |\n557 |                       if os.path.exists(tmp_dir):\n558 |                           shutil.rmtree(tmp_dir)\n559 | /                 except Exception:\n560 | |                     pass\n    | |________________________^\n561 |                   return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:559:24\n    |\n557 |                     if os.path.exists(tmp_dir):\n558 |                         shutil.rmtree(tmp_dir)\n559 |                 except Exception:\n    |                        ^^^^^^^^^\n560 |                     pass\n561 |                 return False\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:565:20\n    |\n563 |             # Success: attempt to remove backup (best-effort)\n564 |             try:\n565 |                 if os.path.exists(bak_dir):\n    |                    ^^^^^^^^^^^^^^\n566 |                     shutil.rmtree(bak_dir)\n567 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:567:13\n    |\n565 |                   if os.path.exists(bak_dir):\n566 |                       shutil.rmtree(bak_dir)\n567 | /             except Exception:\n568 | |                 # ignore cleanup failures; leave backup for manual inspection\n569 | |                 pass\n    | |____________________^\n570 |\n571 |               return True\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:567:20\n    |\n565 |                 if os.path.exists(bak_dir):\n566 |                     shutil.rmtree(bak_dir)\n567 |             except Exception:\n    |                    ^^^^^^^^^\n568 |                 # ignore cleanup failures; leave backup for manual inspection\n569 |                 pass\n    |\n\nTRY300 Consider moving this statement to an `else` block\n   --> x_cls_make_github_clones_x.py:571:13\n    |\n569 |                 pass\n570 |\n571 |             return True\n    |             ^^^^^^^^^^^\n572 |         except Exception:\n573 |             # Unexpected failure: try to clean tmp and restore backup\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:572:16\n    |\n571 |             return True\n572 |         except Exception:\n    |                ^^^^^^^^^\n573 |             # Unexpected failure: try to clean tmp and restore backup\n574 |             try:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:575:20\n    |\n573 |             # Unexpected failure: try to clean tmp and restore backup\n574 |             try:\n575 |                 if os.path.exists(tmp_dir):\n    |                    ^^^^^^^^^^^^^^\n576 |                     shutil.rmtree(tmp_dir)\n577 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:577:13\n    |\n575 |                   if os.path.exists(tmp_dir):\n576 |                       shutil.rmtree(tmp_dir)\n577 | /             except Exception:\n578 | |                 pass\n    | |____________________^\n579 |               try:\n580 |                   if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:577:20\n    |\n575 |                 if os.path.exists(tmp_dir):\n576 |                     shutil.rmtree(tmp_dir)\n577 |             except Exception:\n    |                    ^^^^^^^^^\n578 |                 pass\n579 |             try:\n    |\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:580:20\n    |\n578 |                 pass\n579 |             try:\n580 |                 if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n    |                    ^^^^^^^^^^^^^^\n581 |                     shutil.move(bak_dir, repo_dir)\n582 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_github_clones_x.py:580:52\n    |\n578 |                 pass\n579 |             try:\n580 |                 if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n    |                                                    ^^^^^^^^^^^^^^\n581 |                     shutil.move(bak_dir, repo_dir)\n582 |             except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:582:13\n    |\n580 |                   if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n581 |                       shutil.move(bak_dir, repo_dir)\n582 | /             except Exception:\n583 | |                 pass\n    | |____________________^\n584 |               return False\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:582:20\n    |\n580 |                 if os.path.exists(bak_dir) and not os.path.exists(repo_dir):\n581 |                     shutil.move(bak_dir, repo_dir)\n582 |             except Exception:\n    |                    ^^^^^^^^^\n583 |                 pass\n584 |             return False\n    |\n\nPTH103 `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n   --> x_cls_make_github_clones_x.py:596:9\n    |\n594 |         if not dest:\n595 |             dest = _repo_parent_root()\n596 |         os.makedirs(dest, exist_ok=True)\n    |         ^^^^^^^^^^^\n597 |         try:\n598 |             repos = self.fetch_repos(username=username)\n    |\nhelp: Replace with `Path(...).mkdir(parents=True)`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:599:16\n    |\n597 |         try:\n598 |             repos = self.fetch_repos(username=username)\n599 |         except Exception as exc:\n    |                ^^^^^^^^^\n600 |             _error(\"failed to fetch repo list:\", exc)\n601 |             return 2\n    |\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n   --> x_cls_make_github_clones_x.py:612:24\n    |\n610 |             if not name:\n611 |                 continue\n612 |             repo_dir = os.path.join(dest, name)\n    |                        ^^^^^^^^^^^^\n613 |             git_url = self._repo_clone_url(repo)\n614 |             if not git_url:\n    |\n\nPLW0603 Using the global statement to update `_parent_root_cache` is discouraged\n   --> x_cls_make_github_clones_x.py:630:12\n    |\n629 | def _repo_parent_root() -> str:\n630 |     global _parent_root_cache\n    |            ^^^^^^^^^^^^^^^^^^\n631 |     if _parent_root_cache is not None:\n632 |         return _parent_root_cache\n    |\n\nPLW0603 Using the global statement to update `_parent_root_cache` is discouraged\n   --> x_cls_make_github_clones_x.py:630:12\n    |\n629 | def _repo_parent_root() -> str:\n630 |     global _parent_root_cache\n    |            ^^^^^^^^^^^^^^^^^^\n631 |     if _parent_root_cache is not None:\n632 |         return _parent_root_cache\n    |\n\nE501 Line too long (94 > 88)\n   --> x_cls_make_github_clones_x.py:642:89\n    |\n642 | # Helper to normalize legacy hard-coded target_dir values (remove explicit legacy path checks)\n    |                                                                                         ^^^^^^\n643 | def _normalize_target_dir(val: str | None) -> str:\n644 |     return val or _repo_parent_root()\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_github_clones_x.py:651:1\n    |\n649 |       if BaseMake.DEFAULT_TARGET_DIR is None:\n650 |           BaseMake.DEFAULT_TARGET_DIR = _repo_parent_root()\n651 | / except Exception:\n652 | |     pass\n    | |________^\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_github_clones_x.py:651:8\n    |\n649 |     if BaseMake.DEFAULT_TARGET_DIR is None:\n650 |         BaseMake.DEFAULT_TARGET_DIR = _repo_parent_root()\n651 | except Exception:\n    |        ^^^^^^^^^\n652 |     pass\n    |\n\nFound 94 errors.\nNo fixes available (10 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_check",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--fix",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_graphviz_x",
            "duration_seconds": 0.07666019999305718,
            "ended_at": "2025-10-08T12:49:13.959878+00:00",
            "exit": 1,
            "repo": "x_make_graphviz_x",
            "repo_hash": "0e22c1dd31b73c7a4e2e59f8441c8af11683ceb52abafd980ff3213db6d17cd5",
            "repo_path": "C:\\x_runner_x\\x_make_graphviz_x",
            "started_at": "2025-10-08T12:49:13.883219+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_graphviz_x.py:13:29\n   |\n11 | import logging\n12 | import sys as _sys\n13 | from collections.abc import Iterable, Sequence\n   |                             ^^^^^^^^\n14 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> x_cls_make_graphviz_x.py:13:39\n   |\n11 | import logging\n12 | import sys as _sys\n13 | from collections.abc import Iterable, Sequence\n   |                                       ^^^^^^^^\n14 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_graphviz_x.py:21:5\n   |\n19 |   def _info(*args: object) -> None:\n20 |       msg = \" \".join(str(a) for a in args)\n21 | /     try:\n22 | |         _LOGGER.info(\"%s\", msg)\n23 | |     except Exception:\n24 | |         pass\n   | |____________^\n25 |       try:\n26 |           print(msg)\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_graphviz_x.py:23:5\n   |\n21 |       try:\n22 |           _LOGGER.info(\"%s\", msg)\n23 | /     except Exception:\n24 | |         pass\n   | |____________^\n25 |       try:\n26 |           print(msg)\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_graphviz_x.py:23:12\n   |\n21 |     try:\n22 |         _LOGGER.info(\"%s\", msg)\n23 |     except Exception:\n   |            ^^^^^^^^^\n24 |         pass\n25 |     try:\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_graphviz_x.py:27:12\n   |\n25 |     try:\n26 |         print(msg)\n27 |     except Exception:\n   |            ^^^^^^^^^\n28 |         try:\n29 |             _sys.stdout.write(msg + \"\\n\")\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_graphviz_x.py:28:9\n   |\n26 |           print(msg)\n27 |       except Exception:\n28 | /         try:\n29 | |             _sys.stdout.write(msg + \"\\n\")\n30 | |         except Exception:\n31 | |             pass\n   | |________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_graphviz_x.py:30:9\n   |\n28 |           try:\n29 |               _sys.stdout.write(msg + \"\\n\")\n30 | /         except Exception:\n31 | |             pass\n   | |________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_graphviz_x.py:30:16\n   |\n28 |         try:\n29 |             _sys.stdout.write(msg + \"\\n\")\n30 |         except Exception:\n   |                ^^^^^^^^^\n31 |             pass\n   |\n\nPLW2901 `for` loop variable `v` overwritten by assignment target\n  --> x_cls_make_graphviz_x.py:46:13\n   |\n44 |             continue\n45 |         if isinstance(v, bool):\n46 |             v = \"true\" if v else \"false\"\n   |             ^\n47 |         pairs.append(f'{k}=\"{_esc(v)}\"')\n48 |     return \" [\" + \", \".join(pairs) + \"]\"\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_graphviz_x.py:53:26\n   |\n51 | class _Subgraph:\n52 |     def __init__(\n53 |         self, name: str, cluster: bool, attrs: dict[str, Any] | None = None\n   |                          ^^^^^^^\n54 |     ) -> None:\n55 |         self.name = (\n   |\n\nN801 Class name `x_cls_make_graphviz_x` should use CapWords convention\n  --> x_cls_make_graphviz_x.py:76:7\n   |\n76 | class x_cls_make_graphviz_x:\n   |       ^^^^^^^^^^^^^^^^^^^^^\n77 |     \"\"\"Rich Graphviz builder.\"\"\"\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_graphviz_x.py:80:42\n   |\n79 |     def __init__(\n80 |         self, ctx: object | None = None, directed: bool = True\n   |                                          ^^^^^^^^\n81 |     ) -> None:\n82 |         self._ctx = ctx\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> x_cls_make_graphviz_x.py:80:42\n   |\n79 |     def __init__(\n80 |         self, ctx: object | None = None, directed: bool = True\n   |                                          ^^^^^^^^\n81 |     ) -> None:\n82 |         self._ctx = ctx\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_graphviz_x.py:94:24\n   |\n92 |     # Graph-wide controls\n93 |\n94 |     def directed(self, value: bool = True) -> x_cls_make_graphviz_x:\n   |                        ^^^^^\n95 |         self._directed = value\n96 |         return self\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> x_cls_make_graphviz_x.py:94:24\n   |\n92 |     # Graph-wide controls\n93 |\n94 |     def directed(self, value: bool = True) -> x_cls_make_graphviz_x:\n   |                        ^^^^^\n95 |         self._directed = value\n96 |         return self\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:102:35\n    |\n100 |         return self\n101 |\n102 |     def graph_attr(self, **attrs: Any) -> x_cls_make_graphviz_x:\n    |                                   ^^^\n103 |         self._graph_attrs.update(attrs)\n104 |         return self\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:106:38\n    |\n104 |         return self\n105 |\n106 |     def node_defaults(self, **attrs: Any) -> x_cls_make_graphviz_x:\n    |                                      ^^^\n107 |         self._node_defaults.update(attrs)\n108 |         return self\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:110:38\n    |\n108 |         return self\n109 |\n110 |     def edge_defaults(self, **attrs: Any) -> x_cls_make_graphviz_x:\n    |                                      ^^^\n111 |         self._edge_defaults.update(attrs)\n112 |         return self\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:148:64\n    |\n147 |     def add_node(\n148 |         self, node_id: str, label: str | None = None, **attrs: Any\n    |                                                                ^^^\n149 |     ) -> x_cls_make_graphviz_x:\n150 |         # Map convenience keys to DOT/SVG hyperlink attributes\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:168:18\n    |\n166 |         from_port: str | None = None,\n167 |         to_port: str | None = None,\n168 |         **attrs: Any,\n    |                  ^^^\n169 |     ) -> x_cls_make_graphviz_x:\n170 |         # Map convenience keys to DOT/SVG hyperlink attributes\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:196:18\n    |\n194 |         width: str | None = None,\n195 |         height: str | None = None,\n196 |         **attrs: Any,\n    |                  ^^^\n197 |     ) -> x_cls_make_graphviz_x:\n198 |         \"\"\"Create an image-backed node (shape='none', image=...).\"\"\"\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_graphviz_x.py:232:26\n    |\n231 |     def subgraph(\n232 |         self, name: str, cluster: bool = False, **attrs: Any\n    |                          ^^^^^^^\n233 |     ) -> _Subgraph:\n234 |         sg = _Subgraph(name=name, cluster=cluster, attrs=attrs or None)\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_graphviz_x.py:232:26\n    |\n231 |     def subgraph(\n232 |         self, name: str, cluster: bool = False, **attrs: Any\n    |                          ^^^^^^^\n233 |     ) -> _Subgraph:\n234 |         sg = _Subgraph(name=name, cluster=cluster, attrs=attrs or None)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:232:58\n    |\n231 |     def subgraph(\n232 |         self, name: str, cluster: bool = False, **attrs: Any\n    |                                                          ^^^\n233 |     ) -> _Subgraph:\n234 |         sg = _Subgraph(name=name, cluster=cluster, attrs=attrs or None)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:243:18\n    |\n241 |         node_id: str,\n242 |         label: str | None = None,\n243 |         **attrs: Any,\n    |                  ^^^\n244 |     ) -> x_cls_make_graphviz_x:\n245 |         if label is not None and \"label\" not in attrs:\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:256:18\n    |\n254 |         dst: str,\n255 |         label: str | None = None,\n256 |         **attrs: Any,\n    |                  ^^^\n257 |     ) -> x_cls_make_graphviz_x:\n258 |         arrow = \"->\" if self._directed else \"--\"\n    |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_make_graphviz_x.py:278:13\n    |\n276 |         lines.extend(self._edges)\n277 |         for sg in self._subgraphs:\n278 |             lines.append(sg.dot())\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n279 |         body = \"\\n  \".join(lines)\n280 |         return f\"{kind} {name} {{\\n  {body}\\n}}\\n\"\n    |\nhelp: Replace for loop with list.extend\n\nA002 Function argument `format` is shadowing a Python builtin\n   --> x_cls_make_graphviz_x.py:284:50\n    |\n282 |     # Render\n283 |\n284 |     def render(self, output_file: str = \"graph\", format: str = \"png\") -> str:\n    |                                                  ^^^^^^\n285 |         dot = self._dot_source()\n286 |         if getattr(self._ctx, \"verbose\", False):\n    |\n\nE501 Line too long (116 > 88)\n   --> x_cls_make_graphviz_x.py:288:89\n    |\n286 |         if getattr(self._ctx, \"verbose\", False):\n287 |             _info(\n288 |                 f\"[graphviz] rendering output_file={output_file!r} format={format!r} engine={self._engine or 'dot'}\"\n    |                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n289 |             )\n290 |         try:\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_graphviz_x.py:294:17\n    |\n292 |               g = _graphviz.Source(dot)\n293 |               if self._engine:\n294 | /                 try:\n295 | |                     g.engine = self._engine\n296 | |                 except Exception:\n297 | |                     # fallback to layout attribute if engine not supported by graphviz.Source\n298 | |                     pass\n    | |________________________^\n299 |               out_path = g.render(\n300 |                   filename=output_file, format=format, cleanup=True\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_graphviz_x.py:296:17\n    |\n294 |                   try:\n295 |                       g.engine = self._engine\n296 | /                 except Exception:\n297 | |                     # fallback to layout attribute if engine not supported by graphviz.Source\n298 | |                     pass\n    | |________________________^\n299 |               out_path = g.render(\n300 |                   filename=output_file, format=format, cleanup=True\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:296:24\n    |\n294 |                 try:\n295 |                     g.engine = self._engine\n296 |                 except Exception:\n    |                        ^^^^^^^^^\n297 |                     # fallback to layout attribute if engine not supported by graphviz.Source\n298 |                     pass\n    |\n\nE501 Line too long (93 > 88)\n   --> x_cls_make_graphviz_x.py:297:89\n    |\n295 |                     g.engine = self._engine\n296 |                 except Exception:\n297 |                     # fallback to layout attribute if engine not supported by graphviz.Source\n    |                                                                                         ^^^^^\n298 |                     pass\n299 |             out_path = g.render(\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:303:16\n    |\n301 |             )\n302 |             return str(out_path)\n303 |         except Exception:\n    |                ^^^^^^^^^\n304 |             dot_path = f\"{output_file}.dot\"\n305 |             with open(dot_path, \"w\", encoding=\"utf-8\") as f:\n    |\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_make_graphviz_x.py:305:18\n    |\n303 |         except Exception:\n304 |             dot_path = f\"{output_file}.dot\"\n305 |             with open(dot_path, \"w\", encoding=\"utf-8\") as f:\n    |                  ^^^^\n306 |                 f.write(dot)\n307 |             if getattr(self._ctx, \"verbose\", False):\n    |\nhelp: Replace with `Path.open()`\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_make_graphviz_x.py:315:14\n    |\n313 |     def save_dot(self, path: str) -> str:\n314 |         dot = self._dot_source()\n315 |         with open(path, \"w\", encoding=\"utf-8\") as f:\n    |              ^^^^\n316 |             f.write(dot)\n317 |         return path\n    |\nhelp: Replace with `Path.open()`\n\nE501 Line too long (89 > 88)\n   --> x_cls_make_graphviz_x.py:320:89\n    |\n319 |     def to_svg(self, output_basename: str = \"graph\") -> str | None:\n320 |         \"\"\"Render SVG via graphviz if available. Returns SVG path or None on fallback.\"\"\"\n    |                                                                                         ^\n321 |         try:\n322 |             _graphviz: Any = importlib.import_module(\"graphviz\")\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:323:16\n    |\n321 |         try:\n322 |             _graphviz: Any = importlib.import_module(\"graphviz\")\n323 |         except Exception:\n    |                ^^^^^^^^^\n324 |             # ensure DOT exists for external conversion, even if graphviz python package is missing\n325 |             self.save_dot(f\"{output_basename}.dot\")\n    |\n\nE501 Line too long (99 > 88)\n   --> x_cls_make_graphviz_x.py:324:89\n    |\n322 |             _graphviz: Any = importlib.import_module(\"graphviz\")\n323 |         except Exception:\n324 |             # ensure DOT exists for external conversion, even if graphviz python package is missing\n    |                                                                                         ^^^^^^^^^^^\n325 |             self.save_dot(f\"{output_basename}.dot\")\n326 |             if getattr(self._ctx, \"verbose\", False):\n    |\n\nE501 Line too long (103 > 88)\n   --> x_cls_make_graphviz_x.py:328:89\n    |\n326 |             if getattr(self._ctx, \"verbose\", False):\n327 |                 _info(\n328 |                     \"[graphviz] python 'graphviz' not available; wrote DOT for external svg conversion\"\n    |                                                                                         ^^^^^^^^^^^^^^^\n329 |                 )\n330 |             return None\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_graphviz_x.py:334:17\n    |\n332 |               src = _graphviz.Source(self._dot_source())\n333 |               if self._engine:\n334 | /                 try:\n335 | |                     src.engine = self._engine\n336 | |                 except Exception:\n337 | |                     pass\n    | |________________________^\n338 |               out_path = src.render(\n339 |                   filename=output_basename, format=\"svg\", cleanup=True\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_graphviz_x.py:336:17\n    |\n334 |                   try:\n335 |                       src.engine = self._engine\n336 | /                 except Exception:\n337 | |                     pass\n    | |________________________^\n338 |               out_path = src.render(\n339 |                   filename=output_basename, format=\"svg\", cleanup=True\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:336:24\n    |\n334 |                 try:\n335 |                     src.engine = self._engine\n336 |                 except Exception:\n    |                        ^^^^^^^^^\n337 |                     pass\n338 |             out_path = src.render(\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:342:16\n    |\n340 |             )\n341 |             return str(out_path)\n342 |         except Exception:\n    |                ^^^^^^^^^\n343 |             # on failure, still persist DOT for manual conversion\n344 |             self.save_dot(f\"{output_basename}.dot\")\n    |\n\nFound 45 errors.\nNo fixes available (5 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_fix",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "black",
                ".",
                "--line-length",
                "88",
                "--target-version",
                "py311",
                "--check",
                "--diff"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff",
            "cwd": "C:\\x_runner_x\\x_make_graphviz_x",
            "duration_seconds": 0.4413213999941945,
            "ended_at": "2025-10-08T12:49:14.401673+00:00",
            "exit": 1,
            "repo": "x_make_graphviz_x",
            "repo_hash": "0e22c1dd31b73c7a4e2e59f8441c8af11683ceb52abafd980ff3213db6d17cd5",
            "repo_path": "C:\\x_runner_x\\x_make_graphviz_x",
            "started_at": "2025-10-08T12:49:13.960353+00:00",
            "stderr": "would reformat C:\\x_runner_x\\x_make_graphviz_x\\x_cls_make_graphviz_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
            "stdout": "--- C:\\x_runner_x\\x_make_graphviz_x\\x_cls_make_graphviz_x.py\t2025-10-07 17:48:28.073292+00:00\n+++ C:\\x_runner_x\\x_make_graphviz_x\\x_cls_make_graphviz_x.py\t2025-10-08 12:49:14.352593+00:00\n@@ -51,13 +51,11 @@\n class _Subgraph:\n     def __init__(\n         self, name: str, cluster: bool, attrs: dict[str, Any] | None = None\n     ) -> None:\n         self.name = (\n-            \"cluster_\" + name\n-            if cluster and not name.startswith(\"cluster_\")\n-            else name\n+            \"cluster_\" + name if cluster and not name.startswith(\"cluster_\") else name\n         )\n         self.attrs = attrs or {}\n         self.nodes: list[str] = []\n         self.edges: list[str] = []\n         self.raw: list[str] = []\n@@ -74,13 +72,11 @@\n \n \n class x_cls_make_graphviz_x:\n     \"\"\"Rich Graphviz builder.\"\"\"\n \n-    def __init__(\n-        self, ctx: object | None = None, directed: bool = True\n-    ) -> None:\n+    def __init__(self, ctx: object | None = None, directed: bool = True) -> None:\n         self._ctx = ctx\n         self._directed = directed\n         self._graph_attrs: dict[str, Any] = {}\n         self._node_defaults: dict[str, Any] = {}\n         self._edge_defaults: dict[str, Any] = {}\n@@ -226,13 +222,11 @@\n     def html_label(html: str) -> str:\n         return f\"<<{html}>>\"\n \n     # Subgraphs / clusters\n \n-    def subgraph(\n-        self, name: str, cluster: bool = False, **attrs: Any\n-    ) -> _Subgraph:\n+    def subgraph(self, name: str, cluster: bool = False, **attrs: Any) -> _Subgraph:\n         sg = _Subgraph(name=name, cluster=cluster, attrs=attrs or None)\n         self._subgraphs.append(sg)\n         return sg\n \n     def sub_node(\n@@ -294,13 +288,11 @@\n                 try:\n                     g.engine = self._engine\n                 except Exception:\n                     # fallback to layout attribute if engine not supported by graphviz.Source\n                     pass\n-            out_path = g.render(\n-                filename=output_file, format=format, cleanup=True\n-            )\n+            out_path = g.render(filename=output_file, format=format, cleanup=True)\n             return str(out_path)\n         except Exception:\n             dot_path = f\"{output_file}.dot\"\n             with open(dot_path, \"w\", encoding=\"utf-8\") as f:\n                 f.write(dot)\n@@ -333,26 +325,20 @@\n             if self._engine:\n                 try:\n                     src.engine = self._engine\n                 except Exception:\n                     pass\n-            out_path = src.render(\n-                filename=output_basename, format=\"svg\", cleanup=True\n-            )\n+            out_path = src.render(filename=output_basename, format=\"svg\", cleanup=True)\n             return str(out_path)\n         except Exception:\n             # on failure, still persist DOT for manual conversion\n             self.save_dot(f\"{output_basename}.dot\")\n             return None\n \n \n def main() -> str:\n-    g = (\n-        x_cls_make_graphviz_x(directed=True)\n-        .rankdir(\"LR\")\n-        .node_defaults(shape=\"box\")\n-    )\n+    g = x_cls_make_graphviz_x(directed=True).rankdir(\"LR\").node_defaults(shape=\"box\")\n     g.add_node(\"A\", \"Start\")\n     g.add_node(\"B\", \"End\")\n     g.add_edge(\"A\", \"B\", \"to\", color=\"blue\")\n     sg = g.subgraph(\"cluster_demo\", cluster=True, label=\"Demo\")\n     g.sub_node(sg, \"C\", \"In cluster\")\n",
            "tool": "black",
            "tool_module": "black",
            "tool_version": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_graphviz_x",
            "duration_seconds": 0.10906309998244978,
            "ended_at": "2025-10-08T12:49:14.511097+00:00",
            "exit": 1,
            "repo": "x_make_graphviz_x",
            "repo_hash": "0e22c1dd31b73c7a4e2e59f8441c8af11683ceb52abafd980ff3213db6d17cd5",
            "repo_path": "C:\\x_runner_x\\x_make_graphviz_x",
            "started_at": "2025-10-08T12:49:14.402036+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_graphviz_x.py:13:29\n   |\n11 | import logging\n12 | import sys as _sys\n13 | from collections.abc import Iterable, Sequence\n   |                             ^^^^^^^^\n14 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Sequence` into a type-checking block\n  --> x_cls_make_graphviz_x.py:13:39\n   |\n11 | import logging\n12 | import sys as _sys\n13 | from collections.abc import Iterable, Sequence\n   |                                       ^^^^^^^^\n14 | from typing import Any, cast\n   |\nhelp: Move into type-checking block\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_graphviz_x.py:21:5\n   |\n19 |   def _info(*args: object) -> None:\n20 |       msg = \" \".join(str(a) for a in args)\n21 | /     try:\n22 | |         _LOGGER.info(\"%s\", msg)\n23 | |     except Exception:\n24 | |         pass\n   | |____________^\n25 |       try:\n26 |           print(msg)\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_graphviz_x.py:23:5\n   |\n21 |       try:\n22 |           _LOGGER.info(\"%s\", msg)\n23 | /     except Exception:\n24 | |         pass\n   | |____________^\n25 |       try:\n26 |           print(msg)\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_graphviz_x.py:23:12\n   |\n21 |     try:\n22 |         _LOGGER.info(\"%s\", msg)\n23 |     except Exception:\n   |            ^^^^^^^^^\n24 |         pass\n25 |     try:\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_graphviz_x.py:27:12\n   |\n25 |     try:\n26 |         print(msg)\n27 |     except Exception:\n   |            ^^^^^^^^^\n28 |         try:\n29 |             _sys.stdout.write(msg + \"\\n\")\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_graphviz_x.py:28:9\n   |\n26 |           print(msg)\n27 |       except Exception:\n28 | /         try:\n29 | |             _sys.stdout.write(msg + \"\\n\")\n30 | |         except Exception:\n31 | |             pass\n   | |________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_graphviz_x.py:30:9\n   |\n28 |           try:\n29 |               _sys.stdout.write(msg + \"\\n\")\n30 | /         except Exception:\n31 | |             pass\n   | |________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_graphviz_x.py:30:16\n   |\n28 |         try:\n29 |             _sys.stdout.write(msg + \"\\n\")\n30 |         except Exception:\n   |                ^^^^^^^^^\n31 |             pass\n   |\n\nPLW2901 `for` loop variable `v` overwritten by assignment target\n  --> x_cls_make_graphviz_x.py:46:13\n   |\n44 |             continue\n45 |         if isinstance(v, bool):\n46 |             v = \"true\" if v else \"false\"\n   |             ^\n47 |         pairs.append(f'{k}=\"{_esc(v)}\"')\n48 |     return \" [\" + \", \".join(pairs) + \"]\"\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_graphviz_x.py:53:26\n   |\n51 | class _Subgraph:\n52 |     def __init__(\n53 |         self, name: str, cluster: bool, attrs: dict[str, Any] | None = None\n   |                          ^^^^^^^\n54 |     ) -> None:\n55 |         self.name = (\n   |\n\nN801 Class name `x_cls_make_graphviz_x` should use CapWords convention\n  --> x_cls_make_graphviz_x.py:76:7\n   |\n76 | class x_cls_make_graphviz_x:\n   |       ^^^^^^^^^^^^^^^^^^^^^\n77 |     \"\"\"Rich Graphviz builder.\"\"\"\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_graphviz_x.py:80:42\n   |\n79 |     def __init__(\n80 |         self, ctx: object | None = None, directed: bool = True\n   |                                          ^^^^^^^^\n81 |     ) -> None:\n82 |         self._ctx = ctx\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> x_cls_make_graphviz_x.py:80:42\n   |\n79 |     def __init__(\n80 |         self, ctx: object | None = None, directed: bool = True\n   |                                          ^^^^^^^^\n81 |     ) -> None:\n82 |         self._ctx = ctx\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_graphviz_x.py:94:24\n   |\n92 |     # Graph-wide controls\n93 |\n94 |     def directed(self, value: bool = True) -> x_cls_make_graphviz_x:\n   |                        ^^^^^\n95 |         self._directed = value\n96 |         return self\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> x_cls_make_graphviz_x.py:94:24\n   |\n92 |     # Graph-wide controls\n93 |\n94 |     def directed(self, value: bool = True) -> x_cls_make_graphviz_x:\n   |                        ^^^^^\n95 |         self._directed = value\n96 |         return self\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:102:35\n    |\n100 |         return self\n101 |\n102 |     def graph_attr(self, **attrs: Any) -> x_cls_make_graphviz_x:\n    |                                   ^^^\n103 |         self._graph_attrs.update(attrs)\n104 |         return self\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:106:38\n    |\n104 |         return self\n105 |\n106 |     def node_defaults(self, **attrs: Any) -> x_cls_make_graphviz_x:\n    |                                      ^^^\n107 |         self._node_defaults.update(attrs)\n108 |         return self\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:110:38\n    |\n108 |         return self\n109 |\n110 |     def edge_defaults(self, **attrs: Any) -> x_cls_make_graphviz_x:\n    |                                      ^^^\n111 |         self._edge_defaults.update(attrs)\n112 |         return self\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:148:64\n    |\n147 |     def add_node(\n148 |         self, node_id: str, label: str | None = None, **attrs: Any\n    |                                                                ^^^\n149 |     ) -> x_cls_make_graphviz_x:\n150 |         # Map convenience keys to DOT/SVG hyperlink attributes\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:168:18\n    |\n166 |         from_port: str | None = None,\n167 |         to_port: str | None = None,\n168 |         **attrs: Any,\n    |                  ^^^\n169 |     ) -> x_cls_make_graphviz_x:\n170 |         # Map convenience keys to DOT/SVG hyperlink attributes\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:196:18\n    |\n194 |         width: str | None = None,\n195 |         height: str | None = None,\n196 |         **attrs: Any,\n    |                  ^^^\n197 |     ) -> x_cls_make_graphviz_x:\n198 |         \"\"\"Create an image-backed node (shape='none', image=...).\"\"\"\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_graphviz_x.py:232:26\n    |\n231 |     def subgraph(\n232 |         self, name: str, cluster: bool = False, **attrs: Any\n    |                          ^^^^^^^\n233 |     ) -> _Subgraph:\n234 |         sg = _Subgraph(name=name, cluster=cluster, attrs=attrs or None)\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_graphviz_x.py:232:26\n    |\n231 |     def subgraph(\n232 |         self, name: str, cluster: bool = False, **attrs: Any\n    |                          ^^^^^^^\n233 |     ) -> _Subgraph:\n234 |         sg = _Subgraph(name=name, cluster=cluster, attrs=attrs or None)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:232:58\n    |\n231 |     def subgraph(\n232 |         self, name: str, cluster: bool = False, **attrs: Any\n    |                                                          ^^^\n233 |     ) -> _Subgraph:\n234 |         sg = _Subgraph(name=name, cluster=cluster, attrs=attrs or None)\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:243:18\n    |\n241 |         node_id: str,\n242 |         label: str | None = None,\n243 |         **attrs: Any,\n    |                  ^^^\n244 |     ) -> x_cls_make_graphviz_x:\n245 |         if label is not None and \"label\" not in attrs:\n    |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `**attrs`\n   --> x_cls_make_graphviz_x.py:256:18\n    |\n254 |         dst: str,\n255 |         label: str | None = None,\n256 |         **attrs: Any,\n    |                  ^^^\n257 |     ) -> x_cls_make_graphviz_x:\n258 |         arrow = \"->\" if self._directed else \"--\"\n    |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_make_graphviz_x.py:278:13\n    |\n276 |         lines.extend(self._edges)\n277 |         for sg in self._subgraphs:\n278 |             lines.append(sg.dot())\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n279 |         body = \"\\n  \".join(lines)\n280 |         return f\"{kind} {name} {{\\n  {body}\\n}}\\n\"\n    |\nhelp: Replace for loop with list.extend\n\nA002 Function argument `format` is shadowing a Python builtin\n   --> x_cls_make_graphviz_x.py:284:50\n    |\n282 |     # Render\n283 |\n284 |     def render(self, output_file: str = \"graph\", format: str = \"png\") -> str:\n    |                                                  ^^^^^^\n285 |         dot = self._dot_source()\n286 |         if getattr(self._ctx, \"verbose\", False):\n    |\n\nE501 Line too long (116 > 88)\n   --> x_cls_make_graphviz_x.py:288:89\n    |\n286 |         if getattr(self._ctx, \"verbose\", False):\n287 |             _info(\n288 |                 f\"[graphviz] rendering output_file={output_file!r} format={format!r} engine={self._engine or 'dot'}\"\n    |                                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n289 |             )\n290 |         try:\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_graphviz_x.py:294:17\n    |\n292 |               g = _graphviz.Source(dot)\n293 |               if self._engine:\n294 | /                 try:\n295 | |                     g.engine = self._engine\n296 | |                 except Exception:\n297 | |                     # fallback to layout attribute if engine not supported by graphviz.Source\n298 | |                     pass\n    | |________________________^\n299 |               out_path = g.render(\n300 |                   filename=output_file, format=format, cleanup=True\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_graphviz_x.py:296:17\n    |\n294 |                   try:\n295 |                       g.engine = self._engine\n296 | /                 except Exception:\n297 | |                     # fallback to layout attribute if engine not supported by graphviz.Source\n298 | |                     pass\n    | |________________________^\n299 |               out_path = g.render(\n300 |                   filename=output_file, format=format, cleanup=True\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:296:24\n    |\n294 |                 try:\n295 |                     g.engine = self._engine\n296 |                 except Exception:\n    |                        ^^^^^^^^^\n297 |                     # fallback to layout attribute if engine not supported by graphviz.Source\n298 |                     pass\n    |\n\nE501 Line too long (93 > 88)\n   --> x_cls_make_graphviz_x.py:297:89\n    |\n295 |                     g.engine = self._engine\n296 |                 except Exception:\n297 |                     # fallback to layout attribute if engine not supported by graphviz.Source\n    |                                                                                         ^^^^^\n298 |                     pass\n299 |             out_path = g.render(\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:303:16\n    |\n301 |             )\n302 |             return str(out_path)\n303 |         except Exception:\n    |                ^^^^^^^^^\n304 |             dot_path = f\"{output_file}.dot\"\n305 |             with open(dot_path, \"w\", encoding=\"utf-8\") as f:\n    |\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_make_graphviz_x.py:305:18\n    |\n303 |         except Exception:\n304 |             dot_path = f\"{output_file}.dot\"\n305 |             with open(dot_path, \"w\", encoding=\"utf-8\") as f:\n    |                  ^^^^\n306 |                 f.write(dot)\n307 |             if getattr(self._ctx, \"verbose\", False):\n    |\nhelp: Replace with `Path.open()`\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_make_graphviz_x.py:315:14\n    |\n313 |     def save_dot(self, path: str) -> str:\n314 |         dot = self._dot_source()\n315 |         with open(path, \"w\", encoding=\"utf-8\") as f:\n    |              ^^^^\n316 |             f.write(dot)\n317 |         return path\n    |\nhelp: Replace with `Path.open()`\n\nE501 Line too long (89 > 88)\n   --> x_cls_make_graphviz_x.py:320:89\n    |\n319 |     def to_svg(self, output_basename: str = \"graph\") -> str | None:\n320 |         \"\"\"Render SVG via graphviz if available. Returns SVG path or None on fallback.\"\"\"\n    |                                                                                         ^\n321 |         try:\n322 |             _graphviz: Any = importlib.import_module(\"graphviz\")\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:323:16\n    |\n321 |         try:\n322 |             _graphviz: Any = importlib.import_module(\"graphviz\")\n323 |         except Exception:\n    |                ^^^^^^^^^\n324 |             # ensure DOT exists for external conversion, even if graphviz python package is missing\n325 |             self.save_dot(f\"{output_basename}.dot\")\n    |\n\nE501 Line too long (99 > 88)\n   --> x_cls_make_graphviz_x.py:324:89\n    |\n322 |             _graphviz: Any = importlib.import_module(\"graphviz\")\n323 |         except Exception:\n324 |             # ensure DOT exists for external conversion, even if graphviz python package is missing\n    |                                                                                         ^^^^^^^^^^^\n325 |             self.save_dot(f\"{output_basename}.dot\")\n326 |             if getattr(self._ctx, \"verbose\", False):\n    |\n\nE501 Line too long (103 > 88)\n   --> x_cls_make_graphviz_x.py:328:89\n    |\n326 |             if getattr(self._ctx, \"verbose\", False):\n327 |                 _info(\n328 |                     \"[graphviz] python 'graphviz' not available; wrote DOT for external svg conversion\"\n    |                                                                                         ^^^^^^^^^^^^^^^\n329 |                 )\n330 |             return None\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_graphviz_x.py:334:17\n    |\n332 |               src = _graphviz.Source(self._dot_source())\n333 |               if self._engine:\n334 | /                 try:\n335 | |                     src.engine = self._engine\n336 | |                 except Exception:\n337 | |                     pass\n    | |________________________^\n338 |               out_path = src.render(\n339 |                   filename=output_basename, format=\"svg\", cleanup=True\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_graphviz_x.py:336:17\n    |\n334 |                   try:\n335 |                       src.engine = self._engine\n336 | /                 except Exception:\n337 | |                     pass\n    | |________________________^\n338 |               out_path = src.render(\n339 |                   filename=output_basename, format=\"svg\", cleanup=True\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:336:24\n    |\n334 |                 try:\n335 |                     src.engine = self._engine\n336 |                 except Exception:\n    |                        ^^^^^^^^^\n337 |                     pass\n338 |             out_path = src.render(\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_graphviz_x.py:342:16\n    |\n340 |             )\n341 |             return str(out_path)\n342 |         except Exception:\n    |                ^^^^^^^^^\n343 |             # on failure, still persist DOT for manual conversion\n344 |             self.save_dot(f\"{output_basename}.dot\")\n    |\n\nFound 45 errors.\nNo fixes available (5 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_check",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "mypy",
                ".",
                "--strict",
                "--no-warn-unused-configs",
                "--show-error-codes",
                "--warn-return-any",
                "--warn-unreachable",
                "--disallow-any-unimported",
                "--disallow-any-expr",
                "--disallow-any-decorated",
                "--disallow-any-explicit"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "cwd": "C:\\x_runner_x\\x_make_graphviz_x",
            "duration_seconds": 0.3895423999929335,
            "ended_at": "2025-10-08T12:49:14.901070+00:00",
            "exit": 1,
            "repo": "x_make_graphviz_x",
            "repo_hash": "0e22c1dd31b73c7a4e2e59f8441c8af11683ceb52abafd980ff3213db6d17cd5",
            "repo_path": "C:\\x_runner_x\\x_make_graphviz_x",
            "started_at": "2025-10-08T12:49:14.511530+00:00",
            "stderr": "",
            "stdout": "x_cls_make_graphviz_x.py:38: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:39: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_graphviz_x.py:42: error: Expression type contains \"Any\" (has type \"tuple[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:42: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:42: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:42: error: Expression type contains \"Any\" (has type \"dict_items[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:43: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:45: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:47: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:52: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:60: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_graphviz_x.py:60: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:67: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:68: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:84: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:85: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:86: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:102: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:103: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:106: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:107: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:110: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:111: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:135: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:137: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:139: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:144: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:147: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:151: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:152: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:152: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:153: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:154: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:154: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:156: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:157: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:158: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:161: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:171: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:172: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:172: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:173: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:174: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:174: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:179: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:180: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:181: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:189: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:199: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:200: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:202: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:203: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:205: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:206: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:207: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:231: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:234: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:234: error: Expression type contains \"Any\" (has type \"dict[str, Any] | None\")  [misc]\nx_cls_make_graphviz_x.py:238: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:245: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:246: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:247: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:250: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:259: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:260: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:261: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:269: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:270: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:271: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:272: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:273: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:274: error: Expression type contains \"Any\" (has type \"dict[str, Any]\")  [misc]\nx_cls_make_graphviz_x.py:286: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_graphviz_x.py:291: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:292: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:295: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:299: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:302: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:307: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_graphviz_x.py:322: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_graphviz_x.py:326: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_graphviz_x.py:332: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:335: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:338: error: Expression has type \"Any\"  [misc]\nx_cls_make_graphviz_x.py:341: error: Expression has type \"Any\"  [misc]\nFound 85 errors in 1 file (checked 1 source file)\n",
            "tool": "mypy",
            "tool_module": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--fix",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_mermaid_x",
            "duration_seconds": 0.09403209999436513,
            "ended_at": "2025-10-08T12:49:16.144538+00:00",
            "exit": 1,
            "repo": "x_make_mermaid_x",
            "repo_hash": "573a5a4ef99d7f30c146458bd51bed742e17a292907d4b66e9bc29d80b8fd93c",
            "repo_path": "C:\\x_runner_x\\x_make_mermaid_x",
            "started_at": "2025-10-08T12:49:16.050505+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_mermaid_x.py:14:29\n   |\n12 | import subprocess as _subprocess\n13 | import sys as _sys\n14 | from collections.abc import Iterable\n   |                             ^^^^^^^^\n15 | from dataclasses import dataclass, field\n16 | from typing import Any\n   |\nhelp: Move into type-checking block\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_mermaid_x.py:23:5\n   |\n21 |   def _info(*args: object) -> None:\n22 |       msg = \" \".join(str(a) for a in args)\n23 | /     try:\n24 | |         _LOGGER.info(\"%s\", msg)\n25 | |     except Exception:\n26 | |         pass\n   | |____________^\n27 |       try:\n28 |           print(msg)\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_mermaid_x.py:25:5\n   |\n23 |       try:\n24 |           _LOGGER.info(\"%s\", msg)\n25 | /     except Exception:\n26 | |         pass\n   | |____________^\n27 |       try:\n28 |           print(msg)\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_mermaid_x.py:25:12\n   |\n23 |     try:\n24 |         _LOGGER.info(\"%s\", msg)\n25 |     except Exception:\n   |            ^^^^^^^^^\n26 |         pass\n27 |     try:\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_mermaid_x.py:29:12\n   |\n27 |     try:\n28 |         print(msg)\n29 |     except Exception:\n   |            ^^^^^^^^^\n30 |         try:\n31 |             _sys.stdout.write(msg + \"\\n\")\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_mermaid_x.py:30:9\n   |\n28 |           print(msg)\n29 |       except Exception:\n30 | /         try:\n31 | |             _sys.stdout.write(msg + \"\\n\")\n32 | |         except Exception:\n33 | |             pass\n   | |________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_mermaid_x.py:32:9\n   |\n30 |           try:\n31 |               _sys.stdout.write(msg + \"\\n\")\n32 | /         except Exception:\n33 | |             pass\n   | |________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_mermaid_x.py:32:16\n   |\n30 |         try:\n31 |             _sys.stdout.write(msg + \"\\n\")\n32 |         except Exception:\n   |                ^^^^^^^^^\n33 |             pass\n   |\n\nN801 Class name `x_cls_make_mermaid_x` should use CapWords convention\n  --> x_cls_make_mermaid_x.py:72:7\n   |\n72 | class x_cls_make_mermaid_x:\n   |       ^^^^^^^^^^^^^^^^^^^^\n73 |     \"\"\"Flexible Mermaid builder covering many diagram kinds.\n   |\n\nPLC0415 `import` should be at the top-level of a file\n  --> x_cls_make_mermaid_x.py:95:13\n   |\n93 |         if isinstance(directive_json, dict):\n94 |             # minimal serializer without imports\n95 |             import json as _json\n   |             ^^^^^^^^^^^^^^^^^^^^\n96 |\n97 |             txt = _json.dumps(directive_json, separators=(\",\", \":\"))\n   |\n\ninvalid-syntax: Cannot use an escape sequence (backslash) in f-strings on Python 3.11 (syntax was added in Python 3.12)\n   --> x_cls_make_mermaid_x.py:467:33\n    |\n465 |         if self._doc.kind == _GIT:\n466 |             self._doc.lines.append(\n467 |                 f'commit {\"tag: \\\"\"+_esc(msg)+\"\\\"\" if msg else \"\"}'.rstrip()\n    |                                 ^\n468 |             )\n469 |         return self\n    |\n\ninvalid-syntax: Cannot use an escape sequence (backslash) in f-strings on Python 3.11 (syntax was added in Python 3.12)\n   --> x_cls_make_mermaid_x.py:467:48\n    |\n465 |         if self._doc.kind == _GIT:\n466 |             self._doc.lines.append(\n467 |                 f'commit {\"tag: \\\"\"+_esc(msg)+\"\\\"\" if msg else \"\"}'.rstrip()\n    |                                                ^\n468 |             )\n469 |         return self\n    |\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_make_mermaid_x.py:550:14\n    |\n548 |     def save(self, path: str = \"diagram.mmd\") -> str:\n549 |         src = self.source()\n550 |         with open(path, \"w\", encoding=\"utf-8\") as f:\n    |              ^^^^\n551 |             f.write(src)\n552 |         if getattr(self._ctx, \"verbose\", False):\n    |\nhelp: Replace with `Path.open()`\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_mermaid_x.py:570:20\n    |\n568 |         mmd_path = mmd_path or \"diagram.mmd\"\n569 |         try:\n570 |             if not os.path.exists(mmd_path):\n    |                    ^^^^^^^^^^^^^^\n571 |                 self.save(mmd_path)\n572 |         except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_mermaid_x.py:572:16\n    |\n570 |             if not os.path.exists(mmd_path):\n571 |                 self.save(mmd_path)\n572 |         except Exception:\n    |                ^^^^^^^^^\n573 |             self.save(mmd_path)\n574 |         # Decide svg output\n    |\n\nE501 Line too long (95 > 88)\n   --> x_cls_make_mermaid_x.py:586:89\n    |\n584 |             if getattr(self._ctx, \"verbose\", False):\n585 |                 _info(\n586 |                     f\"[mermaid] mermaid-cli '{cmd}' not found in PATH; left .mmd at {mmd_path}\"\n    |                                                                                         ^^^^^^^\n587 |                 )\n588 |             return None\n    |\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_mermaid_x.py:593:19\n    |\n591 |             args.extend(extra_args)\n592 |         try:\n593 |             res = _subprocess.run(\n    |                   ^^^^^^^^^^^^^^^\n594 |                 args, check=False, capture_output=True, text=True\n595 |             )\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_mermaid_x.py:602:9\n    |\n600 |               if res.stderr:\n601 |                   _info(res.stderr.strip())\n602 | /         except Exception:\n603 | |             pass\n    | |________________^\n604 |           return None\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_mermaid_x.py:602:16\n    |\n600 |             if res.stderr:\n601 |                 _info(res.stderr.strip())\n602 |         except Exception:\n    |                ^^^^^^^^^\n603 |             pass\n604 |         return None\n    |\n\nFound 19 errors.\nNo fixes available (3 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_fix",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "black",
                ".",
                "--line-length",
                "88",
                "--target-version",
                "py311",
                "--check",
                "--diff"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff",
            "cwd": "C:\\x_runner_x\\x_make_mermaid_x",
            "duration_seconds": 0.5506798999849707,
            "ended_at": "2025-10-08T12:49:16.695587+00:00",
            "exit": 1,
            "repo": "x_make_mermaid_x",
            "repo_hash": "573a5a4ef99d7f30c146458bd51bed742e17a292907d4b66e9bc29d80b8fd93c",
            "repo_path": "C:\\x_runner_x\\x_make_mermaid_x",
            "started_at": "2025-10-08T12:49:16.144910+00:00",
            "stderr": "would reformat C:\\x_runner_x\\x_make_mermaid_x\\x_cls_make_mermaid_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
            "stdout": "--- C:\\x_runner_x\\x_make_mermaid_x\\x_cls_make_mermaid_x.py\t2025-10-07 17:48:30.177558+00:00\n+++ C:\\x_runner_x\\x_make_mermaid_x\\x_cls_make_mermaid_x.py\t2025-10-08 12:49:16.627708+00:00\n@@ -61,13 +61,11 @@\n @dataclass\n class MermaidDoc:\n     kind: str\n     header: str\n     lines: list[str] = field(default_factory=list)\n-    directives: list[str] = field(\n-        default_factory=list\n-    )  # e.g., %%{init: {...}}%%\n+    directives: list[str] = field(default_factory=list)  # e.g., %%{init: {...}}%%\n     comments: list[str] = field(default_factory=list)\n \n \n class x_cls_make_mermaid_x:\n     \"\"\"Flexible Mermaid builder covering many diagram kinds.\n@@ -76,13 +74,11 @@\n       m = x_cls_make_mermaid_x().flowchart(\"LR\").node(\"A\",\"Start\").edge(\"A\",\"B\",\"go\")\n       m.sequence().participant(\"A\",\"Alice\").message(\"A\",\"B\",\"Hi\")\n       src = m.source()\n     \"\"\"\n \n-    def __init__(\n-        self, direction: str = \"LR\", ctx: object | None = None\n-    ) -> None:\n+    def __init__(self, direction: str = \"LR\", ctx: object | None = None) -> None:\n         self._ctx = ctx\n         self._doc = MermaidDoc(kind=_FLOW, header=f\"{_FLOW} {direction}\")\n \n     # Core controls\n \n@@ -202,13 +198,11 @@\n             \"circle\": (\"((\", \"))\"),\n             \"asym\": (\">\", \"]\"),\n         }\n         if shape and shape in shape_map:\n             left_delim, right_delim = shape_map[shape]\n-            self._doc.lines.append(\n-                f\"{node_id}{left_delim}{_esc(label)}{right_delim}\"\n-            )\n+            self._doc.lines.append(f\"{node_id}{left_delim}{_esc(label)}{right_delim}\")\n         else:\n             self._doc.lines.append(f'{node_id}[\"{_esc(label)}\"]')\n         return self\n \n     def edge(\n@@ -260,13 +254,11 @@\n                 self._doc.lines.append(f'click {node_id} \"{_esc(url)}\"')\n         return self\n \n     # Sequence API\n \n-    def participant(\n-        self, pid: str, label: str | None = None\n-    ) -> x_cls_make_mermaid_x:\n+    def participant(self, pid: str, label: str | None = None) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _SEQ:\n             if label:\n                 self._doc.lines.append(f'participant {pid} as \"{_esc(label)}\"')\n             else:\n                 self._doc.lines.append(f\"participant {pid}\")\n@@ -277,18 +269,14 @@\n     ) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _SEQ:\n             self._doc.lines.append(f\"{src} {kind} {dst}: {_esc(text)}\")\n         return self\n \n-    def note_over(\n-        self, who: str | tuple[str, str], text: str\n-    ) -> x_cls_make_mermaid_x:\n+    def note_over(self, who: str | tuple[str, str], text: str) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _SEQ:\n             if isinstance(who, tuple):\n-                self._doc.lines.append(\n-                    f\"Note over {who[0]},{who[1]}: {_esc(text)}\"\n-                )\n+                self._doc.lines.append(f\"Note over {who[0]},{who[1]}: {_esc(text)}\")\n             else:\n                 self._doc.lines.append(f\"Note over {who}: {_esc(text)}\")\n         return self\n \n     def activate(self, pid: str) -> x_cls_make_mermaid_x:\n@@ -299,13 +287,11 @@\n     def deactivate(self, pid: str) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _SEQ:\n             self._doc.lines.append(f\"deactivate {pid}\")\n         return self\n \n-    def block(\n-        self, kind: str, title: str, body: Iterable[str]\n-    ) -> x_cls_make_mermaid_x:\n+    def block(self, kind: str, title: str, body: Iterable[str]) -> x_cls_make_mermaid_x:\n         \"\"\"Generic sequence block: kind in ('loop','alt','opt','par','rect').\"\"\"\n         if self._doc.kind == _SEQ:\n             self._doc.lines.append(f\"{kind} {_esc(title)}\")\n             for ln in body:\n                 self._doc.lines.append(ln)\n@@ -338,13 +324,11 @@\n             self._doc.lines.append(f\"{a} {op} {b}{lab}\")\n         return self\n \n     # State API\n \n-    def state_node(\n-        self, name: str, alias: str | None = None\n-    ) -> x_cls_make_mermaid_x:\n+    def state_node(self, name: str, alias: str | None = None) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _STATE:\n             if alias:\n                 self._doc.lines.append(f'state \"{_esc(name)}\" as {alias}')\n             else:\n                 self._doc.lines.append(f'state \"{_esc(name)}\"')\n@@ -362,13 +346,11 @@\n         return self.state_trans(\"[*]\", to)\n \n     def state_end(self, frm: str) -> x_cls_make_mermaid_x:\n         return self.state_trans(frm, \"[*]\")\n \n-    def state_subgraph(\n-        self, name: str, body: Iterable[str]\n-    ) -> x_cls_make_mermaid_x:\n+    def state_subgraph(self, name: str, body: Iterable[str]) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _STATE:\n             self._doc.lines.append(f\"state {_esc(name)} {{\")\n             for ln in body:\n                 self._doc.lines.append(ln)\n             self._doc.lines.append(\"}\")\n@@ -434,13 +416,11 @@\n     def journey_section(self, title: str) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _JOURNEY:\n             self._doc.lines.append(f\"section {_esc(title)}\")\n         return self\n \n-    def journey_step(\n-        self, actor: str, score: int, text: str\n-    ) -> x_cls_make_mermaid_x:\n+    def journey_step(self, actor: str, score: int, text: str) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _JOURNEY:\n             self._doc.lines.append(f\"{_esc(actor)}: {score}: {_esc(text)}\")\n         return self\n \n     # Pie\n@@ -493,13 +473,11 @@\n                 self._doc.lines.append(f\"{indent}{_esc(part)}\")\n         return self\n \n     # Requirement\n \n-    def req(\n-        self, kind: str, ident: str, attrs: dict[str, str]\n-    ) -> x_cls_make_mermaid_x:\n+    def req(self, kind: str, ident: str, attrs: dict[str, str]) -> x_cls_make_mermaid_x:\n         \"\"\"kind in ('requirement','functionalRequirement','test','risk',...).\"\"\"\n         if self._doc.kind == _REQ:\n             self._doc.lines.append(f\"{kind} {ident} {{\")\n             for k, v in attrs.items():\n                 self._doc.lines.append(f\"  {k}: {_esc(v)}\")\n@@ -519,13 +497,11 @@\n     def quadrant(self, idx: int, name: str) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _QUAD:\n             self._doc.lines.append(f'quadrant-{idx} \"{_esc(name)}\"')\n         return self\n \n-    def quad_point(\n-        self, label: str, x: float, y: float\n-    ) -> x_cls_make_mermaid_x:\n+    def quad_point(self, label: str, x: float, y: float) -> x_cls_make_mermaid_x:\n         if self._doc.kind == _QUAD:\n             self._doc.lines.append(f'point \"{_esc(label)}\" : {x}, {y}')\n         return self\n \n     # Beta charts (stubs: let callers write lines)\n@@ -571,13 +547,11 @@\n                 self.save(mmd_path)\n         except Exception:\n             self.save(mmd_path)\n         # Decide svg output\n         svg_path = svg_path or (\n-            mmd_path[:-4] + \"svg\"\n-            if mmd_path.endswith(\".mmd\")\n-            else mmd_path + \".svg\"\n+            mmd_path[:-4] + \"svg\" if mmd_path.endswith(\".mmd\") else mmd_path + \".svg\"\n         )\n         # Resolve CLI\n         cmd = mmdc_cmd or os.environ.get(\"MMDC\", \"mmdc\")\n         exe = shutil.which(cmd)\n         if not exe:\n@@ -588,13 +562,11 @@\n             return None\n         args = [exe, \"-i\", mmd_path, \"-o\", svg_path, \"-b\", \"transparent\"]\n         if extra_args:\n             args.extend(extra_args)\n         try:\n-            res = _subprocess.run(\n-                args, check=False, capture_output=True, text=True\n-            )\n+            res = _subprocess.run(args, check=False, capture_output=True, text=True)\n             if res.stdout:\n                 _info(res.stdout.strip())\n             if res.returncode == 0:\n                 return svg_path\n             if res.stderr:\n",
            "tool": "black",
            "tool_module": "black",
            "tool_version": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_mermaid_x",
            "duration_seconds": 0.09403749997727573,
            "ended_at": "2025-10-08T12:49:16.790065+00:00",
            "exit": 1,
            "repo": "x_make_mermaid_x",
            "repo_hash": "573a5a4ef99d7f30c146458bd51bed742e17a292907d4b66e9bc29d80b8fd93c",
            "repo_path": "C:\\x_runner_x\\x_make_mermaid_x",
            "started_at": "2025-10-08T12:49:16.696029+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_mermaid_x.py:14:29\n   |\n12 | import subprocess as _subprocess\n13 | import sys as _sys\n14 | from collections.abc import Iterable\n   |                             ^^^^^^^^\n15 | from dataclasses import dataclass, field\n16 | from typing import Any\n   |\nhelp: Move into type-checking block\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_mermaid_x.py:23:5\n   |\n21 |   def _info(*args: object) -> None:\n22 |       msg = \" \".join(str(a) for a in args)\n23 | /     try:\n24 | |         _LOGGER.info(\"%s\", msg)\n25 | |     except Exception:\n26 | |         pass\n   | |____________^\n27 |       try:\n28 |           print(msg)\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_mermaid_x.py:25:5\n   |\n23 |       try:\n24 |           _LOGGER.info(\"%s\", msg)\n25 | /     except Exception:\n26 | |         pass\n   | |____________^\n27 |       try:\n28 |           print(msg)\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_mermaid_x.py:25:12\n   |\n23 |     try:\n24 |         _LOGGER.info(\"%s\", msg)\n25 |     except Exception:\n   |            ^^^^^^^^^\n26 |         pass\n27 |     try:\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_mermaid_x.py:29:12\n   |\n27 |     try:\n28 |         print(msg)\n29 |     except Exception:\n   |            ^^^^^^^^^\n30 |         try:\n31 |             _sys.stdout.write(msg + \"\\n\")\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_mermaid_x.py:30:9\n   |\n28 |           print(msg)\n29 |       except Exception:\n30 | /         try:\n31 | |             _sys.stdout.write(msg + \"\\n\")\n32 | |         except Exception:\n33 | |             pass\n   | |________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_mermaid_x.py:32:9\n   |\n30 |           try:\n31 |               _sys.stdout.write(msg + \"\\n\")\n32 | /         except Exception:\n33 | |             pass\n   | |________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_mermaid_x.py:32:16\n   |\n30 |         try:\n31 |             _sys.stdout.write(msg + \"\\n\")\n32 |         except Exception:\n   |                ^^^^^^^^^\n33 |             pass\n   |\n\nN801 Class name `x_cls_make_mermaid_x` should use CapWords convention\n  --> x_cls_make_mermaid_x.py:72:7\n   |\n72 | class x_cls_make_mermaid_x:\n   |       ^^^^^^^^^^^^^^^^^^^^\n73 |     \"\"\"Flexible Mermaid builder covering many diagram kinds.\n   |\n\nPLC0415 `import` should be at the top-level of a file\n  --> x_cls_make_mermaid_x.py:95:13\n   |\n93 |         if isinstance(directive_json, dict):\n94 |             # minimal serializer without imports\n95 |             import json as _json\n   |             ^^^^^^^^^^^^^^^^^^^^\n96 |\n97 |             txt = _json.dumps(directive_json, separators=(\",\", \":\"))\n   |\n\ninvalid-syntax: Cannot use an escape sequence (backslash) in f-strings on Python 3.11 (syntax was added in Python 3.12)\n   --> x_cls_make_mermaid_x.py:467:33\n    |\n465 |         if self._doc.kind == _GIT:\n466 |             self._doc.lines.append(\n467 |                 f'commit {\"tag: \\\"\"+_esc(msg)+\"\\\"\" if msg else \"\"}'.rstrip()\n    |                                 ^\n468 |             )\n469 |         return self\n    |\n\ninvalid-syntax: Cannot use an escape sequence (backslash) in f-strings on Python 3.11 (syntax was added in Python 3.12)\n   --> x_cls_make_mermaid_x.py:467:48\n    |\n465 |         if self._doc.kind == _GIT:\n466 |             self._doc.lines.append(\n467 |                 f'commit {\"tag: \\\"\"+_esc(msg)+\"\\\"\" if msg else \"\"}'.rstrip()\n    |                                                ^\n468 |             )\n469 |         return self\n    |\n\nPTH123 `open()` should be replaced by `Path.open()`\n   --> x_cls_make_mermaid_x.py:550:14\n    |\n548 |     def save(self, path: str = \"diagram.mmd\") -> str:\n549 |         src = self.source()\n550 |         with open(path, \"w\", encoding=\"utf-8\") as f:\n    |              ^^^^\n551 |             f.write(src)\n552 |         if getattr(self._ctx, \"verbose\", False):\n    |\nhelp: Replace with `Path.open()`\n\nPTH110 `os.path.exists()` should be replaced by `Path.exists()`\n   --> x_cls_make_mermaid_x.py:570:20\n    |\n568 |         mmd_path = mmd_path or \"diagram.mmd\"\n569 |         try:\n570 |             if not os.path.exists(mmd_path):\n    |                    ^^^^^^^^^^^^^^\n571 |                 self.save(mmd_path)\n572 |         except Exception:\n    |\nhelp: Replace with `Path(...).exists()`\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_mermaid_x.py:572:16\n    |\n570 |             if not os.path.exists(mmd_path):\n571 |                 self.save(mmd_path)\n572 |         except Exception:\n    |                ^^^^^^^^^\n573 |             self.save(mmd_path)\n574 |         # Decide svg output\n    |\n\nE501 Line too long (95 > 88)\n   --> x_cls_make_mermaid_x.py:586:89\n    |\n584 |             if getattr(self._ctx, \"verbose\", False):\n585 |                 _info(\n586 |                     f\"[mermaid] mermaid-cli '{cmd}' not found in PATH; left .mmd at {mmd_path}\"\n    |                                                                                         ^^^^^^^\n587 |                 )\n588 |             return None\n    |\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_mermaid_x.py:593:19\n    |\n591 |             args.extend(extra_args)\n592 |         try:\n593 |             res = _subprocess.run(\n    |                   ^^^^^^^^^^^^^^^\n594 |                 args, check=False, capture_output=True, text=True\n595 |             )\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_mermaid_x.py:602:9\n    |\n600 |               if res.stderr:\n601 |                   _info(res.stderr.strip())\n602 | /         except Exception:\n603 | |             pass\n    | |________________^\n604 |           return None\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_mermaid_x.py:602:16\n    |\n600 |             if res.stderr:\n601 |                 _info(res.stderr.strip())\n602 |         except Exception:\n    |                ^^^^^^^^^\n603 |             pass\n604 |         return None\n    |\n\nFound 19 errors.\nNo fixes available (3 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_check",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "mypy",
                ".",
                "--strict",
                "--no-warn-unused-configs",
                "--show-error-codes",
                "--warn-return-any",
                "--warn-unreachable",
                "--disallow-any-unimported",
                "--disallow-any-expr",
                "--disallow-any-decorated",
                "--disallow-any-explicit"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "cwd": "C:\\x_runner_x\\x_make_mermaid_x",
            "duration_seconds": 0.3720450999971945,
            "ended_at": "2025-10-08T12:49:17.162609+00:00",
            "exit": 1,
            "repo": "x_make_mermaid_x",
            "repo_hash": "573a5a4ef99d7f30c146458bd51bed742e17a292907d4b66e9bc29d80b8fd93c",
            "repo_path": "C:\\x_runner_x\\x_make_mermaid_x",
            "started_at": "2025-10-08T12:49:16.790565+00:00",
            "stderr": "",
            "stdout": "x_cls_make_mermaid_x.py:89: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_mermaid_x.py:93: error: Expression type contains \"Any\" (has type \"str | dict[str, Any]\")  [misc]\nx_cls_make_mermaid_x.py:552: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_mermaid_x.py:584: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nFound 4 errors in 1 file (checked 1 source file)\n",
            "tool": "mypy",
            "tool_module": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--fix",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_pip_updates_x",
            "duration_seconds": 0.09316250000847504,
            "ended_at": "2025-10-08T12:49:20.632552+00:00",
            "exit": 1,
            "repo": "x_make_pip_updates_x",
            "repo_hash": "b3a43adf3de3687595b2c75317f0c06ba029a277597fe69a8c66a5ce7b606572",
            "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
            "started_at": "2025-10-08T12:49:20.539390+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_make_pip_updates_x.py:8:29\n   |\n 6 | import sys\n 7 | import sys as _sys\n 8 | from collections.abc import Callable\n   |                             ^^^^^^^^\n 9 | from importlib.metadata import version as _version\n10 | from typing import cast\n   |\nhelp: Move into type-checking block\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_pip_updates_x.py:17:5\n   |\n15 |   def _info(*args: object) -> None:\n16 |       msg = \" \".join(str(a) for a in args)\n17 | /     try:\n18 | |         _LOGGER.info(\"%s\", msg)\n19 | |     except Exception:\n20 | |         pass\n   | |____________^\n21 |       try:\n22 |           print(msg)\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_pip_updates_x.py:19:5\n   |\n17 |       try:\n18 |           _LOGGER.info(\"%s\", msg)\n19 | /     except Exception:\n20 | |         pass\n   | |____________^\n21 |       try:\n22 |           print(msg)\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:19:12\n   |\n17 |     try:\n18 |         _LOGGER.info(\"%s\", msg)\n19 |     except Exception:\n   |            ^^^^^^^^^\n20 |         pass\n21 |     try:\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:23:12\n   |\n21 |     try:\n22 |         print(msg)\n23 |     except Exception:\n   |            ^^^^^^^^^\n24 |         try:\n25 |             _sys.stdout.write(msg + \"\\n\")\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_pip_updates_x.py:24:9\n   |\n22 |           print(msg)\n23 |       except Exception:\n24 | /         try:\n25 | |             _sys.stdout.write(msg + \"\\n\")\n26 | |         except Exception:\n27 | |             pass\n   | |________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_pip_updates_x.py:26:9\n   |\n24 |           try:\n25 |               _sys.stdout.write(msg + \"\\n\")\n26 | /         except Exception:\n27 | |             pass\n   | |________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:26:16\n   |\n24 |         try:\n25 |             _sys.stdout.write(msg + \"\\n\")\n26 |         except Exception:\n   |                ^^^^^^^^^\n27 |             pass\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_pip_updates_x.py:32:5\n   |\n30 |   def _error(*args: object) -> None:\n31 |       msg = \" \".join(str(a) for a in args)\n32 | /     try:\n33 | |         _LOGGER.error(\"%s\", msg)\n34 | |     except Exception:\n35 | |         pass\n   | |____________^\n36 |       try:\n37 |           print(msg, file=_sys.stderr)\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_pip_updates_x.py:34:5\n   |\n32 |       try:\n33 |           _LOGGER.error(\"%s\", msg)\n34 | /     except Exception:\n35 | |         pass\n   | |____________^\n36 |       try:\n37 |           print(msg, file=_sys.stderr)\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:34:12\n   |\n32 |     try:\n33 |         _LOGGER.error(\"%s\", msg)\n34 |     except Exception:\n   |            ^^^^^^^^^\n35 |         pass\n36 |     try:\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:38:12\n   |\n36 |     try:\n37 |         print(msg, file=_sys.stderr)\n38 |     except Exception:\n   |            ^^^^^^^^^\n39 |         try:\n40 |             _sys.stderr.write(msg + \"\\n\")\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:41:16\n   |\n39 |         try:\n40 |             _sys.stderr.write(msg + \"\\n\")\n41 |         except Exception:\n   |                ^^^^^^^^^\n42 |             try:\n43 |                 print(msg)\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_pip_updates_x.py:42:13\n   |\n40 |               _sys.stderr.write(msg + \"\\n\")\n41 |           except Exception:\n42 | /             try:\n43 | |                 print(msg)\n44 | |             except Exception:\n45 | |                 pass\n   | |____________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_pip_updates_x.py:44:13\n   |\n42 |               try:\n43 |                   print(msg)\n44 | /             except Exception:\n45 | |                 pass\n   | |____________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:44:20\n   |\n42 |             try:\n43 |                 print(msg)\n44 |             except Exception:\n   |                    ^^^^^^^^^\n45 |                 pass\n   |\n\nN801 Class name `x_cls_make_pip_updates_x` should use CapWords convention\n  --> x_cls_make_pip_updates_x.py:54:7\n   |\n54 | class x_cls_make_pip_updates_x:\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^\n55 |     # ...existing code...\n   |\n\nC901 `batch_install` is too complex (11 > 10)\n  --> x_cls_make_pip_updates_x.py:57:9\n   |\n55 |     # ...existing code...\n56 |\n57 |     def batch_install(self, packages: list[str], *, use_user: bool = False) -> int:\n   |         ^^^^^^^^^^^^^\n58 |         # Force pip upgrade first\n59 |         _info(\"Upgrading pip itself...\")\n   |\n\nE501 Line too long (97 > 88)\n  --> x_cls_make_pip_updates_x.py:78:89\n   |\n76 |         # After publishing, upgrade all published packages\n77 |         _info(\n78 |             \"Upgrading all published packages with --upgrade --force-reinstall --no-cache-dir...\"\n   |                                                                                         ^^^^^^^^^\n79 |         )\n80 |         for pkg in packages:\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_pip_updates_x.py:139:24\n    |\n137 |     \"\"\"\n138 |\n139 |     def __init__(self, user: bool = False, ctx: object | None = None) -> None:\n    |                        ^^^^\n140 |         \"\"\"Primary constructor: preserve previous 'user' flag and accept ctx.\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_pip_updates_x.py:139:24\n    |\n137 |     \"\"\"\n138 |\n139 |     def __init__(self, user: bool = False, ctx: object | None = None) -> None:\n    |                        ^^^^\n140 |         \"\"\"Primary constructor: preserve previous 'user' flag and accept ctx.\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pip_updates_x.py:149:16\n    |\n147 |         try:\n148 |             self.dry_run = bool(getattr(self._ctx, \"dry_run\", False))\n149 |         except Exception:\n    |                ^^^^^^^^^\n150 |             self.dry_run = False\n    |\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_pip_updates_x.py:157:14\n    |\n155 |     @staticmethod\n156 |     def _run(cmd: list[str]) -> tuple[int, str, str]:\n157 |         cp = subprocess.run(cmd, text=True, capture_output=True, check=False)\n    |              ^^^^^^^^^^^^^^\n158 |         stdout = cp.stdout or \"\"\n159 |         stderr = cp.stderr or \"\"\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pip_updates_x.py:168:16\n    |\n166 |             res = _ver(dist_name)\n167 |             return str(res)\n168 |         except Exception:\n    |                ^^^^^^^^^\n169 |             return None\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_pip_updates_x.py:193:43\n    |\n191 |         return False\n192 |\n193 |     def pip_install(self, dist_name: str, upgrade: bool = False) -> int:\n    |                                           ^^^^^^^\n194 |         cmd = [\n195 |             sys.executable,\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_pip_updates_x.py:193:43\n    |\n191 |         return False\n192 |\n193 |     def pip_install(self, dist_name: str, upgrade: bool = False) -> int:\n    |                                           ^^^^^^^\n194 |         cmd = [\n195 |             sys.executable,\n    |\n\nFound 26 errors.\nNo fixes available (5 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_fix",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_pip_updates_x",
            "duration_seconds": 0.08132910000858828,
            "ended_at": "2025-10-08T12:49:20.934411+00:00",
            "exit": 1,
            "repo": "x_make_pip_updates_x",
            "repo_hash": "b3a43adf3de3687595b2c75317f0c06ba029a277597fe69a8c66a5ce7b606572",
            "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
            "started_at": "2025-10-08T12:49:20.853066+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Callable` into a type-checking block\n  --> x_cls_make_pip_updates_x.py:8:29\n   |\n 6 | import sys\n 7 | import sys as _sys\n 8 | from collections.abc import Callable\n   |                             ^^^^^^^^\n 9 | from importlib.metadata import version as _version\n10 | from typing import cast\n   |\nhelp: Move into type-checking block\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_pip_updates_x.py:17:5\n   |\n15 |   def _info(*args: object) -> None:\n16 |       msg = \" \".join(str(a) for a in args)\n17 | /     try:\n18 | |         _LOGGER.info(\"%s\", msg)\n19 | |     except Exception:\n20 | |         pass\n   | |____________^\n21 |       try:\n22 |           print(msg)\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_pip_updates_x.py:19:5\n   |\n17 |       try:\n18 |           _LOGGER.info(\"%s\", msg)\n19 | /     except Exception:\n20 | |         pass\n   | |____________^\n21 |       try:\n22 |           print(msg)\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:19:12\n   |\n17 |     try:\n18 |         _LOGGER.info(\"%s\", msg)\n19 |     except Exception:\n   |            ^^^^^^^^^\n20 |         pass\n21 |     try:\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:23:12\n   |\n21 |     try:\n22 |         print(msg)\n23 |     except Exception:\n   |            ^^^^^^^^^\n24 |         try:\n25 |             _sys.stdout.write(msg + \"\\n\")\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_pip_updates_x.py:24:9\n   |\n22 |           print(msg)\n23 |       except Exception:\n24 | /         try:\n25 | |             _sys.stdout.write(msg + \"\\n\")\n26 | |         except Exception:\n27 | |             pass\n   | |________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_pip_updates_x.py:26:9\n   |\n24 |           try:\n25 |               _sys.stdout.write(msg + \"\\n\")\n26 | /         except Exception:\n27 | |             pass\n   | |________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:26:16\n   |\n24 |         try:\n25 |             _sys.stdout.write(msg + \"\\n\")\n26 |         except Exception:\n   |                ^^^^^^^^^\n27 |             pass\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_pip_updates_x.py:32:5\n   |\n30 |   def _error(*args: object) -> None:\n31 |       msg = \" \".join(str(a) for a in args)\n32 | /     try:\n33 | |         _LOGGER.error(\"%s\", msg)\n34 | |     except Exception:\n35 | |         pass\n   | |____________^\n36 |       try:\n37 |           print(msg, file=_sys.stderr)\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_pip_updates_x.py:34:5\n   |\n32 |       try:\n33 |           _LOGGER.error(\"%s\", msg)\n34 | /     except Exception:\n35 | |         pass\n   | |____________^\n36 |       try:\n37 |           print(msg, file=_sys.stderr)\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:34:12\n   |\n32 |     try:\n33 |         _LOGGER.error(\"%s\", msg)\n34 |     except Exception:\n   |            ^^^^^^^^^\n35 |         pass\n36 |     try:\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:38:12\n   |\n36 |     try:\n37 |         print(msg, file=_sys.stderr)\n38 |     except Exception:\n   |            ^^^^^^^^^\n39 |         try:\n40 |             _sys.stderr.write(msg + \"\\n\")\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:41:16\n   |\n39 |         try:\n40 |             _sys.stderr.write(msg + \"\\n\")\n41 |         except Exception:\n   |                ^^^^^^^^^\n42 |             try:\n43 |                 print(msg)\n   |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n  --> x_cls_make_pip_updates_x.py:42:13\n   |\n40 |               _sys.stderr.write(msg + \"\\n\")\n41 |           except Exception:\n42 | /             try:\n43 | |                 print(msg)\n44 | |             except Exception:\n45 | |                 pass\n   | |____________________^\n   |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n  --> x_cls_make_pip_updates_x.py:44:13\n   |\n42 |               try:\n43 |                   print(msg)\n44 | /             except Exception:\n45 | |                 pass\n   | |____________________^\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pip_updates_x.py:44:20\n   |\n42 |             try:\n43 |                 print(msg)\n44 |             except Exception:\n   |                    ^^^^^^^^^\n45 |                 pass\n   |\n\nN801 Class name `x_cls_make_pip_updates_x` should use CapWords convention\n  --> x_cls_make_pip_updates_x.py:54:7\n   |\n54 | class x_cls_make_pip_updates_x:\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^\n55 |     # ...existing code...\n   |\n\nC901 `batch_install` is too complex (11 > 10)\n  --> x_cls_make_pip_updates_x.py:57:9\n   |\n55 |     # ...existing code...\n56 |\n57 |     def batch_install(self, packages: list[str], *, use_user: bool = False) -> int:\n   |         ^^^^^^^^^^^^^\n58 |         # Force pip upgrade first\n59 |         _info(\"Upgrading pip itself...\")\n   |\n\nE501 Line too long (97 > 88)\n  --> x_cls_make_pip_updates_x.py:78:89\n   |\n76 |         # After publishing, upgrade all published packages\n77 |         _info(\n78 |             \"Upgrading all published packages with --upgrade --force-reinstall --no-cache-dir...\"\n   |                                                                                         ^^^^^^^^^\n79 |         )\n80 |         for pkg in packages:\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_pip_updates_x.py:139:24\n    |\n137 |     \"\"\"\n138 |\n139 |     def __init__(self, user: bool = False, ctx: object | None = None) -> None:\n    |                        ^^^^\n140 |         \"\"\"Primary constructor: preserve previous 'user' flag and accept ctx.\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_pip_updates_x.py:139:24\n    |\n137 |     \"\"\"\n138 |\n139 |     def __init__(self, user: bool = False, ctx: object | None = None) -> None:\n    |                        ^^^^\n140 |         \"\"\"Primary constructor: preserve previous 'user' flag and accept ctx.\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pip_updates_x.py:149:16\n    |\n147 |         try:\n148 |             self.dry_run = bool(getattr(self._ctx, \"dry_run\", False))\n149 |         except Exception:\n    |                ^^^^^^^^^\n150 |             self.dry_run = False\n    |\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_pip_updates_x.py:157:14\n    |\n155 |     @staticmethod\n156 |     def _run(cmd: list[str]) -> tuple[int, str, str]:\n157 |         cp = subprocess.run(cmd, text=True, capture_output=True, check=False)\n    |              ^^^^^^^^^^^^^^\n158 |         stdout = cp.stdout or \"\"\n159 |         stderr = cp.stderr or \"\"\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pip_updates_x.py:168:16\n    |\n166 |             res = _ver(dist_name)\n167 |             return str(res)\n168 |         except Exception:\n    |                ^^^^^^^^^\n169 |             return None\n    |\n\nFBT001 Boolean-typed positional argument in function definition\n   --> x_cls_make_pip_updates_x.py:193:43\n    |\n191 |         return False\n192 |\n193 |     def pip_install(self, dist_name: str, upgrade: bool = False) -> int:\n    |                                           ^^^^^^^\n194 |         cmd = [\n195 |             sys.executable,\n    |\n\nFBT002 Boolean default positional argument in function definition\n   --> x_cls_make_pip_updates_x.py:193:43\n    |\n191 |         return False\n192 |\n193 |     def pip_install(self, dist_name: str, upgrade: bool = False) -> int:\n    |                                           ^^^^^^^\n194 |         cmd = [\n195 |             sys.executable,\n    |\n\nFound 26 errors.\nNo fixes available (5 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_check",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "mypy",
                ".",
                "--strict",
                "--no-warn-unused-configs",
                "--show-error-codes",
                "--warn-return-any",
                "--warn-unreachable",
                "--disallow-any-unimported",
                "--disallow-any-expr",
                "--disallow-any-decorated",
                "--disallow-any-explicit"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "cwd": "C:\\x_runner_x\\x_make_pip_updates_x",
            "duration_seconds": 0.37876789999427274,
            "ended_at": "2025-10-08T12:49:21.313593+00:00",
            "exit": 1,
            "repo": "x_make_pip_updates_x",
            "repo_hash": "b3a43adf3de3687595b2c75317f0c06ba029a277597fe69a8c66a5ce7b606572",
            "repo_path": "C:\\x_runner_x\\x_make_pip_updates_x",
            "started_at": "2025-10-08T12:49:20.934825+00:00",
            "stderr": "",
            "stdout": "x_cls_make_pip_updates_x.py:148: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_pip_updates_x.py:152: error: Expression type contains \"Any\" (has type \"Any | bool\")  [misc]\nx_cls_make_pip_updates_x.py:186: error: Expression has type \"Any\"  [misc]\nx_cls_make_pip_updates_x.py:187: error: Expression has type \"Any\"  [misc]\nFound 4 errors in 1 file (checked 1 source file)\n",
            "tool": "mypy",
            "tool_module": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--fix",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "duration_seconds": 0.08890830000746064,
            "ended_at": "2025-10-08T12:49:22.564864+00:00",
            "exit": 1,
            "repo": "x_make_py_mod_sideload_x",
            "repo_hash": "09670364c70922539d868d18bf11803da396e0542d9f1655c434d30e907ee70e",
            "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "started_at": "2025-10-08T12:49:22.475954+00:00",
            "stderr": "",
            "stdout": "N801 Class name `x_cls_make_py_mod_sideload_x` should use CapWords convention\n  --> x_cls_make_py_mod_sideload_x.py:16:7\n   |\n16 | class x_cls_make_py_mod_sideload_x:\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n17 |     def run(\n18 |         self, base_path: str, module: str, obj: str | None = None\n   |\n\nC901 `run` is too complex (15 > 10)\n  --> x_cls_make_py_mod_sideload_x.py:17:9\n   |\n16 | class x_cls_make_py_mod_sideload_x:\n17 |     def run(\n   |         ^^^\n18 |         self, base_path: str, module: str, obj: str | None = None\n19 |     ) -> Any:\n   |\n\nPLR0912 Too many branches (16 > 12)\n  --> x_cls_make_py_mod_sideload_x.py:17:9\n   |\n16 | class x_cls_make_py_mod_sideload_x:\n17 |     def run(\n   |         ^^^\n18 |         self, base_path: str, module: str, obj: str | None = None\n19 |     ) -> Any:\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `run`\n  --> x_cls_make_py_mod_sideload_x.py:19:10\n   |\n17 |     def run(\n18 |         self, base_path: str, module: str, obj: str | None = None\n19 |     ) -> Any:\n   |          ^^^\n20 |         \"\"\"Load a module file under base_path and return module or attribute.\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:27:19\n   |\n25 |         \"\"\"\n26 |         if not base_path:\n27 |             raise ValueError(\"base_path must be a non-empty string\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n28 |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:27:30\n   |\n25 |         \"\"\"\n26 |         if not base_path:\n27 |             raise ValueError(\"base_path must be a non-empty string\")\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n28 |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n   |\nhelp: Assign to variable; remove string literal\n\nPTH112 `os.path.isdir()` should be replaced by `Path.is_dir()`\n  --> x_cls_make_py_mod_sideload_x.py:29:16\n   |\n27 |             raise ValueError(\"base_path must be a non-empty string\")\n28 |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n   |                ^^^^^^^^^^^^^\n30 |             raise FileNotFoundError(f\"base_path does not exist: {base_path}\")\n   |\nhelp: Replace with `Path(...).is_dir()`\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:29:49\n   |\n27 |             raise ValueError(\"base_path must be a non-empty string\")\n28 |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n   |                                                 ^^^^^^^^^^^^^^\n30 |             raise FileNotFoundError(f\"base_path does not exist: {base_path}\")\n   |\nhelp: Replace with `Path(...).is_file()`\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:30:19\n   |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n30 |             raise FileNotFoundError(f\"base_path does not exist: {base_path}\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n31 |\n32 |         module_file: str | None = None\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:30:37\n   |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n30 |             raise FileNotFoundError(f\"base_path does not exist: {base_path}\")\n   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n31 |\n32 |         module_file: str | None = None\n   |\nhelp: Assign to variable; remove f-string literal\n\nPTH117 `os.path.isabs()` should be replaced by `Path.is_absolute()`\n  --> x_cls_make_py_mod_sideload_x.py:35:12\n   |\n34 |         # Absolute path to a file\n35 |         if os.path.isabs(module) and os.path.isfile(module):\n   |            ^^^^^^^^^^^^^\n36 |             module_file = module\n37 |         # Literal filename relative to base_path\n   |\nhelp: Replace with `Path(...).is_absolute()`\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:35:38\n   |\n34 |         # Absolute path to a file\n35 |         if os.path.isabs(module) and os.path.isfile(module):\n   |                                      ^^^^^^^^^^^^^^\n36 |             module_file = module\n37 |         # Literal filename relative to base_path\n   |\nhelp: Replace with `Path(...).is_file()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n  --> x_cls_make_py_mod_sideload_x.py:39:25\n   |\n37 |         # Literal filename relative to base_path\n38 |         elif module.endswith(\".py\"):\n39 |             candidate = os.path.join(base_path, module)\n   |                         ^^^^^^^^^^^^\n40 |             if os.path.isfile(candidate):\n41 |                 module_file = candidate\n   |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:40:16\n   |\n38 |         elif module.endswith(\".py\"):\n39 |             candidate = os.path.join(base_path, module)\n40 |             if os.path.isfile(candidate):\n   |                ^^^^^^^^^^^^^^\n41 |                 module_file = candidate\n42 |         # Dotted path like pkg.mod -> base_path/pkg/mod.py\n   |\nhelp: Replace with `Path(...).is_file()`\n\nPTH118 `os.path.join()` should be replaced by `Path.joinpath()`\n  --> x_cls_make_py_mod_sideload_x.py:46:25\n   |\n44 |             parts = module.split(\".\")\n45 |             *pkg, mod = parts\n46 |             candidate = os.path.join(base_path, *pkg, f\"{mod}.py\")\n   |                         ^^^^^^^^^^^^\n47 |             if os.path.isfile(candidate):\n48 |                 module_file = candidate\n   |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:47:16\n   |\n45 |             *pkg, mod = parts\n46 |             candidate = os.path.join(base_path, *pkg, f\"{mod}.py\")\n47 |             if os.path.isfile(candidate):\n   |                ^^^^^^^^^^^^^^\n48 |                 module_file = candidate\n49 |         # Try module.py or package __init__.py\n   |\nhelp: Replace with `Path(...).is_file()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n  --> x_cls_make_py_mod_sideload_x.py:51:25\n   |\n49 |         # Try module.py or package __init__.py\n50 |         else:\n51 |             candidate = os.path.join(base_path, f\"{module}.py\")\n   |                         ^^^^^^^^^^^^\n52 |             if os.path.isfile(candidate):\n53 |                 module_file = candidate\n   |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:52:16\n   |\n50 |         else:\n51 |             candidate = os.path.join(base_path, f\"{module}.py\")\n52 |             if os.path.isfile(candidate):\n   |                ^^^^^^^^^^^^^^\n53 |                 module_file = candidate\n54 |             else:\n   |\nhelp: Replace with `Path(...).is_file()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n  --> x_cls_make_py_mod_sideload_x.py:55:24\n   |\n53 |                 module_file = candidate\n54 |             else:\n55 |                 init = os.path.join(base_path, module, \"__init__.py\")\n   |                        ^^^^^^^^^^^^\n56 |                 if os.path.isfile(init):\n57 |                     module_file = init\n   |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:56:20\n   |\n54 |             else:\n55 |                 init = os.path.join(base_path, module, \"__init__.py\")\n56 |                 if os.path.isfile(init):\n   |                    ^^^^^^^^^^^^^^\n57 |                     module_file = init\n   |\nhelp: Replace with `Path(...).is_file()`\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:60:19\n   |\n59 |           if module_file is None:\n60 |               raise ImportError(\n   |  ___________________^\n61 | |                 f\"Cannot resolve module file for module={module} under base_path={base_path}\"\n62 | |             )\n   | |_____________^\n63 |\n64 |           spec = importlib.util.spec_from_file_location(\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:61:17\n   |\n59 |         if module_file is None:\n60 |             raise ImportError(\n61 |                 f\"Cannot resolve module file for module={module} under base_path={base_path}\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n62 |             )\n   |\nhelp: Assign to variable; remove f-string literal\n\nE501 Line too long (93 > 88)\n  --> x_cls_make_py_mod_sideload_x.py:61:89\n   |\n59 |         if module_file is None:\n60 |             raise ImportError(\n61 |                 f\"Cannot resolve module file for module={module} under base_path={base_path}\"\n   |                                                                                         ^^^^^\n62 |             )\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:68:19\n   |\n66 |           )\n67 |           if spec is None or spec.loader is None:\n68 |               raise ImportError(\n   |  ___________________^\n69 | |                 f\"Failed to create module spec for {module_file}\"\n70 | |             )\n   | |_____________^\n71 |\n72 |           module_obj = importlib.util.module_from_spec(spec)\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:69:17\n   |\n67 |         if spec is None or spec.loader is None:\n68 |             raise ImportError(\n69 |                 f\"Failed to create module spec for {module_file}\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n70 |             )\n   |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:79:19\n   |\n78 |           if not hasattr(module_obj, obj):\n79 |               raise AttributeError(\n   |  ___________________^\n80 | |                 f\"Module loaded from {module_file} has no attribute {obj!r}\"\n81 | |             )\n   | |_____________^\n82 |\n83 |           attr = getattr(module_obj, obj)\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:80:17\n   |\n78 |         if not hasattr(module_obj, obj):\n79 |             raise AttributeError(\n80 |                 f\"Module loaded from {module_file} has no attribute {obj!r}\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n81 |             )\n   |\nhelp: Assign to variable; remove f-string literal\n\nFound 27 errors.\nNo fixes available (5 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_fix",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "black",
                ".",
                "--line-length",
                "88",
                "--target-version",
                "py311",
                "--check",
                "--diff"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m black . --line-length 88 --target-version py311 --check --diff",
            "cwd": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "duration_seconds": 0.21194030001061037,
            "ended_at": "2025-10-08T12:49:22.777221+00:00",
            "exit": 1,
            "repo": "x_make_py_mod_sideload_x",
            "repo_hash": "09670364c70922539d868d18bf11803da396e0542d9f1655c434d30e907ee70e",
            "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "started_at": "2025-10-08T12:49:22.565281+00:00",
            "stderr": "would reformat C:\\x_runner_x\\x_make_py_mod_sideload_x\\x_cls_make_py_mod_sideload_x.py\n\nOh no! \\U0001f4a5 \\U0001f494 \\U0001f4a5\n1 file would be reformatted.\n",
            "stdout": "--- C:\\x_runner_x\\x_make_py_mod_sideload_x\\x_cls_make_py_mod_sideload_x.py\t2025-10-07 17:48:34.345657+00:00\n+++ C:\\x_runner_x\\x_make_py_mod_sideload_x\\x_cls_make_py_mod_sideload_x.py\t2025-10-08 12:49:22.752733+00:00\n@@ -12,13 +12,11 @@\n import os\n from typing import Any\n \n \n class x_cls_make_py_mod_sideload_x:\n-    def run(\n-        self, base_path: str, module: str, obj: str | None = None\n-    ) -> Any:\n+    def run(self, base_path: str, module: str, obj: str | None = None) -> Any:\n         \"\"\"Load a module file under base_path and return module or attribute.\n \n         base_path: directory containing modules or packages\n         module: a filename (foo.py), a dotted name (pkg.mod) or a module name\n         obj: optional attribute name to return from the module\n@@ -63,13 +61,11 @@\n \n         spec = importlib.util.spec_from_file_location(\n             f\"sideload_{abs(hash(module_file))}\", module_file\n         )\n         if spec is None or spec.loader is None:\n-            raise ImportError(\n-                f\"Failed to create module spec for {module_file}\"\n-            )\n+            raise ImportError(f\"Failed to create module spec for {module_file}\")\n \n         module_obj = importlib.util.module_from_spec(spec)\n         spec.loader.exec_module(module_obj)\n \n         if obj is None:\n",
            "tool": "black",
            "tool_module": "black",
            "tool_version": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "duration_seconds": 0.10243520000949502,
            "ended_at": "2025-10-08T12:49:22.880162+00:00",
            "exit": 1,
            "repo": "x_make_py_mod_sideload_x",
            "repo_hash": "09670364c70922539d868d18bf11803da396e0542d9f1655c434d30e907ee70e",
            "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "started_at": "2025-10-08T12:49:22.777729+00:00",
            "stderr": "",
            "stdout": "N801 Class name `x_cls_make_py_mod_sideload_x` should use CapWords convention\n  --> x_cls_make_py_mod_sideload_x.py:16:7\n   |\n16 | class x_cls_make_py_mod_sideload_x:\n   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n17 |     def run(\n18 |         self, base_path: str, module: str, obj: str | None = None\n   |\n\nC901 `run` is too complex (15 > 10)\n  --> x_cls_make_py_mod_sideload_x.py:17:9\n   |\n16 | class x_cls_make_py_mod_sideload_x:\n17 |     def run(\n   |         ^^^\n18 |         self, base_path: str, module: str, obj: str | None = None\n19 |     ) -> Any:\n   |\n\nPLR0912 Too many branches (16 > 12)\n  --> x_cls_make_py_mod_sideload_x.py:17:9\n   |\n16 | class x_cls_make_py_mod_sideload_x:\n17 |     def run(\n   |         ^^^\n18 |         self, base_path: str, module: str, obj: str | None = None\n19 |     ) -> Any:\n   |\n\nANN401 Dynamically typed expressions (typing.Any) are disallowed in `run`\n  --> x_cls_make_py_mod_sideload_x.py:19:10\n   |\n17 |     def run(\n18 |         self, base_path: str, module: str, obj: str | None = None\n19 |     ) -> Any:\n   |          ^^^\n20 |         \"\"\"Load a module file under base_path and return module or attribute.\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:27:19\n   |\n25 |         \"\"\"\n26 |         if not base_path:\n27 |             raise ValueError(\"base_path must be a non-empty string\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n28 |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n   |\n\nEM101 Exception must not use a string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:27:30\n   |\n25 |         \"\"\"\n26 |         if not base_path:\n27 |             raise ValueError(\"base_path must be a non-empty string\")\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n28 |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n   |\nhelp: Assign to variable; remove string literal\n\nPTH112 `os.path.isdir()` should be replaced by `Path.is_dir()`\n  --> x_cls_make_py_mod_sideload_x.py:29:16\n   |\n27 |             raise ValueError(\"base_path must be a non-empty string\")\n28 |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n   |                ^^^^^^^^^^^^^\n30 |             raise FileNotFoundError(f\"base_path does not exist: {base_path}\")\n   |\nhelp: Replace with `Path(...).is_dir()`\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:29:49\n   |\n27 |             raise ValueError(\"base_path must be a non-empty string\")\n28 |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n   |                                                 ^^^^^^^^^^^^^^\n30 |             raise FileNotFoundError(f\"base_path does not exist: {base_path}\")\n   |\nhelp: Replace with `Path(...).is_file()`\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:30:19\n   |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n30 |             raise FileNotFoundError(f\"base_path does not exist: {base_path}\")\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n31 |\n32 |         module_file: str | None = None\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:30:37\n   |\n29 |         if not os.path.isdir(base_path) and not os.path.isfile(base_path):\n30 |             raise FileNotFoundError(f\"base_path does not exist: {base_path}\")\n   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n31 |\n32 |         module_file: str | None = None\n   |\nhelp: Assign to variable; remove f-string literal\n\nPTH117 `os.path.isabs()` should be replaced by `Path.is_absolute()`\n  --> x_cls_make_py_mod_sideload_x.py:35:12\n   |\n34 |         # Absolute path to a file\n35 |         if os.path.isabs(module) and os.path.isfile(module):\n   |            ^^^^^^^^^^^^^\n36 |             module_file = module\n37 |         # Literal filename relative to base_path\n   |\nhelp: Replace with `Path(...).is_absolute()`\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:35:38\n   |\n34 |         # Absolute path to a file\n35 |         if os.path.isabs(module) and os.path.isfile(module):\n   |                                      ^^^^^^^^^^^^^^\n36 |             module_file = module\n37 |         # Literal filename relative to base_path\n   |\nhelp: Replace with `Path(...).is_file()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n  --> x_cls_make_py_mod_sideload_x.py:39:25\n   |\n37 |         # Literal filename relative to base_path\n38 |         elif module.endswith(\".py\"):\n39 |             candidate = os.path.join(base_path, module)\n   |                         ^^^^^^^^^^^^\n40 |             if os.path.isfile(candidate):\n41 |                 module_file = candidate\n   |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:40:16\n   |\n38 |         elif module.endswith(\".py\"):\n39 |             candidate = os.path.join(base_path, module)\n40 |             if os.path.isfile(candidate):\n   |                ^^^^^^^^^^^^^^\n41 |                 module_file = candidate\n42 |         # Dotted path like pkg.mod -> base_path/pkg/mod.py\n   |\nhelp: Replace with `Path(...).is_file()`\n\nPTH118 `os.path.join()` should be replaced by `Path.joinpath()`\n  --> x_cls_make_py_mod_sideload_x.py:46:25\n   |\n44 |             parts = module.split(\".\")\n45 |             *pkg, mod = parts\n46 |             candidate = os.path.join(base_path, *pkg, f\"{mod}.py\")\n   |                         ^^^^^^^^^^^^\n47 |             if os.path.isfile(candidate):\n48 |                 module_file = candidate\n   |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:47:16\n   |\n45 |             *pkg, mod = parts\n46 |             candidate = os.path.join(base_path, *pkg, f\"{mod}.py\")\n47 |             if os.path.isfile(candidate):\n   |                ^^^^^^^^^^^^^^\n48 |                 module_file = candidate\n49 |         # Try module.py or package __init__.py\n   |\nhelp: Replace with `Path(...).is_file()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n  --> x_cls_make_py_mod_sideload_x.py:51:25\n   |\n49 |         # Try module.py or package __init__.py\n50 |         else:\n51 |             candidate = os.path.join(base_path, f\"{module}.py\")\n   |                         ^^^^^^^^^^^^\n52 |             if os.path.isfile(candidate):\n53 |                 module_file = candidate\n   |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:52:16\n   |\n50 |         else:\n51 |             candidate = os.path.join(base_path, f\"{module}.py\")\n52 |             if os.path.isfile(candidate):\n   |                ^^^^^^^^^^^^^^\n53 |                 module_file = candidate\n54 |             else:\n   |\nhelp: Replace with `Path(...).is_file()`\n\nPTH118 `os.path.join()` should be replaced by `Path` with `/` operator\n  --> x_cls_make_py_mod_sideload_x.py:55:24\n   |\n53 |                 module_file = candidate\n54 |             else:\n55 |                 init = os.path.join(base_path, module, \"__init__.py\")\n   |                        ^^^^^^^^^^^^\n56 |                 if os.path.isfile(init):\n57 |                     module_file = init\n   |\n\nPTH113 `os.path.isfile()` should be replaced by `Path.is_file()`\n  --> x_cls_make_py_mod_sideload_x.py:56:20\n   |\n54 |             else:\n55 |                 init = os.path.join(base_path, module, \"__init__.py\")\n56 |                 if os.path.isfile(init):\n   |                    ^^^^^^^^^^^^^^\n57 |                     module_file = init\n   |\nhelp: Replace with `Path(...).is_file()`\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:60:19\n   |\n59 |           if module_file is None:\n60 |               raise ImportError(\n   |  ___________________^\n61 | |                 f\"Cannot resolve module file for module={module} under base_path={base_path}\"\n62 | |             )\n   | |_____________^\n63 |\n64 |           spec = importlib.util.spec_from_file_location(\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:61:17\n   |\n59 |         if module_file is None:\n60 |             raise ImportError(\n61 |                 f\"Cannot resolve module file for module={module} under base_path={base_path}\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n62 |             )\n   |\nhelp: Assign to variable; remove f-string literal\n\nE501 Line too long (93 > 88)\n  --> x_cls_make_py_mod_sideload_x.py:61:89\n   |\n59 |         if module_file is None:\n60 |             raise ImportError(\n61 |                 f\"Cannot resolve module file for module={module} under base_path={base_path}\"\n   |                                                                                         ^^^^^\n62 |             )\n   |\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:68:19\n   |\n66 |           )\n67 |           if spec is None or spec.loader is None:\n68 |               raise ImportError(\n   |  ___________________^\n69 | |                 f\"Failed to create module spec for {module_file}\"\n70 | |             )\n   | |_____________^\n71 |\n72 |           module_obj = importlib.util.module_from_spec(spec)\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:69:17\n   |\n67 |         if spec is None or spec.loader is None:\n68 |             raise ImportError(\n69 |                 f\"Failed to create module spec for {module_file}\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n70 |             )\n   |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n  --> x_cls_make_py_mod_sideload_x.py:79:19\n   |\n78 |           if not hasattr(module_obj, obj):\n79 |               raise AttributeError(\n   |  ___________________^\n80 | |                 f\"Module loaded from {module_file} has no attribute {obj!r}\"\n81 | |             )\n   | |_____________^\n82 |\n83 |           attr = getattr(module_obj, obj)\n   |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n  --> x_cls_make_py_mod_sideload_x.py:80:17\n   |\n78 |         if not hasattr(module_obj, obj):\n79 |             raise AttributeError(\n80 |                 f\"Module loaded from {module_file} has no attribute {obj!r}\"\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n81 |             )\n   |\nhelp: Assign to variable; remove f-string literal\n\nFound 27 errors.\nNo fixes available (5 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_check",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "mypy",
                ".",
                "--strict",
                "--no-warn-unused-configs",
                "--show-error-codes",
                "--warn-return-any",
                "--warn-unreachable",
                "--disallow-any-unimported",
                "--disallow-any-expr",
                "--disallow-any-decorated",
                "--disallow-any-explicit"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m mypy . --strict --no-warn-unused-configs --show-error-codes --warn-return-any --warn-unreachable --disallow-any-unimported --disallow-any-expr --disallow-any-decorated --disallow-any-explicit",
            "cwd": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "duration_seconds": 0.3744189999997616,
            "ended_at": "2025-10-08T12:49:23.255017+00:00",
            "exit": 1,
            "repo": "x_make_py_mod_sideload_x",
            "repo_hash": "09670364c70922539d868d18bf11803da396e0542d9f1655c434d30e907ee70e",
            "repo_path": "C:\\x_runner_x\\x_make_py_mod_sideload_x",
            "started_at": "2025-10-08T12:49:22.880599+00:00",
            "stderr": "",
            "stdout": "x_cls_make_py_mod_sideload_x.py:17: error: Explicit \"Any\" is not allowed  [explicit-any]\nx_cls_make_py_mod_sideload_x.py:83: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:84: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:85: error: Expression has type \"Any\"  [misc]\nx_cls_make_py_mod_sideload_x.py:86: error: Expression has type \"Any\"  [misc]\nFound 5 errors in 1 file (checked 1 source file)\n",
            "tool": "mypy",
            "tool_module": "mypy",
            "tool_version": "mypy 1.18.2 (compiled: yes)"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--fix",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_pypi_x",
            "duration_seconds": 0.1012213000212796,
            "ended_at": "2025-10-08T12:49:24.474723+00:00",
            "exit": 1,
            "repo": "x_make_pypi_x",
            "repo_hash": "f688d21259812bb15c244eda70a79aedde3060e02144a72bb594408431ae3c49",
            "repo_path": "C:\\x_runner_x\\x_make_pypi_x",
            "started_at": "2025-10-08T12:49:24.373504+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_pypi_x.py:14:29\n   |\n12 | import urllib.request\n13 | import uuid\n14 | from collections.abc import Iterable, Mapping\n   |                             ^^^^^^^^\n15 | from contextlib import suppress\n16 | from pathlib import Path\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n  --> x_cls_make_pypi_x.py:14:39\n   |\n12 | import urllib.request\n13 | import uuid\n14 | from collections.abc import Iterable, Mapping\n   |                                       ^^^^^^^\n15 | from contextlib import suppress\n16 | from pathlib import Path\n   |\nhelp: Move into type-checking block\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pypi_x.py:44:12\n   |\n42 |     try:\n43 |         print(msg)\n44 |     except Exception:\n   |            ^^^^^^^^^\n45 |         return False\n46 |     return True\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pypi_x.py:52:12\n   |\n50 |     try:\n51 |         print(msg, file=_sys.stderr)\n52 |     except Exception:\n   |            ^^^^^^^^^\n53 |         return False\n54 |     return True\n   |\n\nPLR0911 Too many return statements (7 > 6)\n  --> x_cls_make_pypi_x.py:57:5\n   |\n57 | def _ctx_flag(ctx: object | None, attr: str, *, default: bool = False) -> bool:\n   |     ^^^^^^^^^\n58 |     \"\"\"Best-effort bool coercion for optional orchestrator contexts.\"\"\"\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pypi_x.py:66:12\n   |\n64 |     except AttributeError:\n65 |         return default\n66 |     except Exception:\n   |            ^^^^^^^^^\n67 |         return default\n68 |     if isinstance(value, bool):\n   |\n\nS105 Possible hardcoded password assigned to: \"TOKEN_ENV_VAR\"\n  --> x_cls_make_pypi_x.py:78:26\n   |\n77 | class BaseMake:\n78 |     TOKEN_ENV_VAR: str = \"GITHUB_TOKEN\"\n   |                          ^^^^^^^^^^^^^^\n79 |\n80 |     @classmethod\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_pypi_x.py:88:38\n   |\n87 |     @classmethod\n88 |     def get_env_bool(cls, name: str, default: bool = False) -> bool:\n   |                                      ^^^^^^^\n89 |         v = os.environ.get(name, None)\n90 |         if v is None:\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> x_cls_make_pypi_x.py:88:38\n   |\n87 |     @classmethod\n88 |     def get_env_bool(cls, name: str, default: bool = False) -> bool:\n   |                                      ^^^^^^^\n89 |         v = os.environ.get(name, None)\n90 |         if v is None:\n   |\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_pypi_x.py:106:16\n    |\n104 |         env: Mapping[str, str] | None = None,\n105 |     ) -> _subprocess.CompletedProcess[str]:\n106 |         return _subprocess.run(\n    |                ^^^^^^^^^^^^^^^\n107 |             list(args),\n108 |             check=check,\n    |\n\nS105 Possible hardcoded password assigned to: \"TEST_PYPI_TOKEN_ENV\"\n   --> x_cls_make_pypi_x.py:124:32\n    |\n122 |     PYPI_INDEX_URL: str = \"https://pypi.org\"\n123 |     TEST_PYPI_URL: str = \"https://test.pypi.org\"\n124 |     TEST_PYPI_TOKEN_ENV: str = \"TEST_PYPI_TOKEN\"\n    |                                ^^^^^^^^^^^^^^^^^\n125 |\n126 |     def version_exists_on_pypi(self) -> bool:\n    |\n\nS310 Audit URL open for permitted schemes. Allowing use of `file:` or custom schemes is often unexpected.\n   --> x_cls_make_pypi_x.py:130:36\n    |\n128 |         try:\n129 |             url = f\"{self.PYPI_INDEX_URL}/pypi/{self.name}/json\"\n130 |             with cast(\"IO[bytes]\", urllib.request.urlopen(url, timeout=10)) as response:\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n131 |                 response_bytes = response.read()\n132 |             payload_text = response_bytes.decode(\"utf-8\")\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:134:16\n    |\n132 |             payload_text = response_bytes.decode(\"utf-8\")\n133 |             payload_raw: object = json.loads(payload_text)\n134 |         except Exception as exc:\n    |                ^^^^^^^^^\n135 |             _info(\n136 |                 \"WARNING:\",\n    |\n\nPLR0913 Too many arguments in function definition (8 > 5)\n   --> x_cls_make_pypi_x.py:149:9\n    |\n147 |         return False\n148 |\n149 |     def __init__(\n    |         ^^^^^^^^\n150 |         self,\n151 |         name: str,\n    |\n\nARG002 Unused method argument: `project_dir`\n   --> x_cls_make_pypi_x.py:184:37\n    |\n182 |             _info(f\"[pypi] prepared publisher for {self.name}=={self.version}\")\n183 |\n184 |     def update_pyproject_toml(self, project_dir: str) -> None:\n    |                                     ^^^^^^^^^^^\n185 |         # Intentionally removed: no metadata file manipulation in this publisher.\n186 |         # Older behavior updated project metadata here; that logic was removed\n    |\n\nC901 `ensure_type_metadata` is too complex (21 > 10)\n   --> x_cls_make_pypi_x.py:190:9\n    |\n188 |         return\n189 |\n190 |     def ensure_type_metadata(\n    |         ^^^^^^^^^^^^^^^^^^^^\n191 |         self,\n192 |         repo_name: str,\n    |\n\nPLR0912 Too many branches (23 > 12)\n   --> x_cls_make_pypi_x.py:190:9\n    |\n188 |         return\n189 |\n190 |     def ensure_type_metadata(\n    |         ^^^^^^^^^^^^^^^^^^^^\n191 |         self,\n192 |         repo_name: str,\n    |\n\nPLR0915 Too many statements (71 > 50)\n   --> x_cls_make_pypi_x.py:190:9\n    |\n188 |         return\n189 |\n190 |     def ensure_type_metadata(\n    |         ^^^^^^^^^^^^^^^^^^^^\n191 |         self,\n192 |         repo_name: str,\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> x_cls_make_pypi_x.py:198:13\n    |\n196 |         \"\"\"Inject PEP 561 artifacts and minimal build metadata without recursion.\"\"\"\n197 |         try:\n198 |             from pathlib import Path as _P\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n199 |\n200 |             pkg_path = _P(base_dir)  # build_dir/<dist_name>\n    |\n\nN814 Camelcase `Path` imported as constant `_P`\n   --> x_cls_make_pypi_x.py:198:33\n    |\n196 |         \"\"\"Inject PEP 561 artifacts and minimal build metadata without recursion.\"\"\"\n197 |         try:\n198 |             from pathlib import Path as _P\n    |                                 ^^^^^^^^^^\n199 |\n200 |             pkg_path = _P(base_dir)  # build_dir/<dist_name>\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:208:24\n    |\n206 |                 try:\n207 |                     py_typed.write_text(\"\", encoding=\"utf-8\")\n208 |                 except Exception:\n    |                        ^^^^^^^^^\n209 |                     return\n    |\n\nS112 `try`-`except`-`continue` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:218:17\n    |\n216 |                       if (pkg_path / rel).is_file():\n217 |                           explicit_files.append(rel)\n218 | /                 except Exception:\n219 | |                     continue\n    | |____________________________^\n220 |\n221 |               # MANIFEST.in: explicit includes only\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:218:24\n    |\n216 |                     if (pkg_path / rel).is_file():\n217 |                         explicit_files.append(rel)\n218 |                 except Exception:\n    |                        ^^^^^^^^^\n219 |                     continue\n    |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_make_pypi_x.py:224:17\n    |\n222 |             manifest_lines: list[str] = [f\"include {pkg_path.name}/py.typed\"]\n223 |             for rel in explicit_files:\n224 |                 manifest_lines.append(f\"include {pkg_path.name}/{rel}\")\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n225 |             man_path = bd / \"MANIFEST.in\"\n226 |             try:\n    |\nhelp: Replace for loop with list.extend\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:237:13\n    |\n235 |                       encoding=\"utf-8\",\n236 |                   )\n237 | /             except Exception:\n238 | |                 pass\n    | |____________________^\n239 |\n240 |               # pyproject: include-package-data and explicit package-data (no globs)\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:237:20\n    |\n235 |                     encoding=\"utf-8\",\n236 |                 )\n237 |             except Exception:\n    |                    ^^^^^^^^^\n238 |                 pass\n    |\n\nE501 Line too long (103 > 88)\n   --> x_cls_make_pypi_x.py:256:89\n    |\n254 |                     auth_name = self.author or \"Unknown\"\n255 |                     auth_email = self.email or \"unknown@example.com\"\n256 |                     base_pyproject += f'authors = [{{name = \"{auth_name}\", email = \"{auth_email}\"}}]\\n'\n    |                                                                                         ^^^^^^^^^^^^^^^\n257 |                 if self.dependencies:\n258 |                     deps_serial = \",\\n    \".join(f'\"{d}\"' for d in self.dependencies)\n    |\n\nE501 Line too long (99 > 88)\n   --> x_cls_make_pypi_x.py:290:89\n    |\n288 |                         txt += '\\n[tool.setuptools.packages.find]\\nwhere = [\".\"]\\n'\n289 |                         changed = True\n290 |                     # write/replace package-data block (append a fresh block with explicit entries)\n    |                                                                                         ^^^^^^^^^^^\n291 |                     pkg_data_block = (\n292 |                         f\"\\n[tool.setuptools.package-data]\\n\"\n    |\n\nE501 Line too long (103 > 88)\n   --> x_cls_make_pypi_x.py:299:89\n    |\n297 |                         changed = True\n298 |                     else:\n299 |                         # naive replace for the same key (append new explicit block to take precedence)\n    |                                                                                         ^^^^^^^^^^^^^^^\n300 |                         txt += pkg_data_block\n301 |                         changed = True\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:308:13\n    |\n306 |                       if changed:\n307 |                           pyproject.write_text(txt, encoding=\"utf-8\")\n308 | /             except Exception:\n309 | |                 pass\n    | |____________________^\n310 |           except Exception:\n311 |               pass\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:308:20\n    |\n306 |                     if changed:\n307 |                         pyproject.write_text(txt, encoding=\"utf-8\")\n308 |             except Exception:\n    |                    ^^^^^^^^^\n309 |                 pass\n310 |         except Exception:\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:310:9\n    |\n308 |               except Exception:\n309 |                   pass\n310 | /         except Exception:\n311 | |             pass\n    | |________________^\n312 |\n313 |       def create_files(self, main_file: str, ancillary_files: list[str]) -> None:\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:310:16\n    |\n308 |             except Exception:\n309 |                 pass\n310 |         except Exception:\n    |                ^^^^^^^^^\n311 |             pass\n    |\n\nC901 `create_files` is too complex (18 > 10)\n   --> x_cls_make_pypi_x.py:313:9\n    |\n311 |             pass\n312 |\n313 |     def create_files(self, main_file: str, ancillary_files: list[str]) -> None:\n    |         ^^^^^^^^^^^^\n314 |         \"\"\"\n315 |         Create a minimal package tree in a temporary build directory and\n    |\n\nPLR0912 Too many branches (17 > 12)\n   --> x_cls_make_pypi_x.py:313:9\n    |\n311 |             pass\n312 |\n313 |     def create_files(self, main_file: str, ancillary_files: list[str]) -> None:\n    |         ^^^^^^^^^^^^\n314 |         \"\"\"\n315 |         Create a minimal package tree in a temporary build directory and\n    |\n\nPLR0915 Too many statements (55 > 50)\n   --> x_cls_make_pypi_x.py:313:9\n    |\n311 |             pass\n312 |\n313 |     def create_files(self, main_file: str, ancillary_files: list[str]) -> None:\n    |         ^^^^^^^^^^^^\n314 |         \"\"\"\n315 |         Create a minimal package tree in a temporary build directory and\n    |\n\nPTH122 `os.path.splitext()` should be replaced by `Path.suffix`, `Path.stem`, and `Path.parent`\n   --> x_cls_make_pypi_x.py:339:22\n    |\n337 |         def _is_allowed(p: str) -> bool:\n338 |             \"\"\"Allow-list files copied into the build.\"\"\"\n339 |             _, ext = os.path.splitext(p.lower())\n    |                      ^^^^^^^^^^^^^^^^\n340 |             allowed = {\".py\", \".txt\", \".md\", \".rst\"}\n341 |             return ext in allowed or os.path.basename(p).lower() == \"__init__.py\"\n    |\n\nPTH119 `os.path.basename()` should be replaced by `Path.name`\n   --> x_cls_make_pypi_x.py:341:38\n    |\n339 |             _, ext = os.path.splitext(p.lower())\n340 |             allowed = {\".py\", \".txt\", \".md\", \".rst\"}\n341 |             return ext in allowed or os.path.basename(p).lower() == \"__init__.py\"\n    |                                      ^^^^^^^^^^^^^^^^\n342 |\n343 |         # Copy ancillaries: files only; do not recurse directories\n    |\nhelp: Replace with `Path(...).name`\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_pypi_x.py:365:21\n    |\n363 |                   pyi_init = pkg_dir / \"__init__.pyi\"\n364 |                   if not pyi_init.exists():\n365 | /                     try:\n366 | |                         pyi_init.write_text(\n367 | |                             (\n368 | |                                 f\"# Type stubs for package {pkg_dir.name}\\n\"\n369 | |                                 \"from typing import Any\\n\\n__all__: list[str]\\n\"\n370 | |                             ),\n371 | |                             encoding=\"utf-8\",\n372 | |                         )\n373 | |                     except Exception:\n374 | |                         pass\n    | |____________________________^\n375 |\n376 |               for py_file in package_dir.rglob(\"*.py\"):\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:373:21\n    |\n371 |                               encoding=\"utf-8\",\n372 |                           )\n373 | /                     except Exception:\n374 | |                         pass\n    | |____________________________^\n375 |\n376 |               for py_file in package_dir.rglob(\"*.py\"):\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:373:28\n    |\n371 |                             encoding=\"utf-8\",\n372 |                         )\n373 |                     except Exception:\n    |                            ^^^^^^^^^\n374 |                         pass\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_pypi_x.py:381:21\n    |\n379 |                   stub_path = py_file.with_suffix(\".pyi\")\n380 |                   if not stub_path.exists():\n381 | /                     try:\n382 | |                         stub_path.write_text(\n383 | |                             f\"# Stub for {py_file.name}\\nfrom typing import Any\\n\\n\",\n384 | |                             encoding=\"utf-8\",\n385 | |                         )\n386 | |                     except Exception:\n387 | |                         pass\n    | |____________________________^\n388 |           except Exception:\n389 |               # Best-effort: do not fail the build just because stubs couldn't be written.\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:386:21\n    |\n384 |                               encoding=\"utf-8\",\n385 |                           )\n386 | /                     except Exception:\n387 | |                         pass\n    | |____________________________^\n388 |           except Exception:\n389 |               # Best-effort: do not fail the build just because stubs couldn't be written.\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:386:28\n    |\n384 |                             encoding=\"utf-8\",\n385 |                         )\n386 |                     except Exception:\n    |                            ^^^^^^^^^\n387 |                         pass\n388 |         except Exception:\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:388:9\n    |\n386 |                       except Exception:\n387 |                           pass\n388 | /         except Exception:\n389 | |             # Best-effort: do not fail the build just because stubs couldn't be written.\n390 | |             pass\n    | |________________^\n391 |\n392 |           # After stubs generated, ensure PEP 561 artifacts & metadata\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:388:16\n    |\n386 |                     except Exception:\n387 |                         pass\n388 |         except Exception:\n    |                ^^^^^^^^^\n389 |             # Best-effort: do not fail the build just because stubs couldn't be written.\n390 |             pass\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_pypi_x.py:393:9\n    |\n392 |           # After stubs generated, ensure PEP 561 artifacts & metadata\n393 | /         try:\n394 | |             self.ensure_type_metadata(str(build_dir), str(package_dir), ancillary_files)\n395 | |         except Exception:\n396 | |             pass\n    | |________________^\n397 |           self._project_dir = build_dir\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:395:9\n    |\n393 |           try:\n394 |               self.ensure_type_metadata(str(build_dir), str(package_dir), ancillary_files)\n395 | /         except Exception:\n396 | |             pass\n    | |________________^\n397 |           self._project_dir = build_dir\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:395:16\n    |\n393 |         try:\n394 |             self.ensure_type_metadata(str(build_dir), str(package_dir), ancillary_files)\n395 |         except Exception:\n    |                ^^^^^^^^^\n396 |             pass\n397 |         self._project_dir = build_dir\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:402:19\n    |\n400 |         main_path = Path(main_file)\n401 |         if not main_path.exists():\n402 |             raise FileNotFoundError(f\"Main file '{main_file}' does not exist.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n403 |         for ancillary_file in ancillary_files or []:\n404 |             if not Path(ancillary_file).exists():\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:402:37\n    |\n400 |         main_path = Path(main_file)\n401 |         if not main_path.exists():\n402 |             raise FileNotFoundError(f\"Main file '{main_file}' does not exist.\")\n    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n403 |         for ancillary_file in ancillary_files or []:\n404 |             if not Path(ancillary_file).exists():\n    |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:405:23\n    |\n403 |           for ancillary_file in ancillary_files or []:\n404 |               if not Path(ancillary_file).exists():\n405 |                   raise FileNotFoundError(\n    |  _______________________^\n406 | |                     f\"Ancillary file '{ancillary_file}' is not found.\"\n407 | |                 )\n    | |_________________^\n408 |\n409 |       def publish(self, main_file: str, ancillary_files: list[str]) -> bool:\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:406:21\n    |\n404 |             if not Path(ancillary_file).exists():\n405 |                 raise FileNotFoundError(\n406 |                     f\"Ancillary file '{ancillary_file}' is not found.\"\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n407 |                 )\n    |\nhelp: Assign to variable; remove f-string literal\n\nC901 `publish` is too complex (14 > 10)\n   --> x_cls_make_pypi_x.py:409:9\n    |\n407 |                 )\n408 |\n409 |     def publish(self, main_file: str, ancillary_files: list[str]) -> bool:\n    |         ^^^^^^^\n410 |         \"\"\"Build and upload package to PyPI using build + twine.\n    |\n\nPLR0912 Too many branches (14 > 12)\n   --> x_cls_make_pypi_x.py:409:9\n    |\n407 |                 )\n408 |\n409 |     def publish(self, main_file: str, ancillary_files: list[str]) -> bool:\n    |         ^^^^^^^\n410 |         \"\"\"Build and upload package to PyPI using build + twine.\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:425:19\n    |\n423 |         project_dir = self._project_dir\n424 |         if project_dir is None:\n425 |             raise RuntimeError(\"Build directory not prepared; call create_files first\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n426 |         dist_dir = project_dir / \"dist\"\n427 |         if dist_dir.exists():\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:425:32\n    |\n423 |         project_dir = self._project_dir\n424 |         if project_dir is None:\n425 |             raise RuntimeError(\"Build directory not prepared; call create_files first\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n426 |         dist_dir = project_dir / \"dist\"\n427 |         if dist_dir.exists():\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:438:19\n    |\n436 |             _error(build_result.stderr)\n437 |         if build_result.returncode != 0:\n438 |             raise RuntimeError(\"Build failed. Aborting publish.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n439 |\n440 |         if not dist_dir.exists():\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:438:32\n    |\n436 |             _error(build_result.stderr)\n437 |         if build_result.returncode != 0:\n438 |             raise RuntimeError(\"Build failed. Aborting publish.\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n439 |\n440 |         if not dist_dir.exists():\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:441:19\n    |\n440 |         if not dist_dir.exists():\n441 |             raise RuntimeError(\"dist/ directory not found after build.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n442 |\n443 |         files = [\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:441:32\n    |\n440 |         if not dist_dir.exists():\n441 |             raise RuntimeError(\"dist/ directory not found after build.\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n442 |\n443 |         files = [\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:450:19\n    |\n448 |         ]\n449 |         if not files:\n450 |             raise RuntimeError(\"No valid distribution files found. Aborting publish.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n451 |\n452 |         pypirc_path = Path.home() / \".pypirc\"\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:450:32\n    |\n448 |         ]\n449 |         if not files:\n450 |             raise RuntimeError(\"No valid distribution files found. Aborting publish.\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n451 |\n452 |         pypirc_path = Path.home() / \".pypirc\"\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:481:19\n    |\n479 |             _error(result.stderr)\n480 |         if result.returncode != 0:\n481 |             raise RuntimeError(\"Twine upload failed. See output above.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n482 |         return True\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:481:32\n    |\n479 |             _error(result.stderr)\n480 |         if result.returncode != 0:\n481 |             raise RuntimeError(\"Twine upload failed. See output above.\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n482 |         return True\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:491:11\n    |\n490 | if __name__ == \"__main__\":\n491 |     raise SystemExit(\"This file is not meant to be run directly.\")\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:491:22\n    |\n490 | if __name__ == \"__main__\":\n491 |     raise SystemExit(\"This file is not meant to be run directly.\")\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Assign to variable; remove string literal\n\nFound 67 errors.\nNo fixes available (13 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_fix",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_pypi_x",
            "duration_seconds": 0.08805809999466874,
            "ended_at": "2025-10-08T12:49:24.861351+00:00",
            "exit": 1,
            "repo": "x_make_pypi_x",
            "repo_hash": "f688d21259812bb15c244eda70a79aedde3060e02144a72bb594408431ae3c49",
            "repo_path": "C:\\x_runner_x\\x_make_pypi_x",
            "started_at": "2025-10-08T12:49:24.773293+00:00",
            "stderr": "",
            "stdout": "TC003 Move standard library import `collections.abc.Iterable` into a type-checking block\n  --> x_cls_make_pypi_x.py:14:29\n   |\n12 | import urllib.request\n13 | import uuid\n14 | from collections.abc import Iterable, Mapping\n   |                             ^^^^^^^^\n15 | from contextlib import suppress\n16 | from pathlib import Path\n   |\nhelp: Move into type-checking block\n\nTC003 Move standard library import `collections.abc.Mapping` into a type-checking block\n  --> x_cls_make_pypi_x.py:14:39\n   |\n12 | import urllib.request\n13 | import uuid\n14 | from collections.abc import Iterable, Mapping\n   |                                       ^^^^^^^\n15 | from contextlib import suppress\n16 | from pathlib import Path\n   |\nhelp: Move into type-checking block\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pypi_x.py:44:12\n   |\n42 |     try:\n43 |         print(msg)\n44 |     except Exception:\n   |            ^^^^^^^^^\n45 |         return False\n46 |     return True\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pypi_x.py:52:12\n   |\n50 |     try:\n51 |         print(msg, file=_sys.stderr)\n52 |     except Exception:\n   |            ^^^^^^^^^\n53 |         return False\n54 |     return True\n   |\n\nPLR0911 Too many return statements (7 > 6)\n  --> x_cls_make_pypi_x.py:57:5\n   |\n57 | def _ctx_flag(ctx: object | None, attr: str, *, default: bool = False) -> bool:\n   |     ^^^^^^^^^\n58 |     \"\"\"Best-effort bool coercion for optional orchestrator contexts.\"\"\"\n   |\n\nBLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_pypi_x.py:66:12\n   |\n64 |     except AttributeError:\n65 |         return default\n66 |     except Exception:\n   |            ^^^^^^^^^\n67 |         return default\n68 |     if isinstance(value, bool):\n   |\n\nS105 Possible hardcoded password assigned to: \"TOKEN_ENV_VAR\"\n  --> x_cls_make_pypi_x.py:78:26\n   |\n77 | class BaseMake:\n78 |     TOKEN_ENV_VAR: str = \"GITHUB_TOKEN\"\n   |                          ^^^^^^^^^^^^^^\n79 |\n80 |     @classmethod\n   |\n\nFBT001 Boolean-typed positional argument in function definition\n  --> x_cls_make_pypi_x.py:88:38\n   |\n87 |     @classmethod\n88 |     def get_env_bool(cls, name: str, default: bool = False) -> bool:\n   |                                      ^^^^^^^\n89 |         v = os.environ.get(name, None)\n90 |         if v is None:\n   |\n\nFBT002 Boolean default positional argument in function definition\n  --> x_cls_make_pypi_x.py:88:38\n   |\n87 |     @classmethod\n88 |     def get_env_bool(cls, name: str, default: bool = False) -> bool:\n   |                                      ^^^^^^^\n89 |         v = os.environ.get(name, None)\n90 |         if v is None:\n   |\n\nS603 `subprocess` call: check for execution of untrusted input\n   --> x_cls_make_pypi_x.py:106:16\n    |\n104 |         env: Mapping[str, str] | None = None,\n105 |     ) -> _subprocess.CompletedProcess[str]:\n106 |         return _subprocess.run(\n    |                ^^^^^^^^^^^^^^^\n107 |             list(args),\n108 |             check=check,\n    |\n\nS105 Possible hardcoded password assigned to: \"TEST_PYPI_TOKEN_ENV\"\n   --> x_cls_make_pypi_x.py:124:32\n    |\n122 |     PYPI_INDEX_URL: str = \"https://pypi.org\"\n123 |     TEST_PYPI_URL: str = \"https://test.pypi.org\"\n124 |     TEST_PYPI_TOKEN_ENV: str = \"TEST_PYPI_TOKEN\"\n    |                                ^^^^^^^^^^^^^^^^^\n125 |\n126 |     def version_exists_on_pypi(self) -> bool:\n    |\n\nS310 Audit URL open for permitted schemes. Allowing use of `file:` or custom schemes is often unexpected.\n   --> x_cls_make_pypi_x.py:130:36\n    |\n128 |         try:\n129 |             url = f\"{self.PYPI_INDEX_URL}/pypi/{self.name}/json\"\n130 |             with cast(\"IO[bytes]\", urllib.request.urlopen(url, timeout=10)) as response:\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n131 |                 response_bytes = response.read()\n132 |             payload_text = response_bytes.decode(\"utf-8\")\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:134:16\n    |\n132 |             payload_text = response_bytes.decode(\"utf-8\")\n133 |             payload_raw: object = json.loads(payload_text)\n134 |         except Exception as exc:\n    |                ^^^^^^^^^\n135 |             _info(\n136 |                 \"WARNING:\",\n    |\n\nPLR0913 Too many arguments in function definition (8 > 5)\n   --> x_cls_make_pypi_x.py:149:9\n    |\n147 |         return False\n148 |\n149 |     def __init__(\n    |         ^^^^^^^^\n150 |         self,\n151 |         name: str,\n    |\n\nARG002 Unused method argument: `project_dir`\n   --> x_cls_make_pypi_x.py:184:37\n    |\n182 |             _info(f\"[pypi] prepared publisher for {self.name}=={self.version}\")\n183 |\n184 |     def update_pyproject_toml(self, project_dir: str) -> None:\n    |                                     ^^^^^^^^^^^\n185 |         # Intentionally removed: no metadata file manipulation in this publisher.\n186 |         # Older behavior updated project metadata here; that logic was removed\n    |\n\nC901 `ensure_type_metadata` is too complex (21 > 10)\n   --> x_cls_make_pypi_x.py:190:9\n    |\n188 |         return\n189 |\n190 |     def ensure_type_metadata(\n    |         ^^^^^^^^^^^^^^^^^^^^\n191 |         self,\n192 |         repo_name: str,\n    |\n\nPLR0912 Too many branches (23 > 12)\n   --> x_cls_make_pypi_x.py:190:9\n    |\n188 |         return\n189 |\n190 |     def ensure_type_metadata(\n    |         ^^^^^^^^^^^^^^^^^^^^\n191 |         self,\n192 |         repo_name: str,\n    |\n\nPLR0915 Too many statements (71 > 50)\n   --> x_cls_make_pypi_x.py:190:9\n    |\n188 |         return\n189 |\n190 |     def ensure_type_metadata(\n    |         ^^^^^^^^^^^^^^^^^^^^\n191 |         self,\n192 |         repo_name: str,\n    |\n\nPLC0415 `import` should be at the top-level of a file\n   --> x_cls_make_pypi_x.py:198:13\n    |\n196 |         \"\"\"Inject PEP 561 artifacts and minimal build metadata without recursion.\"\"\"\n197 |         try:\n198 |             from pathlib import Path as _P\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n199 |\n200 |             pkg_path = _P(base_dir)  # build_dir/<dist_name>\n    |\n\nN814 Camelcase `Path` imported as constant `_P`\n   --> x_cls_make_pypi_x.py:198:33\n    |\n196 |         \"\"\"Inject PEP 561 artifacts and minimal build metadata without recursion.\"\"\"\n197 |         try:\n198 |             from pathlib import Path as _P\n    |                                 ^^^^^^^^^^\n199 |\n200 |             pkg_path = _P(base_dir)  # build_dir/<dist_name>\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:208:24\n    |\n206 |                 try:\n207 |                     py_typed.write_text(\"\", encoding=\"utf-8\")\n208 |                 except Exception:\n    |                        ^^^^^^^^^\n209 |                     return\n    |\n\nS112 `try`-`except`-`continue` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:218:17\n    |\n216 |                       if (pkg_path / rel).is_file():\n217 |                           explicit_files.append(rel)\n218 | /                 except Exception:\n219 | |                     continue\n    | |____________________________^\n220 |\n221 |               # MANIFEST.in: explicit includes only\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:218:24\n    |\n216 |                     if (pkg_path / rel).is_file():\n217 |                         explicit_files.append(rel)\n218 |                 except Exception:\n    |                        ^^^^^^^^^\n219 |                     continue\n    |\n\nPERF401 Use `list.extend` to create a transformed list\n   --> x_cls_make_pypi_x.py:224:17\n    |\n222 |             manifest_lines: list[str] = [f\"include {pkg_path.name}/py.typed\"]\n223 |             for rel in explicit_files:\n224 |                 manifest_lines.append(f\"include {pkg_path.name}/{rel}\")\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n225 |             man_path = bd / \"MANIFEST.in\"\n226 |             try:\n    |\nhelp: Replace for loop with list.extend\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:237:13\n    |\n235 |                       encoding=\"utf-8\",\n236 |                   )\n237 | /             except Exception:\n238 | |                 pass\n    | |____________________^\n239 |\n240 |               # pyproject: include-package-data and explicit package-data (no globs)\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:237:20\n    |\n235 |                     encoding=\"utf-8\",\n236 |                 )\n237 |             except Exception:\n    |                    ^^^^^^^^^\n238 |                 pass\n    |\n\nE501 Line too long (103 > 88)\n   --> x_cls_make_pypi_x.py:256:89\n    |\n254 |                     auth_name = self.author or \"Unknown\"\n255 |                     auth_email = self.email or \"unknown@example.com\"\n256 |                     base_pyproject += f'authors = [{{name = \"{auth_name}\", email = \"{auth_email}\"}}]\\n'\n    |                                                                                         ^^^^^^^^^^^^^^^\n257 |                 if self.dependencies:\n258 |                     deps_serial = \",\\n    \".join(f'\"{d}\"' for d in self.dependencies)\n    |\n\nE501 Line too long (99 > 88)\n   --> x_cls_make_pypi_x.py:290:89\n    |\n288 |                         txt += '\\n[tool.setuptools.packages.find]\\nwhere = [\".\"]\\n'\n289 |                         changed = True\n290 |                     # write/replace package-data block (append a fresh block with explicit entries)\n    |                                                                                         ^^^^^^^^^^^\n291 |                     pkg_data_block = (\n292 |                         f\"\\n[tool.setuptools.package-data]\\n\"\n    |\n\nE501 Line too long (103 > 88)\n   --> x_cls_make_pypi_x.py:299:89\n    |\n297 |                         changed = True\n298 |                     else:\n299 |                         # naive replace for the same key (append new explicit block to take precedence)\n    |                                                                                         ^^^^^^^^^^^^^^^\n300 |                         txt += pkg_data_block\n301 |                         changed = True\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:308:13\n    |\n306 |                       if changed:\n307 |                           pyproject.write_text(txt, encoding=\"utf-8\")\n308 | /             except Exception:\n309 | |                 pass\n    | |____________________^\n310 |           except Exception:\n311 |               pass\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:308:20\n    |\n306 |                     if changed:\n307 |                         pyproject.write_text(txt, encoding=\"utf-8\")\n308 |             except Exception:\n    |                    ^^^^^^^^^\n309 |                 pass\n310 |         except Exception:\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:310:9\n    |\n308 |               except Exception:\n309 |                   pass\n310 | /         except Exception:\n311 | |             pass\n    | |________________^\n312 |\n313 |       def create_files(self, main_file: str, ancillary_files: list[str]) -> None:\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:310:16\n    |\n308 |             except Exception:\n309 |                 pass\n310 |         except Exception:\n    |                ^^^^^^^^^\n311 |             pass\n    |\n\nC901 `create_files` is too complex (18 > 10)\n   --> x_cls_make_pypi_x.py:313:9\n    |\n311 |             pass\n312 |\n313 |     def create_files(self, main_file: str, ancillary_files: list[str]) -> None:\n    |         ^^^^^^^^^^^^\n314 |         \"\"\"\n315 |         Create a minimal package tree in a temporary build directory and\n    |\n\nPLR0912 Too many branches (17 > 12)\n   --> x_cls_make_pypi_x.py:313:9\n    |\n311 |             pass\n312 |\n313 |     def create_files(self, main_file: str, ancillary_files: list[str]) -> None:\n    |         ^^^^^^^^^^^^\n314 |         \"\"\"\n315 |         Create a minimal package tree in a temporary build directory and\n    |\n\nPLR0915 Too many statements (55 > 50)\n   --> x_cls_make_pypi_x.py:313:9\n    |\n311 |             pass\n312 |\n313 |     def create_files(self, main_file: str, ancillary_files: list[str]) -> None:\n    |         ^^^^^^^^^^^^\n314 |         \"\"\"\n315 |         Create a minimal package tree in a temporary build directory and\n    |\n\nPTH122 `os.path.splitext()` should be replaced by `Path.suffix`, `Path.stem`, and `Path.parent`\n   --> x_cls_make_pypi_x.py:339:22\n    |\n337 |         def _is_allowed(p: str) -> bool:\n338 |             \"\"\"Allow-list files copied into the build.\"\"\"\n339 |             _, ext = os.path.splitext(p.lower())\n    |                      ^^^^^^^^^^^^^^^^\n340 |             allowed = {\".py\", \".txt\", \".md\", \".rst\"}\n341 |             return ext in allowed or os.path.basename(p).lower() == \"__init__.py\"\n    |\n\nPTH119 `os.path.basename()` should be replaced by `Path.name`\n   --> x_cls_make_pypi_x.py:341:38\n    |\n339 |             _, ext = os.path.splitext(p.lower())\n340 |             allowed = {\".py\", \".txt\", \".md\", \".rst\"}\n341 |             return ext in allowed or os.path.basename(p).lower() == \"__init__.py\"\n    |                                      ^^^^^^^^^^^^^^^^\n342 |\n343 |         # Copy ancillaries: files only; do not recurse directories\n    |\nhelp: Replace with `Path(...).name`\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_pypi_x.py:365:21\n    |\n363 |                   pyi_init = pkg_dir / \"__init__.pyi\"\n364 |                   if not pyi_init.exists():\n365 | /                     try:\n366 | |                         pyi_init.write_text(\n367 | |                             (\n368 | |                                 f\"# Type stubs for package {pkg_dir.name}\\n\"\n369 | |                                 \"from typing import Any\\n\\n__all__: list[str]\\n\"\n370 | |                             ),\n371 | |                             encoding=\"utf-8\",\n372 | |                         )\n373 | |                     except Exception:\n374 | |                         pass\n    | |____________________________^\n375 |\n376 |               for py_file in package_dir.rglob(\"*.py\"):\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:373:21\n    |\n371 |                               encoding=\"utf-8\",\n372 |                           )\n373 | /                     except Exception:\n374 | |                         pass\n    | |____________________________^\n375 |\n376 |               for py_file in package_dir.rglob(\"*.py\"):\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:373:28\n    |\n371 |                             encoding=\"utf-8\",\n372 |                         )\n373 |                     except Exception:\n    |                            ^^^^^^^^^\n374 |                         pass\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_pypi_x.py:381:21\n    |\n379 |                   stub_path = py_file.with_suffix(\".pyi\")\n380 |                   if not stub_path.exists():\n381 | /                     try:\n382 | |                         stub_path.write_text(\n383 | |                             f\"# Stub for {py_file.name}\\nfrom typing import Any\\n\\n\",\n384 | |                             encoding=\"utf-8\",\n385 | |                         )\n386 | |                     except Exception:\n387 | |                         pass\n    | |____________________________^\n388 |           except Exception:\n389 |               # Best-effort: do not fail the build just because stubs couldn't be written.\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:386:21\n    |\n384 |                               encoding=\"utf-8\",\n385 |                           )\n386 | /                     except Exception:\n387 | |                         pass\n    | |____________________________^\n388 |           except Exception:\n389 |               # Best-effort: do not fail the build just because stubs couldn't be written.\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:386:28\n    |\n384 |                             encoding=\"utf-8\",\n385 |                         )\n386 |                     except Exception:\n    |                            ^^^^^^^^^\n387 |                         pass\n388 |         except Exception:\n    |\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:388:9\n    |\n386 |                       except Exception:\n387 |                           pass\n388 | /         except Exception:\n389 | |             # Best-effort: do not fail the build just because stubs couldn't be written.\n390 | |             pass\n    | |________________^\n391 |\n392 |           # After stubs generated, ensure PEP 561 artifacts & metadata\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:388:16\n    |\n386 |                     except Exception:\n387 |                         pass\n388 |         except Exception:\n    |                ^^^^^^^^^\n389 |             # Best-effort: do not fail the build just because stubs couldn't be written.\n390 |             pass\n    |\n\nSIM105 Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`\n   --> x_cls_make_pypi_x.py:393:9\n    |\n392 |           # After stubs generated, ensure PEP 561 artifacts & metadata\n393 | /         try:\n394 | |             self.ensure_type_metadata(str(build_dir), str(package_dir), ancillary_files)\n395 | |         except Exception:\n396 | |             pass\n    | |________________^\n397 |           self._project_dir = build_dir\n    |\nhelp: Replace `try`-`except`-`pass` with `with contextlib.suppress(Exception): ...`\n\nS110 `try`-`except`-`pass` detected, consider logging the exception\n   --> x_cls_make_pypi_x.py:395:9\n    |\n393 |           try:\n394 |               self.ensure_type_metadata(str(build_dir), str(package_dir), ancillary_files)\n395 | /         except Exception:\n396 | |             pass\n    | |________________^\n397 |           self._project_dir = build_dir\n    |\n\nBLE001 Do not catch blind exception: `Exception`\n   --> x_cls_make_pypi_x.py:395:16\n    |\n393 |         try:\n394 |             self.ensure_type_metadata(str(build_dir), str(package_dir), ancillary_files)\n395 |         except Exception:\n    |                ^^^^^^^^^\n396 |             pass\n397 |         self._project_dir = build_dir\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:402:19\n    |\n400 |         main_path = Path(main_file)\n401 |         if not main_path.exists():\n402 |             raise FileNotFoundError(f\"Main file '{main_file}' does not exist.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n403 |         for ancillary_file in ancillary_files or []:\n404 |             if not Path(ancillary_file).exists():\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:402:37\n    |\n400 |         main_path = Path(main_file)\n401 |         if not main_path.exists():\n402 |             raise FileNotFoundError(f\"Main file '{main_file}' does not exist.\")\n    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n403 |         for ancillary_file in ancillary_files or []:\n404 |             if not Path(ancillary_file).exists():\n    |\nhelp: Assign to variable; remove f-string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:405:23\n    |\n403 |           for ancillary_file in ancillary_files or []:\n404 |               if not Path(ancillary_file).exists():\n405 |                   raise FileNotFoundError(\n    |  _______________________^\n406 | |                     f\"Ancillary file '{ancillary_file}' is not found.\"\n407 | |                 )\n    | |_________________^\n408 |\n409 |       def publish(self, main_file: str, ancillary_files: list[str]) -> bool:\n    |\n\nEM102 Exception must not use an f-string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:406:21\n    |\n404 |             if not Path(ancillary_file).exists():\n405 |                 raise FileNotFoundError(\n406 |                     f\"Ancillary file '{ancillary_file}' is not found.\"\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n407 |                 )\n    |\nhelp: Assign to variable; remove f-string literal\n\nC901 `publish` is too complex (14 > 10)\n   --> x_cls_make_pypi_x.py:409:9\n    |\n407 |                 )\n408 |\n409 |     def publish(self, main_file: str, ancillary_files: list[str]) -> bool:\n    |         ^^^^^^^\n410 |         \"\"\"Build and upload package to PyPI using build + twine.\n    |\n\nPLR0912 Too many branches (14 > 12)\n   --> x_cls_make_pypi_x.py:409:9\n    |\n407 |                 )\n408 |\n409 |     def publish(self, main_file: str, ancillary_files: list[str]) -> bool:\n    |         ^^^^^^^\n410 |         \"\"\"Build and upload package to PyPI using build + twine.\n    |\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:425:19\n    |\n423 |         project_dir = self._project_dir\n424 |         if project_dir is None:\n425 |             raise RuntimeError(\"Build directory not prepared; call create_files first\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n426 |         dist_dir = project_dir / \"dist\"\n427 |         if dist_dir.exists():\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:425:32\n    |\n423 |         project_dir = self._project_dir\n424 |         if project_dir is None:\n425 |             raise RuntimeError(\"Build directory not prepared; call create_files first\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n426 |         dist_dir = project_dir / \"dist\"\n427 |         if dist_dir.exists():\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:438:19\n    |\n436 |             _error(build_result.stderr)\n437 |         if build_result.returncode != 0:\n438 |             raise RuntimeError(\"Build failed. Aborting publish.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n439 |\n440 |         if not dist_dir.exists():\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:438:32\n    |\n436 |             _error(build_result.stderr)\n437 |         if build_result.returncode != 0:\n438 |             raise RuntimeError(\"Build failed. Aborting publish.\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n439 |\n440 |         if not dist_dir.exists():\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:441:19\n    |\n440 |         if not dist_dir.exists():\n441 |             raise RuntimeError(\"dist/ directory not found after build.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n442 |\n443 |         files = [\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:441:32\n    |\n440 |         if not dist_dir.exists():\n441 |             raise RuntimeError(\"dist/ directory not found after build.\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n442 |\n443 |         files = [\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:450:19\n    |\n448 |         ]\n449 |         if not files:\n450 |             raise RuntimeError(\"No valid distribution files found. Aborting publish.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n451 |\n452 |         pypirc_path = Path.home() / \".pypirc\"\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:450:32\n    |\n448 |         ]\n449 |         if not files:\n450 |             raise RuntimeError(\"No valid distribution files found. Aborting publish.\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n451 |\n452 |         pypirc_path = Path.home() / \".pypirc\"\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:481:19\n    |\n479 |             _error(result.stderr)\n480 |         if result.returncode != 0:\n481 |             raise RuntimeError(\"Twine upload failed. See output above.\")\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n482 |         return True\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:481:32\n    |\n479 |             _error(result.stderr)\n480 |         if result.returncode != 0:\n481 |             raise RuntimeError(\"Twine upload failed. See output above.\")\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n482 |         return True\n    |\nhelp: Assign to variable; remove string literal\n\nTRY003 Avoid specifying long messages outside the exception class\n   --> x_cls_make_pypi_x.py:491:11\n    |\n490 | if __name__ == \"__main__\":\n491 |     raise SystemExit(\"This file is not meant to be run directly.\")\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n\nEM101 Exception must not use a string literal, assign to variable first\n   --> x_cls_make_pypi_x.py:491:22\n    |\n490 | if __name__ == \"__main__\":\n491 |     raise SystemExit(\"This file is not meant to be run directly.\")\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\nhelp: Assign to variable; remove string literal\n\nFound 67 errors.\nNo fixes available (13 hidden fixes can be enabled with the `--unsafe-fixes` option).\n",
            "tool": "ruff_check",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--fix",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --fix --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_yahw_x",
            "duration_seconds": 0.08727019999059848,
            "ended_at": "2025-10-08T12:49:26.477620+00:00",
            "exit": 1,
            "repo": "x_make_yahw_x",
            "repo_hash": "02e4aec44bd8663db1b003f37440f90591e47e7d51af1b840d748a80424ec7bc",
            "repo_path": "C:\\x_runner_x\\x_make_yahw_x",
            "started_at": "2025-10-08T12:49:26.390349+00:00",
            "stderr": "",
            "stdout": "BLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_yahw_x.py:36:16\n   |\n34 |         try:\n35 |             print(msg)\n36 |         except Exception:\n   |                ^^^^^^^^^\n37 |             return False\n38 |         return True\n   |\n\nFound 1 error.\n",
            "tool": "ruff_fix",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        },
        {
            "cached": false,
            "cmd": [
                "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
                "-m",
                "ruff",
                "check",
                ".",
                "--select",
                "ALL",
                "--ignore",
                "D,COM812,ISC001,T20",
                "--line-length",
                "88",
                "--target-version",
                "py311"
            ],
            "cmd_display": "C:\\x_runner_x\\.venv\\Scripts\\python.exe -m ruff check . --select ALL --ignore D,COM812,ISC001,T20 --line-length 88 --target-version py311",
            "cwd": "C:\\x_runner_x\\x_make_yahw_x",
            "duration_seconds": 0.08410470001399517,
            "ended_at": "2025-10-08T12:49:26.776233+00:00",
            "exit": 1,
            "repo": "x_make_yahw_x",
            "repo_hash": "02e4aec44bd8663db1b003f37440f90591e47e7d51af1b840d748a80424ec7bc",
            "repo_path": "C:\\x_runner_x\\x_make_yahw_x",
            "started_at": "2025-10-08T12:49:26.692131+00:00",
            "stderr": "",
            "stdout": "BLE001 Do not catch blind exception: `Exception`\n  --> x_cls_make_yahw_x.py:36:16\n   |\n34 |         try:\n35 |             print(msg)\n36 |         except Exception:\n   |                ^^^^^^^^^\n37 |             return False\n38 |         return True\n   |\n\nFound 1 error.\n",
            "tool": "ruff_check",
            "tool_module": "ruff",
            "tool_version": "ruff 0.14.0"
        }
    ],
    "had_failures": true,
    "posteriori_index_path": "C:\\x_runner_x\\x_make_github_visitor_x\\x_index_b_a_posteriori_x.json",
    "root": "C:\\x_runner_x",
    "runtime_snapshot": {
        "environment": {
            "PATH": "C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\WINDOWS\\System32\\OpenSSH\\;C:\\Program Files\\Git\\cmd;C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\Scripts\\;C:\\Users\\eye43\\AppData\\Local\\Programs\\Python\\Python313\\;C:\\Users\\eye43\\AppData\\Local\\Microsoft\\WindowsApps;C:\\Users\\eye43\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;;c:\\Users\\eye43\\.vscode\\extensions\\ms-python.debugpy-2025.10.0-win32-x64\\bundled\\scripts\\noConfigScripts;c:\\Users\\eye43\\AppData\\Roaming\\Code\\User\\globalStorage\\github.copilot-chat\\debugCommand"
        },
        "platform": "Windows-11-10.0.22631-SP0",
        "python_executable": "C:\\x_runner_x\\.venv\\Scripts\\python.exe",
        "python_version": "3.13.7 (tags/v3.13.7:bcee1c3, Aug 14 2025, 14:15:11) [MSC v.1944 64 bit (AMD64)]",
        "run_completed_at": "2025-10-08T12:49:28.131166+00:00",
        "run_started_at": "2025-10-08T12:48:38.409259+00:00",
        "workspace_root": "C:\\x_runner_x"
    },
    "summary_report_path": "C:\\x_runner_x\\x_make_github_visitor_x\\x_summary_report_x.json",
    "timestamp": "2025-10-08T12:49:28.705579+00:00",
    "tool_versions": {
        "black": "python -m black, 25.9.0 (compiled: yes)\nPython (CPython) 3.13.7",
        "mypy": "mypy 1.18.2 (compiled: yes)",
        "pyright": "pyright 1.1.406",
        "ruff": "ruff 0.14.0"
    },
    "total_failures": 34
}